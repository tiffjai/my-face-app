"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[950],{9279:function(e,t,u){var y,w,T,$,M,O,P,z,L,W,B,j,q,Z,Y,J,ee,ea,en,er,ei,es,el,eu,ed,ep,ec,eh,em,ey,eA,ex,eb,ek,eI,eC,eE,eR,e$,e_,eM,eF,eO,eP,eD,eL,eW,eB,eV,eU,eG,eH,ej,eq,eX,eK,eZ,eY,eJ,eQ,e1,e2,e5,e3,e7,e4,e6,e8,e9,tt,ta,tn,tr,ts,to,tl,tp,th,ty,tA,tx,tb,tI,tS,tN,tC,tE,tR,t$,t_,tM,tF,tO,tP,tD,tz,tL,tW,tB,tV,tU,tG,tH,tj,tq,tX,tK,tZ,tY,tJ,tQ,t1,t2,t5,t3,t7,t6,t8,t9,aa,an,ai,as,ao,au,ac,af,am,ag,ay,aA,ab,aN,aC,aT,aE,aR,a$,a_,aM,aF,aO,aP,aD,aL,aW,aB,aV,aU,aG,aH,aj,aq,aK,aZ,aY,aJ,aQ,a1,a2,a3,a7,a4,a6,a8,a9="/index.js";u.d(t,{p2:function(){return $0}});var ne=u(3454),na=u(1876).Buffer,nn=Object.defineProperty,__typeError=e=>{throw TypeError(e)},__defNormalProp=(e,t,u)=>t in e?nn(e,t,{enumerable:!0,configurable:!0,writable:!0,value:u}):e[t]=u,__export=(e,t)=>{for(var u in t)nn(e,u,{get:t[u],enumerable:!0})},__publicField=(e,t,u)=>__defNormalProp(e,"symbol"!=typeof t?t+"":t,u),__accessCheck=(e,t,u)=>t.has(e)||__typeError("Cannot "+u),__privateGet=(e,t,u)=>(__accessCheck(e,t,"read from private field"),u?u.call(e):t.get(e)),__privateAdd=(e,t,u)=>t.has(e)?__typeError("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,u),__privateSet=(e,t,u,y)=>(__accessCheck(e,t,"write to private field"),y?y.call(e,u):t.set(e,u),u),nr={};__export(nr,{Abs:()=>nH,Acos:()=>nj,Acosh:()=>nq,AdadeltaOptimizer:()=>cV,AdagradOptimizer:()=>cU,AdamOptimizer:()=>cG,AdamaxOptimizer:()=>cH,Add:()=>nX,AddN:()=>nK,All:()=>nZ,Any:()=>nY,ArgMax:()=>nJ,ArgMin:()=>nQ,Asin:()=>n1,Asinh:()=>n2,Atan:()=>n0,Atan2:()=>n3,Atanh:()=>n5,AvgPool:()=>n7,AvgPool3D:()=>n6,AvgPool3DGrad:()=>n8,AvgPoolGrad:()=>n4,BackendWasm:()=>kE,BatchMatMul:()=>n9,BatchToSpaceND:()=>re,Bincount:()=>ra,BitwiseAnd:()=>rn,BroadcastArgs:()=>ri,BroadcastTo:()=>rr,Cast:()=>rs,Ceil:()=>ro,ClipByValue:()=>ru,Complex:()=>rp,ComplexAbs:()=>rc,Concat:()=>rh,Conv2D:()=>rf,Conv2DBackpropFilter:()=>rm,Conv2DBackpropInput:()=>rg,Conv3D:()=>ry,Conv3DBackpropFilterV2:()=>rA,Conv3DBackpropInputV2:()=>rx,Cos:()=>rb,Cosh:()=>rk,CropAndResize:()=>rC,Cumprod:()=>rI,Cumsum:()=>rN,DataStorage:()=>nW,DenseBincount:()=>rE,DepthToSpace:()=>rR,DepthwiseConv2dNative:()=>r$,DepthwiseConv2dNativeBackpropFilter:()=>r_,DepthwiseConv2dNativeBackpropInput:()=>rM,Diag:()=>rF,Dilation2D:()=>rO,Dilation2DBackpropFilter:()=>rD,Dilation2DBackpropInput:()=>rP,Draw:()=>rL,ENV:()=>nG,Einsum:()=>rB,Elu:()=>rV,EluGrad:()=>rU,Environment:()=>nU,Equal:()=>rH,Erf:()=>rG,Exp:()=>rj,ExpandDims:()=>rq,Expm1:()=>rX,FFT:()=>rK,Fill:()=>rZ,FlipLeftRight:()=>rY,Floor:()=>rJ,FloorDiv:()=>rQ,FromPixels:()=>on,FusedBatchNorm:()=>r1,FusedConv2D:()=>oo,FusedDepthwiseConv2D:()=>ol,GPGPUContext:()=>gY,GatherNd:()=>r8,GatherV2:()=>r6,GraphModel:()=>fF,Greater:()=>ie,GreaterEqual:()=>it,IFFT:()=>ir,Identity:()=>ia,Imag:()=>is,IsFinite:()=>iu,IsInf:()=>ip,IsNan:()=>ic,KernelBackend:()=>nB,LRN:()=>iR,LRNGrad:()=>i$,LeakyRelu:()=>im,Less:()=>ig,LessEqual:()=>iy,LinSpace:()=>iA,Log:()=>ix,Log1p:()=>ib,LogSoftmax:()=>iT,LogicalAnd:()=>iI,LogicalNot:()=>iS,LogicalOr:()=>iN,LogicalXor:()=>iC,LowerBound:()=>iE,MathBackendCPU:()=>fD,MathBackendWebGL:()=>Ah,MatrixBandPart:()=>i_,Max:()=>iM,MaxPool:()=>iO,MaxPool3D:()=>iD,MaxPool3DGrad:()=>iz,MaxPoolGrad:()=>iP,MaxPoolWithArgmax:()=>iL,Maximum:()=>iF,Mean:()=>iW,Min:()=>iB,Minimum:()=>iV,MirrorPad:()=>iU,Mod:()=>iG,MomentumOptimizer:()=>cq,Multinomial:()=>ij,Multiply:()=>iq,Neg:()=>iX,NonMaxSuppressionV3:()=>iZ,NonMaxSuppressionV4:()=>iY,NonMaxSuppressionV5:()=>iJ,NotEqual:()=>iK,OP_SCOPE_SUFFIX:()=>oD,OneHot:()=>i1,OnesLike:()=>iQ,Optimizer:()=>cB,OptimizerConstructors:()=>hd,Pack:()=>i2,PadV2:()=>i0,Pool:()=>i3,Pow:()=>i7,Prelu:()=>i6,Prod:()=>i8,RMSPropOptimizer:()=>cX,RaggedGather:()=>i9,RaggedRange:()=>se,RaggedTensorToTensor:()=>st,Range:()=>sa,Rank:()=>ed,Real:()=>sn,RealDiv:()=>rW,Reciprocal:()=>si,Reduction:()=>ex,Relu:()=>ss,Relu6:()=>sg,Reshape:()=>so,ResizeBilinear:()=>sc,ResizeBilinearGrad:()=>sf,ResizeNearestNeighbor:()=>su,ResizeNearestNeighborGrad:()=>sp,Reverse:()=>sy,RotateWithOffset:()=>or,Round:()=>sA,Rsqrt:()=>sx,SGDOptimizer:()=>cj,ScatterNd:()=>sb,SearchSorted:()=>sI,Select:()=>sN,Selu:()=>sC,Sigmoid:()=>s_,Sign:()=>s$,Sin:()=>sE,Sinh:()=>sR,Slice:()=>sT,Softmax:()=>sL,Softplus:()=>sM,SpaceToBatchND:()=>sP,SparseFillEmptyRows:()=>sW,SparseReshape:()=>sB,SparseSegmentMean:()=>sV,SparseSegmentSum:()=>sU,SparseToDense:()=>sG,SplitV:()=>sD,Sqrt:()=>sF,Square:()=>sj,SquaredDifference:()=>sH,StaticRegexReplace:()=>sq,Step:()=>oa,StridedSlice:()=>sX,StringNGrams:()=>sK,StringSplit:()=>sZ,StringToHashBucketFast:()=>sY,Sub:()=>sJ,Sum:()=>sO,Tan:()=>sQ,Tanh:()=>s1,Tensor:()=>oC,TensorBuffer:()=>oI,TensorScatterUpdate:()=>sw,Tile:()=>s2,TopK:()=>s3,Transform:()=>s7,Transpose:()=>s4,Unique:()=>s6,Unpack:()=>s8,UnsortedSegmentSum:()=>s9,UpperBound:()=>oe,Variable:()=>oE,WebGPUBackend:()=>kX,ZerosLike:()=>ot,_FusedMatMul:()=>os,abs:()=>o9,acos:()=>le,acosh:()=>lt,add:()=>o7,addN:()=>la,all:()=>ln,any:()=>li,argMax:()=>ls,argMin:()=>lo,asin:()=>ll,asinh:()=>lu,atan:()=>lh,atan2:()=>lg,atanh:()=>ly,avgPool:()=>lx,avgPool3d:()=>lb,backend:()=>ak,backend_util:()=>hh,basicLSTMCell:()=>lE,batchNorm:()=>l$,batchNorm2d:()=>l_,batchNorm3d:()=>lM,batchNorm4d:()=>lF,batchToSpaceND:()=>lR,bincount:()=>lO,bitwiseAnd:()=>lP,booleanMaskAsync:()=>L6,broadcastArgs:()=>lD,broadcastTo:()=>lz,broadcast_util:()=>un,browser:()=>ht,buffer:()=>me,cast:()=>o5,ceil:()=>lL,clipByValue:()=>lW,clone:()=>o3,complex:()=>oL,concat:()=>lk,concat1d:()=>lB,concat2d:()=>lV,concat3d:()=>lU,concat4d:()=>lG,conv1d:()=>lj,conv2d:()=>lH,conv2dTranspose:()=>lX,conv3d:()=>lY,conv3dTranspose:()=>lQ,copyRegisteredKernels:()=>ale,cos:()=>l1,cosh:()=>l2,cosineWindow:()=>$l,cumprod:()=>l3,cumsum:()=>l7,customGrad:()=>Ir,denseBincount:()=>l4,deprecationWarn:()=>Tw,depthToSpace:()=>l6,depthwiseConv2d:()=>l8,deregisterOp:()=>V5,device_util:()=>oO,diag:()=>l9,dilation2d:()=>ua,disableDeprecationWarnings:()=>xme,dispose:()=>Ot,disposeVariables:()=>yme,div:()=>o6,divNoNan:()=>ul,dot:()=>uu,dropout:()=>pP,einsum:()=>ud,elu:()=>uc,enableDebugMode:()=>gme,enableProdMode:()=>hme,enclosingPowerOfTwo:()=>Zw,engine:()=>ur,ensureShape:()=>uf,env:()=>A,equal:()=>ui,erf:()=>um,euclideanNorm:()=>uC,exp:()=>uE,expandDims:()=>uR,expm1:()=>u$,eye:()=>uM,fft:()=>pu,fill:()=>$a,findBackend:()=>kme,findBackendFactory:()=>Nme,floor:()=>uF,floorDiv:()=>o4,forceHalfFloat:()=>GD,fused:()=>pD,gather:()=>uO,gatherND:()=>pO,gather_util:()=>hr,getBackend:()=>sk,getGradient:()=>iw,getKernel:()=>Xp,getKernelsForBackend:()=>Ym,getThreadsCount:()=>aae,gpgpu_util:()=>gZ,grad:()=>VK,grads:()=>WK,greater:()=>uP,greaterEqual:()=>uD,ifft:()=>pd,imag:()=>uz,image:()=>c$,inTopKAsync:()=>Z6,io:()=>cJ,irfft:()=>pc,isFinite:()=>uL,isInf:()=>uW,isNaN:()=>uB,keep:()=>$r,kernel_impls:()=>h_,leakyRelu:()=>uV,less:()=>uU,lessEqual:()=>uG,linalg:()=>c_,linspace:()=>$2,loadGraphModel:()=>M8,loadGraphModelSync:()=>L8,localResponseNormalization:()=>uj,log:()=>uq,log1p:()=>uX,logSigmoid:()=>uQ,logSoftmax:()=>u2,logSumExp:()=>u3,logicalAnd:()=>u7,logicalNot:()=>u6,logicalOr:()=>u8,logicalXor:()=>u9,losses:()=>cM,lowerBound:()=>P2,matMul:()=>lI,math:()=>c8,max:()=>ug,maxPool:()=>da,maxPool3d:()=>dn,maxPoolWithArgmax:()=>di,maximum:()=>ds,mean:()=>dl,memory:()=>bme,meshgrid:()=>L2,min:()=>uy,minimum:()=>du,mirrorPad:()=>dd,mod:()=>dc,moments:()=>dh,movingAverage:()=>p_,mul:()=>o8,multiRNNCell:()=>dg,multinomial:()=>dx,neg:()=>uY,nextFrame:()=>cS,node:()=>Cr,norm:()=>uN,notEqual:()=>db,oneHot:()=>dw,ones:()=>Da,onesLike:()=>dI,op:()=>N,outerProduct:()=>dS,pad:()=>dN,pad1d:()=>dC,pad2d:()=>dE,pad3d:()=>dR,pad4d:()=>d$,pool:()=>dM,pow:()=>uA,prelu:()=>dF,print:()=>ld,prod:()=>dO,profile:()=>Cme,raggedGather:()=>dP,raggedRange:()=>dD,raggedTensorToTensor:()=>dz,rand:()=>dL,randomGamma:()=>dj,randomNormal:()=>dq,randomStandardNormal:()=>dX,randomUniform:()=>dK,randomUniformInt:()=>dZ,range:()=>cu,ready:()=>Ime,real:()=>dY,reciprocal:()=>dJ,registerBackend:()=>tu,registerGradient:()=>ole,registerKernel:()=>ti,registerOp:()=>z5,relu:()=>dQ,relu6:()=>d1,removeBackend:()=>vme,reshape:()=>lA,reverse:()=>d2,reverse1d:()=>d0,reverse2d:()=>d5,reverse3d:()=>d3,reverse4d:()=>d7,rfft:()=>pf,round:()=>d4,rsqrt:()=>d6,scalar:()=>ke,scatterND:()=>pM,scatter_util:()=>pw,searchSorted:()=>de,selu:()=>d8,separableConv2d:()=>d9,serialization:()=>cP,setBackend:()=>Sme,setPlatform:()=>Tme,setThreadsCount:()=>sae,setWasmPath:()=>oae,setWasmPaths:()=>nae,setWebGLContext:()=>NI,setdiff1dAsync:()=>A1,shared:()=>fz,sigmoid:()=>lS,sign:()=>pt,signal:()=>cR,sin:()=>pa,sinh:()=>pn,slice:()=>lN,slice1d:()=>pr,slice2d:()=>pi,slice3d:()=>ps,slice4d:()=>po,slice_util:()=>hs,softmax:()=>pl,softplus:()=>uJ,spaceToBatchND:()=>d_,sparse:()=>cF,sparseToDense:()=>pF,spectral:()=>cE,split:()=>ph,sqrt:()=>ux,square:()=>ub,squaredDifference:()=>pm,squeeze:()=>pg,stack:()=>py,step:()=>pA,stridedSlice:()=>px,string:()=>cO,sub:()=>u1,sum:()=>uI,sumOutType:()=>oi,tan:()=>pb,tanh:()=>lC,tensor:()=>ar,tensor1d:()=>Jt,tensor2d:()=>mu,tensor3d:()=>jd,tensor4d:()=>G1,tensor5d:()=>H1,tensor6d:()=>K1,tensorScatterUpdate:()=>pI,tensor_util:()=>oR,test_util:()=>dB,tidy:()=>De,tile:()=>u_,time:()=>wme,topk:()=>pS,train:()=>hp,transpose:()=>p$,truncatedNormal:()=>pN,unique:()=>pC,unregisterGradient:()=>sle,unregisterKernel:()=>nle,unsortedSegmentSum:()=>pE,unstack:()=>pR,upcastType:()=>dt,upperBound:()=>J1,util:()=>oc,valueAndGrad:()=>UK,valueAndGrads:()=>GK,variable:()=>eN,variableGrads:()=>Vw,version:()=>Cn,version_converter:()=>fO,version_core:()=>hl,version_cpu:()=>mM,version_wasm:()=>kL,version_webgl:()=>Ag,webgl:()=>Ay,webgl_util:()=>g$,webgpu_util:()=>kj,where:()=>us,whereAsync:()=>Yd,zeros:()=>Gr,zerosLike:()=>uo});var ns=Object.create,no=Object.defineProperty,nl=Object.getOwnPropertyDescriptor,nu=Object.getOwnPropertyNames,nd=Object.getPrototypeOf,np=Object.prototype.hasOwnProperty,Kt=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),qe=(e,t)=>{for(var u in t)no(e,u,{get:t[u],enumerable:!0})},AG=(e,t,u,y)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let w of nu(t))np.call(e,w)||w===u||no(e,w,{get:()=>t[w],enumerable:!(y=nl(t,w))||y.enumerable});return e},zp=(e,t,u)=>(u=null!=e?ns(nd(e)):{},AG(!t&&e&&e.__esModule?u:no(u,"default",{value:e,enumerable:!0}),e)),nm=Kt((e,t)=>{t.exports=kt;var u=null;try{u=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function kt(e,t,u){this.low=0|e,this.high=0|t,this.unsigned=!!u}function Wr(e){return!0===(e&&e.__isLong__)}kt.prototype.__isLong__,Object.defineProperty(kt.prototype,"__isLong__",{value:!0}),kt.isLong=Wr;var y={},w={};function Fu(e,t){var u,T,$;return t?(e>>>=0,($=0<=e&&e<256)&&(T=w[e])?T:(u=Nt(e,(0|e)<0?-1:0,!0),$&&(w[e]=u),u)):(e|=0,($=-128<=e&&e<128)&&(T=y[e])?T:(u=Nt(e,e<0?-1:0,!1),$&&(y[e]=u),u))}function No(e,t){if(isNaN(e))return t?L:z;if(t){if(e<0)return L;if(e>=M)return Z}else{if(e<=-O)return Y;if(e+1>=O)return q}return e<0?No(-e,t).neg():Nt(e%$|0,e/$|0,t)}function Nt(e,t,u){return new kt(e,t,u)}kt.fromInt=Fu,kt.fromNumber=No,kt.fromBits=Nt;var T=Math.pow;function cw(e,t,u){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return z;if("number"==typeof t?(u=t,t=!1):t=!!t,(u=u||10)<2||36<u)throw RangeError("radix");if((y=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===y)return cw(e.substring(1),t,u).neg();for(var y,w=No(T(u,8)),$=z,M=0;M<e.length;M+=8){var O=Math.min(8,e.length-M),P=parseInt(e.substring(M,M+O),u);if(O<8){var L=No(T(u,O));$=$.mul(L).add(No(P))}else $=($=$.mul(w)).add(No(P))}return $.unsigned=t,$}function As(e,t){return"number"==typeof e?No(e,t):"string"==typeof e?cw(e,t):Nt(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}kt.fromString=cw,kt.fromValue=As;var $=4294967296,M=4294967296*4294967296,O=4294967296*4294967296/2,P=Fu(16777216),z=Fu(0);kt.ZERO=z;var L=Fu(0,!0);kt.UZERO=L;var W=Fu(1);kt.ONE=W;var B=Fu(1,!0);kt.UONE=B;var j=Fu(-1);kt.NEG_ONE=j;var q=Nt(-1,2147483647,!1);kt.MAX_VALUE=q;var Z=Nt(-1,-1,!0);kt.MAX_UNSIGNED_VALUE=Z;var Y=Nt(0,-2147483648,!1);kt.MIN_VALUE=Y;var J=kt.prototype;J.toInt=function(){return this.unsigned?this.low>>>0:this.low},J.toNumber=function(){return this.unsigned?(this.high>>>0)*$+(this.low>>>0):this.high*$+(this.low>>>0)},J.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(!this.eq(Y))return"-"+this.neg().toString(e);var t=No(e),u=this.div(t),y=u.mul(t).sub(this);return u.toString(e)+y.toInt().toString(e)}for(var w=No(T(e,6),this.unsigned),$=this,M="";;){var O=$.div(w),P=($.sub(O.mul(w)).toInt()>>>0).toString(e);if(($=O).isZero())return P+M;for(;P.length<6;)P="0"+P;M=""+P+M}},J.getHighBits=function(){return this.high},J.getHighBitsUnsigned=function(){return this.high>>>0},J.getLowBits=function(){return this.low},J.getLowBitsUnsigned=function(){return this.low>>>0},J.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Y)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},J.isZero=function(){return 0===this.high&&0===this.low},J.eqz=J.isZero,J.isNegative=function(){return!this.unsigned&&this.high<0},J.isPositive=function(){return this.unsigned||this.high>=0},J.isOdd=function(){return(1&this.low)==1},J.isEven=function(){return(1&this.low)==0},J.equals=function(e){return Wr(e)||(e=As(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},J.eq=J.equals,J.notEquals=function(e){return!this.eq(e)},J.neq=J.notEquals,J.ne=J.notEquals,J.lessThan=function(e){return 0>this.comp(e)},J.lt=J.lessThan,J.lessThanOrEqual=function(e){return 0>=this.comp(e)},J.lte=J.lessThanOrEqual,J.le=J.lessThanOrEqual,J.greaterThan=function(e){return this.comp(e)>0},J.gt=J.greaterThan,J.greaterThanOrEqual=function(e){return this.comp(e)>=0},J.gte=J.greaterThanOrEqual,J.ge=J.greaterThanOrEqual,J.compare=function(e){if(Wr(e)||(e=As(e)),this.eq(e))return 0;var t=this.isNegative(),u=e.isNegative();return t&&!u?-1:!t&&u?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},J.comp=J.compare,J.negate=function(){return!this.unsigned&&this.eq(Y)?Y:this.not().add(W)},J.neg=J.negate,J.add=function(e){Wr(e)||(e=As(e));var t,u,y=this.high>>>16,w=65535&this.high,T=this.low>>>16,$=65535&this.low,M=e.high>>>16,O=65535&e.high,P=e.low>>>16,z=65535&e.low,L=0,W=0;return u=0+((t=0+($+z))>>>16),t&=65535,u+=T+P,W+=u>>>16,u&=65535,W+=w+O,L+=W>>>16,W&=65535,L+=y+M,Nt(u<<16|t,(L&=65535)<<16|W,this.unsigned)},J.subtract=function(e){return Wr(e)||(e=As(e)),this.add(e.neg())},J.sub=J.subtract,J.multiply=function(e){if(this.isZero())return z;if(Wr(e)||(e=As(e)),u)return Nt(u.mul(this.low,this.high,e.low,e.high),u.get_high(),this.unsigned);if(e.isZero())return z;if(this.eq(Y))return e.isOdd()?Y:z;if(e.eq(Y))return this.isOdd()?Y:z;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(P)&&e.lt(P))return No(this.toNumber()*e.toNumber(),this.unsigned);var t,y,w=this.high>>>16,T=65535&this.high,$=this.low>>>16,M=65535&this.low,O=e.high>>>16,L=65535&e.high,W=e.low>>>16,B=65535&e.low,j=0,q=0;return y=0+((t=0+M*B)>>>16),t&=65535,y+=$*B,q+=y>>>16,y&=65535,y+=M*W,q+=y>>>16,y&=65535,q+=T*B,j+=q>>>16,q&=65535,q+=$*W,j+=q>>>16,q&=65535,q+=M*L,j+=q>>>16,q&=65535,j+=w*B+T*W+$*L+M*O,Nt(y<<16|t,(j&=65535)<<16|q,this.unsigned)},J.mul=J.multiply,J.divide=function(e){if(Wr(e)||(e=As(e)),e.isZero())throw Error("division by zero");if(u){var t,y,w;return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?Nt((this.unsigned?u.div_u:u.div_s)(this.low,this.high,e.low,e.high),u.get_high(),this.unsigned):this}if(this.isZero())return this.unsigned?L:z;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return L;if(e.gt(this.shru(1)))return B;w=L}else{if(this.eq(Y))return e.eq(W)||e.eq(j)?Y:e.eq(Y)?W:(t=this.shr(1).div(e).shl(1)).eq(z)?e.isNegative()?W:j:(y=this.sub(e.mul(t)),w=t.add(y.div(e)));if(e.eq(Y))return this.unsigned?L:z;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();w=z}for(y=this;y.gte(e);){t=Math.max(1,Math.floor(y.toNumber()/e.toNumber()));for(var $=Math.ceil(Math.log(t)/Math.LN2),M=$<=48?1:T(2,$-48),O=No(t),P=O.mul(e);P.isNegative()||P.gt(y);)t-=M,P=(O=No(t,this.unsigned)).mul(e);O.isZero()&&(O=W),w=w.add(O),y=y.sub(P)}return w},J.div=J.divide,J.modulo=function(e){return(Wr(e)||(e=As(e)),u)?Nt((this.unsigned?u.rem_u:u.rem_s)(this.low,this.high,e.low,e.high),u.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},J.mod=J.modulo,J.rem=J.modulo,J.not=function(){return Nt(~this.low,~this.high,this.unsigned)},J.and=function(e){return Wr(e)||(e=As(e)),Nt(this.low&e.low,this.high&e.high,this.unsigned)},J.or=function(e){return Wr(e)||(e=As(e)),Nt(this.low|e.low,this.high|e.high,this.unsigned)},J.xor=function(e){return Wr(e)||(e=As(e)),Nt(this.low^e.low,this.high^e.high,this.unsigned)},J.shiftLeft=function(e){return Wr(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?Nt(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Nt(0,this.low<<e-32,this.unsigned)},J.shl=J.shiftLeft,J.shiftRight=function(e){return Wr(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?Nt(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Nt(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},J.shr=J.shiftRight,J.shiftRightUnsigned=function(e){if(Wr(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?Nt(this.low>>>e|t<<32-e,t>>>e,this.unsigned):32===e?Nt(t,0,this.unsigned):Nt(t>>>e-32,0,this.unsigned)},J.shru=J.shiftRightUnsigned,J.shr_u=J.shiftRightUnsigned,J.toSigned=function(){return this.unsigned?Nt(this.low,this.high,!1):this},J.toUnsigned=function(){return this.unsigned?this:Nt(this.low,this.high,!0)},J.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},J.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},J.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},kt.fromBytes=function(e,t,u){return u?kt.fromBytesLE(e,t):kt.fromBytesBE(e,t)},kt.fromBytesLE=function(e,t){return new kt(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},kt.fromBytesBE=function(e,t){return new kt(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}}),ng=Kt(()=>{}),ny=Kt(()=>{}),nA=Kt((e,t)=>{!function(e,t,u){function o(e){var t,u=this,y=(t=4022871197,function(e){e=String(e);for(var u=0;u<e.length;u++){var y=.02519603282416938*(t+=e.charCodeAt(u));t=y>>>0,y-=t,y*=t,t=y>>>0,y-=t,t+=4294967296*y}return(t>>>0)*23283064365386963e-26});u.next=function(){var e=2091639*u.s0+23283064365386963e-26*u.c;return u.s0=u.s1,u.s1=u.s2,u.s2=e-(u.c=0|e)},u.c=1,u.s0=y(" "),u.s1=y(" "),u.s2=y(" "),u.s0-=y(e),u.s0<0&&(u.s0+=1),u.s1-=y(e),u.s1<0&&(u.s1+=1),u.s2-=y(e),u.s2<0&&(u.s2+=1),y=null}function n(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var u=new o(e),y=t&&t.state,w=u.next;return w.int32=function(){return 4294967296*u.next()|0},w.double=function(){return w()+(2097152*w()|0)*11102230246251565e-32},w.quick=w,y&&("object"==typeof y&&n(y,u),w.state=function(){return n(u,{})}),w}t&&t.exports?t.exports=s:u&&u.amd?u(function(){return s}):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}),nx=Kt((e,t)=>{!function(e,t,u){function o(e){var t=this,u="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:u+=e;for(var y=0;y<u.length+64;y++)t.x^=0|u.charCodeAt(y),t.next()}function n(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var u=new o(e),y=t&&t.state,c=function(){return(u.next()>>>0)/4294967296};return c.double=function(){do var e=u.next()>>>11,t=(u.next()>>>0)/4294967296,y=(e+t)/2097152;while(0===y);return y},c.int32=u.next,c.quick=c,y&&("object"==typeof y&&n(y,u),c.state=function(){return n(u,{})}),c}t&&t.exports?t.exports=s:u&&u.amd?u(function(){return s}):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}),nb=Kt((e,t)=>{!function(e,t,u){function o(e){var t=this,u="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^(e^e<<1))|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:u+=e;for(var y=0;y<u.length+64;y++)t.x^=0|u.charCodeAt(y),y==u.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function n(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var u=new o(e),y=t&&t.state,c=function(){return(u.next()>>>0)/4294967296};return c.double=function(){do var e=u.next()>>>11,t=(u.next()>>>0)/4294967296,y=(e+t)/2097152;while(0===y);return y},c.int32=u.next,c.quick=c,y&&("object"==typeof y&&n(y,u),c.state=function(){return n(u,{})}),c}t&&t.exports?t.exports=s:u&&u.amd?u(function(){return s}):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}),nw=Kt((e,t)=>{!function(e,t,u){function o(e){var t=this;t.next=function(){var e,u,y=t.x,w=t.i;return e=y[w],e^=e>>>7,u=e^e<<24^((e=y[w+1&7])^e>>>10)^((e=y[w+3&7])^e>>>3)^((e=y[w+4&7])^e<<7),e=y[w+7&7],e^=e<<13,u^=e^e<<9,y[w]=u,t.i=w+1&7,u},function(e,t){var u,y=[];if(t===(0|t))y[0]=t;else for(t=""+t,u=0;u<t.length;++u)y[7&u]=y[7&u]<<15^t.charCodeAt(u)+y[u+1&7]<<13;for(;y.length<8;)y.push(0);for(u=0;u<8&&0===y[u];++u);for(8==u?y[7]=-1:y[u],e.x=y,e.i=0,u=256;u>0;--u)e.next()}(t,e)}function n(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var u=new o(e),y=t&&t.state,c=function(){return(u.next()>>>0)/4294967296};return c.double=function(){do var e=u.next()>>>11,t=(u.next()>>>0)/4294967296,y=(e+t)/2097152;while(0===y);return y},c.int32=u.next,c.quick=c,y&&(y.x&&n(y,u),c.state=function(){return n(u,{})}),c}t&&t.exports?t.exports=s:u&&u.amd?u(function(){return s}):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}),nN=Kt((e,t)=>{!function(e,t,u){function o(e){var t=this;t.next=function(){var e,u,y=t.w,w=t.X,T=t.i;return t.w=y=y+1640531527|0,u=w[T+34&127],e=w[T=T+1&127],u^=u<<13,e^=e<<17,u^=u>>>15,e^=e>>>12,u=w[T]=u^e,t.i=T,u+(y^y>>>16)|0},function(e,t){var u,y,w,T,$,M=[],O=128;for(t===(0|t)?(y=t,t=null):(t+="\x00",y=0,O=Math.max(O,t.length)),w=0,T=-32;T<O;++T)t&&(y^=t.charCodeAt((T+32)%t.length)),0===T&&($=y),y^=y<<10,y^=y>>>15,y^=y<<4,y^=y>>>13,T>=0&&($=$+1640531527|0,w=0==(u=M[127&T]^=y+$)?w+1:0);for(w>=128&&(M[127&(t&&t.length||0)]=-1),w=127,T=512;T>0;--T)y=M[w+34&127],u=M[w=w+1&127],y^=y<<13,u^=u<<17,y^=y>>>15,u^=u>>>12,M[w]=y^u;e.w=$,e.X=M,e.i=w}(t,e)}function n(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var u=new o(e),y=t&&t.state,c=function(){return(u.next()>>>0)/4294967296};return c.double=function(){do var e=u.next()>>>11,t=(u.next()>>>0)/4294967296,y=(e+t)/2097152;while(0===y);return y},c.int32=u.next,c.quick=c,y&&(y.X&&n(y,u),c.state=function(){return n(u,{})}),c}t&&t.exports?t.exports=s:u&&u.amd?u(function(){return s}):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}),nC=Kt((e,t)=>{!function(e,t,u){function o(e){var t=this,u="";t.next=function(){var e=t.b,u=t.c,y=t.d,w=t.a;return e=e<<25^e>>>7^u,u=u-y|0,y=y<<24^y>>>8^w,w=w-e|0,t.b=e=e<<20^e>>>12^u,t.c=u=u-y|0,t.d=y<<16^u>>>16^w,t.a=w-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):u+=e;for(var y=0;y<u.length+20;y++)t.b^=0|u.charCodeAt(y),t.next()}function n(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var u=new o(e),y=t&&t.state,c=function(){return(u.next()>>>0)/4294967296};return c.double=function(){do var e=u.next()>>>11,t=(u.next()>>>0)/4294967296,y=(e+t)/2097152;while(0===y);return y},c.int32=u.next,c.quick=c,y&&("object"==typeof y&&n(y,u),c.state=function(){return n(u,{})}),c}t&&t.exports?t.exports=s:u&&u.amd?u(function(){return s}):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}),nE=Kt(()=>{}),nR=Kt((e,t)=>{!function(e,y,w){var T,$="random",M=w.pow(256,6),O=w.pow(2,52),P=2*O;function m(t,u,z){var L=[],W=g(function h(e,t){var u,y=[],w=typeof e;if(t&&"object"==w)for(u in e)try{y.push(h(e[u],t-1))}catch(e){}return y.length?y:"string"==w?e:e+"\x00"}((u=!0==u?{entropy:!0}:u||{}).entropy?[t,b(y)]:null==t?function(){try{var t;return T&&(t=T.randomBytes)?t=t(256):(t=new Uint8Array(256),(e.crypto||e.msCrypto).getRandomValues(t)),b(t)}catch(t){var u=e.navigator,w=u&&u.plugins;return[+new Date,e,w,e.screen,b(y)]}}():t,3),L),B=new d(L),D=function(){for(var e=B.g(6),t=M,u=0;e<O;)e=(e+u)*256,t*=256,u=B.g(1);for(;e>=P;)e/=2,t/=2,u>>>=1;return(e+u)/t};return D.int32=function(){return 0|B.g(4)},D.quick=function(){return B.g(4)/4294967296},D.double=D,g(b(B.S),y),(u.pass||z||function(e,t,u,y){return y&&(y.S&&f(y,B),e.state=function(){return f(B,{})}),u?(w[$]=e,t):e})(D,W,"global"in u?u.global:this==w,u.state)}function d(e){var t,u=e.length,y=this,w=0,T=y.i=y.j=0,$=y.S=[];for(u||(e=[u++]);w<256;)$[w]=w++;for(w=0;w<256;w++)$[w]=$[T=255&T+e[w%u]+(t=$[w])],$[T]=t;(y.g=function(e){for(var t,u=0,w=y.i,T=y.j,$=y.S;e--;)t=$[w=255&w+1],u=256*u+$[255&($[w]=$[T=255&T+t])+($[T]=t)];return y.i=w,y.j=T,u})(256)}function f(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){for(var u,y=e+"",w=0;w<y.length;)t[255&w]=255&(u^=19*t[255&w])+y.charCodeAt(w++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(g(w.random(),y),"object"==typeof t&&t.exports){t.exports=m;try{T=nE()}catch(e){}}else"function"==typeof define&&u.amdO?define(function(){return m}):w["seed"+$]=m}("undefined"!=typeof self?self:e,[],Math)}),n$=Kt((e,t)=>{var u=nA(),y=nx(),w=nb(),T=nw(),$=nN(),M=nC(),O=nR();O.alea=u,O.xor128=y,O.xorwow=w,O.xorshift7=T,O.xor4096=$,O.tychei=M,t.exports=O}),n_=Kt(()=>{}),nM=Kt(()=>{}),nF=Kt(()=>{}),nO=Kt(()=>{}),nP=Kt(()=>{}),nD=Kt((e,t)=>{var y,w=(y=(y="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||a9,function(e){function o(){return eh.buffer!=eb&&Tt(eh.buffer),eI}function s(){return eh.buffer!=eb&&Tt(eh.buffer),eC}function a(){return eh.buffer!=eb&&Tt(eh.buffer),eE}function p(){return eh.buffer!=eb&&Tt(eh.buffer),eR}var t,w,T,$,M,O,P,z=void 0!==(e=e||{})?e:{};z.ready=new Promise(function(e,t){O=e,P=t}),void 0!==ne&&ne.listeners&&(el={uncaughtException:ne.listeners("uncaughtException"),unhandledRejection:ne.listeners("unhandledRejection")});var L=Object.assign({},z),W=[],g=(e,t)=>{throw t},B="object"==typeof window,j="function"==typeof importScripts,q="object"==typeof ne&&"object"==typeof ne.versions&&"string"==typeof ne.versions.node,Z=z.ENVIRONMENT_IS_PTHREAD||!1,Y="";function _(e){return z.locateFile?z.locateFile(e,Y):Y+e}if(q){let e;var J=n_(),ee=nM();Y=j?ee.dirname(Y)+"/":"//",eu=(e,t)=>(e=Fp(e)?new URL(e):ee.normalize(e),J.readFileSync(e,t?void 0:"utf8")),ep=e=>{var t=eu(e,!0);return t.buffer||(t=new Uint8Array(t)),t},ed=(e,t,u)=>{e=Fp(e)?new URL(e):ee.normalize(e),J.readFile(e,function(e,y){e?u(e):t(y.buffer)})},ne.argv.length>1&&ne.argv[1].replace(/\\/g,"/"),W=ne.argv.slice(2),ne.on("uncaughtException",function(e){if(!(e instanceof ku))throw e}),ne.on("unhandledRejection",function(e){throw e}),g=(e,t)=>{if(es)throw ne.exitCode=e,t;t instanceof ku||ei("exiting due to exception: "+t),ne.exit(e)},z.inspect=function(){return"[Emscripten Module object]"};try{e=nF()}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}u.g.Worker=e.Worker}else(B||j)&&(j?Y=self.location.href:"undefined"!=typeof document&&document.currentScript&&(Y=document.currentScript.src),void 0!==y&&y&&(Y=y),Y=0!==Y.indexOf("blob:")?Y.substr(0,Y.replace(/[?#].*/,"").lastIndexOf("/")+1):"",q||(eu=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},j&&(ep=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),ed=(e,t,u)=>{var y=new XMLHttpRequest;y.open("GET",e,!0),y.responseType="arraybuffer",y.onload=()=>{if(200==y.status||0==y.status&&y.response){t(y.response);return}u()},y.onerror=u,y.send(null)}),e=>document.title=e);q&&"undefined"==typeof performance&&(u.g.performance=nO().performance);var ea=console.log.bind(console),en=console.warn.bind(console);q&&(ea=e=>J.writeSync(1,e+`
`),en=e=>J.writeSync(2,e+`
`));var er=z.print||ea,ei=z.printErr||en;Object.assign(z,L),L=null,z.arguments&&(W=z.arguments),z.thisProgram&&z.thisProgram,z.quit&&(g=z.quit),Atomics.load,Atomics.store,Atomics.compareExchange,z.wasmBinary&&(ec=z.wasmBinary);var es=z.noExitRuntime||!0;"object"!=typeof WebAssembly&&vu("no native wasm support detected");var el,eu,ed,ep,ec,eh,em,ey=!1,eA="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function Fe(e,t,u){t>>>=0;for(var y=t+u,w=t;e[w]&&!(w>=y);)++w;if(w-t>16&&e.buffer&&eA)return eA.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,w):e.subarray(t,w));for(var T="";t<w;){var $=e[t++];if(!(128&$)){T+=String.fromCharCode($);continue}var M=63&e[t++];if((224&$)==192){T+=String.fromCharCode((31&$)<<6|M);continue}var O=63&e[t++];if(($=(240&$)==224?(15&$)<<12|M<<6|O:(7&$)<<18|M<<12|O<<6|63&e[t++])<65536)T+=String.fromCharCode($);else{var P=$-65536;T+=String.fromCharCode(55296|P>>10,56320|1023&P)}}return T}function Tt(e){eb=e,z.HEAP8=ek=new Int8Array(e),z.HEAP16=new Int16Array(e),z.HEAP32=eC=new Int32Array(e),z.HEAPU8=eI=new Uint8Array(e),z.HEAPU16=new Uint16Array(e),z.HEAPU32=eE=new Uint32Array(e),z.HEAPF32=new Float32Array(e),z.HEAPF64=eR=new Float64Array(e)}Z&&(eb=z.buffer);var ex=z.INITIAL_MEMORY||16777216;if(Z)eh=z.wasmMemory,eb=z.buffer;else if(z.wasmMemory)eh=z.wasmMemory;else if(!((eh=new WebAssembly.Memory({initial:ex/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw ei("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),q&&ei("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");eh&&(eb=eh.buffer),ex=eb.byteLength,Tt(eb);var eb,ek,eI,eC,eE,eR,e$,e_=[],eM=[],eF=[],eO=0,eP=null,eD=null;function vu(e){z.onAbort&&z.onAbort(e),ei(e="Aborted("+e+")"),ey=!0,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw P(t),t}function Sm(e){return e.startsWith("data:application/octet-stream;base64,")}function Fp(e){return e.startsWith("file://")}function Im(e){try{if(e==t&&ec)return new Uint8Array(ec);if(ep)return ep(e);throw"both async and sync fetching of the wasm failed"}catch(e){vu(e)}}Sm(t="tfjs-backend-wasm-threaded-simd.wasm")||(t=_(t));var eL={};function ku(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function sl(e){var t=eW.pthreads[e];t||vu(void 0),eW.returnWorkerToPool(t)}function Ny(e){var t=eW.getNewWorker();if(!t)return 6;eW.runningWorkers.push(t),eW.pthreads[e.pthread_ptr]=t,t.pthread_ptr=e.pthread_ptr;var u={cmd:"run",start_routine:e.startRoutine,arg:e.arg,pthread_ptr:e.pthread_ptr};return t.runPthread=()=>{q&&t.ref(),t.postMessage(u,e.transferList),delete t.runPthread},t.loaded&&t.runPthread(),0}function Nm(e){if(Z)return Ni(1,1,e);es||(eW.terminateAllThreads(),z.onExit&&z.onExit(e),ey=!0),g(e,new ku(e))}var Tm=function(e,t){if(!t&&Z)throw _m(e),"unwind";Nm(e)},eW={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){Z?eW.initWorker():eW.initMainThread()},initMainThread:function(){for(var e=8;e--;)eW.allocateUnusedWorker()},initWorker:function(){es=!1},setExitStatus:function(e){},terminateAllThreads:function(){for(var e of Object.values(eW.pthreads))eW.returnWorkerToPool(e);for(var e of eW.unusedWorkers)e.terminate();eW.unusedWorkers=[]},returnWorkerToPool:function(e){var t=e.pthread_ptr;delete eW.pthreads[t],eW.unusedWorkers.push(e),eW.runningWorkers.splice(eW.runningWorkers.indexOf(e),1),e.pthread_ptr=0,q&&e.unref(),eZ(t)},receiveObjectTransfer:function(e){},threadInitTLS:function(){eW.tlsInitFunctions.forEach(e=>e())},loadWasmModuleToWorker:function(e,t){e.onmessage=u=>{var y,w,T=u.data,$=T.cmd;if(e.pthread_ptr&&(eW.currentProxiedOperationCallerThread=e.pthread_ptr),T.targetThread&&T.targetThread!=ej()){var M=eW.pthreads[T.targetThread];M?M.postMessage(T,T.transferList):ei('Internal error! Worker sent a message "'+$+'" to target pthread '+T.targetThread+", but that thread no longer exists!"),eW.currentProxiedOperationCallerThread=void 0;return}"processProxyingQueue"===$?il(T.queue):"spawnThread"===$?Ny(T):"cleanupThread"===$?sl(T.thread):"killThread"===$?(y=T.thread,w=eW.pthreads[y],delete eW.pthreads[y],w.terminate(),eZ(y),eW.runningWorkers.splice(eW.runningWorkers.indexOf(w),1),w.pthread_ptr=0):"cancelThread"===$?function(e){eW.pthreads[e].postMessage({cmd:"cancel"})}(T.thread):"loaded"===$?(e.loaded=!0,q&&e.unref(),t&&t(e),e.runPthread&&e.runPthread()):"print"===$?er("Thread "+T.threadId+": "+T.text):"printErr"===$?ei("Thread "+T.threadId+": "+T.text):"alert"===$?alert("Thread "+T.threadId+": "+T.text):"setimmediate"===T.target?e.postMessage(T):"callHandler"===$?z[T.handler](...T.args):$&&ei("worker sent an unknown command "+$),eW.currentProxiedOperationCallerThread=void 0},e.onerror=e=>{throw ei("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},q&&(e.on("message",function(t){e.onmessage({data:t})}),e.on("error",function(t){e.onerror(t)}),e.on("detachedExit",function(){}));var u=[];for(var w of["onExit","onAbort","print","printErr"])z.hasOwnProperty(w)&&u.push(w);e.postMessage({cmd:"load",handlers:u,urlOrBlob:z.mainScriptUrlOrBlob||y,wasmMemory:eh,wasmModule:em})},allocateUnusedWorker:function(){var e,t=_("tfjs-backend-wasm-threaded-simd.worker.js");e=new Worker(t),eW.unusedWorkers.push(e)},getNewWorker:function(){return 0==eW.unusedWorkers.length&&(eW.allocateUnusedWorker(),eW.loadWasmModuleToWorker(eW.unusedWorkers[0])),eW.unusedWorkers.pop()}};function al(e){for(;e.length>0;)e.shift()(z)}function _m(e){if(Z)return Ni(2,0,e);try{Tm(e)}catch(e){var t;(t=e)instanceof ku||"unwind"==t||g(1,t)}}z.PThread=eW,z.establishStackSpace=function(){var e=ej(),t=s()[e+52>>>2],u=t-s()[e+56>>>2];eJ(t,u),e1(t)};var eB=[];function Em(e,t,u,y){return Z?Ni(3,1,e,t,u,y):$m(e,t,u,y)}function $m(e,t,u,y){if("undefined"==typeof SharedArrayBuffer)return ei("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var w=[];if(Z&&0===w.length)return Em(e,t,u,y);var T={startRoutine:u,pthread_ptr:e,arg:y,transferList:w};return Z?(T.cmd="spawnThread",postMessage(T,w),0):Ny(T)}function il(e){Atomics.store(s(),e>>2,1),ej()&&eK(e),Atomics.compareExchange(s(),e>>2,1,0)}function Nu(e){Nu.shown||(Nu.shown={}),Nu.shown[e]||(Nu.shown[e]=1,q&&(e="warning: "+e),ei(e))}function Rm(){return 4294901760}function Ni(e,t){var u,y,w=arguments.length-2,T=arguments;return u=eQ(),y=(()=>{for(var u=e2(8*w),y=u>>3,$=0;$<w;$++){var M=T[2+$];p()[y+$>>>0]=M}return eX(e,w,u,t)})(),e1(u),y}z.invokeEntryPoint=function(e,t){var u,y=((u=eB[e])||(e>=eB.length&&(eB.length=e+1),eB[e]=u=e$.get(e)),u)(t);es?eW.setExitStatus(y):eY(y)},z.executeNotifiedProxyingQueue=il,w=q?()=>{var e=ne.hrtime();return 1e3*e[0]+e[1]/1e6}:()=>performance.timeOrigin+performance.now();var eV=[];function Dm(e){return Z?Ni(4,1,e):52}function Am(e,t,u,y,w){return Z?Ni(5,1,e,t,u,y,w):70}var eU=[null,[],[]];function Fm(e,t,u,y){if(Z)return Ni(6,1,e,t,u,y);for(var w=0,T=0;T<u;T++){var $=a()[t>>>2],M=a()[t+4>>>2];t+=8;for(var O=0;O<M;O++)(function(e,t){var u=eU[e];0===t||10===t?((1===e?er:ei)(Fe(u,0)),u.length=0):u.push(t)})(e,o()[$+O>>>0]);w+=M}return a()[y>>>2]=w,0}eW.init();var eG=[null,Nm,_m,Em,Dm,Am,Fm],eH={__emscripten_init_main_thread_js:function(e){eq(e,!j,1,!B),eW.threadInitTLS()},__emscripten_thread_cleanup:function(e){Z?postMessage({cmd:"cleanupThread",thread:e}):sl(e)},__pthread_create_js:$m,_emscripten_default_pthread_stack_size:function(){return 65536},_emscripten_get_now_is_monotonic:function(){return!0},_emscripten_notify_task_queue:function(e,t,u,y){if(e==t)setTimeout(()=>il(y));else if(Z)postMessage({targetThread:e,cmd:"processProxyingQueue",queue:y});else{var w=eW.pthreads[e];if(!w)return;w.postMessage({cmd:"processProxyingQueue",queue:y})}return 1},_emscripten_set_offscreencanvas_size:function(e,t,u){return -1},abort:function(){vu("")},emscripten_check_blocking_allowed:function(){q||j||Nu("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")},emscripten_date_now:function(){return Date.now()},emscripten_get_heap_max:function(){return Rm()},emscripten_get_now:w,emscripten_memcpy_big:function(e,t,u){o().copyWithin(e>>>0,t>>>0,t+u>>>0)},emscripten_num_logical_cores:function(){return q?nP().cpus().length:navigator.hardwareConcurrency},emscripten_receive_on_main_thread_js:function(e,t,u){eV.length=t;for(var y=u>>3,w=0;w<t;w++)eV[w]=p()[y+w>>>0];return(e<0?eL[-e-1]:eG[e]).apply(null,eV)},emscripten_resize_heap:function(e){var t=o().length;if((e>>>=0)<=t)return!1;var u=Rm();if(e>u)return!1;let $e=(e,t)=>e+(t-e%t)%t;for(var y=1;y<=4;y*=2){var w=t*(1+.2/y);if(w=Math.min(w,e+100663296),function(e){try{return eh.grow(e-eb.byteLength+65535>>>16),Tt(eh.buffer),1}catch(e){}}(Math.min(u,$e(Math.max(e,w),65536))))return!0}return!1},emscripten_unwind_to_js_event_loop:function(){throw"unwind"},exit:Tm,fd_close:Dm,fd_seek:Am,fd_write:Fm,memory:eh||z.wasmMemory},ej=(function(){var e={env:eH,wasi_snapshot_preview1:eH};function V(e,t){var u,y,w=e.exports;if(z.asm=w,u=z.asm._emscripten_tls_init,eW.tlsInitFunctions.push(u),e$=z.asm.__indirect_function_table,y=z.asm.__wasm_call_ctors,eM.unshift(y),em=t,!Z){var T=eW.unusedWorkers.length;eW.unusedWorkers.forEach(function(e){eW.loadWasmModuleToWorker(e,function(){--T||function(e){if(eO--,z.monitorRunDependencies&&z.monitorRunDependencies(eO),0==eO&&(null!==eP&&(clearInterval(eP),eP=null),eD)){var t=eD;eD=null,t()}}(0)})})}}function ue(e){V(e.instance,e.module)}function $e(u){return(function(){if(!ec&&(B||j)){if("function"==typeof fetch&&!Fp(t))return fetch(t,{credentials:"same-origin"}).then(function(e){if(!e.ok)throw"failed to load wasm binary file at '"+t+"'";return e.arrayBuffer()}).catch(function(){return Im(t)});if(ed)return new Promise(function(e,u){ed(t,function(t){e(new Uint8Array(t))},u)})}return Promise.resolve().then(function(){return Im(t)})})().then(function(t){return WebAssembly.instantiate(t,e)}).then(function(e){return e}).then(u,function(e){ei("failed to asynchronously prepare wasm: "+e),vu(e)})}if(Z||(eO++,z.monitorRunDependencies&&z.monitorRunDependencies(eO)),z.instantiateWasm)try{return z.instantiateWasm(e,V)}catch(e){ei("Module.instantiateWasm callback failed with error: "+e),P(e)}(ec||"function"!=typeof WebAssembly.instantiateStreaming||Sm(t)||Fp(t)||q||"function"!=typeof fetch?$e(ue):fetch(t,{credentials:"same-origin"}).then(function(t){return WebAssembly.instantiateStreaming(t,e).then(ue,function(e){return ei("wasm streaming compile failed: "+e),ei("falling back to ArrayBuffer instantiation"),$e(ue)})})).catch(P)}(),z.___wasm_call_ctors=function(){return(z.___wasm_call_ctors=z.asm.__wasm_call_ctors).apply(null,arguments)},z._init=function(){return(z._init=z.asm.init).apply(null,arguments)},z._init_with_threads_count=function(){return(z._init_with_threads_count=z.asm.init_with_threads_count).apply(null,arguments)},z._get_threads_count=function(){return(z._get_threads_count=z.asm.get_threads_count).apply(null,arguments)},z._register_tensor=function(){return(z._register_tensor=z.asm.register_tensor).apply(null,arguments)},z._dispose_data=function(){return(z._dispose_data=z.asm.dispose_data).apply(null,arguments)},z._dispose=function(){return(z._dispose=z.asm.dispose).apply(null,arguments)},z._Abs=function(){return(z._Abs=z.asm.Abs).apply(null,arguments)},z._Acos=function(){return(z._Acos=z.asm.Acos).apply(null,arguments)},z._Acosh=function(){return(z._Acosh=z.asm.Acosh).apply(null,arguments)},z._Add=function(){return(z._Add=z.asm.Add).apply(null,arguments)},z._AddN=function(){return(z._AddN=z.asm.AddN).apply(null,arguments)},z._All=function(){return(z._All=z.asm.All).apply(null,arguments)},z._Any=function(){return(z._Any=z.asm.Any).apply(null,arguments)},z._ArgMax=function(){return(z._ArgMax=z.asm.ArgMax).apply(null,arguments)},z._ArgMin=function(){return(z._ArgMin=z.asm.ArgMin).apply(null,arguments)},z._Asin=function(){return(z._Asin=z.asm.Asin).apply(null,arguments)},z._Asinh=function(){return(z._Asinh=z.asm.Asinh).apply(null,arguments)},z._Atan=function(){return(z._Atan=z.asm.Atan).apply(null,arguments)},z._Atan2=function(){return(z._Atan2=z.asm.Atan2).apply(null,arguments)},z._Atanh=function(){return(z._Atanh=z.asm.Atanh).apply(null,arguments)},z._AvgPool=function(){return(z._AvgPool=z.asm.AvgPool).apply(null,arguments)},z._AvgPool3D=function(){return(z._AvgPool3D=z.asm.AvgPool3D).apply(null,arguments)},z._AvgPool3DGrad=function(){return(z._AvgPool3DGrad=z.asm.AvgPool3DGrad).apply(null,arguments)},z._AvgPoolGrad=function(){return(z._AvgPoolGrad=z.asm.AvgPoolGrad).apply(null,arguments)},z._BatchMatMul=function(){return(z._BatchMatMul=z.asm.BatchMatMul).apply(null,arguments)},z._Bincount=function(){return(z._Bincount=z.asm.Bincount).apply(null,arguments)},z._BitwiseAnd=function(){return(z._BitwiseAnd=z.asm.BitwiseAnd).apply(null,arguments)},z._Ceil=function(){return(z._Ceil=z.asm.Ceil).apply(null,arguments)},z._ClipByValue=function(){return(z._ClipByValue=z.asm.ClipByValue).apply(null,arguments)},z._Conv2D=function(){return(z._Conv2D=z.asm.Conv2D).apply(null,arguments)},z._Conv2DBackpropInput=function(){return(z._Conv2DBackpropInput=z.asm.Conv2DBackpropInput).apply(null,arguments)},z._Conv3D=function(){return(z._Conv3D=z.asm.Conv3D).apply(null,arguments)},z._Conv3DBackpropFilterV2=function(){return(z._Conv3DBackpropFilterV2=z.asm.Conv3DBackpropFilterV2).apply(null,arguments)},z._Conv3DBackpropInputV2=function(){return(z._Conv3DBackpropInputV2=z.asm.Conv3DBackpropInputV2).apply(null,arguments)},z._Cos=function(){return(z._Cos=z.asm.Cos).apply(null,arguments)},z._Cosh=function(){return(z._Cosh=z.asm.Cosh).apply(null,arguments)},z._CropAndResize=function(){return(z._CropAndResize=z.asm.CropAndResize).apply(null,arguments)},z._Cumprod=function(){return(z._Cumprod=z.asm.Cumprod).apply(null,arguments)},z._Cumsum=function(){return(z._Cumsum=z.asm.Cumsum).apply(null,arguments)},z._DenseBincount=function(){return(z._DenseBincount=z.asm.DenseBincount).apply(null,arguments)},z._DepthToSpace=function(){return(z._DepthToSpace=z.asm.DepthToSpace).apply(null,arguments)},z._DepthwiseConv2dNative=function(){return(z._DepthwiseConv2dNative=z.asm.DepthwiseConv2dNative).apply(null,arguments)},z._Diag=function(){return(z._Diag=z.asm.Diag).apply(null,arguments)},z._Dilation2D=function(){return(z._Dilation2D=z.asm.Dilation2D).apply(null,arguments)},z._Dilation2DBackpropFilter=function(){return(z._Dilation2DBackpropFilter=z.asm.Dilation2DBackpropFilter).apply(null,arguments)},z._Dilation2DBackpropInput=function(){return(z._Dilation2DBackpropInput=z.asm.Dilation2DBackpropInput).apply(null,arguments)},z._Elu=function(){return(z._Elu=z.asm.Elu).apply(null,arguments)},z._EluGrad=function(){return(z._EluGrad=z.asm.EluGrad).apply(null,arguments)},z._Equal=function(){return(z._Equal=z.asm.Equal).apply(null,arguments)},z._Erf=function(){return(z._Erf=z.asm.Erf).apply(null,arguments)},z._Exp=function(){return(z._Exp=z.asm.Exp).apply(null,arguments)},z._Expm1=function(){return(z._Expm1=z.asm.Expm1).apply(null,arguments)},z._FlipLeftRight=function(){return(z._FlipLeftRight=z.asm.FlipLeftRight).apply(null,arguments)},z._Floor=function(){return(z._Floor=z.asm.Floor).apply(null,arguments)},z._FloorDiv=function(){return(z._FloorDiv=z.asm.FloorDiv).apply(null,arguments)},z._FusedBatchNorm=function(){return(z._FusedBatchNorm=z.asm.FusedBatchNorm).apply(null,arguments)},z._FusedConv2D=function(){return(z._FusedConv2D=z.asm.FusedConv2D).apply(null,arguments)},z._FusedDepthwiseConv2D=function(){return(z._FusedDepthwiseConv2D=z.asm.FusedDepthwiseConv2D).apply(null,arguments)},z._Gather=function(){return(z._Gather=z.asm.Gather).apply(null,arguments)},z._GatherNd=function(){return(z._GatherNd=z.asm.GatherNd).apply(null,arguments)},z._Greater=function(){return(z._Greater=z.asm.Greater).apply(null,arguments)},z._GreaterEqual=function(){return(z._GreaterEqual=z.asm.GreaterEqual).apply(null,arguments)},z._IsFinite=function(){return(z._IsFinite=z.asm.IsFinite).apply(null,arguments)},z._IsInf=function(){return(z._IsInf=z.asm.IsInf).apply(null,arguments)},z._IsNan=function(){return(z._IsNan=z.asm.IsNan).apply(null,arguments)},z._LRN=function(){return(z._LRN=z.asm.LRN).apply(null,arguments)},z._LRNGrad=function(){return(z._LRNGrad=z.asm.LRNGrad).apply(null,arguments)},z._LeakyRelu=function(){return(z._LeakyRelu=z.asm.LeakyRelu).apply(null,arguments)},z._Less=function(){return(z._Less=z.asm.Less).apply(null,arguments)},z._LessEqual=function(){return(z._LessEqual=z.asm.LessEqual).apply(null,arguments)},z._LinSpace=function(){return(z._LinSpace=z.asm.LinSpace).apply(null,arguments)},z._Log=function(){return(z._Log=z.asm.Log).apply(null,arguments)},z._Log1p=function(){return(z._Log1p=z.asm.Log1p).apply(null,arguments)},z._LogicalAnd=function(){return(z._LogicalAnd=z.asm.LogicalAnd).apply(null,arguments)},z._LogicalNot=function(){return(z._LogicalNot=z.asm.LogicalNot).apply(null,arguments)},z._LogicalOr=function(){return(z._LogicalOr=z.asm.LogicalOr).apply(null,arguments)},z._LogicalXor=function(){return(z._LogicalXor=z.asm.LogicalXor).apply(null,arguments)},z._Max=function(){return(z._Max=z.asm.Max).apply(null,arguments)},z._MaxPool=function(){return(z._MaxPool=z.asm.MaxPool).apply(null,arguments)},z._MaxPool3D=function(){return(z._MaxPool3D=z.asm.MaxPool3D).apply(null,arguments)},z._MaxPool3DGrad=function(){return(z._MaxPool3DGrad=z.asm.MaxPool3DGrad).apply(null,arguments)},z._MaxPoolGrad=function(){return(z._MaxPoolGrad=z.asm.MaxPoolGrad).apply(null,arguments)},z._MaxPoolWithArgmax=function(){return(z._MaxPoolWithArgmax=z.asm.MaxPoolWithArgmax).apply(null,arguments)},z._Maximum=function(){return(z._Maximum=z.asm.Maximum).apply(null,arguments)},z._Mean=function(){return(z._Mean=z.asm.Mean).apply(null,arguments)},z._Min=function(){return(z._Min=z.asm.Min).apply(null,arguments)},z._Minimum=function(){return(z._Minimum=z.asm.Minimum).apply(null,arguments)},z._MirrorPad=function(){return(z._MirrorPad=z.asm.MirrorPad).apply(null,arguments)},z._Mod=function(){return(z._Mod=z.asm.Mod).apply(null,arguments)},z._Multinomial=function(){return(z._Multinomial=z.asm.Multinomial).apply(null,arguments)},z._Multiply=function(){return(z._Multiply=z.asm.Multiply).apply(null,arguments)},z._Neg=function(){return(z._Neg=z.asm.Neg).apply(null,arguments)},z._NonMaxSuppressionV3=function(){return(z._NonMaxSuppressionV3=z.asm.NonMaxSuppressionV3).apply(null,arguments)},z._NonMaxSuppressionV4=function(){return(z._NonMaxSuppressionV4=z.asm.NonMaxSuppressionV4).apply(null,arguments)},z._NonMaxSuppressionV5=function(){return(z._NonMaxSuppressionV5=z.asm.NonMaxSuppressionV5).apply(null,arguments)},z._NotEqual=function(){return(z._NotEqual=z.asm.NotEqual).apply(null,arguments)},z._OneHot=function(){return(z._OneHot=z.asm.OneHot).apply(null,arguments)},z._PadV2=function(){return(z._PadV2=z.asm.PadV2).apply(null,arguments)},z._Pow=function(){return(z._Pow=z.asm.Pow).apply(null,arguments)},z._Prelu=function(){return(z._Prelu=z.asm.Prelu).apply(null,arguments)},z._Prod=function(){return(z._Prod=z.asm.Prod).apply(null,arguments)},z._RealDiv=function(){return(z._RealDiv=z.asm.RealDiv).apply(null,arguments)},z._Reciprocal=function(){return(z._Reciprocal=z.asm.Reciprocal).apply(null,arguments)},z._Relu=function(){return(z._Relu=z.asm.Relu).apply(null,arguments)},z._Relu6=function(){return(z._Relu6=z.asm.Relu6).apply(null,arguments)},z._ResizeBilinear=function(){return(z._ResizeBilinear=z.asm.ResizeBilinear).apply(null,arguments)},z._ResizeBilinearGrad=function(){return(z._ResizeBilinearGrad=z.asm.ResizeBilinearGrad).apply(null,arguments)},z._ResizeNearestNeighbor=function(){return(z._ResizeNearestNeighbor=z.asm.ResizeNearestNeighbor).apply(null,arguments)},z._ResizeNearestNeighborGrad=function(){return(z._ResizeNearestNeighborGrad=z.asm.ResizeNearestNeighborGrad).apply(null,arguments)},z._Reverse=function(){return(z._Reverse=z.asm.Reverse).apply(null,arguments)},z._RotateWithOffset=function(){return(z._RotateWithOffset=z.asm.RotateWithOffset).apply(null,arguments)},z._Round=function(){return(z._Round=z.asm.Round).apply(null,arguments)},z._Rsqrt=function(){return(z._Rsqrt=z.asm.Rsqrt).apply(null,arguments)},z._ScatterNd=function(){return(z._ScatterNd=z.asm.ScatterNd).apply(null,arguments)},z._SearchSorted=function(){return(z._SearchSorted=z.asm.SearchSorted).apply(null,arguments)},z._SelectV2=function(){return(z._SelectV2=z.asm.SelectV2).apply(null,arguments)},z._Selu=function(){return(z._Selu=z.asm.Selu).apply(null,arguments)},z._Sigmoid=function(){return(z._Sigmoid=z.asm.Sigmoid).apply(null,arguments)},z._Sign=function(){return(z._Sign=z.asm.Sign).apply(null,arguments)},z._Sin=function(){return(z._Sin=z.asm.Sin).apply(null,arguments)},z._Sinh=function(){return(z._Sinh=z.asm.Sinh).apply(null,arguments)},z._Softmax=function(){return(z._Softmax=z.asm.Softmax).apply(null,arguments)},z._Softplus=function(){return(z._Softplus=z.asm.Softplus).apply(null,arguments)},z._SparseFillEmptyRows=function(){return(z._SparseFillEmptyRows=z.asm.SparseFillEmptyRows).apply(null,arguments)},z._SparseReshape=function(){return(z._SparseReshape=z.asm.SparseReshape).apply(null,arguments)},z._SparseSegmentReduction=function(){return(z._SparseSegmentReduction=z.asm.SparseSegmentReduction).apply(null,arguments)},z._SparseToDense=function(){return(z._SparseToDense=z.asm.SparseToDense).apply(null,arguments)},z._Sqrt=function(){return(z._Sqrt=z.asm.Sqrt).apply(null,arguments)},z._Square=function(){return(z._Square=z.asm.Square).apply(null,arguments)},z._SquaredDifference=function(){return(z._SquaredDifference=z.asm.SquaredDifference).apply(null,arguments)},z._Step=function(){return(z._Step=z.asm.Step).apply(null,arguments)},z._StridedSlice=function(){return(z._StridedSlice=z.asm.StridedSlice).apply(null,arguments)},z._Sub=function(){return(z._Sub=z.asm.Sub).apply(null,arguments)},z._Sum=function(){return(z._Sum=z.asm.Sum).apply(null,arguments)},z._Tan=function(){return(z._Tan=z.asm.Tan).apply(null,arguments)},z._Tanh=function(){return(z._Tanh=z.asm.Tanh).apply(null,arguments)},z._TensorScatterUpdate=function(){return(z._TensorScatterUpdate=z.asm.TensorScatterUpdate).apply(null,arguments)},z._Tile=function(){return(z._Tile=z.asm.Tile).apply(null,arguments)},z._TopK=function(){return(z._TopK=z.asm.TopK).apply(null,arguments)},z._Transform=function(){return(z._Transform=z.asm.Transform).apply(null,arguments)},z._Transpose=function(){return(z._Transpose=z.asm.Transpose).apply(null,arguments)},z.__FusedMatMul=function(){return(z.__FusedMatMul=z.asm._FusedMatMul).apply(null,arguments)},z._malloc=function(){return(z._malloc=z.asm.malloc).apply(null,arguments)},z._free=function(){return(z._free=z.asm.free).apply(null,arguments)},z.__emscripten_tls_init=function(){return(z.__emscripten_tls_init=z.asm._emscripten_tls_init).apply(null,arguments)},z._pthread_self=function(){return(ej=z._pthread_self=z.asm.pthread_self).apply(null,arguments)}),eq=(z.___errno_location=function(){return(z.___errno_location=z.asm.__errno_location).apply(null,arguments)},z.__emscripten_thread_init=function(){return(eq=z.__emscripten_thread_init=z.asm._emscripten_thread_init).apply(null,arguments)}),eX=(z.__emscripten_thread_crashed=function(){return(z.__emscripten_thread_crashed=z.asm._emscripten_thread_crashed).apply(null,arguments)},z._emscripten_main_thread_process_queued_calls=function(){return(z._emscripten_main_thread_process_queued_calls=z.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},z._emscripten_main_browser_thread_id=function(){return(z._emscripten_main_browser_thread_id=z.asm.emscripten_main_browser_thread_id).apply(null,arguments)},z._emscripten_run_in_main_runtime_thread_js=function(){return(eX=z._emscripten_run_in_main_runtime_thread_js=z.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)}),eK=(z._emscripten_dispatch_to_thread_=function(){return(z._emscripten_dispatch_to_thread_=z.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},z.__emscripten_proxy_execute_task_queue=function(){return(eK=z.__emscripten_proxy_execute_task_queue=z.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)}),eZ=z.__emscripten_thread_free_data=function(){return(eZ=z.__emscripten_thread_free_data=z.asm._emscripten_thread_free_data).apply(null,arguments)},eY=z.__emscripten_thread_exit=function(){return(eY=z.__emscripten_thread_exit=z.asm._emscripten_thread_exit).apply(null,arguments)},eJ=z._emscripten_stack_set_limits=function(){return(eJ=z._emscripten_stack_set_limits=z.asm.emscripten_stack_set_limits).apply(null,arguments)},eQ=z.stackSave=function(){return(eQ=z.stackSave=z.asm.stackSave).apply(null,arguments)},e1=z.stackRestore=function(){return(e1=z.stackRestore=z.asm.stackRestore).apply(null,arguments)},e2=z.stackAlloc=function(){return(e2=z.stackAlloc=z.asm.stackAlloc).apply(null,arguments)};function S0(e){if(e=e||W,!(eO>0)){if(Z){O(z),Z||al(eM),startWorker(z);return}(function(){if(z.preRun)for("function"==typeof z.preRun&&(z.preRun=[z.preRun]);z.preRun.length;){var e;e=z.preRun.shift(),e_.unshift(e)}al(e_)})(),eO>0||(z.setStatus?(z.setStatus("Running..."),setTimeout(function(){setTimeout(function(){z.setStatus("")},1),V()},1)):V())}function V(){T||(T=!0,z.calledRun=!0,ey||(Z||al(eM),O(z),z.onRuntimeInitialized&&z.onRuntimeInitialized(),function(){if(!Z){if(z.postRun)for("function"==typeof z.postRun&&(z.postRun=[z.postRun]);z.postRun.length;){var e;e=z.postRun.shift(),eF.unshift(e)}al(eF)}}()))}}if(z.dynCall_iijjiiii=function(){return(z.dynCall_iijjiiii=z.asm.dynCall_iijjiiii).apply(null,arguments)},z.dynCall_jiji=function(){return(z.dynCall_jiji=z.asm.dynCall_jiji).apply(null,arguments)},z.keepRuntimeAlive=function(){return es},z.wasmMemory=eh,z.cwrap=function(e,t,u,y){var w=(u=u||[]).every(e=>"number"===e||"boolean"===e);return"string"!==t&&w&&!y?z["_"+e]:function(){return function(e,t,u,y,w){var T,$,M={string:e=>{var t=0;if(null!=e&&0!==e){var u,y=(e.length<<2)+1;u=t=e2(y),function(e,t,u,y){if(u>>>=0,y>0){for(var w=u+y-1,T=0;T<e.length;++T){var $=e.charCodeAt(T);if($>=55296&&$<=57343&&($=65536+((1023&$)<<10)|1023&e.charCodeAt(++T)),$<=127){if(u>=w)break;t[u++>>>0]=$}else if($<=2047){if(u+1>=w)break;t[u++>>>0]=192|$>>6,t[u++>>>0]=128|63&$}else if($<=65535){if(u+2>=w)break;t[u++>>>0]=224|$>>12,t[u++>>>0]=128|$>>6&63,t[u++>>>0]=128|63&$}else{if(u+3>=w)break;t[u++>>>0]=240|$>>18,t[u++>>>0]=128|$>>12&63,t[u++>>>0]=128|$>>6&63,t[u++>>>0]=128|63&$}}t[u>>>0]=0}}(e,o(),u,y)}return t},array:e=>{var t=e2(e.length);return(eh.buffer!=eb&&Tt(eh.buffer),ek).set(e,t>>>0),t}},O=z["_"+e],P=[],L=0;if(y)for(var W=0;W<y.length;W++){var B=M[u[W]];B?(0===L&&(L=eQ()),P[W]=B(y[W])):P[W]=y[W]}var j=O.apply(null,P);return $=j,0!==L&&e1(L),j="string"===t?(T=$>>>0)?Fe(o(),T,void 0):"":"boolean"===t?!!$:$}(e,t,u,arguments,0)}},z.ExitStatus=ku,z.PThread=eW,eD=function F(){T||S0(),T||(eD=F)},z.preInit)for("function"==typeof z.preInit&&(z.preInit=[z.preInit]);z.preInit.length>0;)z.preInit.pop()();if(S0(),el&&($={uncaughtException:ne.listeners("uncaughtException").filter(function(e){return!el.uncaughtException.indexOf(e)>-1}),unhandledRejection:ne.listeners("unhandledRejection").filter(function(e){return!el.unhandledRejection.indexOf(e)>-1})}),"undefined"!=typeof WasmBackendModule)M=WasmBackendModule;else if(void 0!==e)M=e;else throw Error("Could not find wasm module in post.js");if($){var e5=M._dispose;M._dispose=function(){e5(),$.uncaughtException.forEach(function(e){ne.removeListener("uncaughtException",e)}),$.unhandledRejection.forEach(function(e){ne.removeListener("unhandledRejection",e)})}}return e.ready});"object"==typeof e&&"object"==typeof t?t.exports=w:"function"==typeof define&&u.amdO?define([],function(){return w}):"object"==typeof e&&(e.WasmBackendModuleThreadedSimd=w)}),nz=Kt((e,t)=>{t.exports.wasmWorkerContents=`"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8")+"//# sourceURL="+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"
");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({"cmd":"loaded"})};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:"callHandler",handler:handler,args:[...arguments]})}}Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd==="run"){Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};`}),nL=Kt((e,t)=>{var y,w=(y=(y="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||a9,function(e){var t,u,w,T,$,M,O,P=void 0!==(e=e||{})?e:{};P.ready=new Promise(function(e,t){M=e,O=t}),void 0!==ne&&ne.listeners&&(en={uncaughtException:ne.listeners("uncaughtException"),unhandledRejection:ne.listeners("unhandledRejection")});var z=Object.assign({},P),L=[],W="object"==typeof window,B="function"==typeof importScripts,j="object"==typeof ne&&"object"==typeof ne.versions&&"string"==typeof ne.versions.node,q="";if(j){var Z=n_(),Y=nM();q=B?Y.dirname(q)+"/":"//",er=(e,t)=>(e=Ks(e)?new URL(e):Y.normalize(e),Z.readFileSync(e,t?void 0:"utf8")),es=e=>{var t=er(e,!0);return t.buffer||(t=new Uint8Array(t)),t},ei=(e,t,u)=>{e=Ks(e)?new URL(e):Y.normalize(e),Z.readFile(e,function(e,y){e?u(e):t(y.buffer)})},ne.argv.length>1&&ne.argv[1].replace(/\\/g,"/"),L=ne.argv.slice(2),ne.on("uncaughtException",function(e){if(!(e instanceof Ap))throw e}),ne.on("unhandledRejection",function(e){throw e}),P.inspect=function(){return"[Emscripten Module object]"}}else(W||B)&&(B?q=self.location.href:"undefined"!=typeof document&&document.currentScript&&(q=document.currentScript.src),y&&(q=y),q=0!==q.indexOf("blob:")?q.substr(0,q.replace(/[?#].*/,"").lastIndexOf("/")+1):"",er=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},B&&(es=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),ei=(e,t,u)=>{var y=new XMLHttpRequest;y.open("GET",e,!0),y.responseType="arraybuffer",y.onload=()=>{if(200==y.status||0==y.status&&y.response){t(y.response);return}u()},y.onerror=u,y.send(null)},e=>document.title=e);var J=P.print||console.log.bind(console),ee=P.printErr||console.warn.bind(console);Object.assign(P,z),z=null,P.arguments&&(L=P.arguments),P.thisProgram&&P.thisProgram,P.quit&&P.quit,P.wasmBinary&&(el=P.wasmBinary);var ea=P.noExitRuntime||!0;"object"!=typeof WebAssembly&&fr("no native wasm support detected");var en,er,ei,es,el,eu,ed=!1,ep="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function U(e,t,u){t>>>=0;for(var y=t+u,w=t;e[w]&&!(w>=y);)++w;if(w-t>16&&e.buffer&&ep)return ep.decode(e.subarray(t,w));for(var T="";t<w;){var $=e[t++];if(!(128&$)){T+=String.fromCharCode($);continue}var M=63&e[t++];if((224&$)==192){T+=String.fromCharCode((31&$)<<6|M);continue}var O=63&e[t++];if(($=(240&$)==224?(15&$)<<12|M<<6|O:(7&$)<<18|M<<12|O<<6|63&e[t++])<65536)T+=String.fromCharCode($);else{var P=$-65536;T+=String.fromCharCode(55296|P>>10,56320|1023&P)}}return T}function ve(e){ec=e,P.HEAP8=eh=new Int8Array(e),P.HEAP16=new Int16Array(e),P.HEAP32=new Int32Array(e),P.HEAPU8=em=new Uint8Array(e),P.HEAPU16=new Uint16Array(e),P.HEAPU32=ey=new Uint32Array(e),P.HEAPF32=new Float32Array(e),P.HEAPF64=new Float64Array(e)}P.INITIAL_MEMORY;var ec,eh,em,ey,eA=[],ex=[],eb=[],ek=0,eI=null,eC=null;function fr(e){P.onAbort&&P.onAbort(e),ee(e="Aborted("+e+")"),ed=!0,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw O(t),t}function Lo(e){return e.startsWith("data:application/octet-stream;base64,")}function Ks(e){return e.startsWith("file://")}function Wa(e){try{if(e==u&&el)return new Uint8Array(el);if(es)return es(e);throw"both async and sync fetching of the wasm failed"}catch(e){fr(e)}}function Ap(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function Ua(e){for(;e.length>0;)e.shift()(P)}function wm(){return 4294901760}Lo(u="tfjs-backend-wasm.wasm")||(t=u,u=P.locateFile?P.locateFile(t,q):q+t);var eE=[null,[],[]],eR={abort:function(){fr("")},emscripten_get_heap_max:function(){return wm()},emscripten_memcpy_big:function(e,t,u){em.copyWithin(e>>>0,t>>>0,t+u>>>0)},emscripten_resize_heap:function(e){var t=em.length;e>>>=0;var u=wm();if(e>u)return!1;let at=(e,t)=>e+(t-e%t)%t;for(var y=1;y<=4;y*=2){var w=t*(1+.2/y);if(w=Math.min(w,e+100663296),function(e){try{return eu.grow(e-ec.byteLength+65535>>>16),ve(eu.buffer),1}catch(e){}}(Math.min(u,at(Math.max(e,w),65536))))return!0}return!1},fd_close:function(e){return 52},fd_seek:function(e,t,u,y,w){return 70},fd_write:function(e,t,u,y){for(var w=0,T=0;T<u;T++){var $=ey[t>>>2],M=ey[t+4>>>2];t+=8;for(var O=0;O<M;O++)(function(e,t){var u=eE[e];0===t||10===t?((1===e?J:ee)(U(u,0)),u.length=0):u.push(t)})(e,em[$+O>>>0]);w+=M}return ey[y>>>2]=w,0}},e$=(function(){var e={env:eR,wasi_snapshot_preview1:eR};function ae(e,t){var u,y=e.exports;P.asm=y,ve((eu=P.asm.memory).buffer),P.asm.__indirect_function_table,u=P.asm.__wasm_call_ctors,ex.unshift(u),function(e){if(ek--,P.monitorRunDependencies&&P.monitorRunDependencies(ek),0==ek&&(null!==eI&&(clearInterval(eI),eI=null),eC)){var t=eC;eC=null,t()}}(0)}function Ee(e){ae(e.instance)}function at(t){return(function(){if(!el&&(W||B)){if("function"==typeof fetch&&!Ks(u))return fetch(u,{credentials:"same-origin"}).then(function(e){if(!e.ok)throw"failed to load wasm binary file at '"+u+"'";return e.arrayBuffer()}).catch(function(){return Wa(u)});if(ei)return new Promise(function(e,t){ei(u,function(t){e(new Uint8Array(t))},t)})}return Promise.resolve().then(function(){return Wa(u)})})().then(function(t){return WebAssembly.instantiate(t,e)}).then(function(e){return e}).then(t,function(e){ee("failed to asynchronously prepare wasm: "+e),fr(e)})}if(ek++,P.monitorRunDependencies&&P.monitorRunDependencies(ek),P.instantiateWasm)try{return P.instantiateWasm(e,ae)}catch(e){ee("Module.instantiateWasm callback failed with error: "+e),O(e)}(el||"function"!=typeof WebAssembly.instantiateStreaming||Lo(u)||Ks(u)||j||"function"!=typeof fetch?at(Ee):fetch(u,{credentials:"same-origin"}).then(function(t){return WebAssembly.instantiateStreaming(t,e).then(Ee,function(e){return ee("wasm streaming compile failed: "+e),ee("falling back to ArrayBuffer instantiation"),at(Ee)})})).catch(O)}(),P.___wasm_call_ctors=function(){return(P.___wasm_call_ctors=P.asm.__wasm_call_ctors).apply(null,arguments)},P._init=function(){return(P._init=P.asm.init).apply(null,arguments)},P._init_with_threads_count=function(){return(P._init_with_threads_count=P.asm.init_with_threads_count).apply(null,arguments)},P._get_threads_count=function(){return(P._get_threads_count=P.asm.get_threads_count).apply(null,arguments)},P._register_tensor=function(){return(P._register_tensor=P.asm.register_tensor).apply(null,arguments)},P._dispose_data=function(){return(P._dispose_data=P.asm.dispose_data).apply(null,arguments)},P._dispose=function(){return(P._dispose=P.asm.dispose).apply(null,arguments)},P._Abs=function(){return(P._Abs=P.asm.Abs).apply(null,arguments)},P._Acos=function(){return(P._Acos=P.asm.Acos).apply(null,arguments)},P._Acosh=function(){return(P._Acosh=P.asm.Acosh).apply(null,arguments)},P._Add=function(){return(P._Add=P.asm.Add).apply(null,arguments)},P._AddN=function(){return(P._AddN=P.asm.AddN).apply(null,arguments)},P._All=function(){return(P._All=P.asm.All).apply(null,arguments)},P._Any=function(){return(P._Any=P.asm.Any).apply(null,arguments)},P._ArgMax=function(){return(P._ArgMax=P.asm.ArgMax).apply(null,arguments)},P._ArgMin=function(){return(P._ArgMin=P.asm.ArgMin).apply(null,arguments)},P._Asin=function(){return(P._Asin=P.asm.Asin).apply(null,arguments)},P._Asinh=function(){return(P._Asinh=P.asm.Asinh).apply(null,arguments)},P._Atan=function(){return(P._Atan=P.asm.Atan).apply(null,arguments)},P._Atan2=function(){return(P._Atan2=P.asm.Atan2).apply(null,arguments)},P._Atanh=function(){return(P._Atanh=P.asm.Atanh).apply(null,arguments)},P._AvgPool=function(){return(P._AvgPool=P.asm.AvgPool).apply(null,arguments)},P._AvgPool3D=function(){return(P._AvgPool3D=P.asm.AvgPool3D).apply(null,arguments)},P._AvgPool3DGrad=function(){return(P._AvgPool3DGrad=P.asm.AvgPool3DGrad).apply(null,arguments)},P._AvgPoolGrad=function(){return(P._AvgPoolGrad=P.asm.AvgPoolGrad).apply(null,arguments)},P._BatchMatMul=function(){return(P._BatchMatMul=P.asm.BatchMatMul).apply(null,arguments)},P._Bincount=function(){return(P._Bincount=P.asm.Bincount).apply(null,arguments)},P._BitwiseAnd=function(){return(P._BitwiseAnd=P.asm.BitwiseAnd).apply(null,arguments)},P._Ceil=function(){return(P._Ceil=P.asm.Ceil).apply(null,arguments)},P._ClipByValue=function(){return(P._ClipByValue=P.asm.ClipByValue).apply(null,arguments)},P._Conv2D=function(){return(P._Conv2D=P.asm.Conv2D).apply(null,arguments)},P._Conv2DBackpropInput=function(){return(P._Conv2DBackpropInput=P.asm.Conv2DBackpropInput).apply(null,arguments)},P._Conv3D=function(){return(P._Conv3D=P.asm.Conv3D).apply(null,arguments)},P._Conv3DBackpropFilterV2=function(){return(P._Conv3DBackpropFilterV2=P.asm.Conv3DBackpropFilterV2).apply(null,arguments)},P._Conv3DBackpropInputV2=function(){return(P._Conv3DBackpropInputV2=P.asm.Conv3DBackpropInputV2).apply(null,arguments)},P._Cos=function(){return(P._Cos=P.asm.Cos).apply(null,arguments)},P._Cosh=function(){return(P._Cosh=P.asm.Cosh).apply(null,arguments)},P._CropAndResize=function(){return(P._CropAndResize=P.asm.CropAndResize).apply(null,arguments)},P._Cumprod=function(){return(P._Cumprod=P.asm.Cumprod).apply(null,arguments)},P._Cumsum=function(){return(P._Cumsum=P.asm.Cumsum).apply(null,arguments)},P._DenseBincount=function(){return(P._DenseBincount=P.asm.DenseBincount).apply(null,arguments)},P._DepthToSpace=function(){return(P._DepthToSpace=P.asm.DepthToSpace).apply(null,arguments)},P._DepthwiseConv2dNative=function(){return(P._DepthwiseConv2dNative=P.asm.DepthwiseConv2dNative).apply(null,arguments)},P._Diag=function(){return(P._Diag=P.asm.Diag).apply(null,arguments)},P._Dilation2D=function(){return(P._Dilation2D=P.asm.Dilation2D).apply(null,arguments)},P._Dilation2DBackpropFilter=function(){return(P._Dilation2DBackpropFilter=P.asm.Dilation2DBackpropFilter).apply(null,arguments)},P._Dilation2DBackpropInput=function(){return(P._Dilation2DBackpropInput=P.asm.Dilation2DBackpropInput).apply(null,arguments)},P._Elu=function(){return(P._Elu=P.asm.Elu).apply(null,arguments)},P._EluGrad=function(){return(P._EluGrad=P.asm.EluGrad).apply(null,arguments)},P._Equal=function(){return(P._Equal=P.asm.Equal).apply(null,arguments)},P._Erf=function(){return(P._Erf=P.asm.Erf).apply(null,arguments)},P._Exp=function(){return(P._Exp=P.asm.Exp).apply(null,arguments)},P._Expm1=function(){return(P._Expm1=P.asm.Expm1).apply(null,arguments)},P._FlipLeftRight=function(){return(P._FlipLeftRight=P.asm.FlipLeftRight).apply(null,arguments)},P._Floor=function(){return(P._Floor=P.asm.Floor).apply(null,arguments)},P._FloorDiv=function(){return(P._FloorDiv=P.asm.FloorDiv).apply(null,arguments)},P._FusedBatchNorm=function(){return(P._FusedBatchNorm=P.asm.FusedBatchNorm).apply(null,arguments)},P._FusedConv2D=function(){return(P._FusedConv2D=P.asm.FusedConv2D).apply(null,arguments)},P._FusedDepthwiseConv2D=function(){return(P._FusedDepthwiseConv2D=P.asm.FusedDepthwiseConv2D).apply(null,arguments)},P._Gather=function(){return(P._Gather=P.asm.Gather).apply(null,arguments)},P._GatherNd=function(){return(P._GatherNd=P.asm.GatherNd).apply(null,arguments)},P._Greater=function(){return(P._Greater=P.asm.Greater).apply(null,arguments)},P._GreaterEqual=function(){return(P._GreaterEqual=P.asm.GreaterEqual).apply(null,arguments)},P._IsFinite=function(){return(P._IsFinite=P.asm.IsFinite).apply(null,arguments)},P._IsInf=function(){return(P._IsInf=P.asm.IsInf).apply(null,arguments)},P._IsNan=function(){return(P._IsNan=P.asm.IsNan).apply(null,arguments)},P._LRN=function(){return(P._LRN=P.asm.LRN).apply(null,arguments)},P._LRNGrad=function(){return(P._LRNGrad=P.asm.LRNGrad).apply(null,arguments)},P._LeakyRelu=function(){return(P._LeakyRelu=P.asm.LeakyRelu).apply(null,arguments)},P._Less=function(){return(P._Less=P.asm.Less).apply(null,arguments)},P._LessEqual=function(){return(P._LessEqual=P.asm.LessEqual).apply(null,arguments)},P._LinSpace=function(){return(P._LinSpace=P.asm.LinSpace).apply(null,arguments)},P._Log=function(){return(P._Log=P.asm.Log).apply(null,arguments)},P._Log1p=function(){return(P._Log1p=P.asm.Log1p).apply(null,arguments)},P._LogicalAnd=function(){return(P._LogicalAnd=P.asm.LogicalAnd).apply(null,arguments)},P._LogicalNot=function(){return(P._LogicalNot=P.asm.LogicalNot).apply(null,arguments)},P._LogicalOr=function(){return(P._LogicalOr=P.asm.LogicalOr).apply(null,arguments)},P._LogicalXor=function(){return(P._LogicalXor=P.asm.LogicalXor).apply(null,arguments)},P._Max=function(){return(P._Max=P.asm.Max).apply(null,arguments)},P._MaxPool=function(){return(P._MaxPool=P.asm.MaxPool).apply(null,arguments)},P._MaxPool3D=function(){return(P._MaxPool3D=P.asm.MaxPool3D).apply(null,arguments)},P._MaxPool3DGrad=function(){return(P._MaxPool3DGrad=P.asm.MaxPool3DGrad).apply(null,arguments)},P._MaxPoolGrad=function(){return(P._MaxPoolGrad=P.asm.MaxPoolGrad).apply(null,arguments)},P._MaxPoolWithArgmax=function(){return(P._MaxPoolWithArgmax=P.asm.MaxPoolWithArgmax).apply(null,arguments)},P._Maximum=function(){return(P._Maximum=P.asm.Maximum).apply(null,arguments)},P._Mean=function(){return(P._Mean=P.asm.Mean).apply(null,arguments)},P._Min=function(){return(P._Min=P.asm.Min).apply(null,arguments)},P._Minimum=function(){return(P._Minimum=P.asm.Minimum).apply(null,arguments)},P._MirrorPad=function(){return(P._MirrorPad=P.asm.MirrorPad).apply(null,arguments)},P._Mod=function(){return(P._Mod=P.asm.Mod).apply(null,arguments)},P._Multinomial=function(){return(P._Multinomial=P.asm.Multinomial).apply(null,arguments)},P._Multiply=function(){return(P._Multiply=P.asm.Multiply).apply(null,arguments)},P._Neg=function(){return(P._Neg=P.asm.Neg).apply(null,arguments)},P._NonMaxSuppressionV3=function(){return(P._NonMaxSuppressionV3=P.asm.NonMaxSuppressionV3).apply(null,arguments)},P._NonMaxSuppressionV4=function(){return(P._NonMaxSuppressionV4=P.asm.NonMaxSuppressionV4).apply(null,arguments)},P._NonMaxSuppressionV5=function(){return(P._NonMaxSuppressionV5=P.asm.NonMaxSuppressionV5).apply(null,arguments)},P._NotEqual=function(){return(P._NotEqual=P.asm.NotEqual).apply(null,arguments)},P._OneHot=function(){return(P._OneHot=P.asm.OneHot).apply(null,arguments)},P._PadV2=function(){return(P._PadV2=P.asm.PadV2).apply(null,arguments)},P._Pow=function(){return(P._Pow=P.asm.Pow).apply(null,arguments)},P._Prelu=function(){return(P._Prelu=P.asm.Prelu).apply(null,arguments)},P._Prod=function(){return(P._Prod=P.asm.Prod).apply(null,arguments)},P._RealDiv=function(){return(P._RealDiv=P.asm.RealDiv).apply(null,arguments)},P._Reciprocal=function(){return(P._Reciprocal=P.asm.Reciprocal).apply(null,arguments)},P._Relu=function(){return(P._Relu=P.asm.Relu).apply(null,arguments)},P._Relu6=function(){return(P._Relu6=P.asm.Relu6).apply(null,arguments)},P._ResizeBilinear=function(){return(P._ResizeBilinear=P.asm.ResizeBilinear).apply(null,arguments)},P._ResizeBilinearGrad=function(){return(P._ResizeBilinearGrad=P.asm.ResizeBilinearGrad).apply(null,arguments)},P._ResizeNearestNeighbor=function(){return(P._ResizeNearestNeighbor=P.asm.ResizeNearestNeighbor).apply(null,arguments)},P._ResizeNearestNeighborGrad=function(){return(P._ResizeNearestNeighborGrad=P.asm.ResizeNearestNeighborGrad).apply(null,arguments)},P._Reverse=function(){return(P._Reverse=P.asm.Reverse).apply(null,arguments)},P._RotateWithOffset=function(){return(P._RotateWithOffset=P.asm.RotateWithOffset).apply(null,arguments)},P._Round=function(){return(P._Round=P.asm.Round).apply(null,arguments)},P._Rsqrt=function(){return(P._Rsqrt=P.asm.Rsqrt).apply(null,arguments)},P._ScatterNd=function(){return(P._ScatterNd=P.asm.ScatterNd).apply(null,arguments)},P._SearchSorted=function(){return(P._SearchSorted=P.asm.SearchSorted).apply(null,arguments)},P._SelectV2=function(){return(P._SelectV2=P.asm.SelectV2).apply(null,arguments)},P._Selu=function(){return(P._Selu=P.asm.Selu).apply(null,arguments)},P._Sigmoid=function(){return(P._Sigmoid=P.asm.Sigmoid).apply(null,arguments)},P._Sign=function(){return(P._Sign=P.asm.Sign).apply(null,arguments)},P._Sin=function(){return(P._Sin=P.asm.Sin).apply(null,arguments)},P._Sinh=function(){return(P._Sinh=P.asm.Sinh).apply(null,arguments)},P._Softmax=function(){return(P._Softmax=P.asm.Softmax).apply(null,arguments)},P._Softplus=function(){return(P._Softplus=P.asm.Softplus).apply(null,arguments)},P._SparseFillEmptyRows=function(){return(P._SparseFillEmptyRows=P.asm.SparseFillEmptyRows).apply(null,arguments)},P._SparseReshape=function(){return(P._SparseReshape=P.asm.SparseReshape).apply(null,arguments)},P._SparseSegmentReduction=function(){return(P._SparseSegmentReduction=P.asm.SparseSegmentReduction).apply(null,arguments)},P._SparseToDense=function(){return(P._SparseToDense=P.asm.SparseToDense).apply(null,arguments)},P._Sqrt=function(){return(P._Sqrt=P.asm.Sqrt).apply(null,arguments)},P._Square=function(){return(P._Square=P.asm.Square).apply(null,arguments)},P._SquaredDifference=function(){return(P._SquaredDifference=P.asm.SquaredDifference).apply(null,arguments)},P._Step=function(){return(P._Step=P.asm.Step).apply(null,arguments)},P._StridedSlice=function(){return(P._StridedSlice=P.asm.StridedSlice).apply(null,arguments)},P._Sub=function(){return(P._Sub=P.asm.Sub).apply(null,arguments)},P._Sum=function(){return(P._Sum=P.asm.Sum).apply(null,arguments)},P._Tan=function(){return(P._Tan=P.asm.Tan).apply(null,arguments)},P._Tanh=function(){return(P._Tanh=P.asm.Tanh).apply(null,arguments)},P._TensorScatterUpdate=function(){return(P._TensorScatterUpdate=P.asm.TensorScatterUpdate).apply(null,arguments)},P._Tile=function(){return(P._Tile=P.asm.Tile).apply(null,arguments)},P._TopK=function(){return(P._TopK=P.asm.TopK).apply(null,arguments)},P._Transform=function(){return(P._Transform=P.asm.Transform).apply(null,arguments)},P._Transpose=function(){return(P._Transpose=P.asm.Transpose).apply(null,arguments)},P.__FusedMatMul=function(){return(P.__FusedMatMul=P.asm._FusedMatMul).apply(null,arguments)},P._malloc=function(){return(P._malloc=P.asm.malloc).apply(null,arguments)},P._free=function(){return(P._free=P.asm.free).apply(null,arguments)},P.___errno_location=function(){return(P.___errno_location=P.asm.__errno_location).apply(null,arguments)},P.stackSave=function(){return(e$=P.stackSave=P.asm.stackSave).apply(null,arguments)}),e_=P.stackRestore=function(){return(e_=P.stackRestore=P.asm.stackRestore).apply(null,arguments)},eM=P.stackAlloc=function(){return(eM=P.stackAlloc=P.asm.stackAlloc).apply(null,arguments)};function Bm(e){e=e||L,ek>0||(function(){if(P.preRun)for("function"==typeof P.preRun&&(P.preRun=[P.preRun]);P.preRun.length;){var e;e=P.preRun.shift(),eA.unshift(e)}Ua(eA)}(),ek>0)||(P.setStatus?(P.setStatus("Running..."),setTimeout(function(){setTimeout(function(){P.setStatus("")},1),ae()},1)):ae());function ae(){w||(w=!0,P.calledRun=!0,ed||(Ua(ex),M(P),P.onRuntimeInitialized&&P.onRuntimeInitialized(),function(){if(P.postRun)for("function"==typeof P.postRun&&(P.postRun=[P.postRun]);P.postRun.length;){var e;e=P.postRun.shift(),eb.unshift(e)}Ua(eb)}()))}}if(P.dynCall_iijjiiii=function(){return(P.dynCall_iijjiiii=P.asm.dynCall_iijjiiii).apply(null,arguments)},P.dynCall_jiji=function(){return(P.dynCall_jiji=P.asm.dynCall_jiji).apply(null,arguments)},P.cwrap=function(e,t,u,y){var w=(u=u||[]).every(e=>"number"===e||"boolean"===e);return"string"!==t&&w&&!y?P["_"+e]:function(){return function(e,t,u,y,w){var T,$,M={string:e=>{var t=0;if(null!=e&&0!==e){var u=(e.length<<2)+1;t=eM(u),function(e,t,u,y){if(u>>>=0,y>0){for(var w=u+y-1,T=0;T<e.length;++T){var $=e.charCodeAt(T);if($>=55296&&$<=57343&&($=65536+((1023&$)<<10)|1023&e.charCodeAt(++T)),$<=127){if(u>=w)break;t[u++>>>0]=$}else if($<=2047){if(u+1>=w)break;t[u++>>>0]=192|$>>6,t[u++>>>0]=128|63&$}else if($<=65535){if(u+2>=w)break;t[u++>>>0]=224|$>>12,t[u++>>>0]=128|$>>6&63,t[u++>>>0]=128|63&$}else{if(u+3>=w)break;t[u++>>>0]=240|$>>18,t[u++>>>0]=128|$>>12&63,t[u++>>>0]=128|$>>6&63,t[u++>>>0]=128|63&$}}t[u>>>0]=0}}(e,em,t,u)}return t},array:e=>{var t=eM(e.length);return eh.set(e,t>>>0),t}},O=P["_"+e],z=[],L=0;if(y)for(var W=0;W<y.length;W++){var B=M[u[W]];B?(0===L&&(L=e$()),z[W]=B(y[W])):z[W]=y[W]}var j=O.apply(null,z);return $=j,0!==L&&e_(L),j="string"===t?(T=$>>>0)?U(em,T,void 0):"":"boolean"===t?!!$:$}(e,t,u,arguments,0)}},eC=function K(){w||Bm(),w||(eC=K)},P.preInit)for("function"==typeof P.preInit&&(P.preInit=[P.preInit]);P.preInit.length>0;)P.preInit.pop()();if(Bm(),en&&(T={uncaughtException:ne.listeners("uncaughtException").filter(function(e){return!en.uncaughtException.indexOf(e)>-1}),unhandledRejection:ne.listeners("unhandledRejection").filter(function(e){return!en.unhandledRejection.indexOf(e)>-1})}),void 0!==e)$=e;else if("undefined"!=typeof WasmBackendModuleThreadedSimd)$=WasmBackendModuleThreadedSimd;else throw Error("Could not find wasm module in post.js");if(T){var eF=$._dispose;$._dispose=function(){eF(),T.uncaughtException.forEach(function(e){ne.removeListener("uncaughtException",e)}),T.unhandledRejection.forEach(function(e){ne.removeListener("unhandledRejection",e)})}}return e.ready});"object"==typeof e&&"object"==typeof t?t.exports=w:"function"==typeof define&&u.amdO?define([],function(){return w}):"object"==typeof e&&(e.WasmBackendModule=w)}),nW=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},nB=class{refCount(e){return zr("refCount")}incRef(e){return zr("incRef")}timerAvailable(){return!0}time(e){return zr("time")}read(e){return zr("read")}readSync(e){return zr("readSync")}readToGPU(e,t){return zr("readToGPU")}numDataIds(){return zr("numDataIds")}disposeData(e,t){return zr("disposeData")}write(e,t,u){return zr("write")}move(e,t,u,y,w){return zr("move")}createTensorFromGPUData(e,t,u){return zr("createTensorFromGPUData")}memory(){return zr("memory")}floatPrecision(){return zr("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return zr("dispose")}};function zr(e){throw Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function k0(e){let t=e.length,u=0;for(;t>0;)u=Math.random()*t|0,jm(e,--t,u)}function FG(e,t){if(e.length!==t.length)throw Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let u=e.length,y=0;for(;u>0;)y=Math.random()*u|0,jm(e,--u,y),jm(t,u,y)}function Vp(e,t,u){return Math.max(e,Math.min(t,u))}function PG(e){return e%2==0?e:e+1}function jm(e,t,u){let y=e[t];e[t]=e[u],e[u]=y}function OG(e){let t=0;for(let u=0;u<e.length;u++)t+=e[u];return t}function MG(e,t){let u=Math.random();return t*u+(1-u)*e}function LG(e,t){let u=0;for(let y=0;y<e.length;y++){let w=Number(e[y])-Number(t[y]);u+=w*w}return u}function E(e,t){if(!e)throw Error("string"==typeof t?t:t())}function xt(e,t,u=""){E(br(e,t),()=>u+` Shapes ${e} and ${t} must match`)}function io(e){E(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function ze(e){if(0===e.length)return 1;let t=e[0];for(let u=1;u<e.length;u++)t*=e[u];return t}function BG(e){return 0===e.length}function ZC(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let u=0;u<e.length;u++)if(null!==e[u]&&null!==t[u]&&e[u]!==t[u])return!1;return!0}function br(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let u=0;u<e.length;u++)if(e[u]!==t[u])return!1;return!0}function Ka(e){return e%1==0}function zG(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return -1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function VG(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function WG(e){let t=new Uint32Array(e);for(let u=0;u<e;++u)t[u]=u;return k0(t),t}function _u(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function UG(e,t=e=>0,u,y){return new Promise((w,T)=>{let $=0,i=()=>{if(e()){w();return}let M=t(++$);if(null!=u&&$>=u){T();return}null!=y?y(i,M):setTimeout(i,M)};i()})}function GG(e,t){let u=1,y=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)u*=e[t];else if(-1===e[t]){if(-1!==y)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${y} and dim ${t}`);y=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===y){if(t>0&&t!==u)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===u)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%u!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${u}`);let w=e.slice();return w[y]=t/u,w}function _i(e,t){let u=t.length;return E((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-u&&e<u),()=>`All values in axis param must be in range [-${u}, ${u}) but got axis ${e}`),E(e.every(e=>Ka(e)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(e=>e<0?u+e:e)}function JC(e,t){let u=[],y=[],w=null!=t&&Array.isArray(t)&&0===t.length,T=null==t||w?null:_i(t,e).sort(),$=0;for(let t=0;t<e.length;++t){if(null!=T){if(T[$]===t&&1!==e[t])throw Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==T[$]||T[$]>t)&&1===e[t]&&(u.push(e[t]),y.push(t)),T[$]<=t&&$++}1!==e[t]&&(u.push(e[t]),y.push(t))}return{newShape:u,keptDims:y}}function ew(e,t){return Xm(e,t)}function Xm(e,t){let u=null;if(null==e||"float32"===e)u=new Float32Array(t);else if("int32"===e)u=new Int32Array(t);else if("bool"===e)u=new Uint8Array(t);else if("string"===e)u=Array(t);else throw Error(`Unknown data type ${e}`);return u}function tw(e,t){for(let u=0;u<e.length;u++){let y=e[u];if(isNaN(y)||!isFinite(y))throw Error(`A tensor of type ${t} being uploaded contains ${y}.`)}}function rw(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function HG(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function Wp(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw Error(`Unknown dtype ${e}`)}function ow(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function zo(e){return"string"==typeof e||e instanceof String}function N0(e){return"boolean"==typeof e}function T0(e){return"number"==typeof e}function Ei(e){return Array.isArray(e)?Ei(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":T0(e)?"float32":zo(e)?"string":N0(e)?"bool":"float32"}function qs(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Up(e,t){for(let u=t;u<e;++u)if(e%u==0)return u;return e}function js(e){let t=e.length;if(t<2)return[];let u=Array(t-1);u[t-2]=e[t-1];for(let y=t-3;y>=0;--y)u[y]=u[y+1]*e[y+1];return u}function Tu(e,t,u=!1){if(0===e.length)return t[0];let y=e.reduce((e,t)=>e*t)*(u?2:1);if(0===y)return[];if(y!==t.length)throw Error(`[${e}] does not match the input size ${t.length}${u?" for a complex tensor":""}.`);return function _0(e,t,u,y=!1){let w=[];if(1===t.length){let T=t[0]*(y?2:1);for(let t=0;t<T;t++)w[t]=u[e+t]}else{let T=t[0],$=t.slice(1),M=$.reduce((e,t)=>e*t)*(y?2:1);for(let t=0;t<T;t++)w[t]=_0(e+t*M,$,u,y)}return w}(0,e,t,u)}function KG(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw Error(`Unknown dtype ${t}`)}function ml(e,t){let u=Gp(e,t);for(let e=0;e<u.length;e++)u[e]=1;return u}function Gp(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw Error(`Unknown data type ${t}`)}function qG(e,t){let u=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return Tu(e,new Float32Array(u));if("int32"===t)return Tu(e,new Int32Array(u));if("bool"===t)return Tu(e,new Uint8Array(u));throw Error(`Unknown data type ${t}`)}function Ct(e){e.forEach(t=>{E(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function jG(e,t,u){if(0===t)return 0;if(1===t)return e[0];let y=e[e.length-1];for(let t=0;t<e.length-1;++t)y+=u[t]*e[t];return y}function XG(e,t,u){if(0===t)return[];if(1===t)return[e];let y=Array(t);for(let t=0;t<y.length-1;++t)y[t]=Math.floor(e/u[t]),e-=y[t]*u[t];return y[y.length-1]=e,y}function Eu(e){return e&&e.then&&"function"==typeof e.then}var nV="tfjsflags",nU=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=QG,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(nG.getBool("IS_TEST")||nG.getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,u){if(this.flagRegistry[e]={evaluationFn:t,setHook:u},null!=this.urlFlags[e]){let t=this.urlFlags[e];nG.getBool("IS_TEST")||nG.getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Eu(t))throw Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;let e=this.getQueryParams(this.global.location.search);nV in e&&e[nV].split(",").forEach(e=>{let t,[u,y]=e.split(":");this.urlFlags[u]="true"===(t=y.toLowerCase())||"false"===t?"true"===t:`${+t}`===t?+t:y})}};function QG(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...u)=>{var y,w;return y=u[0],w=u[1],t[decodeURIComponent(y)]=decodeURIComponent(w||""),u.join("=")}),t}function A(){return nG}var nG=null;function aw(){if(null==eu){let e;if("undefined"!=typeof window)e=window;else if(void 0!==u.g)e=u.g;else if(void 0!==ne)e=ne;else if("undefined"!=typeof self)ne=self;else throw Error("Could not find a global object");eu=e}return eu}function fl(e,t){let u;let y=(null==(u=aw())._tfGlobals&&(u._tfGlobals=new Map),u._tfGlobals);if(y.has(e))return y.get(e);{let u=t();return y.set(e,u),y.get(e)}}var nH="Abs",nj="Acos",nq="Acosh",nX="Add",nK="AddN",nZ="All",nY="Any",nJ="ArgMax",nQ="ArgMin",n1="Asin",n2="Asinh",n0="Atan",n5="Atanh",n3="Atan2",n7="AvgPool",n4="AvgPoolGrad",n6="AvgPool3D",n8="AvgPool3DGrad",n9="BatchMatMul",re="BatchToSpaceND",ra="Bincount",rn="BitwiseAnd",rr="BroadcastTo",ri="BroadcastArgs",rs="Cast",ro="Ceil",ru="ClipByValue",rp="Complex",rc="ComplexAbs",rh="Concat",rf="Conv2D",rm="Conv2DBackpropFilter",rg="Conv2DBackpropInput",ry="Conv3D",rA="Conv3DBackpropFilterV2",rx="Conv3DBackpropInputV2",rb="Cos",rk="Cosh",rI="Cumprod",rN="Cumsum",rC="CropAndResize",rE="DenseBincount",rR="DepthToSpace",r$="DepthwiseConv2dNative",r_="DepthwiseConv2dNativeBackpropFilter",rM="DepthwiseConv2dNativeBackpropInput",rF="Diag",rO="Dilation2D",rP="Dilation2DBackpropInput",rD="Dilation2DBackpropFilter",rL="Draw",rW="RealDiv",rB="Einsum",rV="Elu",rU="EluGrad",rG="Erf",rH="Equal",rj="Exp",rq="ExpandDims",rX="Expm1",rK="FFT",rZ="Fill",rY="FlipLeftRight",rJ="Floor",rQ="FloorDiv",r1="FusedBatchNorm",r6="GatherV2",r8="GatherNd",ie="Greater",it="GreaterEqual",ia="Identity",ir="IFFT",is="Imag",iu="IsFinite",ip="IsInf",ic="IsNan",im="LeakyRelu",ig="Less",iy="LessEqual",iA="LinSpace",ix="Log",ib="Log1p",iI="LogicalAnd",iS="LogicalNot",iN="LogicalOr",iC="LogicalXor",iT="LogSoftmax",iE="LowerBound",iR="LRN",i$="LRNGrad",i_="MatrixBandPart",iM="Max",iF="Maximum",iO="MaxPool",iP="MaxPoolGrad",iD="MaxPool3D",iz="MaxPool3DGrad",iL="MaxPoolWithArgmax",iW="Mean",iB="Min",iV="Minimum",iU="MirrorPad",iG="Mod",ij="Multinomial",iq="Multiply",iX="Neg",iK="NotEqual",iZ="NonMaxSuppressionV3",iY="NonMaxSuppressionV4",iJ="NonMaxSuppressionV5",iQ="OnesLike",i1="OneHot",i2="Pack",i0="PadV2",i3="Pool",i7="Pow",i6="Prelu",i8="Prod",i9="RaggedGather",se="RaggedRange",st="RaggedTensorToTensor",sa="Range",sn="Real",si="Reciprocal",ss="Relu",so="Reshape",su="ResizeNearestNeighbor",sp="ResizeNearestNeighborGrad",sc="ResizeBilinear",sf="ResizeBilinearGrad",sg="Relu6",sy="Reverse",sA="Round",sx="Rsqrt",sb="ScatterNd",sw="TensorScatterUpdate",sI="SearchSorted",sN="Select",sC="Selu",sT="Slice",sE="Sin",sR="Sinh",s$="Sign",s_="Sigmoid",sM="Softplus",sF="Sqrt",sO="Sum",sP="SpaceToBatchND",sD="SplitV",sL="Softmax",sW="SparseFillEmptyRows",sB="SparseReshape",sV="SparseSegmentMean",sU="SparseSegmentSum",sG="SparseToDense",sH="SquaredDifference",sj="Square",sq="StaticRegexReplace",sX="StridedSlice",sK="StringNGrams",sZ="StringSplit",sY="StringToHashBucketFast",sJ="Sub",sQ="Tan",s1="Tanh",s2="Tile",s3="TopK",s7="Transform",s4="Transpose",s6="Unique",s8="Unpack",s9="UnsortedSegmentSum",oe="UpperBound",ot="ZerosLike",oa="Step",on="FromPixels",or="RotateWithOffset",os="_FusedMatMul",oo="FusedConv2D",ol="FusedDepthwiseConv2D";function Ia(...e){nG.getBool("IS_TEST")||nG.getBool("PROD")||console.warn(...e)}function t4(...e){nG.getBool("IS_TEST")||nG.getBool("PROD")||console.log(...e)}var ou=fl("kernelRegistry",()=>new Map),op=fl("gradRegistry",()=>new Map);function Xp(e,t){let u=uw(e,t);return ou.get(u)}function iw(e){return op.get(e)}function Ym(e){let t=ou.entries(),u=[];for(;;){let{done:y,value:w}=t.next();if(y)break;let[T,$]=w,[M]=T.split("_");M===e&&u.push($)}return u}function ti(e){let{kernelName:t,backendName:u}=e,y=uw(t,u);ou.has(y)&&Ia(`The kernel '${t}' for backend '${u}' is already registered`),ou.set(y,e)}function ole(e){let{kernelName:t}=e;op.has(t)&&nG.getBool("DEBUG")&&Ia(`Overriding the gradient for '${t}'`),op.set(t,e)}function nle(e,t){let u=uw(e,t);if(!ou.has(u))throw Error(`The kernel '${e}' for backend '${t}' is not registered`);ou.delete(u)}function sle(e){if(!op.has(e))throw Error(`The gradient '${e}' for backend is not registered`);op.delete(e)}function ale(e,t){Ym(e).forEach(e=>{ti(Object.assign({},e,{backendName:t}))})}function uw(e,t){return`${t}_${e}`}var oc={};function Qm(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}qe(oc,{arraysEqual:()=>br,arraysEqualWithNull:()=>ZC,assert:()=>E,assertNonNegativeIntegerDimensions:()=>Ct,assertNonNull:()=>io,assertShapesMatch:()=>xt,bytesFromStringArray:()=>ow,bytesPerElement:()=>Wp,checkConversionForErrors:()=>tw,clamp:()=>Vp,computeStrides:()=>js,convertBackendValuesAndArrayBuffer:()=>KG,createScalarValue:()=>u4,createShuffledIndices:()=>WG,decodeString:()=>Jp,distSquared:()=>LG,encodeString:()=>Ji,fetch:()=>c4,fingerPrint64:()=>i4,flatten:()=>Fs,getArrayFromDType:()=>Xm,getTypedArrayFromDType:()=>ew,hasEncodingLoss:()=>HG,hexToLong:()=>gl,indexToLoc:()=>XG,inferDtype:()=>Ei,inferFromImplicitShape:()=>GG,isBoolean:()=>N0,isFunction:()=>qs,isInt:()=>Ka,isNumber:()=>T0,isPromise:()=>Eu,isScalarShape:()=>BG,isString:()=>zo,isTypedArray:()=>Pt,isValidDtype:()=>rw,locToIndex:()=>jG,makeOnesTypedArray:()=>ml,makeZerosNestedTypedArray:()=>qG,makeZerosTypedArray:()=>Gp,nearestDivisor:()=>Up,nearestLargerEven:()=>PG,now:()=>Mu,parseAxisParam:()=>_i,randUniform:()=>MG,repeatedTry:()=>UG,rightPad:()=>_u,shuffle:()=>k0,shuffleCombo:()=>FG,sizeFromShape:()=>ze,sizeToSquarishShape:()=>VG,squeezeShape:()=>JC,sum:()=>OG,swap:()=>jm,tanh:()=>zG,toNestedArray:()=>Tu,toTypedArray:()=>Zp});var oh=zp(nm()),om=oh.default||oh;function gl(e){return om.fromString(e,!0,16)}var og=gl("c3a5c85c97cb3127"),oy=gl("b492b66fbe98f273"),oA=gl("9ae16a3b2f90404f");function lw(e){return e.xor(e.shru(47))}function K0(e,t,u){let y=e.slice(t,t+u);return om.fromBytes(Array.from(y),!0,!0)}function wt(e,t){return K0(e,t,8)}function Yt(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Zi(e,t,u=gl("9ddfea08eb382d69")){let y=e.xor(t).mul(u);y=y.xor(y.shru(47));let w=t.xor(y).mul(u);return(w=w.xor(w.shru(47))).mul(u)}function Jm(e,t,u,y){var w,T,$,M,O,P;let z;return w=wt(e,t),T=wt(e,t+8),$=wt(e,t+16),M=wt(e,t+24),O=u,P=y,O=O.add(w),P=Yt(P.add(O).add(M),21),z=O,O=(O=O.add(T)).add($),P=P.add(Yt(O,44)),[O.add(M),P.add(z)]}function i4(e,t=e.length){let u=om.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){let u=oA.add(2*t),y=wt(e,0).add(oA),w=wt(e,t-8);return Zi(Yt(w,37).mul(u).add(y),Yt(y,25).add(w).mul(u),u)}if(t>=4){let u=oA.add(2*t);return Zi(K0(e,0,4).shl(3).add(t),K0(e,t-4,4),u)}if(t>0){let u=e[0],y=e[t>>1],w=e[t-1],T=t+(w<<2);return lw(oA.mul(u+(y<<8)).xor(og.mul(T))).mul(oA)}return oA}(e,t):function(e,t=e.length){let u=oA.add(2*t),y=wt(e,0).mul(oy),w=wt(e,8),T=wt(e,t-8).mul(u),$=wt(e,t-16).mul(oA);return Zi(Yt(y.add(w),43).add(Yt(T,30)).add($),y.add(Yt(w.add(oA),18)).add(T),u)}(e,t);if(t<=64)return function(e,t=e.length){let u=oA.add(2*t),y=wt(e,0).mul(oA),w=wt(e,8),T=wt(e,t-8).mul(u),$=wt(e,t-16).mul(oA),M=Yt(y.add(w),43).add(Yt(T,30)).add($),O=Zi(M,y.add(Yt(w.add(oA),18)).add(T),u),P=wt(e,16).mul(u),z=wt(e,24),L=M.add(wt(e,t-32)).mul(u),W=O.add(wt(e,t-24)).mul(u);return Zi(Yt(P.add(z),43).add(Yt(L,30)).add(W),P.add(Yt(z.add(y),18)).add(L),u)}(e,t);let y=u,w=u.mul(oy).add(113),T=lw(w.mul(oA).add(113)).mul(oA),$=[om.UZERO,om.UZERO],M=[om.UZERO,om.UZERO];y=y.mul(oA).add(wt(e,0));let O=0,P=(t-1>>6)*64,z=P+(t-1&63)-63;do y=Yt(y.add(w).add($[0]).add(wt(e,O+8)),37).mul(oy),w=Yt(w.add($[1]).add(wt(e,O+48)),42).mul(oy),y=y.xor(M[1]),w=w.add($[0]).add(wt(e,O+40)),T=Yt(T.add(M[0]),33).mul(oy),$=Jm(e,O,$[1].mul(oy),y.add(M[0])),M=Jm(e,O+32,T.add(M[1]),w.add(wt(e,O+16))),[T,y]=[y,T],O+=64;while(O!==P);let L=oy.add(T.and(255).shl(1));return O=z,M[0]=M[0].add(t-1&63),$[0]=$[0].add(M[0]),M[0]=M[0].add($[0]),y=Yt(y.add(w).add($[0]).add(wt(e,O+8)),37).mul(L),w=Yt(w.add($[1]).add(wt(e,O+48)),42).mul(L),y=y.xor(M[1].mul(9)),w=w.add($[0].mul(9).add(wt(e,O+40))),T=Yt(T.add(M[0]),33).mul(L),$=Jm(e,O,$[1].mul(L),y.add(M[0])),M=Jm(e,O+32,T.add(M[1]),w.add(wt(e,O+16))),[T,y]=[y,T],Zi(Zi($[0],M[0],L).add(lw(w).mul(og)).add(T),Zi($[1],M[1],L).add(y),L)}function u4(e,t){return"string"===t?Ji(e):Zp([e],t)}function Zp(e,t){var u;if("string"===t)throw Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Fs(e)),nG.getBool("DEBUG")&&tw(e,t),(u=e)instanceof Float32Array&&"float32"===t||u instanceof Int32Array&&"int32"===t||u instanceof Uint8Array&&"bool"===t)return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let t=new Uint8Array(e.length);for(let u=0;u<t.length;++u)0!==Math.round(e[u])&&(t[u]=1);return t}throw Error(`Unknown data type ${t}`)}function Mu(){return nG.platform.now()}function c4(e,t){return nG.platform.fetch(e,t)}function Ji(e,t="utf-8"){return t=t||"utf-8",nG.platform.encode(e,t)}function Jp(e,t="utf-8"){return t=t||"utf-8",nG.platform.decode(e,t)}function Pt(e){return null!=nG.platform.isTypedArray?nG.platform.isTypedArray(e):Qm(e)}function Fs(e,t=[],u=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||Eu(e)||null==e||Pt(e)&&u)t.push(e);else if(Array.isArray(e)||Pt(e))for(let y=0;y<e.length;++y)Fs(e[y],t,u);else{let y=-1;for(let t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(y=Math.max(y,Number(t)));for(let w=0;w<=y;w++)Fs(e[w],t,u)}return t}var ox=class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new ob)}profileKernel(e,t,u){let y,s=()=>{y=u()},w,T=Mu();if(this.backendTimer.timerAvailable())w=this.backendTimer.time(s);else{for(let e of(s(),y))e.dataSync();w=Promise.resolve({kernelMs:Mu()-T})}if(nG.getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<y.length;t++){let u=y[t];u.data().then(t=>{!function(e,t,u){if("float32"===t)for(let t=0;t<e.length;t++){let y=e[t];if(isNaN(y)||!isFinite(y))return console.warn(`Found ${y} in the result of '${u}'`),!0}}(t,u.dtype,e)})}return{kernelName:e,outputs:y,inputs:t,timeMs:w.then(e=>e.kernelMs),extraInfo:w.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:u,timeMs:y,inputs:w,extraInfo:T}=e;u.forEach(e=>{Promise.all([e.data(),y,T]).then(u=>{this.logger.logKernelProfile(t,e,u[0],u[1],w,u[2])})})}},ob=class{logKernelProfile(e,t,u,y,w,T){let $="number"==typeof y?_u(`${y}ms`,9):y.error,M=_u(e,25),O=t.rank,P=t.size,z=_u(t.shape.toString(),14),L="";for(let e in w){let u=w[e];if(null!=u){let y=u.shape||t.shape,w=y.length;L+=`${e}: ${w}D ${w>0?y:""} `}}console.log(`%c${M}	%c${$}	%c${O}D ${z}	%c${P}	%c${L}	%c${T}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function yl(e,t,u){return _u(Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:zo(e)?`'${e}'`:"bool"===u?Q0(e):parseFloat(e.toFixed(7)).toString(),t)}function Q0(e){return 0===e?"false":"true"}function bl(e){let t=[];for(let u=0;u<e.length;u+=2)t.push([e[u],e[u+1]]);return t}var oI=class{constructor(e,t,u){if(this.dtype=t,this.shape=e.slice(),this.size=ze(e),null!=u){let e=u.length;E(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=u||Xm(t,this.size),this.strides=js(e)}set(e,...t){0===t.length&&(t=[0]),E(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let u=this.locToIndex(t);this.values[u]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(let u of e){if(u<0||u>=this.shape[t])throw Error(`Requested out of range element at ${e}.   Buffer shape=${this.shape}`);t++}let u=e[e.length-1];for(let t=0;t<e.length-1;++t)u+=this.strides[t]*e[t];return this.values[u]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let u=0;u<e.length-1;++u)t+=this.strides[u]*e[u];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=Array(this.shape.length);for(let u=0;u<t.length-1;++u)t[u]=Math.floor(e/this.strides[u]),e-=t[u]*this.strides[u];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return oS().makeTensor(this.values,this.shape,this.dtype)}},oS=null,oN=null,oC=class{constructor(e,t,u,y){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ze(e),this.strides=js(e),this.dataId=u,this.id=y,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return oN.buffer(this.shape,this.dtype,e)}bufferSync(){return oN.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Tu(this.shape,e,"complex64"===this.dtype)}arraySync(){return Tu(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();let e=oS().read(this.dataId);if("string"===this.dtype){let t=await e;try{return t.map(e=>Jp(e))}catch(e){throw Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),oS().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=oS().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>Jp(e))}catch(e){throw Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await oS().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),oS().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw Error("Tensor is disposed.")}print(e=!1){return oN.print(this,e)}clone(){return this.throwIfDisposed(),oN.clone(this)}toString(e=!1){var t,u,y;let w,T,$,M,O;return t=this.dataSync(),u=this.shape,y=this.dtype,w=js(u),T=function(e,t,u,y){let w=ze(t),T=y[y.length-1],$=Array(T).fill(0),M=t.length,O="complex64"===u?bl(e):e;if(M>1)for(let e=0;e<w/T;e++){let t=e*T;for(let e=0;e<T;e++)$[e]=Math.max($[e],yl(O[t+e],0,u).length)}return $}(t,u,y,w),$=u.length,M=function td(e,t,u,y,w,T=!0){let $="complex64"===u?2:1,M=t[0],O=t.length;if(0===O)return"complex64"===u?[yl(bl(e)[0],0,u)]:"bool"===u?[Q0(e[0])]:[e[0].toString()];if(1===O){if(M>20){let t=3*$,y=Array.from(e.slice(0,t)),T=Array.from(e.slice((M-3)*$,M*$));return"complex64"===u&&(y=bl(y),T=bl(T)),["["+y.map((e,t)=>yl(e,w[t],u)).join(", ")+", ..., "+T.map((e,t)=>yl(e,w[M-3+t],u)).join(", ")+"]"]}return["["+("complex64"===u?bl(e):Array.from(e)).map((e,t)=>yl(e,w[t],u)).join(", ")+"]"]}let P=t.slice(1),z=y.slice(1),L=y[0]*$,W=[];if(M>20){for(let t=0;t<3;t++){let y=t*L,T=y+L;W.push(...td(e.slice(y,T),P,u,z,w,!1))}W.push("...");for(let t=M-3;t<M;t++){let y=t*L,T=y+L;W.push(...td(e.slice(y,T),P,u,z,w,t===M-1))}}else for(let t=0;t<M;t++){let y=t*L,T=y+L;W.push(...td(e.slice(y,T),P,u,z,w,t===M-1))}let B=2===O?",":"";W[0]="["+(M>0?W[0]+B:"");for(let e=1;e<W.length-1;e++)W[e]=" "+W[e]+B;let j=`,
`;for(let e=2;e<O;e++)j+=`
`;return W[W.length-1]=" "+W[W.length-1]+"]"+(T?"":j),W}(t,u,y,w,T),O=["Tensor"],e&&(O.push(`  dtype: ${y}`),O.push(`  rank: ${$}`),O.push(`  shape: [${u}]`),O.push("  values:")),O.push(M.map(e=>"    "+e).join(`
`)),O.join(`
`)}cast(e){return this.throwIfDisposed(),oN.cast(this,e)}variable(e=!0,t,u){return this.throwIfDisposed(),oS().makeVariable(this,e,t,u)}};function hw(){return fl("Tensor",()=>oC)}Object.defineProperty(oC,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),hw();var oE=class extends oC{constructor(e,t,u,y){super(e.shape,e.dtype,e.dataId,y),this.trainable=t,this.name=u}assign(e){if(e.dtype!==this.dtype)throw Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!br(e.shape,this.shape))throw Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);oS().disposeTensor(this),this.dataId=e.dataId,oS().incRef(this,null)}dispose(){oS().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(oE,Symbol.hasInstance,{value:e=>e instanceof oC&&null!=e.assign&&e.assign instanceof Function});var oR={};qe(oR,{assertTypesMatch:()=>ww,getTensorsInContainer:()=>Cl,isTensorInList:()=>h4,makeTypesMatch:()=>Oe}),(y=ed||(ed={})).R0="R0",y.R1="R1",y.R2="R2",y.R3="R3",y.R4="R4",y.R5="R5",y.R6="R6",(w=ep||(ep={})).float32="float32",w.int32="int32",w.bool="int32",w.complex64="complex64",(T=ec||(ec={})).float32="float32",T.int32="int32",T.bool="bool",T.complex64="complex64",($=eh||(eh={})).float32="float32",$.int32="float32",$.bool="float32",$.complex64="complex64",(M=em||(em={})).float32="complex64",M.int32="complex64",M.bool="complex64",M.complex64="complex64";var o$={float32:eh,int32:ep,bool:ec,complex64:em};function dt(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw Error(`Can not upcast ${e} with ${t}`)}return o$[e][t]}function oi(e){return dt(e,"int32")}function rd(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function od(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function Oe(e,t){if(e.dtype===t.dtype)return[e,t];let u=dt(e.dtype,t.dtype);return[e.cast(u),t.cast(u)]}function ww(e,t){E(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function h4(e,t){return t.some(t=>t.id===e.id)}function Cl(e){let t=[];return function tk(e,t,u){if(null!=e){if(e instanceof oC){t.push(e);return}if(Array.isArray(e)||"object"==typeof e)for(let y in e){let w=e[y];u.has(w)||(u.add(w),tk(w,t,u))}}}(e,t,new Set),t}function Sw(e){return null!=e.kernelName}var o_=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},oM=class r{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new o_}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let u=e[t];if(await this.initializeBackend(u).success){await this.setBackend(u);return}}throw Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,u=1){return e in this.registryFactory?(Ia(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:u},!0)}async setBackend(e){if(null==this.registryFactory[e])throw Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;let{success:t,asyncInit:u}=this.initializeBackend(e);if(!(u?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new ox(this.backendInstance),!0}setupRegisteredKernels(){Ym(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Ym(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw Error(`Cannot initialize backend ${e}, no registration found.`);try{let u=t.factory();if(!u||u instanceof nB||"function"!=typeof u.then)return this.registry[e]=u,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,y=u.then(u=>!(t<this.pendingBackendInitId)&&(this.registry[e]=u,this.pendingBackendInit=null,!0)).catch(u=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,Ia(`Initialization of backend ${e} failed`),Ia(u.stack||u.message)),!1));return this.pendingBackendInit=y,{success:y,asyncInit:!0}}}catch(t){return Ia(`Initialization of backend ${e} failed`),Ia(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let u=e[t],{success:y,asyncInit:w}=this.initializeBackend(u);if(w||y)return{name:u,asyncInit:w}}throw Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let u=this.state.tensorInfo.get(t),y=u.backend,w=this.readSync(t),T=y.refCount(t);y.disposeData(t,!0),u.backend=e,e.move(t,w,u.shape,u.dtype,T),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let u,y=null;if(null==t){if("function"!=typeof e)throw Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw Error("When calling with two arguments, the 2nd argument to tidy() must be a function");y=e}return this.scopedRun(()=>this.startScope(y),()=>this.endScope(u),()=>((u=t())instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),u))}scopedRun(e,t,u){e();try{let e=u();return t(),e}catch(e){throw t(),e}}nextTensorId(){return r.nextTensorId++}nextVariableId(){return r.nextVariableId++}clone(e){let t=oF.runKernel(ia,{x:e});return this.addTapeNode(this.state.activeScope.name,{x:e},[t],e=>({x:()=>oF.runKernel(rs,{x:e},{dtype:"float32"})}),[],{}),t}runKernel(e,t,u){if(null==this.backendName&&this.backend,!(null!=Xp(e,this.backendName)))throw Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:u})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,u){let y=this.backend.numDataIds(),w=0;u.forEach(e=>{w+="complex64"===e.dtype?3:1});let T=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],$=y-t-w-T;if($>0)throw Error(`Backend '${this.backendName}' has an internal memory leak (${$} data ids) after running '${e}'`)}runKernelFunc(e){let t,u,y=[],w=this.isTapeOn(),T=this.state.numBytes,$=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;let M,O=Sw(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Sw(e)){let{kernelName:u,inputs:T,attrs:$}=e;null==this.backendName&&this.backend;let O=Xp(u,this.backendName);E(null!=O,()=>`Cannot find registered kernel '${u}' for backend '${this.backendName}'`),t=()=>{let e=this.backend.numDataIds(),t=Array.isArray(M=O.kernelFunc({inputs:T,attrs:$,backend:this.backend}))?M:[M];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,t);let P=t.map(e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e));if(w){let e=this.getTensorsForGradient(u,T,P);y=this.saveTensorsForBackwardMode(e)}return P}}else{let{forwardFunc:u}=e,h=e=>{w&&(y=e.map(e=>this.keep(this.clone(e))))};t=()=>{let e=this.backend.numDataIds(),t=Array.isArray(M=this.tidy(()=>u(this.backend,h)))?M:[M];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(O,e,t),t}}let{inputs:P,attrs:z}=e,L=Sw(e)?null:e.backwardsFunc,W;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(W=this.profiler.profileKernel(O,P,()=>t()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(W),u=W.outputs):u=t()}),w&&this.addTapeNode(O,P,u,L,y,z),this.state.profiling&&this.state.activeProfile.kernels.push({name:O,bytesAdded:this.state.numBytes-T,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-$,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(P).map(e=>null!=P[e]?P[e].shape:null),outputShapes:u.map(e=>e.shape),kernelTimeMs:W.timeMs,extraInfo:W.extraInfo}),Array.isArray(M)?u:u[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,u){let y=iw(e);if(null!=y){let e=y.inputsToSave||[],w=y.outputsToSave||[],T;y.saveAllInputs?(E(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),T=Object.keys(t).map(e=>t[e])):T=e.map(e=>t[e]);let $=u.filter((e,t)=>w[t]);return T.concat($)}return[]}makeTensor(e,t,u,y){if(null==e)throw Error("Values passed to engine.makeTensor() are null");u=u||"float32",y=y||this.backend;let w=e;"string"===u&&zo(e[0])&&(w=e.map(e=>Ji(e)));let T=y.write(w,t,u),$=new oC(t,u,T,this.nextTensorId());if(this.trackTensor($,y),"string"===u){let e=this.state.tensorInfo.get(T),t=ow(w);this.state.numBytes+=t-e.bytes,e.bytes=t}return $}makeTensorFromDataId(e,t,u,y){let w={dataId:e,shape:t,dtype:u=u||"float32"};return this.makeTensorFromTensorInfo(w,y)}makeTensorFromTensorInfo(e,t){let{dataId:u,shape:y,dtype:w}=e,T=new oC(y,w,u,this.nextTensorId());return this.trackTensor(T,t),T}makeVariable(e,t=!0,u,y){u=u||this.nextVariableId().toString(),null!=y&&y!==e.dtype&&(e=e.cast(y));let w=new oE(e,t,u,this.nextTensorId());if(null!=this.state.registeredVariables[w.name])throw Error(`Variable with name ${w.name} was already registered`);return this.state.registeredVariables[w.name]=w,this.incRef(w,this.backend),w}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let u=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(u=e.size*Wp(e.dtype)),this.state.numBytes+=u,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:u})),e instanceof oE||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){let t=e.size*Wp(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,u=this.state.numTensors;for(let y of(this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-u,this.state.activeProfile.kernels))y.kernelTimeMs=await y.kernelTimeMs,y.extraInfo=await y.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,u,y,w,T){let $={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:u,saved:w},M=iw(e);null!=M&&(y=M.gradFunc),null!=y&&($.gradient=e=>(e=e.map((e,t)=>{if(null==e){let e=u[t],y=Gp(e.size,e.dtype);return this.makeTensor(y,e.shape,e.dtype)}return e}),y(e.length>1?e:e[0],w,T))),this.state.activeTape.push($)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=Cl(e),u=new Set(t.map(e=>e.id));for(let e=0;e<this.state.activeScope.track.length;e++){let t=this.state.activeScope.track[e];t.kept||u.has(t.id)||t.dispose()}let y=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==y.id||this.track(e)})}gradients(e,t,u,y=!1){if(E(t.length>0,()=>"gradients() received an empty list of xs."),null!=u&&"float32"!==u.dtype)throw Error(`dy must have 'float32' dtype, but has '${u.dtype}'`);let w=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));E(w instanceof oC,()=>"The result y returned by f() must be a tensor.");let T=function(e,t,u){let y={},w={};for(let e=0;e<t.length;e++)y[t[e].id]=!0;for(let u=0;u<e.length;u++){let T=e[u],$=T.inputs;for(let e in $){let u=$[e],M=!1;for(let e=0;e<t.length;e++)if(y[u.id]){T.outputs.forEach(e=>y[e.id]=!0),M=!0,w[T.id]=!0;break}if(M)break}}let T={};T[u.id]=!0;let $={};for(let t=e.length-1;t>=0;t--){let u=e[t],y=u.inputs;for(let e=0;e<u.outputs.length;e++)if(T[u.outputs[e].id]){for(let e in y)T[y[e].id]=!0,$[u.id]=!0;break}}let M=[];for(let t=0;t<e.length;t++){let u=e[t];if(w[u.id]&&$[u.id]){let e={};for(let t in u.inputs){let w=u.inputs[t];y[w.id]&&(e[t]=w)}let t=Object.assign({},u);t.inputs=e,t.outputs=u.outputs,M.push(t)}}return M}(this.state.activeTape,t,w);if(!y&&0===T.length&&t.length>0)throw Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{var e;let y,$={};$[w.id]=null==u?(y=ml(ze(e=w.shape),"float32"),oF.makeTensor(y,e,"float32")):u,function(e,t,u,y){for(let w=t.length-1;w>=0;w--){let T=t[w],$=[];if(T.outputs.forEach(t=>{let u=e[t.id];null!=u?$.push(u):$.push(null)}),null==T.gradient)throw Error(`Cannot compute gradient: gradient function not found for ${T.kernelName}.`);let M=T.gradient($);for(let t in T.inputs){if(!(t in M))throw Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(M)}.`);let w=u(()=>M[t]());if("float32"!==w.dtype)throw Error(`Error in gradient for op ${T.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${w.dtype}'`);let $=T.inputs[t];if(!br(w.shape,$.shape))throw Error(`Error in gradient for op ${T.kernelName}. The gradient of input '${t}' has shape '${w.shape}', which does not match the shape of the input '${$.shape}'`);if(null==e[$.id])e[$.id]=w;else{let t=e[$.id];e[$.id]=y(t,w),t.dispose()}}}}($,T,e=>this.tidy(e),y4);let M=t.map(e=>$[e.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(let t of e.saved)t.dispose()}),this.state.activeTape=null),{value:w,grads:M}})}customGrad(e){return E(qs(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{E(t.every(e=>e instanceof oC),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let u,y={};return t.forEach((e,t)=>{y[t]=e}),this.runKernelFunc({forwardFunc:(y,w)=>(E((u=e(...t,w)).value instanceof oC,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),E(qs(u.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),u.value),backwardsFunc:(e,y)=>{let w=u.gradFunc(e,y),T=Array.isArray(w)?w:[w];E(T.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),E(T.every(e=>e instanceof oC),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let $={};return T.forEach((e,t)=>{$[t]=()=>e}),$},inputs:y})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=Mu(),u=await this.backend.time(e);return u.wallMs=Mu()-t,u}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){for(let e in this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new o_,this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};function Iw(){let e=aw();if(null==e._tfengine){let t=new nU(e);e._tfengine=new oM(t)}return nG=e._tfengine.ENV,oS=()=>e._tfengine,e._tfengine}oM.nextTensorId=0,oM.nextVariableId=0;var oF=Iw();function y4(e,t){return oF.runKernel(nX,{a:e,b:t})}var oO={};function C4(e){ey=e}function w4(e){if(void 0!==ey)return ey;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;let t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){let t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function kw(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}qe(oO,{isBrowser:()=>kw,isMobile:()=>w4,mockIsMobile:()=>C4});var oP=nG;function sr(e,t){let u=e;if(Pt(e))return"string"===t?[]:[e.length];if(rd(e)){let t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(od(e))return[e.buffer.size/(null==t?4:Wp(t))];if(!Array.isArray(e))return[];let y=[];for(;Array.isArray(u)||Pt(u)&&"string"!==t;)y.push(u.length),u=u[0];return Array.isArray(e)&&nG.getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function nk(e,t,u){if(u=u||[],!Array.isArray(e)&&!Pt(e)){E(0===t.length,()=>`Element arr[${u.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}E(t.length>0,()=>`Element arr[${u.join("][")}] should be a primitive, but is an array of ${e.length} elements`),E(e.length===t[0],()=>`Element arr[${u.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let y=t.slice(1);for(let t=0;t<e.length;++t)nk(e[t],y,u.concat(t))}(e,y,[]),y}function ok(e,t,u,y){if("string_or_numeric"!==e){if(null==e)throw Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw Error(`Argument '${u}' passed to '${y}' must be ${e} tensor, but got ${t} tensor`)}}function v(e,t,u,y="numeric"){if(e instanceof hw())return ok(y,e.dtype,t,u),e;let w=Ei(e);if("string"!==w&&["bool","int32","float32"].indexOf(y)>=0&&(w=y),ok(y,w,t,u),null==e||!Pt(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){let y=null==e?"null":e.constructor.name;throw Error(`Argument '${t}' passed to '${u}' must be a Tensor or TensorLike, but got '${y}'`)}let T=sr(e,w);Pt(e)||Array.isArray(e)||(e=[e]);let $="string"!==w?Zp(e,w):Fs(e,[],!0);return oF.makeTensor($,T,w)}function ni(e,t,u,y="numeric"){if(!Array.isArray(e))throw Error(`Argument ${t} passed to ${u} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,w)=>v(e,`${t}[${w}]`,u,y))}oP.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),oP.registerFlag("IS_BROWSER",()=>kw()),oP.registerFlag("IS_NODE",()=>void 0!==ne&&void 0!==ne.versions&&void 0!==ne.versions.node),oP.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),oP.registerFlag("IS_SAFARI",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),oP.registerFlag("PROD",()=>!1),oP.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>oP.getBool("DEBUG")),oP.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),oP.registerFlag("IS_TEST",()=>!1),oP.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>oP.getBool("DEBUG")),oP.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),oP.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),oP.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);var oD="__op";function N(e){let t=Object.keys(e);if(1!==t.length)throw Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let u=t[0],y=e[u];u.endsWith("_")&&(u=u.substring(0,u.length-1));let n=(...e)=>{oF.startScope(u);try{let t=y(...e);return Eu(t)&&console.error("Cannot return a Promise inside of tidy."),oF.endScope(t),t}catch(e){throw oF.endScope(null),e}};return Object.defineProperty(n,"name",{value:u+=oD,configurable:!0}),n}var oL=N({complex_:function(e,t){let u=v(e,"real","complex"),y=v(t,"imag","complex");return xt(u.shape,y.shape,`real and imag shapes, ${u.shape} and ${y.shape}, must match in call to tf.complex().`),oF.runKernel(rp,{real:u,imag:y})}});function wr(e,t,u,y){if(null==y)y=Ei(e);else if("complex64"===y)throw Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(od(e)||rd(e)){if("float32"!==y&&"int32"!==y)throw Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${y}.`);return oF.backend.createTensorFromGPUData(e,t||u,y)}if(!Pt(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Ct(t);let e=ze(t),y=ze(u);E(e===y,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${y}`);for(let e=0;e<u.length;++e){let y=u[e],w=e!==u.length-1||y!==ze(t.slice(e));E(u[e]===t[e]||!w,()=>`Error creating a new Tensor. Inferred shape (${u}) does not match the provided shape (${t}). `)}}return Pt(e)||Array.isArray(e)||(e=[e]),t=t||u,e="string"!==y?Zp(e,y):Fs(e,[],!0),oF.makeTensor(e,t,y)}function ar(e,t,u){let y=sr(e,u);return wr(e,t,y,u)}var oW={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},oB=class r2{static join(e){return new r2(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e||(e instanceof Array||(e=[e]),0===(e=e.map(e=>Pt(e)?e.buffer:e)).length))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let u=0;u<e.length;u++){let y=e[u];u!==e.length-1&&y.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let w=t+y.byteLength;this.shards.push({buffer:y,start:t,end:w}),t=w}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length||(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e))return new ArrayBuffer(0);let u=this.findShardForByte(e);if(-1===u)throw Error(`Could not find start shard for byte ${e}`);let y=t-e,w=new ArrayBuffer(y),T=new Uint8Array(w),$=0;for(let y=u;y<this.shards.length;y++){let u=this.shards[y],w=e+$-u.start,M=$,O=Math.min(t,u.end)-u.start,P=new Uint8Array(u.buffer,w,O-w);if(T.set(P,M),$+=P.length,t<u.end)break}return w}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return -1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t10(t){return e<t.start?-1:e>=t.end?1:0}if(0===t10(this.shards[this.previousShardIndex]))return this.previousShardIndex;let t=function(e,t){let u=0,y=e.length;for(;u<=y;){let w=Math.floor((y-u)/2)+u,T=t(e[w]);if(0===T)return w;T<0?y=w:u=w+1}return -1}(this.shards,t10);return -1===t?-1:(this.previousShardIndex=t,this.previousShardIndex)}};function hme(){nG.set("PROD",!0)}function gme(){nG.set("DEBUG",!0)}function xme(){nG.set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Tw(e){nG.getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function yme(){oF.disposeVariables()}function ur(){return oF}function bme(){return oF.memory()}function Cme(e){return oF.profile(e)}function De(e,t){return oF.tidy(e,t)}function Ot(e){Cl(e).forEach(e=>e.dispose())}function $r(e){return oF.keep(e)}function wme(e){return oF.time(e)}function Sme(e){return oF.setBackend(e)}function Ime(){return oF.ready()}function sk(){return oF.backendName}function vme(e){oF.removeBackend(e)}function kme(e){return oF.findBackend(e)}function Nme(e){return oF.findBackendFactory(e)}function tu(e,t,u=1){return oF.registerBackend(e,t,u)}function ak(){return oF.backend}function Tme(e,t){nG.setPlatform(e,t)}async function pk(e,t){let u=[],y=[],w=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let T=0;T<w.length;++T){let $=w[T],M=Array.isArray(e)?e[T].tensor:e[$];if("float32"!==M.dtype&&"int32"!==M.dtype&&"bool"!==M.dtype&&"string"!==M.dtype&&"complex64"!==M.dtype)throw Error(`Unsupported dtype in weight '${$}': ${M.dtype}`);let O={name:$,shape:M.shape,dtype:M.dtype};if("string"===M.dtype){let e=new Promise(async e=>{let t=await M.bytes(),u=t.reduce((e,t)=>e+t.length,0)+4*t.length,y=new Uint8Array(u),w=0;for(let e=0;e<t.length;e++){let u=t[e],T=new Uint8Array(new Uint32Array([u.length]).buffer);y.set(T,w),w+=4,y.set(u,w),w+=u.length}e(y)});y.push(e)}else y.push(M.data());null!=t&&(O.group=t),u.push(O)}return{data:function(e){if(null===e)throw Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,u=[];e.forEach(e=>{if(t+=e.byteLength,u.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)});let y=new Uint8Array(t),w=0;return u.forEach(e=>{y.set(new Uint8Array(e.buffer),w),w+=e.byteLength}),y.buffer}(await Promise.all(y)),specs:u}}function sd(e,t){let u=new oB(e),y={},w=0;for(let e of t){let t=function(e,t){let u=ze(e.shape),y;if("quantization"in e)y=oW[e.quantization.dtype];else if("string"===e.dtype){let e=0;for(let y=0;y<u;y++)e+=4+new Uint32Array(t(e,e+4))[0];return e}else y=oW[e.dtype];return u*y}(e,(e,t)=>u.slice(w+e,w+t));y[e.name]=ck(e,u.slice(w,w+t)),w+=t}return y}async function k4(e,t){let u=ze(e.shape),y;if("quantization"in e)y=oW[e.quantization.dtype];else if("string"===e.dtype){let e=0;for(let y=0;y<u;y++)e+=4+new Uint32Array(await t(e,e+4))[0];return e}else y=oW[e.dtype];return u*y}function ck(e,t){let u=e.name,y=e.dtype,w=e.shape,T=ze(w),$,M=0;if("quantization"in e){let w=e.quantization;if("uint8"===w.dtype||"uint16"===w.dtype){if(!("min"in w&&"scale"in w))throw Error(`Weight ${e.name} with quantization ${w.dtype} doesn't have corresponding metadata min and scale.`)}else if("float16"===w.dtype){if("float32"!==y)throw Error(`Weight ${e.name} is quantized with ${w.dtype} which only supports weights of type float32 not ${y}.`)}else throw Error(`Weight ${e.name} has unknown quantization dtype ${w.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let O=oW[w.dtype],P="uint8"===w.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===y){if("uint8"===w.dtype||"uint16"===w.dtype){$=new Float32Array(P.length);for(let e=0;e<P.length;e++){let t=P[e];$[e]=t*w.scale+w.min}}else if("float16"===w.dtype){let e,t,u;$=(e=function(){let r15=e=>{let t=e<<13,u=0;for(;!(8388608&t);)u-=8388608,t<<=1;return(t&=-8388609)|(u+=947912704)},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=r15(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}(),t=function(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),u=function(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}(),y=>{let w=new ArrayBuffer(4*y.length),T=new Uint32Array(w);for(let w=0;w<y.length;w++){let $=y[w],M=e[u[$>>10]+(1023&$)]+t[$>>10];T[w]=M}return new Float32Array(w)})(P)}else throw Error(`Unsupported quantization type ${w.dtype} for weight type float32.`)}else if("int32"===y){if("uint8"!==w.dtype&&"uint16"!==w.dtype)throw Error(`Unsupported quantization type ${w.dtype} for weight type int32.`);$=new Int32Array(P.length);for(let e=0;e<P.length;e++){let t=P[e];$[e]=Math.round(t*w.scale+w.min)}}else throw Error(`Unsupported dtype in weight '${u}': ${y}`);M+=T*O}else if("string"===y){let u=ze(e.shape);$=[];for(let e=0;e<u;e++){let e=new Uint32Array(t.slice(M,M+4))[0];M+=4;let u=new Uint8Array(t.slice(M,M+e));$.push(u),M+=e}}else{let e=oW[y];if("float32"===y)$=new Float32Array(t);else if("int32"===y)$=new Int32Array(t);else if("bool"===y)$=new Uint8Array(t);else if("complex64"===y){$=new Float32Array(t);let e=new Float32Array($.length/2),u=new Float32Array($.length/2);for(let t=0;t<e.length;t++)e[t]=$[2*t],u[t]=$[2*t+1];let y=ar(e,w,"float32"),T=ar(u,w,"float32"),M=oL(y,T);return y.dispose(),T.dispose(),M}else throw Error(`Unsupported dtype in weight '${u}': ${y}`);M+=T*e}return ar($,w,y)}async function ik(e,t,u){let y=new Uint8Array(t);for(;y.byteLength<u;){let{done:t,value:w}=await e.read();if(t&&null==w){let e=u-y.byteLength;throw Error(`Reader is done but ${e} bytes are still expected`)}let T=new Uint8Array(y.length+w.byteLength);T.set(y,0),T.set(new Uint8Array(w),y.length),y=T}return y.buffer}async function ad(e,t){let u={},y=e.getReader(),w=new ArrayBuffer(0);for(let e of t){let t=await k4(e,async(e,t)=>(w=await ik(y,w,t)).slice(e,t)),T=(w=await ik(y,w,t)).slice(0,t);w=w.slice(t);let $=ck(e,T);if(u[e.name]=$,"webgpu"===sk()){let e=ak();"uploadToGPU"in e&&ze($.shape)>=nG.get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU($.dataId)}}return u}var oV=void 0!==na&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function uk(e){return oV?na.byteLength(e,"utf8"):new Blob([e]).size}function dk(e){return oB.join(e)}function Ew(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);let t=e.split("/");return t[t.length-1]}function id(e,t){let u={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(u.signature=e.signature),null!=e.userDefinedMetadata&&(u.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(u.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(u.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(u.trainingConfig=e.trainingConfig),u}function $w(e,t,u){let y={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(y.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw Error("modelJSON has weightsManifest but weightSpecs is null");if(!u)throw Error("modelJSON has weightsManifest but weightData is null");y.weightSpecs=t,y.weightData=u}return null!=e.signature&&(y.signature=e.signature),null!=e.userDefinedMetadata&&(y.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(y.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(y.initializerSignature=e.initializerSignature),y}async function tc(e,t){let u,y;return null!=e.weightsManifest&&([u,y]=await t(e.weightsManifest)),$w(e,u,y)}function va(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:uk(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:uk(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new oB(e.weightData).byteLength}}function Sl(e){let t=[];for(let u of e)t.push(...u.weights);return t}var oU=class r3{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==r3.instance&&(r3.instance=new r3),r3.instance}static registerSaveRouter(e){r3.getInstance().saveRouters.push(e)}static registerLoadRouter(e){r3.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return r3.getHandlers(e,"save")}static getLoadHandlers(e,t){return r3.getHandlers(e,"load",t)}static getHandlers(e,t,u){let y=[];return("load"===t?r3.getInstance().loadRouters:r3.getInstance().saveRouters).forEach(t=>{let w=t(e,u);null!==w&&y.push(w)}),y}},fk=e=>oU.registerSaveRouter(e),hk=e=>oU.registerLoadRouter(e),gk=e=>oU.getSaveHandlers(e),xk=(e,t)=>oU.getLoadHandlers(e,t),oG="tensorflowjs",oH="models_store",oj="model_info_store";function yk(){if(!nG.getBool("IS_BROWSER"))throw Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw Error("The current browser does not appear to support IndexedDB.");return t}function Aw(e){let t=e.result;t.createObjectStore(oH,{keyPath:"modelPath"}),t.createObjectStore(oj,{keyPath:"modelPath"})}var oq=class{constructor(e){if(this.indexedDB=yk(),null==e||!e)throw Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,u)=>{let y=this.indexedDB.open(oG,1);y.onupgradeneeded=()=>Aw(y),y.onsuccess=()=>{let w=y.result;if(null==t){let t=w.transaction(oH,"readonly"),y=t.objectStore(oH).get(this.modelPath);y.onsuccess=()=>{if(null==y.result)return w.close(),u(Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(y.result.modelArtifacts)},y.onerror=e=>(w.close(),u(y.error)),t.oncomplete=()=>w.close()}else{let y;t.weightData=oB.join(t.weightData);let T=va(t),$=w.transaction(oj,"readwrite"),M=$.objectStore(oj),O;try{O=M.put({modelPath:this.modelPath,modelArtifactsInfo:T})}catch(e){return u(e)}O.onsuccess=()=>{let O=(y=w.transaction(oH,"readwrite")).objectStore(oH),P;try{P=O.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:T})}catch(e){return u(e)}P.onsuccess=()=>e({modelArtifactsInfo:T}),P.onerror=e=>{let t=(M=$.objectStore(oj)).delete(this.modelPath);t.onsuccess=()=>(w.close(),u(P.error)),t.onerror=e=>(w.close(),u(P.error))}},O.onerror=e=>(w.close(),u(O.error)),$.oncomplete=()=>{null==y?w.close():y.oncomplete=()=>w.close()}}},y.onerror=e=>u(y.error)})}};oq.URL_SCHEME="indexeddb://";var bk=e=>{var t;return nG.getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(oq.URL_SCHEME)?(t=e.slice(oq.URL_SCHEME.length),new oq(t)):null};oU.registerSaveRouter(bk),oU.registerLoadRouter(bk);var oX=class{constructor(){this.indexedDB=yk()}async listModels(){return new Promise((e,t)=>{let u=this.indexedDB.open(oG,1);u.onupgradeneeded=()=>Aw(u),u.onsuccess=()=>{let y=u.result,w=y.transaction(oj,"readonly"),T=w.objectStore(oj).getAll();T.onsuccess=()=>{let t={};for(let e of T.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},T.onerror=e=>(y.close(),t(T.error)),w.oncomplete=()=>y.close()},u.onerror=e=>t(u.error)})}async removeModel(e){var t;return e=(t=e).startsWith(oq.URL_SCHEME)?t.slice(oq.URL_SCHEME.length):t,new Promise((t,u)=>{let y=this.indexedDB.open(oG,1);y.onupgradeneeded=()=>Aw(y),y.onsuccess=()=>{let w=y.result,T=w.transaction(oj,"readwrite"),$=T.objectStore(oj),M=$.get(e),O;M.onsuccess=()=>{if(null==M.result)return w.close(),u(Error(`Cannot find model with path '${e}' in IndexedDB.`));{let y=$.delete(e),l=()=>{let y=(O=w.transaction(oH,"readwrite")).objectStore(oH).delete(e);y.onsuccess=()=>t(M.result.modelArtifactsInfo),y.onerror=e=>u(M.error)};y.onsuccess=l,y.onerror=e=>(l(),w.close(),u(M.error))}},M.onerror=e=>(w.close(),u(M.error)),T.oncomplete=()=>{null==O?w.close():O.oncomplete=()=>w.close()}},y.onerror=e=>u(y.error)})}},oK="tensorflowjs_models",oZ="info";function wk(e){return{info:[oK,e,oZ].join("/"),topology:[oK,e,"model_topology"].join("/"),weightSpecs:[oK,e,"weight_specs"].join("/"),weightData:[oK,e,"weight_data"].join("/"),modelMetadata:[oK,e,"model_metadata"].join("/")}}function Sk(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}var oY=class{constructor(e){if(!nG.getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=wk(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),u=JSON.stringify(e.weightSpecs),y=va(e),w=oB.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(y)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,u),this.LS.setItem(this.keys.weightData,function(e){if(oV)return na.from(e).toString("base64");let t=new Uint8Array(e),u="";for(let e=0,y=t.length;e<y;e++)u+=String.fromCharCode(t[e]);return btoa(u)}(w));let T={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(T)),{modelArtifactsInfo:y}}catch(e){throw Sk(this.keys),Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${y.modelTopologyBytes}, weightSpecsBytes=${y.weightSpecsBytes}, weightDataBytes=${y.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},u=JSON.parse(this.LS.getItem(this.keys.topology));if(null==u)throw Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=u;let y=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==y)throw Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=y;let w=this.LS.getItem(this.keys.modelMetadata);if(null!=w){let e=JSON.parse(w);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}let T=this.LS.getItem(this.keys.weightData);if(null==T)throw Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(oV){let t=na.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}let t=atob(e),u=new Uint8Array(t.length);for(let e=0;e<t.length;++e)u.set([t.charCodeAt(e)],e);return u.buffer}(T),t}};oY.URL_SCHEME="localstorage://";var Ik=e=>{var t;return nG.getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(oY.URL_SCHEME)?(t=e.slice(oY.URL_SCHEME.length),new oY(t)):null};oU.registerSaveRouter(Ik),oU.registerLoadRouter(Ik);var oJ=class{constructor(){E(nG.getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),E("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=oK+"/",u="/"+oZ;for(let y=0;y<this.LS.length;++y){let w=this.LS.key(y);w.startsWith(t)&&w.endsWith(u)&&(e[function(e){let t=e.split("/");if(t.length<3)throw Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join("/")}(w)]=JSON.parse(this.LS.getItem(w)))}return e}async removeModel(e){var t;let u=wk(e=(t=e).startsWith(oY.URL_SCHEME)?t.slice(oY.URL_SCHEME.length):t);if(null==this.LS.getItem(u.info))throw Error(`Cannot find model at path '${e}'`);let y=JSON.parse(this.LS.getItem(u.info));return Sk(u),y}},oQ=class r4{constructor(){this.managers={}}static getInstance(){return null==r4.instance&&(r4.instance=new r4),r4.instance}static registerManager(e,t){E(null!=e,()=>"scheme must not be undefined or null."),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),E(e.length>0,()=>"scheme must not be an empty string.");let u=r4.getInstance();E(null==u.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),u.managers[e]=t}static getManager(e){let t=r4.getInstance().managers[e];if(null==t)throw Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(r4.getInstance().managers)}};function cd(e){if(-1===e.indexOf("://"))throw Error(`The url string provided does not contain a scheme. Supported schemes are: ${oQ.getSchemes().join(",")}`);return{scheme:e.split("://")[0],path:e.split("://")[1]}}async function vk(e,t,u=!1){E(e!==t,()=>`Old path and new path are the same: '${e}'`);let y=oU.getLoadHandlers(e);E(y.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),E(y.length<2,()=>`Copying failed because more than one (${y.length}) load handlers for source URL ${e}.`);let w=y[0],T=oU.getSaveHandlers(t);E(T.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),E(T.length<2,()=>`Copying failed because more than one (${y.length}) save handlers for destination URL ${t}.`);let $=T[0],M=cd(e).scheme,O=cd(e).path,P=M===cd(e).scheme,z=await w.load();u&&P&&await oQ.getManager(M).removeModel(O);let L=await $.save(z);return u&&!P&&await oQ.getManager(M).removeModel(O),L.modelArtifactsInfo}async function kk(){let e=oQ.getSchemes(),t={};for(let u of e){let e=await oQ.getManager(u).listModels();for(let y in e)t[u+"://"+y]=e[y]}return t}async function Nk(e){let t=cd(e);return oQ.getManager(t.scheme).removeModel(t.path)}async function Tk(e,t){return vk(e,t,!1)}async function _k(e,t){return vk(e,t,!0)}var o1=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if("undefined"==typeof window||!nG.getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))},!0))}isTypedArray(e){return Qm(e)}};if(nG.get("IS_BROWSER")){nG.setPlatform("browser",new o1);try{oQ.registerManager(oY.URL_SCHEME,new oJ)}catch(e){}try{oQ.registerManager(oq.URL_SCHEME,new oX)}catch(e){}}var o2={importFetch:()=>ng()},o0=class{constructor(){this.util=ny(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=nG.global.fetch?nG.global.fetch(e,t):(null==eA&&(eA=o2.importFetch()),eA(e,t))}now(){let e=ne.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}};function me(e,t="float32",u){return t=t||"float32",Ct(e),new oI(e,t,u)}nG.get("IS_NODE")&&!nG.get("IS_BROWSER")&&nG.setPlatform("node",new o0);var o5=N({cast_:function(e,t){let u=v(e,"x","cast");if(!rw(t))throw Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==u.dtype||"string"!==t&&"string"===u.dtype)throw Error("Only strings can be casted to strings");return oF.runKernel(rs,{x:u},{dtype:t})}}),o3=N({clone_:function(e){let t={x:v(e,"x","clone","string_or_numeric")};return oF.runKernel(ia,t)}});function ld(e,t=!1){console.log(e.toString(t))}Iw(),oN={buffer:me,cast:o5,clone:o3,print:ld};var o7=N({add_:function(e,t){let u=v(e,"a","add"),y=v(t,"b","add");[u,y]=Oe(u,y);let w={a:u,b:y};return oF.runKernel(nX,w)}}),o4=N({floorDiv_:function(e,t){let u=v(e,"a","floorDiv"),y=v(t,"b","floorDiv");[u,y]=Oe(u,y);let w={a:u,b:y};return oF.runKernel(rQ,w)}}),o6=N({div_:function(e,t){let u=v(e,"a","div"),y=v(t,"b","div");if([u,y]=Oe(u,y),"int32"===u.dtype&&"int32"===y.dtype)return o4(u,y);let w={a:u,b:y};return oF.runKernel(rW,w,{})}}),o8=N({mul_:function(e,t){let u=v(e,"a","mul"),y=v(t,"b","mul");[u,y]=Oe(u,y);let w={a:u,b:y};return oF.runKernel(iq,w)}}),o9=N({abs_:function(e){let t=v(e,"x","abs");return"complex64"===t.dtype?oF.runKernel(rc,{x:t}):oF.runKernel(nH,{x:t})}}),le=N({acos_:function(e){let t={x:v(e,"x","acos")};return oF.runKernel(nj,t)}}),lt=N({acosh_:function(e){let t={x:v(e,"x","acosh")};return oF.runKernel(nq,t)}}),la=N({addN_:function(e){E(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),E(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((e,t)=>v(e,`tensors${t}`,"addN")),u=t[0];return t.forEach(e=>{if(e.dtype!==u.dtype)throw Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!br(e.shape,u.shape))throw Error("All tensors passed to tf.addN() must have the same shape")}),oF.runKernel(nK,t)}}),ln=N({all_:function(e,t=null,u=!1){let y={x:v(e,"x","all","bool")};return oF.runKernel(nZ,y,{axis:t,keepDims:u})}}),li=N({any_:function(e,t=null,u=!1){let y={x:v(e,"x","any","bool")};return oF.runKernel(nY,y,{axis:t,keepDims:u})}}),ls=N({argMax_:function(e,t=0){let u={x:v(e,"x","argMax")};return oF.runKernel(nJ,u,{axis:t})}}),lo=N({argMin_:function(e,t=0){let u={x:v(e,"x","argMin")};return oF.runKernel(nQ,u,{axis:t})}}),ll=N({asin_:function(e){let t={x:v(e,"x","asin")};return oF.runKernel(n1,t)}}),lu=N({asinh_:function(e){let t={x:v(e,"x","asinh")};return oF.runKernel(n2,t)}}),lh=N({atan_:function(e){let t={x:v(e,"x","atan")};return oF.runKernel(n0,t)}}),lg=N({atan2_:function(e,t){let u=v(e,"a","atan2"),y=v(t,"b","atan2");[u,y]=Oe(u,y);let w={a:u,b:y};return oF.runKernel(n3,w)}}),ly=N({atanh_:function(e){let t={x:v(e,"x","atanh")};return oF.runKernel(n5,t)}});function iH(e,t,u,y,w="NHWC",T){let $=[...t,e[3]];return zu(e,$,u,T,y,null,null,Gk(w))}function Lw(e,t,u,y,w,T,$="channelsLast"){let[M,O]=Il(t),P;if("channelsLast"===$)P=[M,O,e[3],e[3]];else if("channelsFirst"===$)P=[M,O,e[1],e[1]];else throw Error(`Unknown dataFormat ${$}`);return zu(e,P,u,y,w,T,!1,$)}function uH(e,t,u,y,w,T,$="NDHWC"){let[M,O,P]=Mw(t),z,L;if("NDHWC"===$)L="channelsLast",z=[M,O,P,e[4],e[4]];else if("NCDHW"===$)L="channelsFirst",z=[M,O,P,e[1],e[1]];else throw Error(`Unknown dataFormat ${$}`);return Uk(e,z,u,y,w,!1,L,T)}function zu(e,t,u,y,w,T,$=!1,M="channelsLast"){let[O,P,z,L]=[-1,-1,-1,-1];if("channelsLast"===M)[O,P,z,L]=e;else if("channelsFirst"===M)[O,L,P,z]=e;else throw Error(`Unknown dataFormat ${M}`);let[W,B,,j]=t,[q,Z]=Il(u),[Y,J]=Il(y),ee=nc(W,Y),ea=nc(B,J),{padInfo:en,outHeight:er,outWidth:ei}=function(e,t,u,y,w,T,$,M,O){let P,z,L;if("number"==typeof e){var W,B;let w,$;P={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};let O=(W=[t,u],null==(B=e)&&(B=Bw(W,T,y)),w=W[0],$=W[1],[vl((w-T+2*B)/y+1,M),vl(($-T+2*B)/y+1,M)]);z=O[0],L=O[1]}else if("same"===e){z=Math.ceil(t/y),L=Math.ceil(u/w);let e=Math.max(0,(z-1)*y+T-t),M=Math.max(0,(L-1)*w+$-u),O=Math.floor(e/2),W=Math.floor(M/2);P={top:O,bottom:e-O,left:W,right:M-W,type:"SAME"}}else if("valid"===e)P={top:0,bottom:0,left:0,right:0,type:"VALID"},z=Math.ceil((t-T+1)/y),L=Math.ceil((u-$+1)/w);else if("object"==typeof e){let W="channelsLast"===O?e[1][0]:e[2][0],B="channelsLast"===O?e[1][1]:e[2][1],j="channelsLast"===O?e[2][0]:e[3][0],q="channelsLast"===O?e[2][1]:e[3][1];P={top:W,bottom:B,left:j,right:q,type:0===W&&0===B&&0===j&&0===q?"VALID":"EXPLICIT"},z=vl((t-T+W+B)/y+1,M),L=vl((u-$+j+q)/w+1,M)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:P,outHeight:z,outWidth:L}}(w,P,z,q,Z,ee,ea,T,M),es=$?j*L:j,el;return"channelsFirst"===M?el=[O,es,er,ei]:"channelsLast"===M&&(el=[O,er,ei,es]),{batchSize:O,dataFormat:M,inHeight:P,inWidth:z,inChannels:L,outHeight:er,outWidth:ei,outChannels:es,padInfo:en,strideHeight:q,strideWidth:Z,filterHeight:W,filterWidth:B,effectiveFilterHeight:ee,effectiveFilterWidth:ea,dilationHeight:Y,dilationWidth:J,inShape:e,outShape:el,filterShape:t}}function Uk(e,t,u,y,w,T=!1,$="channelsLast",M){let[O,P,z,L,W]=[-1,-1,-1,-1,-1];if("channelsLast"===$)[O,P,z,L,W]=e;else if("channelsFirst"===$)[O,W,P,z,L]=e;else throw Error(`Unknown dataFormat ${$}`);let[B,j,q,,Z]=t,[Y,J,ee]=Mw(u),[ea,en,er]=Mw(y),ei=nc(B,ea),es=nc(j,en),el=nc(q,er),{padInfo:eu,outDepth:ed,outHeight:ep,outWidth:ec}=function(e,t,u,y,w,T,$,M,O,P,z){let L,W,B,j;if("valid"===e&&(e=0),"number"==typeof e){L={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};let q=function(e,t,u,y,w,T){null==w&&(w=Bw(e,t[0],y[0]));let $=[0,0,0,1];for(let u=0;u<3;u++)e[u]+2*w>=t[u]&&($[u]=vl((e[u]-t[u]+2*w)/y[u]+1,T));return $}([t,u,y,1],[M,O,P],0,[w,T,$],e,z);W=q[0],B=q[1],j=q[2]}else if("same"===e){W=Math.ceil(t/w),B=Math.ceil(u/T),j=Math.ceil(y/$);let e=(W-1)*w+M-t,z=(B-1)*T+O-u,q=(j-1)*$+P-y,Z=Math.floor(e/2),Y=Math.floor(z/2),J=Math.floor(q/2);L={top:Y,bottom:z-Y,left:J,right:q-J,front:Z,back:e-Z,type:"SAME"}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:L,outDepth:W,outHeight:B,outWidth:j}}(w,P,z,L,Y,J,ee,ei,es,el,M),eh=T?Z*W:Z,em;return"channelsFirst"===$?em=[O,eh,ed,ep,ec]:"channelsLast"===$&&(em=[O,ed,ep,ec,eh]),{batchSize:O,dataFormat:$,inDepth:P,inHeight:z,inWidth:L,inChannels:W,outDepth:ed,outHeight:ep,outWidth:ec,outChannels:eh,padInfo:eu,strideDepth:Y,strideHeight:J,strideWidth:ee,filterDepth:B,filterHeight:j,filterWidth:q,effectiveFilterDepth:ei,effectiveFilterHeight:es,effectiveFilterWidth:el,dilationDepth:ea,dilationHeight:en,dilationWidth:er,inShape:e,outShape:em,filterShape:t}}function Bw(e,t,u,y=1){let w=nc(t,y);return Math.floor((e[0]*(u-1)-u+w)/2)}function Il(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Mw(e){return"number"==typeof e?[e,e,e]:e}function nc(e,t){return t<=1?e:e+(e-1)*(t-1)}function vl(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw Error(`Unknown roundingMode ${t}`)}}function Bu(e){let[t,u,y]=Il(e);return 1===t&&1===u&&1===y}function gr(e,t){return Bu(e)||Bu(t)}function Ta(e){return Il(e).every(e=>e>0)}function Gk(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw Error(`Unknown dataFormat ${e}`)}function Lt(e,t,u){if(null!=u){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${u} but got pad ${t}.`);if("number"==typeof t)E(Ka(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${u} but got pad ${t}.`);else if("object"==typeof t)t.forEach(t=>{t.forEach(t=>{E(Ka(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${u} but got pad ${t}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}var lA=N({reshape_:function(e,t){let u={x:v(e,"x","reshape","string_or_numeric")};return oF.runKernel(so,u,{shape:t})}}),lx=N({avgPool_:function(e,t,u,y,w){let T=v(e,"x","avgPool","float32");E(gr(u,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${u} and dilations '1'`);let $=T,M=!1;3===T.rank&&(M=!0,$=lA(T,[1,T.shape[0],T.shape[1],T.shape[2]])),E(4===$.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${$.rank}.`),Lt("avgPool",y,w);let O={x:$},P=oF.runKernel(n7,O,{filterSize:t,strides:u,pad:y,dimRoundingMode:w});return P=o5(P,T.dtype),M?lA(P,[P.shape[1],P.shape[2],P.shape[3]]):P}}),lb=N({avgPool3d_:function(e,t,u,y,w,T="NDHWC"){let $=v(e,"x","avgPool3d","float32"),M=$,O=!1;4===$.rank&&(O=!0,M=lA($,[1,$.shape[0],$.shape[1],$.shape[2],$.shape[3]])),E(5===M.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${M.rank}.`),E("NDHWC"===T,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${T}`),E("number"==typeof u&&u>0||Array.isArray(u)&&u[0]>0&&u[1]>0&&u[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${u}'`),Lt("avgPool3d",y,w);let P={x:M},z=oF.runKernel(n6,P,{filterSize:t,strides:u,pad:y,dimRoundingMode:w,dataFormat:T});return z=o5(z,M.dtype),O?lA(z,[z.shape[1],z.shape[2],z.shape[3],z.shape[4]]):z}}),lk=N({concat_:function(e,t=0){E(e.length>=1,()=>"Pass at least one tensor to concat");let u=ni(e,"tensors","concat","string_or_numeric");return("complex64"===u[0].dtype&&u.forEach(e=>{if("complex64"!==e.dtype)throw Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${e.dtype}. `)}),1===u.length)?o3(u[0]):oF.runKernel(rh,u,{axis:t})}}),lI=N({matMul_:function(e,t,u=!1,y=!1){let w=v(e,"a","matMul"),T=v(t,"b","matMul");[w,T]=Oe(w,T);let $={a:w,b:T};return oF.runKernel(n9,$,{transposeA:u,transposeB:y})}}),lS=N({sigmoid_:function(e){let t={x:v(e,"x","sigmoid","float32")};return oF.runKernel(s_,t)}}),lN=N({slice_:function(e,t,u){let y=v(e,"x","slice","string_or_numeric");if(0===y.rank)throw Error("Slicing scalar is not possible");return oF.runKernel(sT,{x:y},{begin:t,size:u})}}),lC=N({tanh_:function(e){let t={x:v(e,"x","tanh","float32")};return oF.runKernel(s1,t)}}),lE=N({basicLSTMCell_:function(e,t,u,y,w,T){let $=v(e,"forgetBias","basicLSTMCell"),M=v(t,"lstmKernel","basicLSTMCell"),O=v(u,"lstmBias","basicLSTMCell"),P=v(y,"data","basicLSTMCell"),z=v(w,"c","basicLSTMCell"),L=o7(lI(lk([P,v(T,"h","basicLSTMCell")],1),M),O),W=L.shape[0],B=L.shape[1]/4,j=[W,B],q=lN(L,[0,0],j),Z=lN(L,[0,B],j),Y=lN(L,[0,2*B],j),J=lN(L,[0,3*B],j),ee=o7(o8(lS(q),lC(Z)),o8(z,lS(o7($,Y)))),ea=o8(lC(ee),lS(J));return[ee,ea]}}),lR=N({batchToSpaceND_:function(e,t,u){let y=v(e,"x","batchToSpaceND"),w=t.reduce((e,t)=>e*t);return E(y.rank>=1+t.length,()=>`input rank is ${y.rank} but should be > than blockShape.length ${t.length}`),E(u.length===t.length,()=>`crops.length is ${u.length} but should be equal to blockShape.length  ${t.length}`),E(y.shape[0]%w==0,()=>`input tensor batch is ${y.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${w}`),oF.runKernel(re,{x:y},{blockShape:t,crops:u})}}),l$=N({batchNorm_:function(e,t,u,y,w,T){let $;null==T&&(T=.001);let M=v(e,"x","batchNorm"),O=v(t,"mean","batchNorm"),P=v(u,"variance","batchNorm"),z;null!=w&&(z=v(w,"scale","batchNorm")),null!=y&&($=v(y,"offset","batchNorm")),E(O.rank===P.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),E(null==$||O.rank===$.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),E(null==z||O.rank===z.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let L={x:0===M.rank||1===M.rank?lA(M,[1,1,1,M.size]):2===M.rank?lA(M,[1,1,M.shape[0],M.shape[1]]):3===M.rank?lA(M,[1,M.shape[0],M.shape[1],M.shape[2]]):M,scale:z,offset:$,mean:O,variance:P},W={varianceEpsilon:T};return lA(oF.runKernel(r1,L,W),M.shape)}}),l_=N({batchNorm2d_:function(e,t,u,y,w,T){let $,M=v(e,"x","batchNorm"),O=v(t,"mean","batchNorm"),P=v(u,"variance","batchNorm"),z;return null!=w&&(z=v(w,"scale","batchNorm")),null!=y&&($=v(y,"offset","batchNorm")),E(2===M.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${M.rank}.`),E(2===O.rank||1===O.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${O.rank}.`),E(2===P.rank||1===P.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${P.rank}.`),null!=z&&E(2===z.rank||1===z.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${z.rank}.`),null!=$&&E(2===$.rank||1===$.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${$.rank}.`),l$(M,O,P,$,z,T)}}),lM=N({batchNorm3d_:function(e,t,u,y,w,T){let $,M=v(e,"x","batchNorm"),O=v(t,"mean","batchNorm"),P=v(u,"variance","batchNorm"),z;return null!=w&&(z=v(w,"scale","batchNorm")),null!=y&&($=v(y,"offset","batchNorm")),E(3===M.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${M.rank}.`),E(3===O.rank||1===O.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${O.rank}.`),E(3===P.rank||1===P.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${P.rank}.`),null!=z&&E(3===z.rank||1===z.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${z.rank}.`),null!=$&&E(3===$.rank||1===$.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${$.rank}.`),l$(M,O,P,$,z,T)}}),lF=N({batchNorm4d_:function(e,t,u,y,w,T){let $,M=v(e,"x","batchNorm"),O=v(t,"mean","batchNorm"),P=v(u,"variance","batchNorm"),z;return null!=w&&(z=v(w,"scale","batchNorm")),null!=y&&($=v(y,"offset","batchNorm")),E(4===M.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${M.rank}.`),E(4===O.rank||1===O.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${O.rank}.`),E(4===P.rank||1===P.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${P.rank}.`),null!=z&&E(4===z.rank||1===z.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${z.rank}.`),null!=$&&E(4===$.rank||1===$.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${$.rank}.`),l$(M,O,P,$,z,T)}}),lO=N({bincount_:function(e,t,u){let y=v(e,"x","bincount"),w=v(t,"weights","bincount");return E("int32"===y.dtype,()=>`Error in bincount: input dtype must be int32, but got ${y.dtype}`),E(u>=0,()=>`size must be non-negative, but got ${u}.`),E(w.size===y.size||0===w.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${y.shape}, weights shape: ${w.shape}.`),oF.runKernel(ra,{x:y,weights:w},{size:u})}}),lP=N({bitwiseAnd_:function(e,t){let u=v(e,"x","bitwiseAnd"),y=v(t,"y","bitwiseAnd");if(!br(u.shape,y.shape))throw Error(`BitwiseAnd: Tensors must have the same shape. x: ${u.shape}, y: ${y.shape}`);if("int32"!==u.dtype||"int32"!==y.dtype)throw Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${u.dtype} and type of y: ${y.dtype}`);return oF.runKernel(rn,{a:u,b:y})}}),lD=N({broadcastArgs_:function(e,t){let u=v(e,"s0","broadcastArgs","int32"),y=v(t,"s1","broadcastArgs","int32");if(1!==u.rank)throw Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${u.rank}`);if(1!==y.rank)throw Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${y.rank}`);return oF.runKernel(ri,{s0:u,s1:y})}}),lz=N({broadcastTo_:function(e,t){let u=v(e,"broadcastTo","x"),y=u.shape;if(Ct(t),t.length<u.rank)throw Error(`broadcastTo(): shape.length=${t.length} < input.rank=${u.rank}.`);if(t.length>u.rank){let e=u.shape.slice();for(;e.length<t.length;)e.unshift(1);u=lA(u,e)}let w=u.shape,T=Array.from(t);for(let e=t.length-1;e>=0;e--)if(w[e]===t[e])T[e]=1;else if(1!==u.shape[e])throw Error(`broadcastTo(): [${y}] cannot be broadcast to [${t}].`);if(0===T.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return o3(u);let $={x:u};return oF.runKernel(s2,$,{reps:T})}}),lL=N({ceil_:function(e){let t={x:v(e,"x","ceil","float32")};return oF.runKernel(ro,t)}});function $a(e,t,u){Ct(e),u=u||Ei(t);let y={shape:e,value:t,dtype:u};return oF.runKernel(rZ,{},y)}var lW=N({clipByValue_:function(e,t,u){let y=v(e,"x","clipByValue");return(E(t<=u,()=>`Error in clip: min (${t}) must be less than or equal to max (${u}).`),t===u)?$a(y.shape,t,y.dtype):oF.runKernel(ru,{x:y},{clipValueMin:t,clipValueMax:u})}}),lB=N({concat1d_:function(e){return lk(e,0)}}),lV=N({concat2d_:function(e,t){return lk(e,t)}}),lU=N({concat3d_:function(e,t){return lk(e,t)}}),lG=N({concat4d_:function(e,t){return lk(e,t)}}),lH=N({conv2d_:function(e,t,u,y,w="NHWC",T=[1,1],$){let M=v(e,"x","conv2d","float32"),O=v(t,"filter","conv2d","float32"),P=M,z=!1;3===M.rank&&(z=!0,P=lA(M,[1,M.shape[0],M.shape[1],M.shape[2]])),E(4===P.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${P.rank}.`),E(4===O.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${O.rank}.`),Lt("conv2d",y,$);let L="NHWC"===w?P.shape[3]:P.shape[1];E(L===O.shape[2],()=>`Error in conv2d: depth of input (${L}) must match input depth for filter ${O.shape[2]}.`),E(gr(u,T),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${u} and dilations '${T}'`),E(Ta(T),()=>"Error in conv2D: Dilated rates should be larger than 0."),E(Ta(u),()=>"Error in conv2D: Strides should be larger than 0.");let W={x:P,filter:O},B=oF.runKernel(rf,W,{strides:u,pad:y,dataFormat:w,dilations:T,dimRoundingMode:$});return z?lA(B,[B.shape[1],B.shape[2],B.shape[3]]):B}}),lj=N({conv1d_:function(e,t,u,y,w="NWC",T=1,$){let M=v(e,"x","conv1d"),O=v(t,"filter","conv1d"),P=M,z=!1;2===M.rank&&(z=!0,P=lA(M,[1,M.shape[0],M.shape[1]])),E(3===P.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${P.rank}.`),E(3===O.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${O.rank}.`),Lt("conv1d",y,$),E(P.shape[2]===O.shape[1],()=>`Error in conv1d: depth of input (${P.shape[2]}) must match input depth for filter ${O.shape[1]}.`),E(gr(u,T),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${u} and dilation '${T}'`),E(Ta(T),()=>"Error in conv1D: Dilated rates should be larger than 0."),E(Ta(u),()=>"Error in conv1D: Stride should be larger than 0."),E("NWC"===w,()=>`Error in conv1d: got dataFormat of ${w} but only NWC is currently supported.`);let L=lA(O,[1,O.shape[0],O.shape[1],O.shape[2]]),W=lH(lA(P,[P.shape[0],1,P.shape[1],P.shape[2]]),L,[1,u],y,"NHWC",[1,T],$);return z?lA(W,[W.shape[2],W.shape[3]]):lA(W,[W.shape[0],W.shape[2],W.shape[3]])}}),lq=N({conv2DBackpropInput_:function(e,t,u,y,w,T="NHWC",$){E(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let M=e,O=t,P=!1;3===t.rank&&(P=!0,O=lA(t,[1,t.shape[0],t.shape[1],t.shape[2]]),M=[1,e[0],e[1],e[2]]),E(4===M.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${M.length}.`),E(4===O.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${O.rank}`),E(4===u.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${u.rank}`);let z="NHWC"===T?M[3]:M[1],L="NHWC"===T?O.shape[3]:O.shape[1];E(z===u.shape[2],()=>`Error in conv2dDerInput: depth of input (${z}) must match input depth for filter ${u.shape[2]}.`),E(L===u.shape[3],()=>`Error in conv2dDerInput: depth of output (${L}) must match output depth for filter ${u.shape[3]}.`),Lt("conv2dDerInput",w,$);let W={dy:O,filter:u},B={strides:y,pad:w,dataFormat:T,dimRoundingMode:$,inputShape:M},j=oF.runKernel(rg,W,B);return P?lA(j,[j.shape[1],j.shape[2],j.shape[3]]):j}}),lX=N({conv2dTranspose_:function(e,t,u,y,w,T){return lq(u,v(e,"x","conv2dTranspose"),v(t,"filter","conv2dTranspose"),y,w,"NHWC",T)}}),lY=N({conv3d_:function(e,t,u,y,w="NDHWC",T=[1,1,1]){let $=v(e,"x","conv3d"),M=v(t,"filter","conv3d"),O=$,P=!1;4===$.rank&&(P=!0,O=lA($,[1,$.shape[0],$.shape[1],$.shape[2],$.shape[3]])),E(5===O.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${O.rank}.`),E(5===M.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${M.rank}.`),E(O.shape[4]===M.shape[3],()=>`Error in conv3d: depth of input (${O.shape[4]}) must match input depth for filter ${M.shape[3]}.`),E(gr(u,T),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${u} and dilations '${T}'`),E("NDHWC"===w,()=>`Error in conv3d: got dataFormat of ${w} but only NDHWC is currently supported.`),E(Ta(T),()=>"Error in conv3D: Dilated rates should be larger than 0."),E(Ta(u),()=>"Error in conv3D: Strides should be larger than 0.");let z={x:O,filter:M},L=oF.runKernel(ry,z,{strides:u,pad:y,dataFormat:w,dilations:T});return P?lA(L,[L.shape[1],L.shape[2],L.shape[3],L.shape[4]]):L}}),lJ=N({conv3DBackpropInput_:function(e,t,u,y,w){E(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let T=e,$=t,M=!1;4===t.rank&&(M=!0,$=lA(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),T=[1,e[0],e[1],e[2],e[3]]);let O=T[4],P=$.shape[4];E(5===T.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${T.length}.`),E(5===$.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${$.rank}`),E(5===u.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${u.rank}`),E(O===u.shape[3],()=>`Error in conv3dDerInput: depth of input (${O}) must match input depth for filter ${u.shape[3]}.`),E(P===u.shape[4],()=>`Error in conv3dDerInput: depth of output (${P}) must match output depth for filter ${u.shape[4]}.`);let z={dy:$,filter:u},L={pad:w,strides:y,inputShape:T},W=oF.runKernel(rx,z,L);return M?lA(W,[W.shape[1],W.shape[2],W.shape[3],W.shape[4]]):W}}),lQ=N({conv3dTranspose_:function(e,t,u,y,w){return lJ(u,v(e,"x","conv3dTranspose"),v(t,"filter","conv3dTranspose"),y,w)}}),l1=N({cos_:function(e){let t={x:v(e,"x","cos","float32")};return oF.runKernel(rb,t)}}),l2=N({cosh_:function(e){let t={x:v(e,"x","cosh","float32")};return oF.runKernel(rk,t)}}),l3=N({cumprod_:function(e,t=0,u=!1,y=!1){let w={x:v(e,"x","cumprod")};return oF.runKernel(rI,w,{axis:t,exclusive:u,reverse:y})}}),l7=N({cumsum_:function(e,t=0,u=!1,y=!1){let w={x:v(e,"x","cumsum")};return oF.runKernel(rN,w,{axis:t,exclusive:u,reverse:y})}}),l4=N({denseBincount_:function(e,t,u,y=!1){let w=v(e,"x","denseBincount"),T=v(t,"weights","denseBincount");return E("int32"===w.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${w.dtype}`),E(w.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${w.rank}.`),E(u>=0,()=>`size must be non-negative, but got ${u}.`),E(T.size===w.size||0===T.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${w.shape}, weights shape: ${T.shape}.`),oF.runKernel(rE,{x:w,weights:T},{size:u,binaryOutput:y})}}),l6=N({depthToSpace_:function(e,t,u="NHWC"){let y=v(e,"x","depthToSpace","float32"),w="NHWC"===u?y.shape[1]:y.shape[2],T="NHWC"===u?y.shape[2]:y.shape[3],$="NHWC"===u?y.shape[3]:y.shape[1];return E(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),E(w*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${w} and ${t}  for depthToSpace with input shape
    ${y.shape}`),E(T*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${T} and ${t} for depthToSpace with input shape
        ${y.shape}`),E($%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${$} for depthToSpace with input shape ${y.shape}`),oF.runKernel(rR,{x:y},{blockSize:t,dataFormat:u})}}),l8=N({depthwiseConv2d_:function(e,t,u,y,w="NHWC",T=[1,1],$){let M=v(e,"x","depthwiseConv2d","float32"),O=v(t,"filter","depthwiseConv2d","float32"),P=M,z=!1;3===M.rank&&(z=!0,P=lA(M,[1,M.shape[0],M.shape[1],M.shape[2]])),E(4===P.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${P.rank}.`),E(4===O.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${O.rank}.`);let L="NHWC"===w?P.shape[3]:P.shape[1];E(L===O.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${L}) must match the inChannels dimension in filter ${O.shape[2]}.`),Lt("depthwiseConv2d",y,$);let W={x:P,filter:O},B=oF.runKernel(r$,W,{strides:u,pad:y,dataFormat:w,dilations:T,dimRoundingMode:$});return z?lA(B,[B.shape[1],B.shape[2],B.shape[3]]):B}}),l9=N({diag_:function(e){let t={x:v(e,"x","diag")};return oF.runKernel(rF,t)}}),ua=N({dilation2d_:function(e,t,u,y,w=[1,1],T="NHWC"){let $=v(e,"x","dilation2d"),M=v(t,"filter","dilation2d");E(3===$.rank||4===$.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${$.rank}.`),E(3===M.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${M.rank}.`),E("NHWC"===T,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${T}`);let O=$,P=!1;3===$.rank&&(O=lA($,[1,$.shape[0],$.shape[1],$.shape[2]]),P=!0),E(O.shape[3]===M.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${O.shape[3]} vs ${M.shape[2]}`);let z={x:O,filter:M},L=oF.runKernel(rO,z,{strides:u,pad:y,dilations:w});return P?lA(L,[L.shape[1],L.shape[2],L.shape[3]]):L}}),un={};function y2(e,t){let u=e.length,y=[];for(let w=0;w<u;w++){let T=u-1-w,$=e[T]||1;(t[t.length-1-w]||1)>1&&1===$&&y.unshift(T)}return y}function xd(e,t){let u=[];for(let y=0;y<t.length;y++){let w=e[e.length-y-1],T=t.length-y-1,$=t[T];(null==w||1===w&&$>1)&&u.unshift(T)}return u}function rt(e,t){let u=Math.max(e.length,t.length),y=Array(u);for(let w=0;w<u;w++){let T=e[e.length-w-1];null==T&&(T=1);let $=t[t.length-w-1];if(null==$&&($=1),1===T)y[u-w-1]=$;else if(1===$)y[u-w-1]=T;else if(T!==$)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);else y[u-w-1]=T}return y}qe(un,{assertAndGetBroadcastShape:()=>rt,getBroadcastDims:()=>y2,getReductionAxes:()=>xd});var ui=N({equal_:function(e,t){let u=v(e,"a","equal","string_or_numeric"),y=v(t,"b","equal","string_or_numeric");[u,y]=Oe(u,y),rt(u.shape,y.shape);let w={a:u,b:y};return oF.runKernel(rH,w)}}),us=N({where_:function(e,t,u){let y=v(t,"a","where"),w=v(u,"b","where"),T=v(e,"condition","where","bool"),$=rt(rt(T.shape,y.shape),w.shape),M=lz(T,$),O=lz(y,$),P=lz(w,$);return oF.runKernel(sN,{condition:M,t:O,e:P})}}),uo=N({zerosLike_:function(e){let t={x:v(e,"x","zerosLike")};return oF.runKernel(ot,t)}}),ul=N({divNoNan_:function(e,t){let u=v(e,"a","div"),y=v(t,"b","div");[u,y]=Oe(u,y);let w=o6(u,y),T=uo(w);return us(ui(y,T),T,w)}}),uu=N({dot_:function(e,t){let u=v(e,"t1","dot"),y=v(t,"t2","dot");E((1===u.rank||2===u.rank)&&(1===y.rank||2===y.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${u.rank} and ${y.rank}.`);let w=1===u.rank?u.size:u.shape[1],T=1===y.rank?y.size:y.shape[0];if(E(w===T,()=>`Error in dot: inner dimensions of inputs must match, but got ${w} and ${T}.`),1===u.rank&&1===y.rank){let e=lI(lA(u,[1,-1]),lA(y,[-1,1]));return lA(e,[])}if(1===u.rank&&2===y.rank){let e=lI(lA(u,[1,-1]),lA(y,[y.shape[0],y.shape[1]]));return lA(e,[e.size])}if(2!==u.rank||1!==y.rank)return lI(u,lA(y,[y.shape[0],y.shape[1]]));{let e=lI(u,lA(y,[-1,1]));return lA(e,[e.size])}}}),ud=N({einsum_:function(e,...t){let u=t.map((e,t)=>v(e,`tensors${t}`,"einsum"));return oF.runKernel(rB,u,{equation:e})}}),uc=N({elu_:function(e){let t={x:v(e,"x","elu","float32")};return oF.runKernel(rV,t)}}),uf=N({ensureShape_:function(e,t){let u=v(e,"x","ensureShape","string_or_numeric");if(!ZC(u.shape,t))throw Error(`EnsureShape: Shape of tensor ${u.shape} is not compatible with expected shape ${t}`);return e}}),um=N({erf_:function(e){let t=v(e,"x","erf");E("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=o5(t,"float32"));let u={x:t};return oF.runKernel(rG,u)}});function zw(e,t){for(let u=0;u<e.length;++u)if(e[e.length-u-1]!==t-1-u)return!1;return!0}function I2(e,t,u){let y=e.length+t.length,w=[],T=0,$=0;for(let M=0;M<y;M++)-1===u.indexOf(M)?w.push(e[T++]):w.push(t[$++]);return w}function uK(e,t){let u=[],y=e.length;for(let w=0;w<y;w++)-1===t.indexOf(w)&&u.push(e[w]);return[u,t.map(t=>e[t])]}function ii(e,t){return I2(e,t.map(e=>1),t)}function pK(e,t,u){E(zw(t,u),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${u} input.`)}function cK(e,t){if(zw(e,t))return null;let u=[];for(let y=0;y<t;++y)-1===e.indexOf(y)&&u.push(y);return e.forEach(e=>u.push(e)),u}function lK(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function mK(e,t){let u=[];for(let y=t-e;y<t;++y)u.push(y);return u}var ug=N({max_:function(e,t=null,u=!1){let y={x:v(e,"x","max")};return oF.runKernel(iM,y,{reductionIndices:t,keepDims:u})}}),uy=N({min_:function(e,t=null,u=!1){let y={x:v(e,"x","min")};return oF.runKernel(iB,y,{axis:t,keepDims:u})}}),uA=N({pow_:function(e,t){let u=v(e,"base","pow"),y=v(t,"exp","pow");[u,y]=Oe(u,y);let w={a:u,b:y};return oF.runKernel(i7,w)}});function ke(e,t){if((Pt(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Pt(e)&&!(e instanceof Uint8Array))throw Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return wr(e,[],[],t)}var ux=N({sqrt_:function(e){let t={x:v(e,"x","sqrt","float32")};return oF.runKernel(sF,t)}}),ub=N({square_:function(e){let t=v(e,"x","square");return oF.runKernel("Square",{x:t},{})}}),uI=N({sum_:function(e,t=null,u=!1){let y=v(e,"x","sum");"bool"===y.dtype&&(y=o5(y,"int32"));let w={x:y};return oF.runKernel(sO,w,{axis:t,keepDims:u})}}),uN=N({norm_:function(e,t="euclidean",u=null,y=!1){let w=function v2(e,t,u=null){if(0===e.rank)return o9(e);if(1!==e.rank&&null===u)return v2(lA(e,[-1]),t,u);if(1===e.rank||"number"==typeof u||Array.isArray(u)&&1===u.length){if(1===t)return uI(o9(e),u);if(t===1/0)return ug(o9(e),u);if(t===-1/0)return uy(o9(e),u);if("euclidean"===t||2===t)return ux(uI(uA(o9(e),ke(2,"int32")),u));throw Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(u)&&2===u.length){if(1===t)return ug(uI(o9(e),u[0]),u[1]-1);if(t===1/0)return ug(uI(o9(e),u[1]),u[0]);if(t===-1/0)return uy(uI(o9(e),u[1]),u[0]);if("fro"===t||"euclidean"===t)return ux(uI(ub(e),u));throw Error(`Error in norm: invalid ord value: ${t}`)}throw Error(`Error in norm: invalid axis: ${u}`)}(e=v(e,"x","norm"),t,u),T=w.shape;if(y){let t=_i(u,e.shape);T=ii(w.shape,t)}return lA(w,T)}}),uC=N({euclideanNorm_:function(e,t=null,u=!1){return uN(e,"euclidean",t,u)}}),uE=N({exp_:function(e){let t={x:v(e,"x","exp")};return oF.runKernel(rj,t)}}),uR=N({expandDims_:function(e,t=0){let u=v(e,"x","expandDims","string_or_numeric");return E(t<=u.rank,()=>"Axis must be <= rank of the tensor"),oF.runKernel(rq,{input:u},{dim:t})}}),u$=N({expm1_:function(e){let t={x:v(e,"x","expm1")};return oF.runKernel(rX,t)}}),u_=N({tile_:function(e,t){let u=v(e,"x","tile","string_or_numeric");return E(u.rank===t.length,()=>`Error in transpose: rank of input ${u.rank} must match length of reps ${t}.`),oF.runKernel(s2,{x:u},{reps:t})}}),uM=N({eye_:function(e,t,u,y="float32"){null==t&&(t=e);let w=me([e,t],y),T=e<=t?e:t;for(let e=0;e<T;++e)w.set(1,e,e);let $=lA(w.toTensor(),[e,t]);if(null==u)return $;if(1===u.length)return u_(uR($,0),[u[0],1,1]);if(2===u.length)return u_(uR(uR($,0),0),[u[0],u[1],1,1]);if(3===u.length)return u_(uR(uR(uR($,0),0),0),[u[0],u[1],u[2],1,1]);throw Error(`eye() currently supports only 1D and 2D batchShapes, but received ${u.length}D.`)}}),uF=N({floor_:function(e){let t={x:v(e,"x","floor","float32")};return oF.runKernel(rJ,t)}}),uO=N({gather_:function(e,t,u=0,y=0){let w=v(e,"x","gather"),T=v(t,"indices","gather","int32");return oF.runKernel(r6,{x:w,indices:T},{axis:u,batchDims:y})}}),uP=N({greater_:function(e,t){let u=v(e,"a","greater","string_or_numeric"),y=v(t,"b","greater","string_or_numeric");[u,y]=Oe(u,y),rt(u.shape,y.shape);let w={a:u,b:y};return oF.runKernel(ie,w)}}),uD=N({greaterEqual_:function(e,t){let u=v(e,"a","greaterEqual","string_or_numeric"),y=v(t,"b","greaterEqual","string_or_numeric");[u,y]=Oe(u,y),rt(u.shape,y.shape);let w={a:u,b:y};return oF.runKernel(it,w)}}),uz=N({imag_:function(e){let t={input:v(e,"input","imag")};return oF.runKernel(is,t)}}),uL=N({isFinite_:function(e){let t={x:v(e,"x","isFinite")};return oF.runKernel(iu,t)}}),uW=N({isInf_:function(e){let t={x:v(e,"x","isInf")};return oF.runKernel(ip,t)}}),uB=N({isNaN_:function(e){let t={x:v(e,"x","isNaN")};return oF.runKernel(ic,t)}}),uV=N({leakyRelu_:function(e,t=.2){let u={x:v(e,"x","leakyRelu")};return oF.runKernel(im,u,{alpha:t})}}),uU=N({less_:function(e,t){let u=v(e,"a","less","string_or_numeric"),y=v(t,"b","less","string_or_numeric");[u,y]=Oe(u,y),rt(u.shape,y.shape);let w={a:u,b:y};return oF.runKernel(ig,w)}}),uG=N({lessEqual_:function(e,t){let u=v(e,"a","lessEqual","string_or_numeric"),y=v(t,"b","lessEqual","string_or_numeric");[u,y]=Oe(u,y),rt(u.shape,y.shape);let w={a:u,b:y};return oF.runKernel(iy,w)}});function $2(e,t,u){if(u<=0)throw Error("The number of values should be positive.");return oF.runKernel(iA,{},{start:e,stop:t,num:u})}var uj=N({localResponseNormalization_:function(e,t=5,u=1,y=1,w=.5){let T=v(e,"x","localResponseNormalization");E(4===T.rank||3===T.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${T.rank}.`),E(Ka(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let $=T,M=!1;3===T.rank&&(M=!0,$=lA(T,[1,T.shape[0],T.shape[1],T.shape[2]]));let O={x:$},P=oF.runKernel(iR,O,{depthRadius:t,bias:u,alpha:y,beta:w});return M?lA(P,[P.shape[1],P.shape[2],P.shape[3]]):P}}),uq=N({log_:function(e){let t={x:v(e,"x","log","float32")};return oF.runKernel(ix,t)}}),uX=N({log1p_:function(e){let t={x:v(e,"x","log1p")};return oF.runKernel(ib,t)}});function VK(e){return E(qs(e),()=>"The f passed in grad(f) must be a function"),(t,u)=>{let y=v(t,"x","tf.grad","string_or_numeric"),w=null!=u?v(u,"dy","tf.grad"):null;return oF.tidy(()=>{let{value:t,grads:u}=oF.gradients(()=>e(y),[y],w);return null!=w&&xt(t.shape,w.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Nd(u),u[0]})}}function WK(e){return E(qs(e),()=>"The f passed in grads(f) must be a function"),(t,u)=>{E(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let y=ni(t,"args","tf.grads","string_or_numeric"),w=null!=u?v(u,"dy","tf.grads"):null;return oF.tidy(()=>{let{value:t,grads:u}=oF.gradients(()=>e(...y),y,w);return null!=w&&xt(t.shape,w.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Nd(u),u})}}function UK(e){return E(qs(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,u)=>{E(t instanceof oC,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),E(null==u||u instanceof oC,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:y,value:w}=oF.gradients(()=>e(t),[t],u);return Nd(y),{grad:y[0],value:w}}}function GK(e){return E(qs(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,u)=>{E(Array.isArray(t)&&t.every(e=>e instanceof oC),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),E(null==u||u instanceof oC,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let y=oF.gradients(()=>e(...t),t,u);return null!=u&&xt(y.value.shape,u.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Nd(y.grads),y}}function Vw(e,t){E(qs(e),()=>"The f passed in variableGrads(f) must be a function"),E(null==t||Array.isArray(t)&&t.every(e=>e instanceof oE),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let u=null!=t;if(!u)for(let e in t=[],oF.registeredVariables)t.push(oF.registeredVariables[e]);let y=u?t.filter(e=>!e.trainable):null,w=t.length;E((t=t.filter(e=>e.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${w} variables is trainable.`);let{value:T,grads:$}=oF.gradients(e,t,null,!0);E($.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),E(0===T.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${T.rank} tensor`);let M={};return t.forEach((e,t)=>{null!=$[t]&&(M[e.name]=$[t])}),null!=y&&y.forEach(e=>M[e.name]=null),{value:T,grads:M}}function Ir(e){return oF.customGrad(e)}function Nd(e){if(e.filter(e=>null==e).length>0)throw Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}var uY=N({neg_:function(e){let t={x:v(e,"x","neg")};return oF.runKernel(iX,t)}}),uJ=N({softplus_:function(e){let t={x:v(e,"x","softplus")};return oF.runKernel(sM,t)}}),uQ=N({logSigmoid_:function(e){let t=v(e,"x","logSigmoid");return Ir(e=>({value:uY(uJ(uY(e))),gradFunc:t=>o8(t,lS(uY(e)))}))(t)}}),u1=N({sub_:function(e,t){let u=v(e,"a","sub"),y=v(t,"b","sub");[u,y]=Oe(u,y);let w={a:u,b:y};return oF.runKernel(sJ,w)}}),u2=N({logSoftmax_:function(e,t=-1){let u=v(e,"logits","logSoftmax");if(-1===t&&(t=u.rank-1),t!==u.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${u.rank} and axis was ${t}`);return Ir((e,u)=>{let y=ug(e,t,!0),w=u1(e,y),T=u1(o5(w,"float32"),uq(uI(uE(w),t,!0)));return u([T]),{value:T,gradFunc:(e,u)=>{let[y]=u,w=uE(y);return u1(e,o8(uI(e,t,!0),w))}}})(u)}}),u3=N({logSumExp_:function(e,t=null,u=!1){let y=v(e,"x","logSumExp"),w=_i(t,y.shape),T=ug(y,w,!0),$=uq(uI(uE(u1(y,T)),w)),M=o7(lA(T,$.shape),$);if(u){let e=ii(M.shape,w);return lA(M,e)}return M}}),u7=N({logicalAnd_:function(e,t){let u=v(e,"a","logicalAnd","bool"),y=v(t,"b","logicalAnd","bool");return rt(u.shape,y.shape),oF.runKernel(iI,{a:u,b:y})}}),u6=N({logicalNot_:function(e){let t={x:v(e,"x","logicalNot","bool")};return oF.runKernel(iS,t)}}),u8=N({logicalOr_:function(e,t){let u=v(e,"a","logicalOr","bool"),y=v(t,"b","logicalOr","bool");return rt(u.shape,y.shape),oF.runKernel(iN,{a:u,b:y})}}),u9=N({logicalXor_:function(e,t){let u=v(e,"a","logicalXor","bool"),y=v(t,"b","logicalXor","bool");return rt(u.shape,y.shape),u7(u8(e,t),u6(u7(e,t)))}}),de=N({searchSorted_:function(e,t,u="left"){let y=v(e,"sortedSequence","searchSorted"),w=v(t,"values","searchSorted"),T=y.shape[y.shape.length-1],$=w.shape[w.shape.length-1],M=lA(y,[-1,T]),O=lA(w,[-1,$]);if(M.rank<2)throw Error("Sorted input argument must be at least 2-dimensional");if(M.shape[0]!==O.shape[0])throw Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(ze(O.shape)>=2147483648)throw Error("values tensor size must less than 2147483648");if(M.shape[1]>=2147483648)throw Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${M.shape[1]}`);return oF.runKernel(sI,{sortedSequence:M,values:O},{side:u})}});function P2(e,t){return de(e,t,"left")}var da=N({maxPool_:function(e,t,u,y,w){let T=v(e,"x","maxPool"),$=T,M=!1;3===T.rank&&(M=!0,$=lA(T,[1,T.shape[0],T.shape[1],T.shape[2]])),E(4===$.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${$.rank}.`),E(gr(u,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${u} and dilations '1'`),Lt("maxPool",y,w);let O={x:$},P=oF.runKernel(iO,O,{filterSize:t,strides:u,pad:y,dimRoundingMode:w});return M?lA(P,[P.shape[1],P.shape[2],P.shape[3]]):P}}),dn=N({maxPool3d_:function(e,t=[1,1,1],u,y,w,T="NDHWC"){let $=v(e,"x","maxPool3d"),M=$,O=!1;4===$.rank&&(O=!0,M=lA($,[1,$.shape[0],$.shape[1],$.shape[2],$.shape[3]])),E(5===M.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${M.rank}.`),E("NDHWC"===T,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${T}`),Lt("maxPool3d",y,w);let P={x:M},z=oF.runKernel(iD,P,{filterSize:t,strides:u,pad:y,dimRoundingMode:w,dataFormat:T});return O?lA(z,[z.shape[1],z.shape[2],z.shape[3],z.shape[4]]):z}}),di=N({maxPoolWithArgmax_:function(e,t,u,y,w=!1){let T={x:v(e,"x","maxPoolWithArgmax")},$=oF.runKernel(iL,T,{filterSize:t,strides:u,pad:y,includeBatchInIndex:w});return{result:$[0],indexes:$[1]}}}),ds=N({maximum_:function(e,t){let u=v(e,"a","maximum"),y=v(t,"b","maximum");[u,y]=Oe(u,y),"bool"===u.dtype&&(u=o5(u,"int32"),y=o5(y,"int32")),rt(u.shape,y.shape);let w={a:u,b:y};return oF.runKernel(iF,w)}}),dl=N({mean_:function(e,t=null,u=!1){let y={x:v(e,"x","mean")};return oF.runKernel(iW,y,{axis:t,keepDims:u})}});function Gr(e,t="float32"){if(Ct(e),"complex64"===t)return oL(Gr(e,"float32"),Gr(e,"float32"));let u=Gp(ze(e),t);return oF.makeTensor(u,e,t)}function Da(e,t="float32"){if(Ct(e),"complex64"===t)return oL(Da(e,"float32"),Gr(e,"float32"));let u=ml(ze(e),t);return oF.makeTensor(u,e,t)}function L2(e,t,{indexing:u="xy"}={}){if("xy"!==u&&"ij"!==u)throw TypeError(`${u} is not a valid third argument to meshgrid`);if(void 0===e)return[];let y=v(e,"x","meshgrid",e instanceof oC?e.dtype:"float32");if(void 0===t)return[y];let w=v(t,"y","meshgrid",t instanceof oC?t.dtype:"float32"),T=ze(y.shape),$=ze(w.shape);return"xy"===u?(y=lA(y,[1,-1]),w=lA(w,[-1,1]),[lI(Da([$,1],y.dtype),y),lI(w,Da([1,T],w.dtype))]):(y=lA(y,[-1,1]),w=lA(w,[1,-1]),[lI(y,Da([1,$],y.dtype)),lI(Da([T,1],w.dtype),w)])}var du=N({minimum_:function(e,t){let u=v(e,"a","minimum"),y=v(t,"b","minimum");[u,y]=Oe(u,y),"bool"===u.dtype&&(u=o5(u,"int32"),y=o5(y,"int32")),rt(u.shape,y.shape);let w={a:u,b:y};return oF.runKernel(iV,w)}}),dd=N({mirrorPad_:function(e,t,u){E("reflect"===u||"symmetric"===u,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${u}.`);let y=v(e,"x","mirrorPad");if(0===y.rank)throw Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");E(t.length===y.rank,()=>`Padding doesn't match input. Must be ${y.rank}. Got ${t.length}.`);let w="reflect"===u?1:0;for(let e=0;e<y.rank;e++)E(2===t[e].length,()=>"Invalid number of paddings. Must be length of 2 each."),E(t[e][0]>=0&&t[e][0]<=y.shape[e]-w&&t[e][1]>=0&&t[e][1]<=y.shape[e]-w,()=>`Padding in dimension ${e} cannot be greater than or equal to ${y.shape[e]-w} or less than 0 for input of shape ${y.shape}`);return oF.runKernel(iU,{x:y},{paddings:t,mode:u})}}),dc=N({mod_:function(e,t){let u=v(e,"a","mod"),y=v(t,"b","mod");[u,y]=Oe(u,y);let w={a:u,b:y};return oF.runKernel(iG,w)}}),dh=N({moments_:function(e,t=null,u=!1){let y=_i(t,(e=v(e,"x","moments")).shape),w=dl(e,y,u),T=w.shape;u||(T=ii(w.shape,y));let $=dl(ub(u1(o5(e,"float32"),lA(w,T))),y,u);return{mean:w,variance:$}}}),dg=N({multiRNNCell_:function(e,t,u,y){let w=v(t,"data","multiRNNCell"),T=ni(u,"c","multiRNNCell"),$=ni(y,"h","multiRNNCell"),M=w,O=[];for(let t=0;t<e.length;t++){let u=e[t](M,T[t],$[t]);O.push(u[0]),O.push(u[1]),M=u[1]}let P=[],z=[];for(let e=0;e<O.length;e+=2)P.push(O[e]),z.push(O[e+1]);return[P,z]}}),dx=N({multinomial_:function(e,t,u,y=!1){let w=v(e,"logits","multinomial"),T=w.size,$=w.rank;if(T<2)throw Error(`Error in multinomial: you need at least 2 outcomes, but got ${T}.`);if($>2)throw Error(`Rank of probabilities must be 1 or 2, but is ${$}`);u=u||Math.random();let M={logits:1===$?lA(w,[1,-1]):w},O={numSamples:t,seed:u,normalized:y},P=oF.runKernel(ij,M,O);return 1===$?lA(P,[P.size]):P}}),db=N({notEqual_:function(e,t){let u=v(e,"a","notEqual","string_or_numeric"),y=v(t,"b","notEqual","string_or_numeric");[u,y]=Oe(u,y),rt(u.shape,y.shape);let w={a:u,b:y};return oF.runKernel(iK,w)}}),dw=N({oneHot_:function(e,t,u=1,y=0,w="int32"){if(t<2)throw Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let T={indices:v(e,"indices","oneHot","int32")};return oF.runKernel(i1,T,{dtype:w,depth:t,onValue:u,offValue:y})}}),dI=N({onesLike_:function(e){let t={x:v(e,"x","onesLike")};return oF.runKernel(iQ,t)}}),dS=N({outerProduct_:function(e,t){let u=v(e,"v1","outerProduct"),y=v(t,"v2","outerProduct");return E(1===u.rank&&1===y.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${u.rank} and ${y.rank}.`),lI(lA(u,[-1,1]),lA(y,[1,-1]))}}),dN=N({pad_:function(e,t,u=0){let y=v(e,"x","pad");if(0===y.rank)throw Error("pad(scalar) is not defined. Pass non-scalar to pad");return oF.runKernel(i0,{x:y},{paddings:t,constantValue:u})}}),dC=N({pad1d_:function(e,t,u=0){return E(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),dN(e,[t],u)}}),dE=N({pad2d_:function(e,t,u=0){return E(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),dN(e,t,u)}}),dR=N({pad3d_:function(e,t,u=0){return E(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),dN(e,t,u)}}),d$=N({pad4d_:function(e,t,u=0){return E(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),dN(e,t,u)}}),d_=N({spaceToBatchND_:function(e,t,u){let y=v(e,"x","spaceToBatchND");return E(y.rank>=1+t.length,()=>`input rank ${y.rank} should be > than [blockShape] ${t.length}`),E(u.length===t.length,()=>`paddings.shape[0] ${u.length} must be equal to [blockShape] ${t.length}`),E(y.shape.reduce((e,y,w)=>w>0&&w<=t.length?e&&(y+u[w-1][0]+u[w-1][1])%t[w-1]==0:e,!0),()=>`input spatial dimensions ${y.shape.slice(1)} with paddings ${u.toString()} must be divisible by blockShapes ${t.toString()}`),oF.runKernel(sP,{x:y},{blockShape:t,paddings:u})}}),dM=N({pool_:function(e,t,u,y,w,T,$){var M;let O,P,z,L,W,B,j,q;null==w&&(w=[1,1]),null==T&&(T=1),0===y&&(y="valid");let Z=v(e,"x","maxPool"),Y=Z,J=!1;3===Z.rank&&(J=!0,Y=lA(Z,[1,Z.shape[0],Z.shape[1],Z.shape[2]])),E(gr(T,w),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${T} and dilations '${w}'`);let ee=Lw(Y.shape,t,T,w,y),ea=[ee.dilationHeight,ee.dilationWidth],en;en="same"===y?(P=(O=[ee.filterHeight,ee.filterWidth].map((e,t)=>e+(e-1)*(ea[t]-1)).map(e=>e-1)).map(e=>Math.floor(e/2)),z=O.map((e,t)=>e-P[t]),O.map((e,t)=>[P[t],z[t]])):[[0,0],[0,0]];let er=1===ea[0]&&1===ea[1],[ei,es]=(M=[ee.inHeight,ee.inWidth],L=en.map(e=>e[0]),B=M.concat(L,W=en.map(e=>e[1])),j=ea.map((e,t)=>(e-B[t]%e)%e),q=W.map((e,t)=>e+j[t]),[ea.map((e,t)=>[L[t],q[t]]),ea.map((e,t)=>[0,j[t]])]),el=er?y:"valid",eu=er?Y:d_(Y,ea,ei),ed=("avg"===u?()=>lx(eu,t,T,el,$):()=>da(eu,t,T,el,$))(),ep=er?ed:lR(ed,ea,es);return J?lA(ep,[ep.shape[1],ep.shape[2],ep.shape[3]]):ep}}),dF=N({prelu_:function(e,t){let u=v(e,"x","prelu"),y=v(t,"alpha","prelu");return oF.runKernel(i6,{x:u,alpha:y})}}),dO=N({prod_:function(e,t=null,u=!1){let y=v(e,"x","prod");"bool"===y.dtype&&(y=o5(y,"int32"));let w={x:y};return oF.runKernel(i8,w,{axis:t,keepDims:u})}}),dP=N({raggedGather_:function(e,t,u,y){let w=e.map((e,t)=>v(e,`tensors${t}`,"raggedGather","int32")),T=v(t,"paramsDenseValues","raggedGather"),$=v(u,"indices","raggedGather","int32"),M=oF.runKernel(i9,{paramsNestedSplits:w,paramsDenseValues:T,indices:$},{outputRaggedRank:y});return{outputNestedSplits:M.slice(0,M.length-1),outputDenseValues:M[M.length-1]}}}),dD=N({raggedRange_:function(e,t,u){let y=v(e,"starts","raggedRange"),w=v(t,"limits","raggedRange",y.dtype),T=v(u,"deltas","raggedRange",y.dtype),$=oF.runKernel(se,{starts:y,limits:w,deltas:T});return{rtNestedSplits:$[0],rtDenseValues:$[1]}}}),dz=N({raggedTensorToTensor_:function(e,t,u,y,w){let T=v(e,"shape","raggedTensorToTensor","int32"),$=v(t,"values","raggedTensorToTensor"),M=v(u,"defaultValue","raggedTensorToTensor",$.dtype),O=y.map((e,t)=>v(e,`tensors${t}`,"raggedTensorToTensor","int32"));return oF.runKernel(st,{shape:T,values:$,defaultValue:M,rowPartitionTensors:O},{rowPartitionTypes:w})}}),dL=N({rand_:function(e,t,u){Ct(e);let y=ze(e),w=null;if(null==u||"float32"===u)w=new Float32Array(y);else if("int32"===u)w=new Int32Array(y);else if("bool"===u)w=new Uint8Array(y);else throw Error(`Unknown data type ${u}`);for(let e=0;e<y;e++)w[e]=t();return oF.makeTensor(w,e,u)}}),dW=zp(n$()),dB={};qe(dB,{TEST_EPSILON_FLOAT16:()=>dV,createVideoElement:()=>Gq,encodeStrings:()=>function C1(e){for(let t=0;t<e.length;t++){let u=e[t];Array.isArray(u)?C1(u):e[t]=Ji(u)}return e},expectArrayBuffersEqual:()=>Uq,expectArraysClose:()=>Bq,expectArraysEqual:()=>Vq,expectNumbersClose:()=>b1,expectPromiseToFail:()=>zq,expectValuesInRange:()=>Wq,play:()=>Hq,testEpsilon:()=>Ld});var dV=.1;function Bq(e,t,u){return null==u&&(u=Ld()),Xw(e,t,(e,t)=>Yw(e,t,u))}function Ld(){return 32===oF.backend.floatPrecision()?.001:dV}function Xw(e,t,u){let y=!0;if((Pt(e)||Pt(t))&&(y=!1),Pt(e)&&Pt(t)&&(y=!0),y){let u=e.constructor.name,y=t.constructor.name;if(u!==y)throw Error(`Arrays are of different type. Actual: ${u}. Expected: ${y}`)}if(Array.isArray(e)&&Array.isArray(t)){let u=sr(e),y=sr(t);if(!br(u,y))throw Error(`Arrays have different shapes. Actual: [${u}]. Expected: [${y}]`)}let w=Pt(e)?e:Fs(e),T=Pt(t)?t:Fs(t);if(w.length!==T.length)throw Error(`Arrays have different lengths actual: ${w.length} vs expected: ${T.length}.
Actual:   ${w}.
Expected: ${T}.`);for(let e=0;e<T.length;++e){let t=w[e],y=T[e];if(!u(t,y))throw Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${y}.
Actual:   ${w}.
Expected: ${T}.`)}"undefined"!=typeof expect&&expect().nothing()}function zq(e,t){e().then(()=>t.fail(),()=>t()),"undefined"!=typeof expect&&expect().nothing()}function Vq(e,t){let u="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return zo(e)||zo(e[0])||zo(t)||zo(t[0])?Xw(e,u,(e,t)=>e==t):Xw(e,t,(e,t)=>Yw(e,t,0))}function b1(e,t,u){if(null==u&&(u=Ld()),!Yw(e,t,u))throw Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!=typeof expect&&expect().nothing()}function Yw(e,t,u){return!(isFinite(e)||isFinite(t))||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>u)}function Wq(e,t,u){for(let y=0;y<e.length;y++)if(e[y]<t||e[y]>u)throw Error(`Value out of range:${e[y]} low: ${t}, high: ${u}`)}function Uq(e,t){let u=new Float32Array(e),y=new Float32Array(t);if(u.length!==y.length)throw Error(`Expected ArrayBuffer to be of length ${y.length}, but it was ${u.length}`);for(let e=0;e<y.length;e++)if(u[e]!==y[e])throw Error(`Expected ArrayBuffer value at ${e} to be ${y[e]} but got ${u[e]} instead`)}function Gq(e){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise(e=>{t.addEventListener("loadeddata",u=>e(t)),t.load()})}async function Hq(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise(t=>{e.requestVideoFrameCallback(t)})}var dU=class{constructor(e,t,u,y,w){this.mean=e,this.stdDev=t,this.dtype=u,this.nextVal=NaN,this.truncated=y,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let T=w||Math.random();this.random=dW.alea(T.toString())}nextValue(){if(!isNaN(this.nextVal)){let e=this.nextVal;return this.nextVal=NaN,e}let e,t,u=!1;for(;!u;){let y,w,T;do T=(y=2*this.random()-1)*y+(w=2*this.random()-1)*w;while(T>=1||0===T);let $=Math.sqrt(-2*Math.log(T)/T);e=this.mean+this.stdDev*y*$,t=this.mean+this.stdDev*w*$,(!this.truncated||this.isValidTruncated(e))&&(u=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},dG=class{constructor(e,t,u,y){this.alpha=e,this.beta=1/t,this.dtype=u;let w=y||Math.random();this.randu=dW.alea(w.toString()),this.randn=new dU(0,1,u,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,u,y,w,T;for(;;){do y=this.randn.nextValue(),T=1+this.c*y;while(T<=0);if(T*=T*T,t=1-.331*(e=y*y)*e,u=.5*e+this.d*(1-T+Math.log(T)),(w=this.randu())<t||Math.log(w)<u)break}return T=1/this.beta*this.d*T,this.alpha<1&&(T*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(T)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}},dH=class{constructor(e=0,t=1,u,y){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=u,null==y&&(y=Math.random()),"number"==typeof y&&(y=y.toString()),!this.canReturnFloat()&&this.range<=1)throw Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=dW.alea(y)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}},dj=N({randomGamma_:function(e,t,u=1,y="float32",w){if(Ct(e),null==u&&(u=1),null==y&&(y="float32"),"float32"!==y&&"int32"!==y)throw Error(`Unsupported data type ${y}`);let T=new dG(t,u,y,w),$=me(e,y);for(let e=0;e<$.values.length;e++)$.values[e]=T.nextValue();return $.toTensor()}}),dq=N({randomNormal_:function(e,t=0,u=1,y,w){if(Ct(e),null!=y&&"bool"===y)throw Error(`Unsupported data type ${y}`);let T=new dU(t,u,y,!1,w),$=me(e,y);for(let e=0;e<$.values.length;e++)$.values[e]=T.nextValue();return $.toTensor()}}),dX=N({randomStandardNormal_:function(e,t,u){if(null!=t&&"bool"===t)throw Error(`Unsupported data type ${t}`);return dq(e,0,1,t,u)}}),dK=N({randomUniform_:function(e,t=0,u=1,y="float32",w){Ct(e);let T=me(e,y),$=new dH(t,u,null,w);for(let e=0;e<T.values.length;e++)T.values[e]=$.nextValue();return T.toTensor()}}),dZ=N({randomUniformInt_:function(e,t,u,y){return dK(e,t,u,"int32",y)}});function cu(e,t,u=1,y="float32"){if(0===u)throw Error("Cannot have a step of zero");return oF.runKernel(sa,{},{start:e,stop:t,step:u,dtype:y})}var dY=N({real_:function(e){let t={input:v(e,"input","real")};return oF.runKernel(sn,t)}}),dJ=N({reciprocal_:function(e){let t={x:v(e,"x","reciprocal")};return oF.runKernel(si,t)}}),dQ=N({relu_:function(e){let t={x:v(e,"x","relu")};return oF.runKernel(ss,t)}}),d1=N({relu6_:function(e){let t={x:v(e,"x","relu6")};return oF.runKernel(sg,t)}}),d2=N({reverse_:function(e,t){let u={x:v(e,"x","reverse")};return oF.runKernel(sy,u,{dims:t})}}),d0=N({reverse1d_:function(e){let t=v(e,"x","reverse");return E(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),d2(t,0)}}),d5=N({reverse2d_:function(e,t){let u=v(e,"x","reverse");return E(2===u.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${u.rank}.`),d2(u,t)}}),d3=N({reverse3d_:function(e,t){let u=v(e,"x","reverse");return E(3===u.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${u.rank}.`),d2(u,t)}}),d7=N({reverse4d_:function(e,t){let u=v(e,"x","reverse");return E(4===u.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${u.rank}.`),d2(u,t)}}),d4=N({round_:function(e){let t={x:v(e,"x","round")};return oF.runKernel(sA,t)}}),d6=N({rsqrt_:function(e){let t={x:v(e,"x","rsqrt","float32")};return oF.runKernel(sx,t)}}),d8=N({selu_:function(e){let t={x:v(e,"x","selu")};return oF.runKernel(sC,t)}}),d9=N({separableConv2d_:function(e,t,u,y,w,T=[1,1],$="NHWC"){let M=v(e,"x","separableConv2d"),O=v(t,"depthwiseFilter","separableConv2d"),P=v(u,"pointwiseFilter","separableConv2d"),z=M,L=!1;if(3===M.rank&&(L=!0,z=lA(M,[1,M.shape[0],M.shape[1],M.shape[2]])),"NCHW"===$)throw Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");E(4===z.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${z.rank}.`),E(4===O.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${O.rank}.`),E(4===P.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${O.rank}.`),E(1===P.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${P.shape[0]}.`),E(1===P.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${P.shape[1]}.`);let W=O.shape[2],B=O.shape[3];E(P.shape[2]===W*B,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${W*B}, but got ${P.shape[2]}.`);let j=lH(l8(z,O,y,w,$,T),P,1,"valid",$);return L?lA(j,[j.shape[1],j.shape[2],j.shape[3]]):j}}),A1=async function(e,t){let u=v(e,"x","setdiff1d"),y=v(t,"y","setdiff1d");E(u.dtype===y.dtype,()=>`x and y should have the same dtype, but got x (${u.dtype}) and y (${y.dtype}).`),E(1===u.rank,()=>`x should be 1D tensor, but got x (${u.shape}).`),E(1===y.rank,()=>`y should be 1D tensor, but got y (${y.shape}).`);let w=await u.data(),T=await y.data(),$=new Set(T),M=0;for(let e=0;e<w.length;e++)$.has(w[e])||M++;let O=new oI([M],u.dtype),P=new oI([M],"int32");for(let e=0,t=0;e<w.length;e++)$.has(w[e])||(O.values[t]=w[e],P.values[t]=e,t++);return[O.toTensor(),P.toTensor()]},pt=N({sign_:function(e){let t={x:v(e,"x","sign")};return oF.runKernel(s$,t)}}),pa=N({sin_:function(e){let t={x:v(e,"x","sin","float32")};return oF.runKernel(sE,t)}}),pn=N({sinh_:function(e){let t={x:v(e,"x","sinh")};return oF.runKernel(sR,t)}}),pr=N({slice1d_:function(e,t,u){let y=v(e,"x","slice1d");return E(1===y.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${y.rank} tensor`),lN(y,[t],[u])}}),pi=N({slice2d_:function(e,t,u){let y=v(e,"x","slice2d");return E(2===y.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${y.rank} tensor`),lN(y,t,u)}}),ps=N({slice3d_:function(e,t,u){let y=v(e,"x","slice3d");return E(3===y.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${y.rank} tensor`),lN(y,t,u)}}),po=N({slice4d_:function(e,t,u){let y=v(e,"x","slice4d");return E(4===y.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${y.rank} tensor`),lN(y,t,u)}}),pl=N({softmax_:function(e,t=-1){let u=v(e,"logits","softmax","float32");if(-1===t&&(t=u.rank-1),t!==u.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${u.rank} and dim was ${t}`);let y={dim:t};return oF.runKernel(sL,{logits:u},y)}}),pu=N({fft_:function(e){return E("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`),oF.runKernel(rK,{input:e})}}),pd=N({ifft_:function(e){return E("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`),oF.runKernel(ir,{input:e})}}),pc=N({irfft_:function(e){let t=e.shape[e.shape.length-1],u=e.size/t,y;if(t<=2)y=pd(lA(e,[u,t]));else{let w=[u,2*(t-1)],T=lA(dY(e),[u,t]),$=lA(uz(e),[u,t]),M=d2(lN(T,[0,1],[u,t-2]),1),O=o8(d2(lN($,[0,1],[u,t-2]),1),ke(-1));y=pd(lA(oL(lk([T,M],1),lk([$,O],1)),[w[0],w[1]]))}if(y=dY(y),3===e.rank&&0!==e.shape[0]){let t=y,u=e.shape[0];y=lA(y,[u,y.shape[0]/u,y.shape[1]]),t.dispose()}return y}}),ph=N({split_:function(e,t,u=0){let y={x:v(e,"x","split")};return oF.runKernel(sD,y,{numOrSizeSplits:t,axis:u})}}),pf=N({rfft_:function(e,t){E("float32"===e.dtype,()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let u=e.shape[e.shape.length-1],y=e.size/u,w;if(null!=t&&t<u){let y=e.shape.map(e=>0),T=e.shape.map(e=>e);T[e.shape.length-1]=t,w=lN(e,y,T),u=t}else if(null!=t&&t>u){let y=e.shape.map(e=>e);y[e.shape.length-1]=t-u,w=lk([e,Gr(y)],e.shape.length-1),u=t}else w=e;let T=uo(w),$=pu(lA(oL(w,T),[y,u])),M=Math.floor(u/2)+1,O=dY($),P=uz($),z=ph(O,[M,u-M],O.shape.length-1),L=ph(P,[M,u-M],P.shape.length-1),W=w.shape.slice();return W[w.shape.length-1]=M,lA(oL(z[0],L[0]),W)}}),pm=N({squaredDifference_:function(e,t){let u=v(e,"a","squaredDifference"),y=v(t,"b","squaredDifference");[u,y]=Oe(u,y),rt(u.shape,y.shape);let w={a:u,b:y};return oF.runKernel(sH,w,{})}}),pg=N({squeeze_:function(e,t){let u=v(e,"x","squeeze","string_or_numeric");return lA(u,JC(u.shape,t).newShape)}}),py=N({stack_:function(e,t=0){let u=ni(e,"tensors","stack","string_or_numeric");return E(u.length>=1,()=>"Pass at least one tensor to tf.stack"),u.length>0&&E(t<=u[0].rank,()=>"Axis must be <= rank of the tensor"),oF.runKernel(i2,u,{axis:t})}}),pA=N({step_:function(e,t=0){let u={x:v(e,"x","step")};return oF.runKernel(oa,u,{alpha:t})}}),px=N({stridedSlice_:function(e,t,u,y,w=0,T=0,$=0,M=0,O=0){let P={x:v(e,"x","stridedSlice","string_or_numeric")};return oF.runKernel(sX,P,{begin:t,end:u,strides:y,beginMask:w,endMask:T,ellipsisMask:$,newAxisMask:M,shrinkAxisMask:O})}}),pb=N({tan_:function(e){let t={x:v(e,"x","tan","float32")};return oF.runKernel(sQ,t)}});function Jt(e,t){io(e);let u=sr(e,t);if(1!==u.length)throw Error("tensor1d() requires values to be a flat/TypedArray");return wr(e,null,u,t)}function mu(e,t,u){if(io(e),null!=t&&2!==t.length)throw Error("tensor2d() requires shape to have two numbers");let y=sr(e,u);if(2!==y.length&&1!==y.length)throw Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===y.length&&null==t)throw Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return wr(e,t,y,u)}function jd(e,t,u){if(io(e),null!=t&&3!==t.length)throw Error("tensor3d() requires shape to have three numbers");let y=sr(e,u);if(3!==y.length&&1!==y.length)throw Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===y.length&&null==t)throw Error("tensor3d() requires shape to be provided when `values` are a flat array");return wr(e,t,y,u)}function G1(e,t,u){if(io(e),null!=t&&4!==t.length)throw Error("tensor4d() requires shape to have four numbers");let y=sr(e,u);if(4!==y.length&&1!==y.length)throw Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===y.length&&null==t)throw Error("tensor4d() requires shape to be provided when `values` are a flat array");return wr(e,t,y,u)}function H1(e,t,u){if(io(e),null!=t&&5!==t.length)throw Error("tensor5d() requires shape to have five numbers");let y=sr(e,u);if(5!==y.length&&1!==y.length)throw Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===y.length&&null==t)throw Error("tensor5d() requires shape to be provided when `values` are a flat array");return wr(e,t,y,u)}function K1(e,t,u){if(io(e),null!=t&&6!==t.length)throw Error("tensor6d() requires shape to have six numbers");let y=sr(e,u);if(6!==y.length&&1!==y.length)throw Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===y.length&&null==t)throw Error("tensor6d() requires shape to be provided when `values` are a flat array");return wr(e,t=t||y,y,u)}var pw={};function Qw(e,t,u){let y=t.rank>1?t.shape[t.rank-1]:1,w=t.rank>1?t.rank-1:1,T=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${u.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${y}, and batchDim: ${w}.`;if(u.rank<w)throw Error(T+` update.rank < ${w}. `);if(e.length<y+(u.rank-w))throw Error(T+` Output shape length < ${y+(u.rank-w)}`);if(u.rank!==w+e.length-y)throw Error(T+` update.rank != ${w+e.length-y}`);for(let e=0;e<w;++e)if(u.shape[e]!==t.shape[e])throw Error(T+` updates.shape[${e}] (${u.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<u.rank-w;++t)if(u.shape[t+w]!==e[t+y])throw Error(T+` updates.shape[${t+w}] (${u.shape[t+w]}) != shape[${t+w}] (${e[t+w]})`)}function lc(e,t,u){if(t.rank<1)throw Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(u.length<1)throw Error(`Output rank must be greater or equal to 1, but got shape: ${u}`);if(0===u.length){if(0===t.size)throw Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Qw(u,t,e)}function q1(e,t,u){let y=t.shape.length,w=y>1?t.shape[y-1]:1,T=u.length,$=1;for(let e=w;e<T;++e)$*=u[e];let M=w<1?1:w,O=ze(t.shape)/M,P=[...js(u.slice(0,w)),1];return{sliceRank:w,numUpdates:O,sliceSize:$,strides:P,outputSize:ze(u)}}qe(pw,{calculateShapes:()=>q1,validateInput:()=>lc,validateUpdateShape:()=>Qw});var pI=N({tensorScatterUpdate_:function(e,t,u){let y=v(e,"tensor","tensorScatterupdate"),w=v(t,"indices","tensorScatterupdate","int32"),T=v(u,"updates","tensorScatterupdate");if(lc(T,w,y.shape),y.dtype!==T.dtype)throw Error(`tensor and updates must have the same dtype, instead they are ${y.dtype} and ${T.dtype}.`);return oF.runKernel(sw,{tensor:y,indices:w,updates:T},{})}}),pS=N({topk_:function(e,t=1,u=!0){let y=v(e,"x","topk");if(0===y.rank)throw Error("topk() expects the input to be of rank 1 or higher");let w=y.shape[y.shape.length-1];if(t<0)throw Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>w)throw Error(`'k' passed to topk() must be <= the last dimension (${w}) but got ${t}`);let[T,$]=oF.runKernel(s3,{x:y},{k:t,sorted:u});return{values:T,indices:$}}}),pN=N({truncatedNormal_:function(e,t=0,u=1,y,w){if(Ct(e),null!=y&&"bool"===y)throw Error("Unsupported data type $ { dtype }");let T=new dU(t,u,y,!0,w),$=me(e,y);for(let e=0;e<$.values.length;e++)$.values[e]=T.nextValue();return $.toTensor()}}),pC=N({unique_:function(e,t=0){let u=v(e,"x","unique","string_or_numeric");E(u.rank>0,()=>"The input tensor must be at least 1D");let[y,w]=oF.runKernel(s6,{x:u},{axis:t});return{values:y,indices:w}}}),pE=N({unsortedSegmentSum_:function(e,t,u){let y=v(e,"x","unsortedSegmentSum"),w=v(t,"segmentIds","unsortedSegmentSum","int32");return E(Ka(u),()=>"numSegments must be of dtype int"),oF.runKernel(s9,{x:y,segmentIds:w},{numSegments:u})}}),pR=N({unstack_:function(e,t=0){let u=v(e,"x","unstack","string_or_numeric");return E(t>=-u.shape.length&&t<u.shape.length,()=>`Axis = ${t} is not in [-${u.shape.length}, ${u.shape.length})`),oF.runKernel(s8,{value:u},{axis:t})}});function J1(e,t){return de(e,t,"right")}function eN(e,t=!0,u,y){return oF.makeVariable(e,t,u,y)}function Xd(e,t){let u=[];for(let e=0;e<t.length;e++)t[e]&&u.push(e);let y=me(e,"int32"),w=me([u.length,e.length],"int32");for(let t=0;t<u.length;t++){let T=y.indexToLoc(u[t]),$=t*e.length;w.values.set(T,$)}return w.toTensor()}var Yd=async function(e){let t=v(e,"condition","whereAsync","bool"),u=await t.data(),y=Xd(t.shape,u);return e!==t&&t.dispose(),y},L6=async function(e,t,u){let y=v(e,"tensor","boolMask"),w=v(t,"mask","boolMask","bool"),T=null==u?0:u,$=w.rank,M=y.shape;E($>0,()=>"mask cannot be scalar"),xt(M.slice(T,T+$),w.shape,"mask's shape must match the first K dimensions of tensor's shape,");let O=1;for(let e=T;e<T+$;e++)O*=M[e];let P=lA(y,M.slice(0,T).concat([O],M.slice(T+$))),z=lA(w,[-1]),L=await Yd(z),W=pg(L,[1]),B=uO(P,W,T);return e!==y&&y.dispose(),t!==w&&w.dispose(),W.dispose(),P.dispose(),z.dispose(),L.dispose(),B},p$=N({transpose_:function(e,t,u){let y=v(e,"x","transpose");if(null==t&&(t=y.shape.map((e,t)=>t).reverse()),E(y.rank===t.length,()=>`Error in transpose: rank of input ${y.rank} must match length of perm ${t}.`),t.forEach(e=>{E(e>=0&&e<y.rank,()=>`All entries in 'perm' must be between 0 and ${y.rank-1} but got ${t}`)}),y.rank<=1)return y.clone();let w={perm:t};return"complex64"===y.dtype?De(()=>{let e=dY(y),t=uz(y);return e=oF.runKernel(s4,{x:e},w),t=oF.runKernel(s4,{x:t},w),u&&(t=uY(t)),oL(e,t)}):oF.runKernel(s4,{x:y},w)}}),p_=N({movingAverage_:function(e,t,u,y,w=!0){let T=v(e,"v","movingAverage"),$=v(t,"x","movingAverage"),M=v(u,"decay","movingAverage");ww(T,$),E(br(T.shape,$.shape),()=>"Shape mismatch in v and x");let O=ke(1),P=u1(O,M),z=o8(u1($,T),P);return w&&(E(null!=y,()=>"When using zeroDebias: true, step is required."),z=o6(z,u1(O,uA(M,v(y,"step","movingAverage"))))),o7(T,z)}}),pM=N({scatterND_:function(e,t,u){Ct(u);let y=v(e,"indices","scatterND","int32"),w=v(t,"updates","scatterND");return lc(w,y,u),oF.runKernel(sb,{indices:y,updates:w},{shape:u})}}),pF=N({sparseToDense_:function(e,t,u,y=0){Ct(u);let w=v(e,"sparseIndices","sparseToDense","int32"),T=v(t,"sparseValues","sparseToDense","string_or_numeric"),$=v(y,"defaultValue","sparseToDense",T.dtype);return!function(e,t,u,y){if("int32"!==e.dtype)throw Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let w=e.rank>0?e.shape[0]:1,T=e.rank>1?e.shape[1]:1;if(u.length!==T)throw Error(`outputShape has incorrect number of elements:, ${u.length}, should be: ${T}.`);let $=t.size;if(!(0===t.rank||1===t.rank&&$===w))throw Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${w}]`);if(t.dtype!==y.dtype)throw Error("sparseValues.dtype must match defaultValues.dtype")}(w,T,u,$),oF.runKernel(sG,{sparseIndices:w,sparseValues:T,defaultValue:$},{outputShape:u})}}),pO=N({gatherND_:function(e,t){let u=v(t,"indices","gatherND","int32"),y={params:v(e,"x","gatherND","string_or_numeric"),indices:u};return oF.runKernel(r8,y)}}),pP=N({dropout_:function(e,t,u,y){let w=v(e,"x","dropout");if(E("float32"===w.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${w.dtype} tensor instead.`),E(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof oC?w.clone():w;let T=function(e,t){if(null==t)return e.shape.slice();if(br(e.shape,t))return t;if(e.shape.length===t.length){let u=[];for(let y=0;y<e.shape.length;y++)null==t[y]&&null!=e.shape[y]?u.push(e.shape[y]):u.push(t[y]);return u}return t}(w,u),$=1-t;return o8(w,o6(uF(o7(dK(T,0,1,"float32",y),$)),$))}});function Zw(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function $l(e,t,u){let y=1-e%2,w=new Float32Array(e);for(let T=0;T<e;++T){let $=2*Math.PI*T/(e+y-1);w[T]=t-u*Math.cos($)}return Jt(w,"float32")}var Z6=async function(e,t,u=1){let y=v(e,"predictions","inTopK"),w=v(t,"targets","inTopK");E(y.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${y.rank}`),E(y.rank-1===w.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${y.rank} and targets rank ${w.rank}`),xt(y.shape.slice(0,y.shape.length-1),w.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let T=y.shape[y.shape.length-1];E(u>0&&u<=T,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${T}), but got ${u}`);let $=await y.data(),M=await w.data(),[O,P]=[$.length/T,T],z=Xm("bool",O);for(let e=0;e<O;e++){let t=e*P,y=$.subarray(t,t+P),w=[];for(let e=0;e<y.length;e++)w.push({value:y[e],index:e});w.sort((e,t)=>t.value-e.value),z[e]=0;for(let t=0;t<u;t++)if(w[t].index===M[e]){z[e]=1;break}}return e!==y&&y.dispose(),t!==w&&w.dispose(),ar(z,w.shape,"bool")},pD={};qe(pD,{conv2d:()=>pL,depthwiseConv2d:()=>pV,matMul:()=>pU});var pz=N({conv2DBackpropFilter_:function(e,t,u,y,w,T="NHWC",$){let M=e;3===e.rank&&(M=lA(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let O=t;3===O.rank&&(O=lA(t,[1,t.shape[0],t.shape[1],t.shape[2]])),E(4===M.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${M.shape}.`),E(4===O.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${O.shape}.`),E(4===u.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${u}.`);let P="NHWC"===T?M.shape[3]:M.shape[1],z="NHWC"===T?O.shape[3]:O.shape[1];E(P===u[2],()=>`Error in conv2dDerFilter: depth of input ${P}) must match input depth in filter (${u[2]}.`),E(z===u[3],()=>`Error in conv2dDerFilter: depth of dy (${z}) must match output depth for filter (${u[3]}).`),Lt("conv2dDerFilter",w,$);let L={x:M,dy:O};return oF.runKernel(rm,L,{strides:y,pad:w,dataFormat:T,dimRoundingMode:$,filterShape:u})}});function Xu(e,t,u){if(null==u||"linear"===u)return e;if("relu"===u)return o8(e,pA(t));throw Error(`Cannot compute gradient for fused activation ${u}.`)}function Yu(e,t){let u=t,y=xd(e.shape,t.shape);return y.length>0&&(u=uI(u,y)),lA(u,e.shape)}function Qu(e,t,u,y){if("linear"===t)return e;if("relu"===t)return dQ(e);if("elu"===t)return uc(e);if("relu6"===t)return d1(e);if("prelu"===t)return dF(e,u);if("leakyrelu"===t)return uV(e,y);if("sigmoid"===t)return lS(e);throw Error(`Unknown fused activation ${t}.`)}var Zu=(e,t)=>!(e>0)||"linear"===t,pL=N({fusedConv2d_:function({x:e,filter:t,strides:u,pad:y,dataFormat:w="NHWC",dilations:T=[1,1],dimRoundingMode:$,bias:M,activation:O="linear",preluActivationWeights:P,leakyreluAlpha:z}){let L;if(O=O||"linear",!1===Zu(oF.state.gradientDepth,O)){E("NHWC"===w,()=>`Error in fused conv2d: got dataFormat of ${w} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let L=lH(e,t,u,y,w,T,$);return null!=M&&(L=o7(L,M)),Qu(L,O,P,z)}let W=v(e,"x","conv2d","float32"),B=v(t,"filter","conv2d","float32"),j=W,q=!1;3===W.rank&&(q=!0,j=lA(W,[1,W.shape[0],W.shape[1],W.shape[2]])),E(4===j.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${j.rank}.`),E(4===B.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${B.rank}.`),Lt("fused conv2d",y,$);let Z="NHWC"===w?j.shape[3]:j.shape[1];E(B.shape[2]===Z,()=>`Error in conv2d: depth of input (${Z}) must match input depth for filter ${B.shape[2]}.`),E(gr(u,T),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${u} and dilations '${T}'`);let Y=zu(j.shape,B.shape,u,T,y,$),J;if(null!=M&&(J=v(M,"bias","fused conv2d"),[J]=Oe(J,W),"NHWC"===w?rt(Y.outShape,J.shape):(E(J.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${J.shape.length}.`),E(0===J.shape.length||J.shape[0]===Y.outChannels||1===J.shape[0],()=>`Error in fused conv2d: bias shape (${J.shape}) is not compatible with the number of output channels (${Y.outChannels})`))),null!=P){let e=P.shape;if(E(e.length<=1||3===e.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`),1===e.length)E(1===e[0]||e[0]===Y.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${Y.outChannels}).`);else if(3===e.length)try{rt(e,Y.outShape)}catch(t){throw Error(`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${Y.outShape}).`)}L=v(P,"prelu weights","fused conv2d")}let C=(e,t)=>{E("NHWC"===w,()=>`Error in gradient of fused conv2D: got dataFormat of ${w} but only NHWC is currently supported.`);let[$,M,P,z]=t,L=Xu(e,P,O);E(Bu(T),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${T}'`);let W=[lq(M.shape,L,$,u,y),pz(M,L,$.shape,u,y)];if(null!=z){let e=Yu(z,L);W.push(e)}return W},ee={x:j,filter:B,bias:J,preluActivationWeights:L},ea={strides:u,pad:y,dataFormat:w,dilations:T,dimRoundingMode:$,activation:O,leakyreluAlpha:z};return null==M?Ir((e,t,u)=>{let y=oF.runKernel(oo,ee,ea);return u([t,e,y]),q&&(y=lA(y,[y.shape[1],y.shape[2],y.shape[3]])),{value:y,gradFunc:C}})(j,B):Ir((e,t,u,y)=>{let w=oF.runKernel(oo,ee,ea);return y([t,e,w,u]),q&&(w=lA(w,[w.shape[1],w.shape[2],w.shape[3]])),{value:w,gradFunc:C}})(j,B,J)}}),pW=N({depthwiseConv2dNativeBackpropFilter_:function(e,t,u,y,w,T=[1,1],$){let M=e;3===e.rank&&(M=lA(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let O=t;3===O.rank&&(O=lA(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let P={x:M,dy:O};return oF.runKernel(r_,P,{strides:y,pad:w,dimRoundingMode:$,dilations:T,filterShape:u})}}),pB=N({depthwiseConv2dNativeBackpropInput_:function(e,t,u,y,w,T=[1,1],$){let M=t,O=!1;3===t.rank&&(O=!0,M=lA(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let P={dy:M,filter:u},z=oF.runKernel(rM,P,{strides:y,pad:w,dimRoundingMode:$,dilations:T,inputShape:e});return O?lA(z,[z.shape[1],z.shape[2],z.shape[3]]):z}}),pV=N({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:u,pad:y,dataFormat:w="NHWC",dilations:T=[1,1],dimRoundingMode:$,bias:M,activation:O="linear",preluActivationWeights:P,leakyreluAlpha:z}){let L;if(!1===Zu(oF.state.gradientDepth,O)){let L=l8(e,t,u,y,w,T,$);return null!=M&&(L=o7(L,M)),Qu(L,O,P,z)}let W=v(e,"x","depthwiseConv2d","float32"),B=v(t,"filter","depthwiseConv2d","float32"),j=W,q=!1;3===W.rank&&(q=!0,j=lA(W,[1,W.shape[0],W.shape[1],W.shape[2]])),E(4===j.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${j.rank}.`),E(4===B.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${B.rank}.`),E(j.shape[3]===B.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${j.shape[3]}) must match the inChannels dimension in filter ${B.shape[2]}.`),null==T&&(T=[1,1]),E(gr(u,T),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${T}'`),Lt("fused depthwiseConv2d",y,$);let Z=zu(j.shape,B.shape,u,T,y,$,!0),Y;null!=M&&(Y=v(M,"bias","fused conv2d"),[Y]=Oe(Y,W),rt(Z.outShape,Y.shape)),null!=P&&(L=v(P,"prelu weights","fused depthwiseConv2d"));let b=(e,t)=>{E(Bu(T),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${T}'`);let[w,M,P,z]=t,L=Xu(e,P,O),W=pB(M.shape,L,w,u,y,T,$),B=pW(M,L,w.shape,u,y,T,$);return null!=z?[W,B,Yu(Y,L)]:[W,B]},J={x:j,filter:B,bias:Y,preluActivationWeights:L},ee={strides:u,pad:y,dataFormat:w,dilations:T,dimRoundingMode:$,activation:O,leakyreluAlpha:z};return null==M?Ir((e,t,u)=>{let y=oF.runKernel(ol,J,ee);return u([t,e,y]),q&&(y=lA(y,[y.shape[1],y.shape[2],y.shape[3]])),{value:y,gradFunc:b}})(j,B):Ir((e,t,u,y)=>{let w=oF.runKernel(ol,J,ee);return y([t,e,w,u]),q&&(w=lA(w,[w.shape[1],w.shape[2],w.shape[3]])),{value:w,gradFunc:b}})(j,B,Y)}}),pU=N({fusedMatMul_:function({a:e,b:t,transposeA:u=!1,transposeB:y=!1,bias:w,activation:T="linear",preluActivationWeights:$,leakyreluAlpha:M=.2}){let O;if(!1===Zu(oF.state.gradientDepth,T)){let O=lI(e,t,u,y);return null!=w&&(O=o7(O,w)),Qu(O,T,$,M)}let P=v(e,"a","fused matMul"),z=v(t,"b","fused matMul");[P,z]=Oe(P,z);let L=u?P.shape[P.rank-2]:P.shape[P.rank-1],W=y?z.shape[z.rank-1]:z.shape[z.rank-2],B=u?P.shape[P.rank-1]:P.shape[P.rank-2],j=y?z.shape[z.rank-2]:z.shape[z.rank-1],q=P.shape.slice(0,-2),Z=z.shape.slice(0,-2),Y=ze(q),J=ze(Z);E(L===W,()=>`Error in fused matMul: inner shapes (${L}) and (${W}) of Tensors with shapes ${P.shape} and ${z.shape} and transposeA=${u} and transposeB=${y} must match.`);let ee=rt(P.shape.slice(0,-2),z.shape.slice(0,-2)).concat([B,j]),ea=u?lA(P,[Y,L,B]):lA(P,[Y,B,L]),en=y?lA(z,[J,j,W]):lA(z,[J,W,j]),er;null!=w&&(er=v(w,"bias","fused matMul"),[er]=Oe(er,P),rt(ee,er.shape)),null!=$&&(O=v($,"prelu weights","fused matMul"));let R=(e,t)=>{let[$,M,O,P]=t,z=Xu(lA(e,O.shape),O,T),L,W;return(u||y?!u&&y?(L=lI(z,M,!1,!1),W=lI(z,$,!0,!1)):u&&!y?(L=lI(M,z,!1,!0),W=lI($,z,!1,!1)):(L=lI(M,z,!0,!0),W=lI(z,$,!0,!0)):(L=lI(z,M,!1,!0),W=lI($,z,!0,!1)),null!=w)?[L,W,Yu(P,z)]:[L,W]},ei={a:ea,b:en,bias:er,preluActivationWeights:O},es={transposeA:u,transposeB:y,activation:T,leakyreluAlpha:M};return null==w?Ir((e,t,u)=>{let y=oF.runKernel(os,ei,es);return u([e,t,y]),{value:lA(y,ee),gradFunc:R}})(ea,en):Ir((e,t,u,y)=>{let w=oF.runKernel(os,ei,es);return y([e,t,w,u]),{value:lA(w,ee),gradFunc:R}})(ea,en,er)}}),pG=N({hammingWindow_:function(e){return $l(e,.54,.46)}}),pH=N({hannWindow_:function(e){return $l(e,.5,.5)}}),pj=N({frame_:function(e,t,u,y=!1,w=0){let T=0,$=[];for(;T+t<=e.size;)$.push(lN(e,T,t)),T+=u;if(y)for(;T<e.size;){let y=T+t-e.size,M=lk([lN(e,T,t-y),$a([y],w)]);$.push(M),T+=u}return 0===$.length?mu([],[0,t]):lA(lk($),[$.length,t])}}),pq=N({stft_:function(e,t,u,y,w=pH){return null==y&&(y=Zw(t)),pf(o8(pj(e,t,u),w(t)),y)}}),pX=N({cropAndResize_:function(e,t,u,y,w="bilinear",T=0){let $=v(e,"image","cropAndResize"),M=v(t,"boxes","cropAndResize","float32"),O=v(u,"boxInd","cropAndResize","int32"),P=M.shape[0];return E(4===$.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${$.rank}.`),E(2===M.rank&&4===M.shape[1],()=>`Error in cropAndResize: boxes must be have size [${P},4] but had shape ${M.shape}.`),E(1===O.rank&&O.shape[0]===P,()=>`Error in cropAndResize: boxInd must be have size [${P}] but had shape ${M.shape}.`),E(2===y.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${y.length}.`),E(y[0]>=1&&y[1]>=1,()=>`cropSize must be atleast [1,1], but was ${y}`),E("bilinear"===w||"nearest"===w,()=>`method must be bilinear or nearest, but was ${w}`),oF.runKernel(rC,{image:$,boxes:M,boxInd:O},{method:w,extrapolationValue:T,cropSize:y})}}),pY=N({flipLeftRight_:function(e){let t=v(e,"image","flipLeftRight","float32");return E(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`),oF.runKernel(rY,{image:t},{})}}),pJ=N({grayscaleToRGB_:function(e){let t=v(e,"image","grayscaleToRGB"),u=t.rank-1,y=t.shape[u];E(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),E(1===y,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${y}.`);let w=Array(t.rank);return w.fill(1,0,u),w[u]=3,u_(t,w)}}),pQ=N({rgbToGrayscale_:function(e){let t=v(e,"image","RGBToGrayscale"),u=t.rank-1,y=t.shape[u];E(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),E(3===y,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${y}.`);let w=t.dtype,T=o5(t,"float32"),$=Jt([.2989,.587,.114]),M;switch(t.rank){case 2:M=ud("ij,j->i",T,$);break;case 3:M=ud("ijk,k->ij",T,$);break;case 4:M=ud("ijkl,l->ijk",T,$);break;case 5:M=ud("ijklm,m->ijkl",T,$);break;case 6:M=ud("ijklmn,n->ijklm",T,$);break;default:throw Error("Not a valid tensor rank.")}return o5(M=uR(M,-1),w)}}),p1=N({rotateWithOffset_:function(e,t,u=0,y=.5){let w=v(e,"image","rotateWithOffset","float32");return E(4===w.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${w.rank}.`),oF.runKernel(or,{image:w},{radians:t,fillValue:u,center:y})}});function Eo(e,t,u,y,w,T){null==y&&(y=.5),null==w&&(w=Number.NEGATIVE_INFINITY),null==T&&(T=0);let $=e.shape[0];return u=Math.min(u,$),E(0<=y&&y<=1,()=>`iouThreshold must be in [0, 1], but was '${y}'`),E(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),E(4===e.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),E(1===t.rank,()=>"scores must be a 1D tensor"),E(t.shape[0]===$,()=>`scores has incompatible shape with boxes. Expected ${$}, but was ${t.shape[0]}`),E(0<=T&&T<=1,()=>`softNmsSigma must be in [0, 1], but was '${T}'`),{maxOutputSize:u,iouThreshold:y,scoreThreshold:w,softNmsSigma:T}}var p2=N({nonMaxSuppression_:function(e,t,u,y=.5,w=Number.NEGATIVE_INFINITY){let T=v(e,"boxes","nonMaxSuppression","float32"),$=v(t,"scores","nonMaxSuppression","float32"),M=Eo(T,$,u,y,w),O={maxOutputSize:u=M.maxOutputSize,iouThreshold:y=M.iouThreshold,scoreThreshold:w=M.scoreThreshold};return oF.runKernel(iZ,{boxes:T,scores:$},O)}});function gj(e,t){return e>t?1:e<t?-1:0}function Jd(e,t,u,y,w){return eS(e,t,u,y,w,0)}function ef(e,t,u,y,w,T){return eS(e,t,u,y,w,0,!1,T,!0)}function tf(e,t,u,y,w,T){return eS(e,t,u,y,w,T,!0)}function eS(e,t,u,y,w,T,$=!1,M=!1,O=!1){let P=[];for(let e=0;e<t.length;e++)t[e]>w&&P.push({score:t[e],boxIndex:e,suppressBeginIndex:0});P.sort(yN);let z=T>0?-.5/T:0,L=[],W=[];for(;L.length<u&&P.length>0;){let t=P.pop(),{score:u,boxIndex:T,suppressBeginIndex:$}=t;if(u<w)break;let M=!1;for(let u=L.length-1;u>=$;--u){let $=function(e,t,u){let y=e.subarray(4*t,4*t+4),w=e.subarray(4*u,4*u+4),T=Math.min(y[0],y[2]),$=Math.min(y[1],y[3]),M=Math.max(y[0],y[2]),O=Math.max(y[1],y[3]),P=Math.min(w[0],w[2]),z=Math.min(w[1],w[3]),L=Math.max(w[0],w[2]),W=Math.max(w[1],w[3]),B=(M-T)*(O-$),j=(L-P)*(W-z);if(B<=0||j<=0)return 0;let q=Math.max(Math.min(M,L)-Math.max(T,P),0)*Math.max(Math.min(O,W)-Math.max($,z),0);return q/(B+j-q)}(e,T,L[u]);if($>=y){M=!0;break}if(t.score=t.score*function(e,t,u){let y=Math.exp(t*u*u);return u<=e?y:0}(y,z,$),t.score<=w)break}t.suppressBeginIndex=L.length,M||(t.score===u?(L.push(T),W.push(t.score)):t.score>w&&function(e,t,u){let y=function(e,t,u){let y=0,w=e.length,T=0,$=!1;for(;y<w;){let M=u(t,e[T=y+(w-y>>>1)]);M>0?y=T+1:(w=T,$=!M)}return $?y:-y-1}(e,t,u||gj),w=y<0?-(y+1):y;e.splice(w,0,t)}(P,t,yN))}let B=L.length,j=u-B;M&&j>0&&(L.push(...Array(j).fill(0)),W.push(...Array(j).fill(0)));let q={selectedIndices:L};return $&&(q.selectedScores=W),O&&(q.validOutputs=B),q}function yN(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function Cj(e,t,u,y=.5,w=Number.NEGATIVE_INFINITY){let T=v(e,"boxes","nonMaxSuppressionAsync"),$=v(t,"scores","nonMaxSuppressionAsync"),M=Eo(T,$,u,y,w);u=M.maxOutputSize,y=M.iouThreshold,w=M.scoreThreshold;let O=await Promise.all([T.data(),$.data()]),{selectedIndices:P}=Jd(O[0],O[1],u,y,w);return T!==e&&T.dispose(),$!==t&&$.dispose(),Jt(P,"int32")}var p0=N({nonMaxSuppressionWithScore_:function(e,t,u,y=.5,w=Number.NEGATIVE_INFINITY,T=0){let $=v(e,"boxes","nonMaxSuppression"),M=v(t,"scores","nonMaxSuppression"),O=Eo($,M,u,y,w,T);u=O.maxOutputSize;let P={maxOutputSize:u,iouThreshold:y=O.iouThreshold,scoreThreshold:w=O.scoreThreshold,softNmsSigma:T=O.softNmsSigma},z=oF.runKernel(iJ,{boxes:$,scores:M},P);return{selectedIndices:z[0],selectedScores:z[1]}}});async function Sj(e,t,u,y=.5,w=Number.NEGATIVE_INFINITY,T=0){let $=v(e,"boxes","nonMaxSuppressionAsync"),M=v(t,"scores","nonMaxSuppressionAsync"),O=Eo($,M,u,y,w,T);u=O.maxOutputSize,y=O.iouThreshold,w=O.scoreThreshold,T=O.softNmsSigma;let P=await Promise.all([$.data(),M.data()]),{selectedIndices:z,selectedScores:L}=tf(P[0],P[1],u,y,w,T);return $!==e&&$.dispose(),M!==t&&M.dispose(),{selectedIndices:Jt(z,"int32"),selectedScores:Jt(L)}}var p3=N({nonMaxSuppressionPadded_:function(e,t,u,y=.5,w=Number.NEGATIVE_INFINITY,T=!1){let $=v(e,"boxes","nonMaxSuppression"),M=v(t,"scores","nonMaxSuppression"),O=Eo($,M,u,y,w,null),P=O.maxOutputSize,z=O.iouThreshold,L=O.scoreThreshold,W=oF.runKernel(iY,{boxes:$,scores:M},{maxOutputSize:P,iouThreshold:z,scoreThreshold:L,padToMaxOutputSize:T});return{selectedIndices:W[0],validOutputs:W[1]}}});async function vj(e,t,u,y=.5,w=Number.NEGATIVE_INFINITY,T=!1){let $=v(e,"boxes","nonMaxSuppressionAsync"),M=v(t,"scores","nonMaxSuppressionAsync"),O=Eo($,M,u,y,w,null),P=O.maxOutputSize,z=O.iouThreshold,L=O.scoreThreshold,[W,B]=await Promise.all([$.data(),M.data()]),{selectedIndices:j,validOutputs:q}=ef(W,B,P,z,L,T);return $!==e&&$.dispose(),M!==t&&M.dispose(),{selectedIndices:Jt(j,"int32"),validOutputs:ke(q,"int32")}}var p7=N({resizeBilinear_:function(e,t,u=!1,y=!1){let w=v(e,"images","resizeBilinear");E(3===w.rank||4===w.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${w.rank}.`),E(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),E(!1===y||!1===u,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let T=w,$=!1;3===w.rank&&($=!0,T=lA(w,[1,w.shape[0],w.shape[1],w.shape[2]]));let[]=t,M={images:T},O=oF.runKernel(sc,M,{alignCorners:u,halfPixelCenters:y,size:t});return $?lA(O,[O.shape[1],O.shape[2],O.shape[3]]):O}}),p4=N({resizeNearestNeighbor_:function(e,t,u=!1,y=!1){let w=v(e,"images","resizeNearestNeighbor");E(3===w.rank||4===w.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${w.rank}.`),E(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),E("float32"===w.dtype||"int32"===w.dtype,()=>"`images` must have `int32` or `float32` as dtype"),E(!1===y||!1===u,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let T=w,$=!1;3===w.rank&&($=!0,T=lA(w,[1,w.shape[0],w.shape[1],w.shape[2]]));let[]=t,M={images:T},O=oF.runKernel(su,M,{alignCorners:u,halfPixelCenters:y,size:t});return $?lA(O,[O.shape[1],O.shape[2],O.shape[3]]):O}}),p6=N({threshold_:function(e,t="binary",u=!1,y=.5){let w=v(e,"image","threshold"),T=w.shape[0]*w.shape[1],$=o8(Jt([y]),255),M,O,P,z;if(E(3===w.rank,()=>`Error in threshold: image must be rank 3,but got rank ${w.rank}.`),E(3===w.shape[2]||1===w.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${w.shape[2]}.`),E("int32"===w.dtype||"float32"===w.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${w.dtype}.`),E("otsu"===t||"binary"===t,()=>`Method must be binary or otsu, but was ${t}`),3===w.shape[2]){[M,O,P]=ph(w,[1,1,1],-1);let e=o8(M,.2989),t=o8(O,.587),u=o8(P,.114);z=o7(o7(e,t),u)}else z=e;return"otsu"===t&&($=function(e,t){let u=Jt([-1]),y=Jt([0]),w=Jt([0]),T,$,M,O,P,z;for(let L=0;L<e.size-1;L++){T=lN(e,0,L+1),$=lN(e,L+1),P=o6(uI(T),t),z=o6(uI($),t),M=o6(uI(o8(T,cu(0,T.size))),uI(T));let W=$a($.shape,T.size),B=o7(cu(0,$.size),W),j=u1(M,O=o6(uI(o8($,B)),uI($))),q=u1(M,O),Z=o8(P,z),Y=uP(w=o8(o8(Z,j),q),y);y=us(Y,w,y),u=us(Y,Jt([L]),u)}return u}(lO(o5(d4(z),"int32"),ar([]),256),T)),o5(o8(u?uG(z,$):uP(z,$),255),"int32")}}),p8=N({transform_:function(e,t,u="nearest",y="constant",w=0,T){let $=v(e,"image","transform","float32"),M=v(t,"transforms","transform","float32");return E(4===$.rank,()=>`Error in transform: image must be rank 4,but got rank ${$.rank}.`),E(2===M.rank&&(M.shape[0]===$.shape[0]||1===M.shape[0])&&8===M.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),E(null==T||2===T.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${T}.`),oF.runKernel(s7,{image:$,transforms:M},{interpolation:u,fillMode:y,fillValue:w,outputShape:T})}}),p9=N({bandPart_:function(e,t,u){let y=v(e,"a","bandPart");E(y.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${y.rank}.`);let w=y.shape,[T,$]=y.shape.slice(-2),M,O;"number"==typeof t?(E(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),E(t<=T,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${T}).`),M=v(t<0?T:t,"numLower","bandPart")):(E("int32"===t.dtype,()=>"bandPart(): numLower's dtype must be an int32."),M=us(uU(t,0),T,du(t,T))),"number"==typeof u?(E(u%1==0,()=>`bandPart(): numUpper must be an integer, got ${u}.`),E(u<=$,()=>`bandPart(): numUpper (${u}) must not be greater than the number of columns (${$}).`),O=v(u<0?$:u,"numUpper","bandPart")):(E("int32"===u.dtype,()=>"bandPart(): numUpper's dtype must be an int32."),O=us(uU(u,0),$,du(u,$)));let P=u1(lA(cu(0,T,1,"int32"),[-1,1]),cu(0,$,1,"int32")),z=u7(uG(P,M),uD(P,uY(O))),L=Gr([T,$],y.dtype);return lA(py(pR(lA(y,[-1,T,$])).map(e=>us(z,e,L))),w)}}),ct=N({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,E(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let u=e[0].shape[0];for(let t=1;t<e.length;++t)E(e[t].shape[0]===u,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${u})`)}else t=!0,e=ph(e,e.shape[0],0).map(e=>pg(e,[0]));E(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let u=[],y=e;for(let t=0;t<e.length;++t)u.push(oF.tidy(()=>{let e=y[t];if(t>0)for(let y=0;y<t;++y){let t=o8(uI(o8(u[y],e)),u[y]);e=u1(e,t)}return o6(e,uN(e,"euclidean"))}));return t?py(u,0):u}});function $N(e,t=!1){return oF.tidy(()=>{E(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let u=e.shape[0],y=e.shape[1],w=uM(u),T=o3(e),$=mu([[1]],[1,1]),M=o3($),O=u>=y?y:u;for(let e=0;e<O;++e){let t=T,O=M,P=w;[M,T,w]=oF.tidy(()=>{let t=lN(T,[e,e],[u-e,1]),O=uN(t),P=lN(T,[e,e],[1,1]),z=us(uP(P,0),mu([[-1]]),mu([[1]])),L=u1(P,o8(z,O)),W=o6(t,L);M=1===W.shape[0]?o3($):lk([$,lN(W,[1,0],[W.shape[0]-1,W.shape[1]])],0);let B=uY(o6(lI(z,L),O)),j=lN(T,[e,0],[u-e,y]),q=o8(B,M),Z=p$(M);if(0===e)T=u1(j,lI(q,lI(Z,j)));else{let t=u1(j,lI(q,lI(Z,j)));T=lk([lN(T,[0,0],[e,y]),t],0)}let Y=p$(q),J=lN(w,[0,e],[u,w.shape[1]-e]);if(0===e)w=u1(J,lI(lI(J,M),Y));else{let t=u1(J,lI(lI(J,M),Y));w=lk([lN(w,[0,0],[u,e]),t],1)}return[M,T,w]}),Ot([t,O,P])}return!t&&u>y&&(w=lN(w,[0,0],[u,y]),T=lN(T,[0,0],[y,y])),[w,T]})}var ca=N({qr_:function(e,t=!1){if(E(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),2===e.rank)return $N(e,t);{let u=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),y=pR(lA(e,[u,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),w=[],T=[];return y.forEach(e=>{let[u,y]=$N(e,t);w.push(u),T.push(y)}),[lA(py(w,0),e.shape),lA(py(T,0),e.shape)]}}});(O=ex||(ex={}))[O.NONE=0]="NONE",O[O.MEAN=1]="MEAN",O[O.SUM=2]="SUM",O[O.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS";var cn=N({computeWeightedLoss_:function(e,t,u=ex.SUM_BY_NONZERO_WEIGHTS){let y=v(e,"losses","computeWeightedLoss"),w=null;null!=t&&(w=v(t,"weights","computeWeightedLoss"));let T=null==w?y:o8(y,w);if(u===ex.NONE)return T;if(u===ex.SUM)return uI(T);if(u===ex.MEAN){if(null==w)return dl(T);{let e=y.size/w.size,t=o6(uI(T),uI(w));return e>1?o6(t,ke(e)):t}}if(u===ex.SUM_BY_NONZERO_WEIGHTS){if(null==w)return o6(uI(T),ke(y.size));{let e=o5(uI(db(o8(w,Da(y.shape)),ke(0))),"float32");return o6(uI(T),e)}}throw Error(`Unknown reduction: ${u}`)}}),cr=N({absoluteDifference_:function(e,t,u,y=ex.SUM_BY_NONZERO_WEIGHTS){let w=v(e,"labels","absoluteDifference"),T=v(t,"predictions","absoluteDifference"),$=null;return null!=u&&($=v(u,"weights","absoluteDifference")),xt(w.shape,T.shape,"Error in absoluteDifference: "),cn(o9(u1(w,T)),$,y)}}),ci=N({cosineDistance_:function(e,t,u,y,w=ex.SUM_BY_NONZERO_WEIGHTS){let T=v(e,"labels","cosineDistance"),$=v(t,"predictions","cosineDistance"),M=null;return null!=y&&(M=v(y,"weights","cosineDistance")),xt(T.shape,$.shape,"Error in cosineDistance: "),cn(u1(ke(1),uI(o8(T,$),u,!0)),M,w)}}),cs=N({hingeLoss_:function(e,t,u,y=ex.SUM_BY_NONZERO_WEIGHTS){let w=v(e,"labels","hingeLoss"),T=v(t,"predictions","hingeLoss"),$=null;null!=u&&($=v(u,"weights","hingeLoss")),xt(w.shape,T.shape,"Error in hingeLoss: ");let M=ke(1);return w=u1(o8(ke(2),w),M),cn(dQ(u1(M,o8(w,T))),$,y)}}),co=N({huberLoss_:function(e,t,u,y=1,w=ex.SUM_BY_NONZERO_WEIGHTS){let T=v(e,"labels","huberLoss"),$=v(t,"predictions","huberLoss"),M=null;null!=u&&(M=v(u,"weights","huberLoss")),xt(T.shape,$.shape,"Error in huberLoss: ");let O=ke(y),P=o9(u1($,T)),z=du(P,O),L=u1(P,z);return cn(o7(o8(ke(.5),ub(z)),o8(O,L)),M,w)}}),cl=N({logLoss_:function(e,t,u,y=1e-7,w=ex.SUM_BY_NONZERO_WEIGHTS){let T=v(e,"labels","logLoss"),$=v(t,"predictions","logLoss"),M=null;null!=u&&(M=v(u,"weights","logLoss")),xt(T.shape,$.shape,"Error in logLoss: ");let O=ke(1),P=ke(y),z=uY(o8(T,uq(o7($,P)))),L=o8(u1(O,T),uq(o7(u1(O,$),P)));return cn(u1(z,L),M,w)}}),cc=N({meanSquaredError_:function(e,t,u,y=ex.SUM_BY_NONZERO_WEIGHTS){let w=v(e,"labels","meanSquaredError"),T=v(t,"predictions","meanSquaredError"),$=null;return null!=u&&($=v(u,"weights","meanSquaredError")),xt(w.shape,T.shape,"Error in meanSquaredError: "),cn(pm(w,T),$,y)}}),ch=N({sigmoidCrossEntropy_:function(e,t,u,y=0,w=ex.SUM_BY_NONZERO_WEIGHTS){let T,$,M,O,P,z=v(e,"multiClassLabels","sigmoidCrossEntropy"),L=v(t,"logits","sigmoidCrossEntropy"),W=null;if(null!=u&&(W=v(u,"weights","sigmoidCrossEntropy")),xt(z.shape,L.shape,"Error in sigmoidCrossEntropy: "),y>0){let e=ke(y),t=ke(1),u=ke(.5);z=o7(o8(z,u1(t,e)),o8(u,e))}return cn((T=v(z,"labels","sigmoidCrossEntropyWithLogits"),$=v(L,"logits","sigmoidCrossEntropyWithLogits"),xt(T.shape,$.shape,"Error in sigmoidCrossEntropyWithLogits: "),M=dQ($),O=o8($,T),P=uX(uE(uY(o9($)))),o7(u1(M,O),P)),W,w)}}),cg=N({softmaxCrossEntropy_:function(e,t,u,y=0,w=ex.SUM_BY_NONZERO_WEIGHTS){let T=v(e,"onehotLabels","softmaxCrossEntropy"),$=v(t,"logits","softmaxCrossEntropy"),M=null;if(null!=u&&(M=v(u,"weights","softmaxCrossEntropy")),xt(T.shape,$.shape,"Error in softmaxCrossEntropy: "),y>0){let e=ke(y),t=ke(1),u=ke(T.shape[1]);T=o7(o8(T,u1(t,e)),o6(e,u))}return cn(function(e,t,u=-1){if(-1===u&&(u=t.rank-1),u!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${u}`);return Ir((e,t,y)=>{let w=u3(t,[u],!0),T=u1(o5(t,"float32"),w);return y([e,T]),{value:uI(uY(o8(T,e)),[u]),gradFunc:(e,t)=>{let[y,w]=t,T=ii(e.shape,[u]);return[o8(lA(e,T),u1(o5(y,"float32"),uE(w))),o8(lA(e,T),u1(uE(w),o5(y,"float32")))]}}})(e,t)}(T,$),M,w)}}),cy=N({sparseFillEmptyRows_:function(e,t,u,y){let w=v(e,"indices","sparseFillEmptyRows","int32"),T=v(t,"values","sparseFillEmptyRows"),$=v(u,"denseShape","sparseFillEmptyRows","int32"),M=v(y,"defaultValue","sparseFillEmptyRows",T.dtype);if(2!==w.rank)throw Error(`Indices should be Tensor2D but received shape
        ${w.shape}`);if(1!==T.rank)throw Error(`Values should be Tensor1D but received shape ${T.shape}`);if(1!==$.rank)throw Error(`Dense shape should be Tensor1D but received shape ${$.shape}`);if(0!==M.rank)throw Error(`Default value should be a scalar but received shape ${M.shape}`);let O=oF.runKernel(sW,{indices:w,values:T,denseShape:$,defaultValue:M});return{outputIndices:O[0],outputValues:O[1],emptyRowIndicator:O[2],reverseIndexMap:O[3]}}}),cA=N({sparseReshape_:function(e,t,u){let y=v(e,"inputIndices","sparseReshape","int32"),w=v(t,"inputShape","sparseReshape","int32"),T=v(u,"newShape","sparseReshape","int32");if(2!==y.rank)throw Error(`Input indices should be Tensor2D but received shape
        ${y.shape}`);if(1!==w.rank)throw Error(`Input shape should be Tensor1D but received shape ${w.shape}`);if(1!==T.rank)throw Error(`New shape should be Tensor1D but received shape ${T.shape}`);let $=oF.runKernel(sB,{inputIndices:y,inputShape:w,newShape:T});return{outputIndices:$[0],outputShape:$[1]}}}),cx=N({sparseSegmentMean_:function(e,t,u){let y=v(e,"data","sparseSegmentMean"),w=v(t,"indices","sparseSegmentMean","int32"),T=v(u,"segmentIds","sparseSegmentMean","int32");if(y.rank<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==w.rank)throw Error(`Indices should be Tensor1D but received shape
          ${w.shape}`);if(1!==T.rank)throw Error(`Segment ids should be Tensor1D but received shape
          ${T.shape}`);return oF.runKernel(sV,{data:y,indices:w,segmentIds:T})}}),cb=N({sparseSegmentSum_:function(e,t,u){let y=v(e,"data","sparseSegmentSum"),w=v(t,"indices","sparseSegmentSum","int32"),T=v(u,"segmentIds","sparseSegmentSum","int32");if(y.rank<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==w.rank)throw Error(`Indices should be Tensor1D but received shape
         ${w.shape}`);if(1!==T.rank)throw Error(`Segment ids should be Tensor1D but received shape
         ${T.shape}`);return oF.runKernel(sU,{data:y,indices:w,segmentIds:T})}}),cI=N({stringNGrams_:function(e,t,u,y,w,T,$,M){let O=v(e,"data","stringNGrams","string");if("string"!==O.dtype)throw Error("Data must be of datatype string");if(1!==O.shape.length)throw Error(`Data must be a vector, saw: ${O.shape}`);let P=v(t,"dataSplits","stringNGrams");if("int32"!==P.dtype)throw Error("Data splits must be of datatype int32");let z=oF.runKernel(sK,{data:O,dataSplits:P},{separator:u,nGramWidths:y,leftPad:w,rightPad:T,padWidth:$,preserveShortSequences:M});return{nGrams:z[0],nGramsSplits:z[1]}}}),cN=N({stringSplit_:function(e,t,u=!0){let y=v(e,"input","stringSplit","string"),w=v(t,"delimiter","stringSplit","string");if(1!==y.rank)throw Error(`Input should be Tensor1D but received shape ${y.shape}`);if(0!==w.rank)throw Error(`Delimiter should be a scalar but received shape ${w.shape}`);let T=oF.runKernel(sZ,{input:y,delimiter:w},{skipEmpty:u});return{indices:T[0],values:T[1],shape:T[2]}}}),cC=N({stringToHashBucketFast_:function(e,t){let u=v(e,"input","stringToHashBucketFast","string");if(t<=0)throw Error("Number of buckets must be at least 1");return oF.runKernel(sY,{input:u},{numBuckets:t})}}),cT=N({staticRegexReplace_:function(e,t,u,y=!0){let w=v(e,"input","staticRegexReplace","string");return oF.runKernel(sq,{x:w},{pattern:t,rewrite:u,replaceGlobal:y})}}),cE={fft:pu,ifft:pd,rfft:pf,irfft:pc},cR={hammingWindow:pG,hannWindow:pH,frame:pj,stft:pq},c$={flipLeftRight:pY,grayscaleToRGB:pJ,resizeNearestNeighbor:p4,resizeBilinear:p7,rgbToGrayscale:pQ,rotateWithOffset:p1,cropAndResize:pX,nonMaxSuppression:p2,nonMaxSuppressionAsync:Cj,nonMaxSuppressionWithScore:p0,nonMaxSuppressionWithScoreAsync:Sj,nonMaxSuppressionPadded:p3,nonMaxSuppressionPaddedAsync:vj,threshold:p6,transform:p8},c_={bandPart:p9,gramSchmidt:ct,qr:ca},cM={absoluteDifference:cr,computeWeightedLoss:cn,cosineDistance:ci,hingeLoss:cs,huberLoss:co,logLoss:cl,meanSquaredError:cc,sigmoidCrossEntropy:ch,softmaxCrossEntropy:cg},cF={sparseFillEmptyRows:cy,sparseReshape:cA,sparseSegmentMean:cx,sparseSegmentSum:cb},cO={stringNGrams:cI,stringSplit:cN,stringToHashBucketFast:cC,staticRegexReplace:cT},cP={};qe(cP,{Serializable:()=>cL,SerializationMap:()=>cW,getRegisteredName:()=>aX,registerClass:()=>rS});var cD=new Map,cz=new Map,cL=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},cW=class r5{constructor(){this.classNameMap={}}static getMap(){return null==r5.instance&&(r5.instance=new r5),r5.instance}static register(e){r5.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function rS(e,t,u){E(null!=e.className,()=>"Class being registered does not have the static className property defined."),E("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),E(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),void 0===t&&(t="Custom"),void 0===u&&(u=e.className);let y=t+">"+u;return cW.register(e),cD.set(y,e),cz.set(e,y),e}function aX(e){return cz.has(e)?cz.get(e):e.className}var cB=class extends cL{minimize(e,t=!1,u){let{value:y,grads:w}=this.computeGradients(e,u);if(null!=u){let e=u.map(e=>({name:e.name,tensor:w[e.name]}));this.applyGradients(e)}else this.applyGradients(w);return Ot(w),t?y:(y.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Vw(e,t)}dispose(){null!=this.iterations_&&Ot(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:ke(this.iterations_,"int32")}}async getWeights(){throw Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(cB,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var cV=class extends cB{static get className(){return"Adadelta"}constructor(e,t,u=null){super(),this.learningRate=e,this.rho=t,this.epsilon=u,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==u&&(this.epsilon=oF.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,u)=>{let y=oF.registeredVariables[t];null==this.accumulatedGrads[u]&&(this.accumulatedGrads[u]={originalName:`${t}/accum_grad`,variable:De(()=>uo(y).variable(!1))}),null==this.accumulatedUpdates[u]&&(this.accumulatedUpdates[u]={originalName:`${t}/accum_var`,variable:De(()=>uo(y).variable(!1))});let w=Array.isArray(e)?e[u].tensor:e[t];if(null==w)return;let T=this.accumulatedGrads[u].variable,$=this.accumulatedUpdates[u].variable;De(()=>{let e=o7(o8(T,this.rho),o8(ub(w),1-this.rho)),t=o8(o6(ux(o7($,this.epsilon)),ux(o7(T,this.epsilon))),w),u=o7(o8($,this.rho),o8(ub(t),1-this.rho));T.assign(e),$.assign(u);let M=o7(o8(t,-this.learningRate),y);y.assign(M)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Ot(this.accumulatedGrads.map(e=>e.variable)),Ot(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){let t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}},cU=class extends cB{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,u)=>{let y=oF.registeredVariables[t];null==this.accumulatedGrads[u]&&(this.accumulatedGrads[u]={originalName:`${t}/accumulator`,variable:De(()=>$a(y.shape,this.initialAccumulatorValue).variable(!1))});let w=Array.isArray(e)?e[u].tensor:e[t];if(null==w)return;let T=this.accumulatedGrads[u].variable;De(()=>{let e=o7(T,ub(w));T.assign(e);let t=o7(o8(o6(w,ux(o7(e,oF.backend.epsilon()))),-this.learningRate),y);y.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Ot(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}},cG=class extends cB{static get className(){return"Adam"}constructor(e,t,u,y=null){super(),this.learningRate=e,this.beta1=t,this.beta2=u,this.epsilon=y,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],De(()=>{this.accBeta1=ke(t).variable(),this.accBeta2=ke(u).variable()}),null==y&&(this.epsilon=oF.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);De(()=>{let u=u1(1,this.accBeta1),y=u1(1,this.accBeta2);t.forEach((t,w)=>{let T=oF.registeredVariables[t];null==this.accumulatedFirstMoment[w]&&(this.accumulatedFirstMoment[w]={originalName:`${t}/m`,variable:De(()=>uo(T).variable(!1))}),null==this.accumulatedSecondMoment[w]&&(this.accumulatedSecondMoment[w]={originalName:`${t}/v`,variable:De(()=>uo(T).variable(!1))});let $=Array.isArray(e)?e[w].tensor:e[t];if(null==$)return;let M=this.accumulatedFirstMoment[w].variable,O=this.accumulatedSecondMoment[w].variable,P=o7(o8(M,this.beta1),o8($,1-this.beta1)),z=o7(o8(O,this.beta2),o8(ub($),1-this.beta2)),L=o6(P,u),W=o6(z,y);M.assign(P),O.assign(z);let B=o7(o8(o6(L,o7(ux(W),this.epsilon)),-this.learningRate),T);T.assign(B)}),this.accBeta1.assign(o8(this.accBeta1,this.beta1)),this.accBeta2.assign(o8(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Ot(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&Ot(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),De(()=>{this.accBeta1.assign(uA(this.beta1,this.iterations_+1)),this.accBeta2.assign(uA(this.beta2,this.iterations_+1))});let t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}},cH=class extends cB{static get className(){return"Adamax"}constructor(e,t,u,y=null,w=0){super(),this.learningRate=e,this.beta1=t,this.beta2=u,this.epsilon=y,this.decay=w,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],De(()=>{this.iteration=ke(0).variable(),this.accBeta1=ke(t).variable()}),null==y&&(this.epsilon=oF.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);De(()=>{let u=u1(1,this.accBeta1),y=o6(-this.learningRate,o7(o8(this.iteration,this.decay),1));t.forEach((t,w)=>{let T=oF.registeredVariables[t];null==this.accumulatedFirstMoment[w]&&(this.accumulatedFirstMoment[w]={originalName:`${t}/m`,variable:uo(T).variable(!1)}),null==this.accumulatedWeightedInfNorm[w]&&(this.accumulatedWeightedInfNorm[w]={originalName:`${t}/v`,variable:uo(T).variable(!1)});let $=Array.isArray(e)?e[w].tensor:e[t];if(null==$)return;let M=this.accumulatedFirstMoment[w].variable,O=this.accumulatedWeightedInfNorm[w].variable,P=o7(o8(M,this.beta1),o8($,1-this.beta1)),z=ds(o8(O,this.beta2),o9($));M.assign(P),O.assign(z);let L=o7(o8(o6(y,u),o6(P,o7(z,this.epsilon))),T);T.assign(L)}),this.iteration.assign(o7(this.iteration,1)),this.accBeta1.assign(o8(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Ot(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&Ot(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}},cj=class extends cB{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,u)=>{let y=Array.isArray(e)?e[u].tensor:e[t];if(null==y)return;let w=oF.registeredVariables[t];De(()=>{let e=o7(o8(this.c,y),w);w.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=$r(ke(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}},cq=class extends cj{static get className(){return"Momentum"}constructor(e,t,u=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=u,this.accumulations=[],this.m=ke(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,u)=>{let y=oF.registeredVariables[t];null==this.accumulations[u]&&(this.accumulations[u]={originalName:`${t}/momentum`,variable:De(()=>uo(y).variable(!1))});let w=this.accumulations[u].variable,T=Array.isArray(e)?e[u].tensor:e[t];null!=T&&De(()=>{let e,t=o7(o8(this.m,w),T);e=this.useNesterov?o7(o8(this.c,o7(T,o8(t,this.m))),y):o7(o8(this.c,t),y),w.assign(t),y.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Ot(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}},cX=class extends cB{static get className(){return"RMSProp"}constructor(e,t=.9,u=0,y=null,w=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=u,this.epsilon=y,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=w,null==y&&(this.epsilon=oF.backend.epsilon()),null==e)throw Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,u)=>{let y=oF.registeredVariables[t];null==this.accumulatedMeanSquares[u]&&(this.accumulatedMeanSquares[u]={originalName:`${t}/rms`,variable:De(()=>uo(y).variable(!1))}),null==this.accumulatedMoments[u]&&(this.accumulatedMoments[u]={originalName:`${t}/momentum`,variable:De(()=>uo(y).variable(!1))}),null==this.accumulatedMeanGrads[u]&&this.centered&&(this.accumulatedMeanGrads[u]={originalName:`${t}/mg`,variable:De(()=>uo(y).variable(!1))});let w=Array.isArray(e)?e[u].tensor:e[t];if(null==w)return;let T=this.accumulatedMeanSquares[u].variable,$=this.accumulatedMoments[u].variable;De(()=>{let e=o7(o8(T,this.decay),o8(ub(w),1-this.decay));if(this.centered){let t=this.accumulatedMeanGrads[u].variable,M=o7(o8(t,this.decay),o8(w,1-this.decay)),O=o6(o8(w,this.learningRate),ux(u1(e,o7(ub(M),this.epsilon)))),P=o7(o8($,this.momentum),O);T.assign(e),t.assign(M),$.assign(P);let z=u1(y,P);y.assign(z)}else{let e=o7(o8(T,this.decay),o8(ub(w),1-this.decay)),t=o7(o8($,this.momentum),o6(o8(w,this.learningRate),ux(o7(e,this.epsilon))));T.assign(e),$.assign(t);let u=u1(y,t);y.assign(u)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Ot(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Ot(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&Ot(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}},cY=[cV,cU,cG,cH,cq,cX,cj],cJ={};function YN(e){return new Promise(e=>setTimeout(e)).then(e)}qe(cJ,{CompositeArrayBuffer:()=>oB,browserFiles:()=>QN,browserHTTPRequest:()=>tT,concatenateArrayBuffers:()=>dk,copyModel:()=>Tk,decodeWeights:()=>sd,decodeWeightsStream:()=>ad,encodeWeights:()=>pk,fromMemory:()=>rT,fromMemorySync:()=>uS,getLoadHandlers:()=>xk,getModelArtifactsForJSON:()=>tc,getModelArtifactsForJSONSync:()=>$w,getModelArtifactsInfoForJSON:()=>va,getSaveHandlers:()=>gk,getWeightSpecs:()=>Sl,http:()=>nf,isHTTPScheme:()=>of,listModels:()=>kk,loadWeights:()=>JN,moveModel:()=>_k,registerLoadRouter:()=>hk,registerSaveRouter:()=>fk,removeModel:()=>Nk,weightsLoaderFactory:()=>aS,withSaveHandler:()=>oT,withSaveHandlerSync:()=>nT});var cQ=class r7{constructor(e){if(!nG.getBool("IS_BROWSER"))throw Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(r7.URL_SCHEME)&&(e=e.slice(r7.URL_SCHEME.length)),(null==e||0===e.length)&&(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw Error("Browser downloads are not supported in this environment since `document` is not present");let t=oB.join(e.weightData),u=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let t=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],y=id(e,t),w=window.URL.createObjectURL(new Blob([JSON.stringify(y)],{type:"application/json"})),T=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(T.download=this.modelJsonFileName,T.href=w,await YN(()=>T.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){let e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=u,await YN(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:va(e)}}}};cQ.URL_SCHEME="downloads://";var c1=class{constructor(e){if(null==e||e.length<1)throw Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let u=new FileReader;u.onload=u=>{let y=JSON.parse(u.target.result),w=y.modelTopology;if(null==w){t(Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(null==y.weightsManifest){t(Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(0===this.weightsFiles.length){e({modelTopology:w});return}e(tc(y,e=>this.loadWeights(e)))},u.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),u.readAsText(this.jsonFile)})}loadWeights(e){let t=[],u=[];for(let y of e)t.push(...y.weights),u.push(...y.paths);let y=this.checkManifestAndWeightFiles(e);return Promise.all(u.map(e=>this.loadWeightsFile(e,y[e]))).then(e=>[t,e])}loadWeightsFile(e,t){return new Promise((u,y)=>{let w=new FileReader;w.onload=e=>{u(e.target.result)},w.onerror=t=>y(`Failed to weights data from file of path '${e}'.`),w.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],u=this.weightsFiles.map(e=>Ew(e.name)),y={};for(let w of e)w.paths.forEach(e=>{let w=Ew(e);if(-1!==t.indexOf(w))throw Error(`Duplicate file basename found in weights manifest: '${w}'`);if(t.push(w),-1===u.indexOf(w))throw Error(`Weight file with basename '${w}' is not provided.`);y[e]=this.weightsFiles[u.indexOf(w)]});if(t.length!==this.weightsFiles.length)throw Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return y}};function QN(e){return new c1(e)}function nS(e,t,u,y){var w,T;E(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array"),w=u=null==u?0:u,T=y=null==y?1:y,E(w>=0&&w<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${w}`),E(T>=0&&T<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${T}`),E(T>=w,()=>`startFraction must be no more than endFraction, but got startFraction ${w} and endFraction ${T}`);let $=0;return Promise.all(e.map(w=>(w.then(w=>(t(u+ ++$/e.length*(y-u)),w)),w)))}async function sS(e,t){null==t&&(t={});let u=null==t.fetchFunc?nG.platform.fetch:t.fetchFunc,y=e.map(e=>u(e,t.requestInit,{isBinary:!0})),w=(null==t.onProgress?await Promise.all(y):await nS(y,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(w):await nS(w,t.onProgress,.5,1)}async function JN(e,t="",u,y){return aS(e=>sS(e,{requestInit:y}))(e,t,u)}function aS(e){return async(t,u="",y)=>{let w=t.map(()=>!1),T={},$=null!=y?y.map(()=>!1):[],M=[];if(t.forEach((e,t)=>{let u=0;e.weights.forEach(e=>{let O=oW["quantization"in e?e.quantization.dtype:e.dtype]*ze(e.shape),C=()=>{w[t]=!0,null==T[t]&&(T[t]=[]),T[t].push({manifestEntry:e,groupOffset:u,sizeBytes:O})};null!=y?y.forEach((t,u)=>{t===e.name&&(C(),$[u]=!0)}):C(),M.push(e.name),u+=O})}),!$.every(e=>e)){let e=y.filter((e,t)=>!$[t]);throw Error(`Could not find weights in manifest with names: ${e.join(", ")}. 
Manifest JSON has weights with names: ${M.join(", ")}.`)}let O=w.reduce((e,t,u)=>(t&&e.push(u),e),[]),P=[];O.forEach(e=>{t[e].paths.forEach(e=>{let t=u+(u.endsWith("/")?"":"/")+e;P.push(t)})});let z=await e(P),L={},W=0;return O.forEach(e=>{let u=t[e].paths.length,y=new oB(z.slice(W,W+u));T[e].forEach(e=>{let t=sd(y.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(let e in t)L[e]=t[e]}),W+=u}),L}}oU.registerSaveRouter(e=>nG.getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(cQ.URL_SCHEME)?function(e="model"){return new cQ(e)}(e.slice(cQ.URL_SCHEME.length)):null);var c2=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(E("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=nG.platform.fetch,E(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&E(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let u=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],y=id(e,u);if(t.body.append("model.json",new Blob([JSON.stringify(y)],{type:"application/json"}),"model.json"),null!=e.weightData){let u=oB.join(e.weightData);t.body.append("model.weights.bin",new Blob([u],{type:"application/octet-stream"}),"model.weights.bin")}let w=await this.fetch(this.path,t);if(w.ok)return{modelArtifactsInfo:va(e),responses:[w]};throw Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${w.status}.`)}async loadModelJSON(){let e,t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",Error(e)}let u=e.modelTopology,y=e.weightsManifest;if(null==u&&null==y)throw Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return e}async load(){return this.loadOptions.streamWeights?this.loadStream():tc(await this.loadModelJSON(),e=>this.loadWeights(e))}async loadStream(){let e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),u=Sl(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:u,getWeightStream:()=>{var e,u;let y,w,T;return y=null==(e=this.loadOptions).fetchFunc?nG.platform.fetch:e.fetchFunc,w=0,null===(u=e.onProgress)||void 0===u||u.call(e,0),new ReadableStream({pull:async u=>{for(var $;w<t.length;){T||(T=(await y(t[w],e.requestInit,{isBinary:!0})).body.getReader());let{done:M,value:O}=await T.read();if(M){w++,T=void 0,null===($=e.onProgress)||void 0===$||$.call(e,w/t.length);continue}u.enqueue(O);return}u.close()}})}})}async getWeightUrls(e){var t;let u,y;let[w,T]=(u=(t=Array.isArray(this.path)?this.path[1]:this.path).lastIndexOf("/"),y=t.lastIndexOf("?"),[t.substring(0,u)+"/",y>u?t.substring(y):""]),$=this.weightPathPrefix||w,M=[],O=[];for(let t of e)for(let e of t.paths)null!=this.weightUrlConverter?O.push(this.weightUrlConverter(e)):M.push($+e+T);return this.weightUrlConverter&&M.push(...await Promise.all(O)),M}async loadWeights(e){let t=await this.getWeightUrls(e);return[Sl(e),await sS(t,this.loadOptions)]}};function of(e){return null!=e.match(c2.URL_SCHEME_REGEX)}c2.URL_SCHEME_REGEX=/^https?:\/\//;var eT=(e,t)=>"undefined"==typeof fetch&&(null==t||null==t.fetchFunc)?null:(Array.isArray(e)?e.every(e=>of(e)):of(e))?nf(e,t):null;function nf(e,t){return new c2(e,t)}function tT(e,t){return nf(e,t)}oU.registerSaveRouter(eT),oU.registerLoadRouter(eT);var c3=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},c7=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},c6=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function rT(e,t,u,y){let w=arguments;return new c6(uS(...w))}function uS(e,t,u,y){return 1==arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new c3(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new c3({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new c3({modelTopology:e,weightSpecs:t,weightData:u,trainingConfig:y}))}function oT(e){return new c7(e)}function nT(e){return new c7(e)}var c8={};qe(c8,{confusionMatrix:()=>c9});var c9=N({confusionMatrix_:function(e,t,u){let y=v(e,"labels","confusionMatrix"),w=v(t,"predictions","confusionMatrix");E(null==u||u>0&&Number.isInteger(u),()=>`If provided, numClasses must be a positive integer, but got ${u}`),E(1===y.rank,()=>`Expected the rank of labels to be 1, but got ${y.rank}`),E(1===w.rank,()=>`Expected the rank of predictions to be 1, but got ${w.rank}`),E(y.shape[0]===w.shape[0],()=>`Mismatch in the number of examples: ${y.shape[0]} vs. ${w.shape[0]}. Labels and predictions should have the same number of elements.`),E(u>0&&Number.isInteger(u),()=>`numClasses is required to be a positive integer, but got ${u}`);let T=dw(o5(y,"int32"),u),$=dw(o5(w,"int32"),u);return o5(lI(p$(T),$),"int32")}}),ht={};qe(ht,{draw:()=>vX,fromPixels:()=>hn,fromPixelsAsync:()=>wX,toPixels:()=>IX});var ha=!1;function uT(e,t=3){let u;if(t>4)throw Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw Error("pixels passed to tf.browser.fromPixels() can not be null");let y=!1,w=!1,T=!1,$=!1,M=!1,O=!1;if(e.data instanceof Uint8Array)y=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)w=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)T=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)$=!0;else if(null!=e.getContext)M=!0;else if("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap)O=!0;else throw Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(null!=Xp(on,oF.backendName))return oF.runKernel(on,{pixels:e},{numChannels:t});let[P,z]=T?[e.videoWidth,e.videoHeight]:[e.width,e.height],L;if(M)L=e.getContext("2d").getImageData(0,0,P,z).data;else if(w||y)L=e.data;else if($||T||O){if(null==eb){if("undefined"==typeof document){if("undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof OffscreenCanvasRenderingContext2D)eb=new OffscreenCanvas(1,1).getContext("2d");else throw Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.")}else eb=document.createElement("canvas").getContext("2d",{willReadFrequently:!0})}eb.canvas.width=P,eb.canvas.height=z,eb.drawImage(e,0,0,P,z),L=eb.getImageData(0,0,P,z).data}if(4===t)u=new Int32Array(L);else{let e=P*z;u=new Int32Array(e*t);for(let y=0;y<e;y++)for(let e=0;e<t;++e)u[y*t+e]=L[4*y+e]}return jd(u,[z,P,t],"int32")}async function wX(e,t=3){var u;let y=null;if(nG.getBool("WRAP_TO_IMAGEBITMAP")&&"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&null!=(u=e)&&0!==u.width&&0!==u.height&&!(null!=e&&e.data instanceof Uint8Array)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}y=null!=t&&t.width===e.width&&t.height===e.height?t:e}else y=e;return uT(y,t)}function pT(e){if(2!==e.rank&&3!==e.rank)throw Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);let t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function IX(e,t){let u=v(e,"img","toPixels");if(!(e instanceof oC)){let e=u;u=o5(e,"int32"),e.dispose()}pT(u);let[y,w]=u.shape.slice(0,2),T=2===u.rank?1:u.shape[2],$=await u.data(),M="float32"===u.dtype?255:1,O=new Uint8ClampedArray(w*y*4);for(let e=0;e<y*w;++e){let t=[0,0,0,255];for(let y=0;y<T;y++){let w=$[e*T+y];if("float32"===u.dtype){if(w<0||w>1)throw Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${w}.`)}else if("int32"===u.dtype&&(w<0||w>255))throw Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${w}.`);1===T?(t[0]=w*M,t[1]=w*M,t[2]=w*M):t[y]=w*M}let y=4*e;O[y+0]=Math.round(t[0]),O[y+1]=Math.round(t[1]),O[y+2]=Math.round(t[2]),O[y+3]=Math.round(t[3])}if(null!=t){ha||null!=Xp(rL,oF.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),ha=!0),t.width=w,t.height=y;let e=t.getContext("2d"),u=new ImageData(O,w,y);e.putImageData(u,0,0)}return u!==e&&u.dispose(),O}function vX(e,t,u){let y=v(e,"img","draw");if(!(e instanceof oC)){let e=y;y=o5(e,"int32"),e.dispose()}pT(y),function(e){let t=(null==e?void 0:e.alpha)||1;if(t>1||t<0)throw Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null==u?void 0:u.imageOptions);let w={image:y};oF.runKernel(rL,w,{canvas:t,options:u})}var hn=N({fromPixels_:uT}),hr={};function lT(e,t){let u=e.shape.length,y=t.shape.length;if(u<1)throw Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${u}.`);if(y<1)throw Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${y}.`);if("int32"!==t.dtype)throw Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[y-1]>u)throw Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[y-1]} vs. ${u}`);if(0===ze(e.shape))throw Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let w=t.shape,T=w[w.length-1],$=1;for(let e=0;e<w.length-1;++e)$*=w[e];let M=e.shape,O=w.slice();O.pop();let P=1;for(let e=T;e<u;++e)P*=M[e],O.push(M[e]);let z=[...js(e.shape).map(e=>e/P),1].slice(0,T);return[O,$,P,z]}qe(hr,{prepareAndValidate:()=>lT});var hs={};function TX(e,t,u){let y=e.shape.length;E(y===t.length,()=>`Error in slice${y}D: Length of begin ${t} must match the rank of the array (${y}).`),E(y===u.length,()=>`Error in slice${y}D: Length of size ${u} must match the rank of the array (${y}).`);for(let w=0;w<y;++w)E(t[w]+u[w]<=e.shape[w],()=>`Error in slice${y}D: begin[${w}] + size[${w}] (${t[w]+u[w]}) would overflow input.shape[${w}] (${e.shape[w]})`)}function _X(e){let t=[],u=0;for(;e>0;)1&e&&t.push(u),e/=2,u++;return t}function EX(e,t,u){let y=[];for(let w=0;w<e.length;w++)y[w]=Math.ceil((t[w]-e[w])/u[w]);return y}function dT(e,t,u,y){let w=[...e];for(let e=w.length;e<y.length;e++)w.push(1);for(let e=0;e<u;e++)0===e?w[t]=1:(w.splice(t,0,1),w.pop());return w}function hT(e,t){let u=[];for(let y=0;y<e;y++)u.push(t+y);return u}function $X(e,t,u,y,w,T,$,M,O){let P=e.length,z=Array(P),L=Array(P),W=Array(P);if(t.length&&u>0){let O=t[0],P=u+1;z=gT($,O,P,y,e),L=xT(M,O,P,w,e),W=dT(T,O,P,e)}else for(let t=0;t<P;t++)z[t]=bT($,y,T,e,t,O),L[t]=CT(M,w,T,e,t,O),W[t]=yT(T,t,O);return{begin:z,end:L,strides:W}}function gT(e,t,u,y,w){let T=[...w],$=hT(u,t);for(let w=0;w<T.length;w++)if($.indexOf(w)>-1)T[w]=0;else{var M;let $=(M=w)<=t?M:M-(u-1),O=y[$];e&1<<$&&(O=0),T[w]=O}return T}function xT(e,t,u,y,w){let T=[...w],$=hT(u,t);for(let w=0;w<T.length;w++)if($.indexOf(w)>-1)T[w]=Number.MAX_SAFE_INTEGER;else{var M;let $=(M=w)<=t?M:M-(u-1),O=y[$];e&1<<$&&(O=Number.MAX_SAFE_INTEGER),T[w]=O}for(let e=0;e<T.length;e++){let t=w[e];T[e]<0&&(T[e]+=t),T[e]=Vp(0,T[e],w[e])}return T}function yT(e,t,u){let y=e[t];return(u&1<<t||null==y)&&(y=1),y}function bT(e,t,u,y,w,T){let $=t[w],M=u[w]||1;(e&1<<w||T&1<<w||null==$)&&($=M>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let O=y[w];return $<0&&($+=O),$=Vp(0,$,O-1)}function CT(e,t,u,y,w,T){let $=t[w],M=u[w]||1;(e&1<<w||T&1<<w||null==$)&&($=M>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let O=y[w];return $<0&&($+=O),$=M>0?Vp(0,$,O):Vp(-1,$,O-1)}function RX(e,t,u){let y=u.length;for(let e=0;e<u.length;e++)if(u[e]>1){y=e;break}for(let w=y+1;w<u.length;w++)if(t[w]>0||u[w]!==e[w])return!1;return!0}function DX(e,t){let u=e.length>0?e[e.length-1]:1;for(let y=0;y<e.length-1;y++)u+=e[y]*t[y];return u}function AX(e,t,u){let y,w,T=e.shape.length;return(w="number"==typeof t?[t,...Array(T-1).fill(0)]:t.length<T?t.concat(Array(T-t.length).fill(0)):t.slice()).forEach(e=>{E(-1!==e,()=>"slice() does not support negative begin indexing.")}),y=(y=null==u?Array(T).fill(-1):"number"==typeof u?[u,...Array(T-1).fill(-1)]:u.length<T?u.concat(Array(T-u.length).fill(-1)):u).map((t,u)=>t>=0?t:(E(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${u}.`),e.shape[u]-w[u])),[w,y]}function FX(e,t,u,y,w,T,$,M,O){let P;if(null==y?(P=Array(t.length)).fill(1):P=y,null!=$&&$&$-1)throw Error("Multiple ellipses in slice is not allowed.");let z=!1,L={dims:P.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:u.slice(),strides:P.slice(),beginMask:w,endMask:T,ellipsisMask:$,newAxisMask:M,shrinkAxisMask:O};for(let e=0;e<L.dims;e++)z&&1<<e&M&&L.numAddAxisAfterEllipsis++,1<<e&$&&(z=!0);z||(L.ellipsisMask|=1<<L.dims,L.dims++);let W={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let u=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=Array(t.dims),t.end=Array(t.dims),t.strides=Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=Array(t.dims);for(let y=0;y<e.dims;y++)if(1<<y&e.ellipsisMask){let w=Math.min(t.dims-(e.dims-y)+1+e.numAddAxisAfterEllipsis,t.dims);for(;u<w;u++)t.begin[u]=0,t.end[u]=0,t.strides[u]=1,t.beginMask|=1<<u,t.endMask|=1<<u,t.finalShapeGatherIndices.push(u),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[u]=y}else if(1<<y&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(u===t.begin.length)throw Error(`Index out of range using input dim ${u}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[u]=e.begin[y]),null!=e.end&&(t.end[u]=e.end[y]),t.strides[u]=e.strides[y],e.beginMask&1<<y&&(t.beginMask|=1<<u),e.endMask&1<<y&&(t.endMask|=1<<u),e.shrinkAxisMask&1<<y?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<u):(t.finalShapeGatherIndices.push(u),t.finalShapeGatherIndicesSparse.push(y)),t.inputShapeGatherIndicesSparse[u]=y,u++}}(L,W);let B=!0,j=!0,q=!0,Z=[],Y=[];for(let t=0;t<e.length;++t){if(0===W.strides[t])throw Error(`strides[${t}] must be non-zero`);let u=!!(W.shrinkAxisMask&1<<t),y=e[t];if(-1===y){Z.push(u?1:-1);continue}let w=[W.beginMask&1<<t,W.endMask&1<<t],T=[W.strides[t]>0?0:-1,W.strides[t]>0?y:y-1];if(u&&W.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");q=q&&1===W.strides[t];let $=!!(W.beginMask&1<<t&&W.endMask&1<<t);if(W.beginValid&&W.endValid){if(u){let e=W.begin[t]<0?y+W.begin[t]:W.begin[t];if(W.begin[t]=e,W.end[t]=W.begin[t]+1,e<0||e>=y)throw Error(`slice index ${W.begin[t]} of dimension ${t} out of bounds.`)}else W.begin[t]=mT(W.begin[t],0,W.strides[t],y,w,T),W.end[t]=mT(W.end[t],1,W.strides[t],y,w,T);let e=1===W.strides[t]&&0===W.begin[t]&&W.end[t]===y;B=B&&e,j=j&&(0===t&&1===W.strides[t]||e)}else B=B&&1===W.strides[t]&&$,j=j&&(0===t&&1===W.strides[t]||$);let M,O=!1;if(W.beginValid&&W.endValid?(M=W.end[t]-W.begin[t],O=!0):u?(M=1,O=!0):$&&y>=0&&(M=W.strides[t]<0?-y:y,O=!0),O){let e;e=0===M||M<0!=W.strides[t]<0?0:Math.trunc(M/W.strides[t])+(M%W.strides[t]!=0?1:0),Z.push(e)}else Z.push(-1)}for(let e=0;e<W.finalShapeGatherIndices.length;++e){let t=W.finalShapeGatherIndices[e];t>=0?Y.push(Z[t]):-2===t&&Y.push(1)}return{finalShapeSparse:Y.filter((e,t)=>-2!==W.finalShapeGatherIndices[t]),finalShape:Y,isIdentity:B,sliceDim0:j,isSimpleSlice:q,begin:W.begin,end:W.end,strides:W.strides}}function mT(e,t,u,y,w,T){if(w[t])return u>0?T[t]:T[t+1&1];{let t=e<0?y+e:e;return t<T[0]?T[0]:t>T[1]?T[1]:t}}qe(hs,{assertParamsValid:()=>TX,computeFlatOffset:()=>DX,computeOutShape:()=>EX,getNormalizedAxes:()=>$X,isSliceContinous:()=>RX,maskToAxes:()=>_X,parseSliceParams:()=>AX,sliceInfo:()=>FX,startForAxis:()=>bT,startIndicesWithElidedDims:()=>gT,stopForAxis:()=>CT,stopIndicesWithElidedDims:()=>xT,stridesForAxis:()=>yT,stridesWithElidedDims:()=>dT});var hl="4.21.0",hd=class{static sgd(e){return new cj(e)}static momentum(e,t,u=!1){return new cq(e,t,u)}static rmsprop(e,t=.9,u=0,y=null,w=!1){return new cX(e,t,u,y,w)}static adam(e=.001,t=.9,u=.999,y=null){return new cG(e,t,u,y)}static adadelta(e=.001,t=.95,u=null){return new cV(e,t,u)}static adamax(e=.002,t=.9,u=.999,y=null,w=0){return new cH(e,t,u,y,w)}static adagrad(e,t=.1){return new cU(e,t)}},hp=hd,hc="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function cS(){return new Promise(e=>hc(()=>e()))}var hh={};function LX(e,t){let u=e[0].length;e.forEach((e,t)=>{E(e.length===u,()=>`Error in concat${u}D: rank of tensors[${t}] must be the same as the rank of the rest (${u})`)}),E(t>=0&&t<u,()=>`Error in concat${u}D: axis must be between 0 and ${u-1}.`);let y=e[0];e.forEach((e,w)=>{for(let T=0;T<u;T++)E(T===t||e[T]===y[T],()=>`Error in concat${u}D: Shape of tensors[${w}] (${e}) does not match the shape of the rest (${y}) along the non-concatenated axis ${w}.`)})}function BX(e,t){let u=e[0].slice();for(let y=1;y<e.length;y++)u[t]+=e[y][t];return u}function zX(e,t,u){let y=[];if(null==u&&null==t)return y;if(null==t)for(;y.length<e+u.length;)y.push(-1);else y=t.slice();if(null==u)return y;if(e+u.length!==y.length)throw Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+u.length}, but shape.rank = ${y.length}`);for(let w=1;w<u.length;++w){let T=u[w],$=y[y.length-u.length+w],M=y[$];if(T>=0){if(M>=0){if(M!==T)throw Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${w+e}] = ${T} but shape[${w+e}] = ${M}`)}else y[$]=T}}return y}function VX(e){let t={FIRST_DIM_SIZE:ek.FIRST_DIM_SIZE,VALUE_ROWIDS:ek.VALUE_ROWIDS,ROW_LENGTHS:ek.ROW_LENGTHS,ROW_SPLITS:ek.ROW_SPLITS,ROW_LIMITS:ek.ROW_LIMITS,ROW_STARTS:ek.ROW_STARTS},u=[];for(let y of e)if(y in t)u.push(t[y]);else break;return u}function WX(e){return 0===e.length?0:e[0]===ek.FIRST_DIM_SIZE?e.length-1:e.length}function UX(e,t){if(null==e||null==t)return;let u=e.length,y=t.length;if(u>=y)throw Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${u} must be less than ragged tensor input flatValues.rank = ${y})`);for(let w=0;w<Math.min(u,y-1);++w){let u=e[w],y=t[w+1];if(u>=0&&y>=0&&1!==u&&u!==y)throw Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${w-e.length}] = ${u} but ragged tensor input.flatValues.shape[${w-e.length}] = ${y}`)}}qe(hh,{ERF_A1:()=>hb,ERF_A2:()=>hv,ERF_A3:()=>hN,ERF_A4:()=>hC,ERF_A5:()=>hE,ERF_P:()=>hx,PARALLELIZE_THRESHOLD:()=>hg,RowPartitionType:()=>ek,SELU_SCALE:()=>hA,SELU_SCALEALPHA:()=>hy,applyActivation:()=>Qu,assertAndGetBroadcastShape:()=>rt,assertAxesAreInnerMostDims:()=>pK,assertParamsConsistent:()=>LX,assignToTypedArray:()=>c5,axesAreInnerMostDims:()=>zw,calculateShapes:()=>q1,checkEinsumDimSizes:()=>g5,checkPadOnDimRoundingMode:()=>Lt,combineLocations:()=>I2,combineRaggedTensorToTensorShapes:()=>zX,complexWithEvenIndex:()=>i5,complexWithOddIndex:()=>u5,computeConv2DInfo:()=>zu,computeConv3DInfo:()=>Uk,computeDefaultPad:()=>Bw,computeDilation2DInfo:()=>iH,computeOptimalWindowSize:()=>GX,computeOutAndReduceShapes:()=>uK,computeOutShape:()=>BX,computePool2DInfo:()=>Lw,computePool3DInfo:()=>uH,convertConv2DDataFormat:()=>Gk,decodeEinsumEquation:()=>f5,eitherStridesOrDilationsAreOne:()=>gr,expandShapeToKeepDim:()=>ii,exponent:()=>m5,exponents:()=>l5,fromStringArrayToUint8:()=>M5,fromUint8ToStringArray:()=>O5,getAxesPermutation:()=>cK,getBroadcastDims:()=>y2,getComplexWithIndex:()=>p5,getEinsumComputePath:()=>x5,getEinsumPermutation:()=>h5,getFusedBiasGradient:()=>Yu,getFusedDyActivation:()=>Xu,getImageCenter:()=>HX,getInnerMostAxes:()=>mK,getPermuted:()=>qX,getRaggedRank:()=>WX,getReductionAxes:()=>xd,getReshaped:()=>KX,getReshapedPermuted:()=>jX,getRowPartitionTypesHelper:()=>VX,getSliceBeginCoords:()=>XX,getSliceSize:()=>YX,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>w5,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>S5,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>I5,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>N5,getSparseReshapeInputOutputMismatchErrorMessage:()=>_5,getSparseReshapeInputOutputMultipleErrorMessage:()=>T5,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>v5,getSparseReshapeNegativeOutputDimErrorMessage:()=>k5,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>D5,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>E5,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>$5,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>R5,getUndoAxesPermutation:()=>lK,isIdentityPermutation:()=>y5,log:()=>t4,mergeRealAndImagArrays:()=>s5,prepareAndValidate:()=>lT,prepareSplitSize:()=>C5,segment_util:()=>h$,shouldFuse:()=>Zu,slice_util:()=>hs,splitRealAndImagArrays:()=>a5,stridesOrDilationsArePositive:()=>Ta,tupleValuesAreOne:()=>Bu,upcastType:()=>dt,validateDefaultValueShape:()=>UX,validateInput:()=>lc,validateUpdateShape:()=>Qw,warn:()=>Ia}),(P=ek||(ek={}))[P.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",P[P.VALUE_ROWIDS=1]="VALUE_ROWIDS",P[P.ROW_LENGTHS=2]="ROW_LENGTHS",P[P.ROW_SPLITS=3]="ROW_SPLITS",P[P.ROW_LIMITS=4]="ROW_LIMITS",P[P.ROW_STARTS=5]="ROW_STARTS";var hg=30;function GX(e){return e<=hg?e:Up(e,Math.floor(Math.sqrt(e)))}function HX(e,t,u){return[u*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function KX(e,t,u,y=!0){let w=[];if(y)(w=w.concat(t.slice(0))).push(e[0]/u),w=w.concat(e.slice(1));else{w=w.concat(e[0]);let u=t.length;for(let y=0;y<u;++y)w=w.concat([e[y+1]/t[y],t[y]]);w=w.concat(e.slice(u+1))}return w}function qX(e,t,u=!0){let y=[];if(u){y.push(t);for(let u=t+1;u<e;++u)u<=2*t?(y.push(u),y.push(u-(t+1))):y.push(u)}else{let u=[],w=[];for(let y=1;y<e;++y)y>=2*t+1||y%2==1?w.push(y):u.push(y);y.push(...u),y.push(0),y.push(...w)}return y}function jX(e,t,u,y=!0){let w=[];y?w.push(e[0]/u):w.push(e[0]*u);for(let u=1;u<e.length;++u)u<=t.length?y?w.push(t[u-1]*e[u]):w.push(e[u]/t[u-1]):w.push(e[u]);return w}function XX(e,t){let u=[0];for(let y=0;y<t;++y)u.push(e[y][0]);return u}function YX(e,t,u){let y=e.slice(0,1);for(let w=0;w<u;++w)y.push(e[w+1]-t[w][0]-t[w][1]);return y}var hy=1.7580993408473768,hA=1.0507009873554805,hx=.3275911,hb=.254829592,hv=-.284496736,hN=1.421413741,hC=-1.453152027,hE=1.061405429;function s5(e,t){if(e.length!==t.length)throw Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let u=new Float32Array(2*e.length);for(let y=0;y<u.length;y+=2)u[y]=e[y/2],u[y+1]=t[y/2];return u}function a5(e){let t=new Float32Array(e.length/2),u=new Float32Array(e.length/2);for(let y=0;y<e.length;y+=2)t[y/2]=e[y],u[y/2]=e[y+1];return{real:t,imag:u}}function i5(e){let t=Math.ceil(e.length/4),u=new Float32Array(t),y=new Float32Array(t);for(let t=0;t<e.length;t+=4)u[Math.floor(t/4)]=e[t],y[Math.floor(t/4)]=e[t+1];return{real:u,imag:y}}function u5(e){let t=Math.floor(e.length/4),u=new Float32Array(t),y=new Float32Array(t);for(let t=2;t<e.length;t+=4)u[Math.floor(t/4)]=e[t],y[Math.floor(t/4)]=e[t+1];return{real:u,imag:y}}function p5(e,t){return{real:e[2*t],imag:e[2*t+1]}}function c5(e,t,u,y){e[2*y]=t,e[2*y+1]=u}function l5(e,t){let u=new Float32Array(e/2),y=new Float32Array(e/2);for(let w=0;w<Math.ceil(e/2);w++){let T=(t?2:-2)*Math.PI*(w/e);u[w]=Math.cos(T),y[w]=Math.sin(T)}return{real:u,imag:y}}function m5(e,t,u){let y=(u?2:-2)*Math.PI*(e/t);return{real:Math.cos(y),imag:Math.sin(y)}}var hR=/->/g;function f5(e,t){let u=((e=e.replace(/\s/g,"")).length-e.replace(hR,"").length)/2;if(u<1)throw Error("Equations without an arrow are not supported.");if(u>1)throw Error('Equation must contain exactly one arrow ("->").');let[y,w]=e.split("->");E(-1===y.indexOf("..."),()=>'The ellipsis notation ("...") is not supported yet.');let T=y.split(","),$=T.length;if(t!==$)throw Error(`Expected ${$} input tensors, received ${t}`);if($>2)throw Error("Support for more than 2 input tensors is not implemented yet.");let M=[];for(let e=0;e<w.length;++e){let t=w[e];if(!T.some(e=>-1!==e.indexOf(t)))throw Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===M.indexOf(t)&&M.push(t)}for(let e=0;e<y.length;++e){let t=y[e];-1===M.indexOf(t)&&","!==t&&M.push(t)}let O=Array(T.length);for(let e=0;e<$;++e){if(new Set(T[e].split("")).size!==T[e].length)throw Error(`Found duplicate axes in input component ${T[e]}. Support for duplicate axes in input is not implemented yet.`);O[e]=[];for(let t=0;t<T[e].length;++t)O[e].push(M.indexOf(T[e][t]))}let P=M.length,z=w.length,L=[];for(let e=z;e<P;++e)L.push(e);return{allDims:M,summedDims:L,idDims:O}}function h5(e,t){let u=Array(e);u.fill(-1);for(let e=0;e<t.length;++e)u[t[e]]=e;let y=[];for(let t=0;t<e;++t)-1===u[t]&&y.push(t);return{permutationIndices:u=u.filter(e=>-1!==e),expandDims:y}}function g5(e,t,u){let y=Array(e);for(let e=0;e<u.length;++e){let w=u[e].shape;for(let u=0;u<t[e].length;++u)void 0===y[t[e][u]]?y[t[e][u]]=w[u]:E(y[t[e][u]]===w[u],()=>`Expected dimension ${y[t[e][u]]} at axis ${u} of input shaped ${JSON.stringify(w)}, but got dimension ${w[u]}`)}}function x5(e,t){let u=[],y=0;0===e.length&&e.push(-1),y=e.length+1;for(let e=0;e<y;++e)u.push([]);let w=[];for(let y=0;y<e.length;++y)for(let T of function(e,t){let u=[];for(let y=0;y<e.length;++y)(0===e[y].length||-1!==e[y].indexOf(t)||-1===t)&&u.push(y);return u}(t,e[y]))-1===w.indexOf(T)&&(u[y].push(T),w.push(T));return{path:e,steps:u}}function y5(e){return e.every((e,t)=>e===t)}function C5(e,t,u=0){let y=[];if("number"==typeof t)E(e.shape[u]%t==0,()=>"Number of splits must evenly divide the axis."),y=Array(t).fill(e.shape[u]/t);else{E(1>=t.reduce((e,t)=>(-1===t&&(e+=1),e),0),()=>"There should be only one negative value in split array.");let w=t.indexOf(-1);if(-1!==w){let y=t.reduce((e,t)=>t>0?e+t:e);t[w]=e.shape[u]-y}E(e.shape[u]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),y=t}return y}function w5(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function S5(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function I5(e,t,u){return`indices(${e}, 0) is invalid: ${t} >= ${u}`}function v5(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function k5(e,t){return`size ${e} must be non-negative, not ${t}`}function N5(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function T5(e,t){let u=ze(e),y=ze(t);return`Input to reshape is a SparseTensor with ${u}
  dense values, but the requested shape requires a multiple of ${y}. inputShape=${e} outputShape= ${t}`}function _5(e,t){let u=ze(e),y=ze(t);return`Input to reshape is a tensor with ${u} dense values, but the requested shape has ${y}. inputShape=${e} outputShape=${t}`}function E5(){return"segment ids must be >= 0"}function $5(){return"segment ids are not increasing"}function R5(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function D5(e,t,u){return`Bad: indices[${e}] == ${t} out of range [0, ${u})`}var h$={};function A5(e,t){let u=!1,y;for(e<=hg?(y=e,u=!0):y=Up(e,Math.floor(Math.sqrt(e)));!u;)y>t||y===e?u=!0:y=Up(e,y+1);return y}function F5(e,t,u){let y=[],w=e.length;for(let T=0;T<w;T++)T!==t?y.push(e[T]):y.push(u);return y}function P5(e,t,u,y){let w=t.shape.length,T=e.shape.length;if(0!==y&&(y<-w||y>w))throw Error(`Expect batchDims in the range of [-${w}, ${w}], but got ${y}`);if(y<0&&(y+=w),y>T)throw Error(`batchDims (${y}) must be less than rank(x) (
    ${T}).`);if(u<y)throw Error(`batchDims (${y}) must be less than or equal to axis (${u}).`);for(let u=0;u<y;++u)if(e.shape[u]!==t.shape[u])throw Error(`x.shape[${u}]: ${e.shape[u]} should be equal to indices.shape[${u}]: ${t.shape[u]}.`);let $=e.shape[u],M=[],O=1,P=1,z=1;for(let t=0;t<y;++t)M.push(e.shape[t]),O*=e.shape[t];for(let t=y;t<u;t++)M.push(e.shape[t]),P*=e.shape[t];for(let e=y;e<w;e++)M.push(t.shape[e]);for(let t=u+1;t<T;t++)M.push(e.shape[t]),z*=e.shape[t];return{batchSize:O,sliceSize:z,outerSize:P,dimSize:$,outputShape:M}}function O5(e){try{return e.map(e=>Jp(e))}catch(e){throw Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function M5(e){return e.map(e=>Ji(e))}qe(h$,{collectGatherOpShapeInfo:()=>P5,computeOutShape:()=>F5,segOpComputeOptimalWindowSize:()=>A5});var h_={};qe(h_,{nonMaxSuppressionV3Impl:()=>Jd,nonMaxSuppressionV4Impl:()=>ef,nonMaxSuppressionV5Impl:()=>tf,whereImpl:()=>Xd}),function(){for(let e of cY)rS(e)}(),nG.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),(z=eI||(eI={}))[z.DT_INVALID=0]="DT_INVALID",z[z.DT_FLOAT=1]="DT_FLOAT",z[z.DT_DOUBLE=2]="DT_DOUBLE",z[z.DT_INT32=3]="DT_INT32",z[z.DT_UINT8=4]="DT_UINT8",z[z.DT_INT16=5]="DT_INT16",z[z.DT_INT8=6]="DT_INT8",z[z.DT_STRING=7]="DT_STRING",z[z.DT_COMPLEX64=8]="DT_COMPLEX64",z[z.DT_INT64=9]="DT_INT64",z[z.DT_BOOL=10]="DT_BOOL",z[z.DT_QINT8=11]="DT_QINT8",z[z.DT_QUINT8=12]="DT_QUINT8",z[z.DT_QINT32=13]="DT_QINT32",z[z.DT_BFLOAT16=14]="DT_BFLOAT16",z[z.DT_QINT16=15]="DT_QINT16",z[z.DT_QUINT16=16]="DT_QUINT16",z[z.DT_UINT16=17]="DT_UINT16",z[z.DT_COMPLEX128=18]="DT_COMPLEX128",z[z.DT_HALF=19]="DT_HALF",z[z.DT_RESOURCE=20]="DT_RESOURCE",z[z.DT_VARIANT=21]="DT_VARIANT",z[z.DT_UINT32=22]="DT_UINT32",z[z.DT_UINT64=23]="DT_UINT64",z[z.DT_FLOAT_REF=101]="DT_FLOAT_REF",z[z.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",z[z.DT_INT32_REF=103]="DT_INT32_REF",z[z.DT_UINT8_REF=104]="DT_UINT8_REF",z[z.DT_INT16_REF=105]="DT_INT16_REF",z[z.DT_INT8_REF=106]="DT_INT8_REF",z[z.DT_STRING_REF=107]="DT_STRING_REF",z[z.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",z[z.DT_INT64_REF=109]="DT_INT64_REF",z[z.DT_BOOL_REF=110]="DT_BOOL_REF",z[z.DT_QINT8_REF=111]="DT_QINT8_REF",z[z.DT_QUINT8_REF=112]="DT_QUINT8_REF",z[z.DT_QINT32_REF=113]="DT_QINT32_REF",z[z.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",z[z.DT_QINT16_REF=115]="DT_QINT16_REF",z[z.DT_QUINT16_REF=116]="DT_QUINT16_REF",z[z.DT_UINT16_REF=117]="DT_UINT16_REF",z[z.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",z[z.DT_HALF_REF=119]="DT_HALF_REF",z[z.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",z[z.DT_VARIANT_REF=121]="DT_VARIANT_REF",z[z.DT_UINT32_REF=122]="DT_UINT32_REF",z[z.DT_UINT64_REF=123]="DT_UINT64_REF",(W=(L=eC||(eC={})).CheckpointFormatVersion||(L.CheckpointFormatVersion={}))[W.LEGACY=0]="LEGACY",W[W.V1=1]="V1",W[W.V2=2]="V2";var hM={};function z5(e,t){hM[e]={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t}}function V5(e){delete hM[e]}function I(e,t,u,y,w){let T=t.inputParams[e];if(T&&void 0!==T.inputIndexStart){let e=T.inputIndexStart,$=0===T.inputIndexEnd?void 0:void 0===T.inputIndexEnd?e+1:T.inputIndexEnd,M=e<0?t.inputNames.length+e:e;if("tensor"===T.type)return Bt(t.inputNames[M],u,y,w);if("tensors"===T.type){let T=t.inputs.slice(e,$);return t.inputNames.slice(e,$).filter((e,t)=>{var u;return(null===(u=T[t])||void 0===u?void 0:u.op)!=="NoOp"}).map(e=>Bt(e,u,y,w))}let O=Bt(t.inputNames[M],u,y,w),P=O.dataSync();return"number"===T.type?P[0]:oc.toNestedArray(O.shape,P)}let $=t.attrParams[e];return $&&$.value}function Bt(e,t,u,y){let[w,T]=Nr(e,u);if(null!=y){let e=y.getHashTableHandleByName(w);if(null!=e)return e}let $=u.currentContextIds.find(e=>!!t[cf(w,e)]);return void 0!==$?t[cf(w,$)][T]:void 0}function hS(e,t,u){return t[cf(e,u.currentContextId)]}function Ls(e,t){let[u,y,w]=Nr(e,t);return[cf(u,t&&t.currentContextId),y,w]}function cf(e,t){return t?`${e}-${t}`:e}function Nr(e,t){if(""===e)return["",0,void 0];let u=null!=t&&null!=t.parseNodeNameCache;if(u){let u=t.parseNodeNameCache.get(e);if(null!=u)return u}let y=e.split(":"),w;if(1===y.length)w=[e,0,void 0];else{let e=y[0],t=3===y.length?y[1]:void 0;w=[e,Number(y[y.length-1]),t]}return u&&t.parseNodeNameCache.set(e,w),w}function Pl(e,t,u){let y=I("pad",e,t,u);if("explicit"===y){y=I("explicitPaddings",e,t,u);let w=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)w[e][0]=y[2*e],w[e][1]=y[2*e+1];return w}return y}function Bs(e){return e.kept?e:o3(e)}var hF={};qe(hF,{json:()=>hO});var hO=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],hD={};qe(hD,{json:()=>hz});var hz=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],hL={};qe(hL,{json:()=>hW});var hW=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],hB={};qe(hB,{json:()=>hV});var hV=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],hU={};qe(hU,{json:()=>hG});var hG=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],hH={};qe(hH,{json:()=>hj});var hj=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],hq={};qe(hq,{json:()=>hX});var hX=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],hK={};qe(hK,{json:()=>hZ});var hZ=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],hY={};qe(hY,{json:()=>hJ});var hJ=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],hQ={};qe(hQ,{json:()=>h1});var h1=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],h2={};qe(h2,{json:()=>h0});var h0=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],h3={};qe(h3,{json:()=>h7});var h7=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],h6={};qe(h6,{json:()=>h8});var h8=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],h9={};qe(h9,{json:()=>fe});var fe=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],fa={};qe(fa,{json:()=>fn});var fn=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],fs={};qe(fs,{json:()=>fo});var fo=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],fd={};qe(fd,{json:()=>fh});var fh=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],fg={};qe(fg,{json:()=>fy});var fy=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],fA={};qe(fA,{json:()=>fx});var fx=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],fb=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[].concat(...[hF,hD,hL,hB,hU,hH,hq,hK,hY,hQ,h2,h3,h6,h9,fa,fs,fd,fg,fA].map(e=>e.json));this.opMappers=e.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e,t={}){let u=e.node,y=[],w=[],T=[],$=u.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?y.push(e[t.name]):"Const"===t.op?w.push(e[t.name]):(null==t.input||0===t.input.length)&&T.push(e[t.name]),e),{}),M=[],O=[],P={},z={};null!=t&&(P=this.mapSignatureEntries(t.inputs),z=this.mapSignatureEntries(t.outputs));let L=Object.keys($);L.forEach(e=>{let t=$[e];t.inputNames.forEach((e,u)=>{let[y,,w]=Ls(e),T=$[y];if(null!=T.outputs){let e=T.outputs.indexOf(w);if(-1!==e){let w=`${y}:${e}`;t.inputNames[u]=w}}t.inputs.push(T),T.children.push(t)})}),0===Object.keys(z).length?L.forEach(e=>{let t=$[e];0===t.children.length&&O.push(t)}):Object.keys(z).forEach(e=>{let[t]=Ls(e),u=$[t];null!=u&&(u.signatureKey=z[e],O.push(u))}),Object.keys(P).length>0?Object.keys(P).forEach(e=>{let[t]=Ls(e),u=$[t];u&&(u.signatureKey=P[e],M.push(u))}):M=y;let W={};null!=e.library&&null!=e.library.function&&(W=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));let B={nodes:$,inputs:M,outputs:O,weights:w,placeholders:y,signature:t,functions:W};return T.length>0&&(B.initNodes=T),B}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,u)=>(t[e[u].name]=u,t),{})}mapNode(e){let t=hM[e.op]||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});let u={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.slice(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(u.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(u.attrParams=t.attrs.reduce((t,u)=>{let y=u.type,w;switch(u.type){case"string":void 0===(w=lf(e.attr,u.tfName,u.defaultValue))&&u.tfDeprecatedName&&(w=lf(e.attr,u.tfDeprecatedName,u.defaultValue));break;case"string[]":void 0===(w=yf(e.attr,u.tfName,u.defaultValue))&&u.tfDeprecatedName&&(w=yf(e.attr,u.tfDeprecatedName,u.defaultValue));break;case"number":void 0===(w=df(e.attr,u.tfName,u.defaultValue||0))&&u.tfDeprecatedName&&(w=df(e.attr,u.tfDeprecatedName,u.defaultValue));break;case"number[]":void 0===(w=xf(e.attr,u.tfName,u.defaultValue))&&u.tfDeprecatedName&&(w=xf(e.attr,u.tfDeprecatedName,u.defaultValue));break;case"bool":void 0===(w=mf(e.attr,u.tfName,u.defaultValue))&&u.tfDeprecatedName&&(w=mf(e.attr,u.tfDeprecatedName,u.defaultValue));break;case"bool[]":void 0===(w=Cf(e.attr,u.tfName,u.defaultValue))&&u.tfDeprecatedName&&(w=Cf(e.attr,u.tfDeprecatedName,u.defaultValue));break;case"shape":void 0===(w=gf(e.attr,u.tfName,u.defaultValue))&&u.tfDeprecatedName&&(w=gf(e.attr,u.tfDeprecatedName,u.defaultValue));break;case"shape[]":void 0===(w=bf(e.attr,u.tfName,u.defaultValue))&&u.tfDeprecatedName&&(w=bf(e.attr,u.tfDeprecatedName,u.defaultValue));break;case"dtype":void 0===(w=ff(e.attr,u.tfName,u.defaultValue))&&u.tfDeprecatedName&&(w=ff(e.attr,u.tfDeprecatedName,u.defaultValue));break;case"dtype[]":void 0===(w=hf(e.attr,u.tfName,u.defaultValue))&&u.tfDeprecatedName&&(w=hf(e.attr,u.tfDeprecatedName,u.defaultValue));break;case"func":void 0===(w=vT(e.attr,u.tfName,u.defaultValue))&&u.tfDeprecatedName&&(w=vT(e.attr,u.tfDeprecatedName,u.defaultValue));break;case"tensor":case"tensors":break;default:throw Error(`Unsupported param type: ${u.type} for op: ${e.op}`)}return t[u.name]={value:w,type:y},t},{})),u}mapFunction(e){let t=e.nodeDef,u=[],y={};null!=t&&(y=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&u.push(e[t.name]),e),{}));let w=[],T=[];e.signature.inputArg.forEach(e=>{let[t]=Ls(e.name),u={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:PS(e.type),type:"dtype"}},children:[]};u.signatureKey=e.name,w.push(u),y[t]=u}),Object.keys(y).forEach(e=>{let t=y[e];t.inputNames.forEach((e,u)=>{let[w,,T]=Ls(e),$=y[w];if(null!=$.outputs){let e=$.outputs.indexOf(T);if(-1!==e){let y=`${w}:${e}`;t.inputNames[u]=y}}t.inputs.push($),$.children.push(t)})});let $=e.ret;e.signature.outputArg.forEach(e=>{let[t,u]=Ls($[e.name]),w=y[t];null!=w&&(w.defaultOutput=u,T.push(w))});let M=this.mapArgsToSignature(e);return{nodes:y,inputs:w,outputs:T,weights:u,placeholders:[],signature:M}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,u)=>(t[u.name]=this.mapArgToTensorInfo(u,e.ret),t),{})}}mapArgToTensorInfo(e,t){let u=e.name;return null!=t&&(u=t[u]),{name:u,dtype:e.type}}};function kT(e,t){let u=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){let t=nG.global;if(void 0!==t.atob)return t.atob(e);if(void 0!==na)return new na(e,"base64").toString();throw Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?u:u.toLowerCase()}function lf(e,t,u,y=!1){let w=e[t];return null!=w?kT(w.s,y):u}function mf(e,t,u){let y=e[t];return y?y.b:u}function df(e,t,u){let y=e[t]||{},w=null!=y.i?y.i:null!=y.f?y.f:u;return"number"==typeof w?w:parseInt(w,10)}function PS(e){switch("string"==typeof e&&(e=eI[e]),e){case eI.DT_FLOAT:case eI.DT_HALF:return"float32";case eI.DT_INT32:case eI.DT_INT64:case eI.DT_INT8:case eI.DT_UINT8:return"int32";case eI.DT_BOOL:return"bool";case eI.DT_DOUBLE:return"float32";case eI.DT_STRING:return"string";case eI.DT_COMPLEX64:case eI.DT_COMPLEX128:return"complex64";default:return null}}function vT(e,t,u){let y=e[t];return y&&y.func?y.func.name:u}function ff(e,t,u){let y=e[t];return y&&y.type?PS(y.type):u}function hf(e,t,u){let y=e[t];return y&&y.list&&y.list.type?y.list.type.map(e=>PS(e)):u}function NT(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"==typeof e.size?e.size:parseInt(e.size,10)):[]}function gf(e,t,u){let y=e[t];return y&&y.shape?NT(y.shape):u}function xf(e,t,u){let y=e[t];return y?((y.list.f&&y.list.f.length?y.list.f:y.list.i)||[]).map(e=>"number"==typeof e?e:parseInt(e,10)):u}function yf(e,t,u,y=!1){let w=e[t];return w&&w.list&&w.list.s?w.list.s.map(e=>kT(e,y)):u}function bf(e,t,u){let y=e[t];return y&&y.list&&y.list.shape?y.list.shape.map(e=>NT(e)):u}function Cf(e,t,u){let y=e[t];return y&&y.list&&y.list.b?y.list.b:u}var fv=class{constructor(e,t,u){this.node=e,this.tensorMap=t,this.context=u,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return Bt(e,this.tensorMap,this.context)}getAttr(e,t){let u=this.node.rawAttrs[e];if(null!=u.tensor)return Bt(e,this.tensorMap,this.context);if(null!=u.i||null!=u.f)return df(this.node.rawAttrs,e,t);if(null!=u.s)return lf(this.node.rawAttrs,e,t);if(null!=u.b)return mf(this.node.rawAttrs,e,t);if(null!=u.shape)return gf(this.node.rawAttrs,e,t);if(null!=u.type)return ff(this.node.rawAttrs,e,t);if(null!=u.list){if(null!=u.list.i||null!=u.list.f)return xf(this.node.rawAttrs,e,t);if(null!=u.list.s)return yf(this.node.rawAttrs,e,t);if(null!=u.list.shape)return bf(this.node.rawAttrs,e,t);if(null!=u.list.b)return Cf(this.node.rawAttrs,e,t);if(null!=u.list.type)return hf(this.node.rawAttrs,e,t)}return t}},fw={};qe(fw,{OP_SCOPE_SUFFIX:()=>oD,abs:()=>o9,acos:()=>le,acosh:()=>lt,add:()=>o7,addN:()=>la,all:()=>ln,any:()=>li,argMax:()=>ls,argMin:()=>lo,asin:()=>ll,asinh:()=>lu,atan:()=>lh,atan2:()=>lg,atanh:()=>ly,avgPool:()=>lx,avgPool3d:()=>lb,basicLSTMCell:()=>lE,batchNorm:()=>l$,batchNorm2d:()=>l_,batchNorm3d:()=>lM,batchNorm4d:()=>lF,batchToSpaceND:()=>lR,bincount:()=>lO,bitwiseAnd:()=>lP,booleanMaskAsync:()=>L6,broadcastArgs:()=>lD,broadcastTo:()=>lz,buffer:()=>me,cast:()=>o5,ceil:()=>lL,clipByValue:()=>lW,clone:()=>o3,complex:()=>oL,concat:()=>lk,concat1d:()=>lB,concat2d:()=>lV,concat3d:()=>lU,concat4d:()=>lG,conv1d:()=>lj,conv2d:()=>lH,conv2dTranspose:()=>lX,conv3d:()=>lY,conv3dTranspose:()=>lQ,cos:()=>l1,cosh:()=>l2,cosineWindow:()=>$l,cumprod:()=>l3,cumsum:()=>l7,denseBincount:()=>l4,depthToSpace:()=>l6,depthwiseConv2d:()=>l8,diag:()=>l9,dilation2d:()=>ua,div:()=>o6,divNoNan:()=>ul,dot:()=>uu,dropout:()=>pP,einsum:()=>ud,elu:()=>uc,enclosingPowerOfTwo:()=>Zw,ensureShape:()=>uf,equal:()=>ui,erf:()=>um,euclideanNorm:()=>uC,exp:()=>uE,expandDims:()=>uR,expm1:()=>u$,eye:()=>uM,fft:()=>pu,fill:()=>$a,floor:()=>uF,floorDiv:()=>o4,fused:()=>pD,gather:()=>uO,gatherND:()=>pO,greater:()=>uP,greaterEqual:()=>uD,ifft:()=>pd,imag:()=>uz,image:()=>c$,inTopKAsync:()=>Z6,irfft:()=>pc,isFinite:()=>uL,isInf:()=>uW,isNaN:()=>uB,leakyRelu:()=>uV,less:()=>uU,lessEqual:()=>uG,linalg:()=>c_,linspace:()=>$2,localResponseNormalization:()=>uj,log:()=>uq,log1p:()=>uX,logSigmoid:()=>uQ,logSoftmax:()=>u2,logSumExp:()=>u3,logicalAnd:()=>u7,logicalNot:()=>u6,logicalOr:()=>u8,logicalXor:()=>u9,losses:()=>cM,lowerBound:()=>P2,matMul:()=>lI,max:()=>ug,maxPool:()=>da,maxPool3d:()=>dn,maxPoolWithArgmax:()=>di,maximum:()=>ds,mean:()=>dl,meshgrid:()=>L2,min:()=>uy,minimum:()=>du,mirrorPad:()=>dd,mod:()=>dc,moments:()=>dh,movingAverage:()=>p_,mul:()=>o8,multiRNNCell:()=>dg,multinomial:()=>dx,neg:()=>uY,norm:()=>uN,notEqual:()=>db,oneHot:()=>dw,ones:()=>Da,onesLike:()=>dI,op:()=>N,outerProduct:()=>dS,pad:()=>dN,pad1d:()=>dC,pad2d:()=>dE,pad3d:()=>dR,pad4d:()=>d$,pool:()=>dM,pow:()=>uA,prelu:()=>dF,print:()=>ld,prod:()=>dO,raggedGather:()=>dP,raggedRange:()=>dD,raggedTensorToTensor:()=>dz,rand:()=>dL,randomGamma:()=>dj,randomNormal:()=>dq,randomStandardNormal:()=>dX,randomUniform:()=>dK,randomUniformInt:()=>dZ,range:()=>cu,real:()=>dY,reciprocal:()=>dJ,relu:()=>dQ,relu6:()=>d1,reshape:()=>lA,reverse:()=>d2,reverse1d:()=>d0,reverse2d:()=>d5,reverse3d:()=>d3,reverse4d:()=>d7,rfft:()=>pf,round:()=>d4,rsqrt:()=>d6,scalar:()=>ke,scatterND:()=>pM,searchSorted:()=>de,selu:()=>d8,separableConv2d:()=>d9,setdiff1dAsync:()=>A1,sigmoid:()=>lS,sign:()=>pt,signal:()=>cR,sin:()=>pa,sinh:()=>pn,slice:()=>lN,slice1d:()=>pr,slice2d:()=>pi,slice3d:()=>ps,slice4d:()=>po,softmax:()=>pl,softplus:()=>uJ,spaceToBatchND:()=>d_,sparse:()=>cF,sparseToDense:()=>pF,spectral:()=>cE,split:()=>ph,sqrt:()=>ux,square:()=>ub,squaredDifference:()=>pm,squeeze:()=>pg,stack:()=>py,step:()=>pA,stridedSlice:()=>px,string:()=>cO,sub:()=>u1,sum:()=>uI,tan:()=>pb,tanh:()=>lC,tensor:()=>ar,tensor1d:()=>Jt,tensor2d:()=>mu,tensor3d:()=>jd,tensor4d:()=>G1,tensor5d:()=>H1,tensor6d:()=>K1,tensorScatterUpdate:()=>pI,tile:()=>u_,topk:()=>pS,transpose:()=>p$,truncatedNormal:()=>pN,unique:()=>pC,unsortedSegmentSum:()=>pE,unstack:()=>pR,upperBound:()=>J1,variable:()=>eN,where:()=>us,whereAsync:()=>Yd,zeros:()=>Gr,zerosLike:()=>uo});var TT=(e,t,u,y=fw)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[y.add(I("a",e,t,u),I("b",e,t,u))];case"AddN":return[y.addN(I("tensors",e,t,u))];case"FloorMod":case"Mod":return[y.mod(I("a",e,t,u),I("b",e,t,u))];case"Mul":return[y.mul(I("a",e,t,u),I("b",e,t,u))];case"RealDiv":case"Div":return[y.div(I("a",e,t,u),I("b",e,t,u))];case"DivNoNan":return[y.divNoNan(I("a",e,t,u),I("b",e,t,u))];case"FloorDiv":return[y.floorDiv(I("a",e,t,u),I("b",e,t,u))];case"Sub":return[y.sub(I("a",e,t,u),I("b",e,t,u))];case"Minimum":return[y.minimum(I("a",e,t,u),I("b",e,t,u))];case"Maximum":return[y.maximum(I("a",e,t,u),I("b",e,t,u))];case"Pow":return[y.pow(I("a",e,t,u),I("b",e,t,u))];case"SquaredDifference":return[y.squaredDifference(I("a",e,t,u),I("b",e,t,u))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},_T=(e,t,u,y=fw)=>{switch(e.op){case"Abs":case"ComplexAbs":return[y.abs(I("x",e,t,u))];case"Acos":return[y.acos(I("x",e,t,u))];case"Acosh":return[y.acosh(I("x",e,t,u))];case"Asin":return[y.asin(I("x",e,t,u))];case"Asinh":return[y.asinh(I("x",e,t,u))];case"Atan":return[y.atan(I("x",e,t,u))];case"Atan2":return[y.atan2(I("x",e,t,u),I("y",e,t,u))];case"Atanh":return[y.atanh(I("x",e,t,u))];case"Ceil":return[y.ceil(I("x",e,t,u))];case"Complex":return[y.complex(I("real",e,t,u),I("imag",e,t,u))];case"Cos":return[y.cos(I("x",e,t,u))];case"Cosh":return[y.cosh(I("x",e,t,u))];case"Elu":return[y.elu(I("x",e,t,u))];case"Erf":return[y.erf(I("x",e,t,u))];case"Exp":return[y.exp(I("x",e,t,u))];case"Expm1":return[y.expm1(I("x",e,t,u))];case"Floor":return[y.floor(I("x",e,t,u))];case"Log":return[y.log(I("x",e,t,u))];case"Log1p":return[y.log1p(I("x",e,t,u))];case"Imag":return[y.imag(I("x",e,t,u))];case"Neg":return[y.neg(I("x",e,t,u))];case"Reciprocal":return[y.reciprocal(I("x",e,t,u))];case"Real":return[y.real(I("x",e,t,u))];case"Relu":return[y.relu(I("x",e,t,u))];case"Round":return[y.round(I("x",e,t,u))];case"Selu":return[y.selu(I("x",e,t,u))];case"Sigmoid":return[y.sigmoid(I("x",e,t,u))];case"Sin":return[y.sin(I("x",e,t,u))];case"Sign":return[y.sign(I("x",e,t,u))];case"Sinh":return[y.sinh(I("x",e,t,u))];case"Softplus":return[y.softplus(I("x",e,t,u))];case"Sqrt":return[y.sqrt(I("x",e,t,u))];case"Square":return[y.square(I("x",e,t,u))];case"Tanh":return[y.tanh(I("x",e,t,u))];case"Tan":return[y.tan(I("x",e,t,u))];case"ClipByValue":return[y.clipByValue(I("x",e,t,u),I("clipValueMin",e,t,u),I("clipValueMax",e,t,u))];case"Relu6":return[y.relu6(I("x",e,t,u))];case"Rsqrt":return[y.rsqrt(Bt(e.inputNames[0],t,u))];case"LeakyRelu":return[y.leakyRelu(I("x",e,t,u),I("alpha",e,t,u))];case"Prelu":return[y.prelu(I("x",e,t,u),I("alpha",e,t,u))];case"IsNan":return[y.isNaN(Bt(e.inputNames[0],t,u))];case"IsInf":return[y.isInf(Bt(e.inputNames[0],t,u))];case"IsFinite":return[y.isFinite(Bt(e.inputNames[0],t,u))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Hr(e,t,u=""){if(!("number"==typeof e||"number"==typeof t)){oc.assert(e.length===t.length,()=>u+` Shapes ${e} and ${t} must match`);for(let y=0;y<e.length;y++){let w=e[y],T=t[y];oc.assert(w<0||T<0||w===T,()=>u+` Shapes ${e} and ${t} must match`)}}}function ET(e){return!("number"==typeof e||e.some(e=>e<0))}function fc(e,t,u){let y=Sf(e,u),w=!ET(y);if(w&&0===t.length)throw Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${y}`);if(w&&t.forEach(e=>{y=Sf(e.shape,y)}),!ET(y))throw Error(`Non-fully-defined elementShape: ${y}`);return y}function Sf(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let u=[];for(let y=0;y<e.length;++y){let w=e[y],T=t[y];if(w>=0&&T>=0&&w!==T)throw Error(`Incompatible shape during merge: ${e} vs. ${t}`);u[y]=w>=0?w:T}return u}var fI=class{constructor(e,t,u,y,w,T,$){this.name=e,this.dtype=t,this.maxSize=u,this.elementShape=y,this.identicalElementShapes=w,this.dynamicSize=T,this.clearAfterRead=$,this.tensors=[],this.closed_=!1,this.idTensor=ke(0),$r(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let u=this.tensors[e]||{};if(t.dtype!==this.dtype)throw Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),Hr(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),u.read)throw Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(u.written)throw Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);u.tensor=t,$r(t),u.written=!0,this.tensors[e]=u}writeMany(e,t){if(e.length!==t.length)throw Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((e,u)=>this.write(e,t[u]))}gather(e,t){if(t&&t!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return ar([],[0].concat(this.elementShape));let u=this.readMany(e);return Hr(this.elementShape,u[0].shape,"TensorArray shape mismatch: "),py(u,0)}concat(e){if(e&&e!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return ar([],[0].concat(this.elementShape));let t=[];for(let e=0;e<this.size();e++)t.push(e);let u=this.readMany(t);return Hr(this.elementShape,u[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${u[0].shape})`),lk(u,0)}scatter(e,t){if(t.dtype!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let u=Math.max(...e);if(!this.dynamicSize&&u>=this.maxSize)throw Error(`Max index must be < array size (${u}  vs. ${this.maxSize})`);this.writeMany(e,pR(t,0))}split(e,t){if(t.dtype!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let u=0,y=e.map(e=>u+=e);if(u!==t.shape[0])throw Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${u}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let w=0===u?0:t.size/u,T=[];De(()=>{t=lA(t,[1,u,w]);for(let u=0;u<e.length;++u){let $=[0,0===u?0:y[u-1],0],M=[1,e[u],w];T[u]=lA(lN(t,$,M),this.elementShape)}return T});let $=[];for(let t=0;t<e.length;t++)$[t]=t;this.writeMany($,T)}},fS=class r9{get id(){return this.idTensor.id}constructor(e,t,u,y=-1){this.tensors=e,this.elementShape=t,this.elementDtype=u,null!=e&&e.forEach(e=>{if(u!==e.dtype)throw Error(`Invalid data types; op elements ${u}, but list elements ${e.dtype}`);Hr(t,e.shape,"TensorList shape mismatch: "),$r(e)}),this.idTensor=ke(0),this.maxNumElements=y,$r(this.idTensor)}copy(){return new r9([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.id)||t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,u=-1){if(t!==this.elementDtype)throw Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==u&&this.tensors.length!==u)throw Error(`Operation expected a list with ${u} elements but got a list with ${this.tensors.length} elements.`);Hr(e,this.elementShape,"TensorList shape mismatch: ");let y=fc(this.elementShape,this.tensors,e);return De(()=>py(this.tensors.map(e=>lA(e,y)),0))}popBack(e,t){if(t!==this.elementDtype)throw Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw Error("Trying to pop from an empty list.");let u=fc(this.elementShape,this.tensors,e),y=this.tensors.pop();return y.kept=!1,Hr(y.shape,e,"TensorList shape mismatch: "),lA(y,u)}pushBack(e){if(e.dtype!==this.elementDtype)throw Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Hr(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw Error("Trying to push element into a full list.");$r(e),this.tensors.push(e)}resize(e){if(e<0)throw Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new r9([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let u=0;u<Math.min(this.tensors.length,e);++u)t.tensors[u]=this.tensors[u];return t}getItem(e,t,u){if(u!==this.elementDtype)throw Error(`Invalid data types; op elements ${u}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw Error(`element at index ${e} is null.`);Hr(this.tensors[e].shape,t,"TensorList shape mismatch: ");let y=fc(this.elementShape,this.tensors,t);return lA(this.tensors[e],y)}setItem(e,t){if(t.dtype!==this.elementDtype)throw Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Hr(this.elementShape,t.shape,"TensorList shape mismatch: "),$r(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,u){if(t!==this.elementDtype)throw Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Hr(this.elementShape,u,"TensorList shape mismatch: "),e=e.slice(0,this.size());let y=fc(this.elementShape,this.tensors,u);return 0===e.length?ar([],[0].concat(y)):De(()=>py(e.map(e=>lA(this.tensors[e],y)),0))}concat(e,t){if(e&&e!==this.elementDtype)throw Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Hr(this.elementShape,t,"TensorList shape mismatch: ");let u=fc(this.elementShape,this.tensors,t);return 0===this.size()?ar([],[0].concat(u)):De(()=>lk(this.tensors.map(e=>lA(e,u)),0))}},FT=async(e,t,u)=>{switch(e.op){case"If":case"StatelessIf":{let y=I("thenBranch",e,t,u),w=I("elseBranch",e,t,u),T=I("cond",e,t,u),$=I("args",e,t,u);return(await T.data())[0]?u.functionMap[y].executeFunctionAsync($,u.tensorArrayMap,u.tensorListMap):u.functionMap[w].executeFunctionAsync($,u.tensorArrayMap,u.tensorListMap)}case"While":case"StatelessWhile":{let y=I("body",e,t,u),w=I("cond",e,t,u),T=I("args",e,t,u),$=await u.functionMap[w].executeFunctionAsync(T,u.tensorArrayMap,u.tensorListMap),M=T.map(e=>e.id),O=await $[0].data();$.forEach(e=>{e.kept||-1!==M.indexOf(e.id)||e.dispose()});let P=T;for(;O[0];){let e=P,t=(P=await u.functionMap[y].executeFunctionAsync(P,u.tensorArrayMap,u.tensorListMap)).map(e=>e.id);e.forEach(e=>{e.kept||-1!==M.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()});let T=await u.functionMap[w].executeFunctionAsync(P,u.tensorArrayMap,u.tensorListMap);O=await T[0].data(),T.forEach(e=>{e.kept||-1!==M.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()})}return P}case"LoopCond":return[Bs(I("pred",e,t,u))];case"Switch":{let y=I("pred",e,t,u),w=I("data",e,t,u);return w.kept||(w=Bs(w)),(await y.data())[0]?[void 0,w]:[w,void 0]}case"Merge":{let y=e.inputNames.find(e=>void 0!==Bt(e,t,u));if(y)return[Bs(Bt(y,t,u))];return}case"Enter":{let y=I("frameName",e,t,u),w=I("tensor",e,t,u);return u.enterFrame(y),[Bs(w)]}case"Exit":{let y=I("tensor",e,t,u);return u.exitFrame(),[Bs(y)]}case"NextIteration":{let y=I("tensor",e,t,u);return u.nextIteration(),[Bs(y)]}case"TensorArrayV3":{let y=I("size",e,t,u),w=I("dtype",e,t,u),T=I("elementShape",e,t,u),$=I("dynamicSize",e,t,u),M=I("clearAfterRead",e,t,u),O=I("identicalElementShapes",e,t,u),P=I("name",e,t,u),z=new fI(P,w,y,T,O,$,M);return u.addTensorArray(z),[z.idTensor,ke(1)]}case"TensorArrayWriteV3":{let y=I("tensorArrayId",e,t,u),w=I("index",e,t,u),T=I("tensor",e,t,u),$=u.getTensorArray(y.id);return $.write(w,T),[$.idTensor]}case"TensorArrayReadV3":{let y=I("tensorArrayId",e,t,u),w=I("index",e,t,u);return[u.getTensorArray(y.id).read(w)]}case"TensorArrayGatherV3":{let y=I("tensorArrayId",e,t,u),w=I("indices",e,t,u),T=I("dtype",e,t,u);return[u.getTensorArray(y.id).gather(w,T)]}case"TensorArrayScatterV3":{let y=I("tensorArrayId",e,t,u),w=I("indices",e,t,u),T=I("tensor",e,t,u),$=u.getTensorArray(y.id);return $.scatter(w,T),[$.idTensor]}case"TensorArrayConcatV3":{let y=I("tensorArrayId",e,t,u),w=u.getTensorArray(y.id),T=I("dtype",e,t,u);return[w.concat(T)]}case"TensorArraySplitV3":{let y=I("tensorArrayId",e,t,u),w=I("tensor",e,t,u),T=I("lengths",e,t,u),$=u.getTensorArray(y.id);return $.split(T,w),[$.idTensor]}case"TensorArraySizeV3":{let y=I("tensorArrayId",e,t,u);return[ke(u.getTensorArray(y.id).size(),"int32")]}case"TensorArrayCloseV3":{let y=I("tensorArrayId",e,t,u),w=u.getTensorArray(y.id);return w.clearAndClose(),[w.idTensor]}case"TensorListSetItem":{let y=I("tensorListId",e,t,u),w=I("index",e,t,u),T=I("tensor",e,t,u),$=u.getTensorList(y.id);return $.setItem(w,T),[$.idTensor]}case"TensorListGetItem":{let y=I("tensorListId",e,t,u),w=I("index",e,t,u),T=I("elementShape",e,t,u),$=I("elementDType",e,t,u);return[u.getTensorList(y.id).getItem(w,T,$)]}case"TensorListScatterV2":case"TensorListScatter":{let y=I("indices",e,t,u),w=function(e,t,u,y){if(t.length!==e.shape[0])throw Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let w=Math.max(...t);if(null!=y&&-1!==y&&w>=y)throw Error(`Max index must be < array size (${w}  vs. ${y})`);let T=new fS([],u,e.dtype,y),$=pR(e,0);return t.forEach((e,t)=>{T.setItem(e,$[t])}),T}(I("tensor",e,t,u),y,I("elementShape",e,t,u),I("numElements",e,t,u));return u.addTensorList(w),[w.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let y=I("elementShape",e,t,u),w=I("elementDType",e,t,u),T=I("TensorListReserve"===e.op?"numElements":"maxNumElements",e,t,u),$="TensorListReserve"===e.op?-1:T,M=new fS([],y,w,$);return u.addTensorList(M),[M.idTensor]}case"TensorListGather":{let y=I("tensorListId",e,t,u),w=I("indices",e,t,u),T=I("elementShape",e,t,u),$=I("elementDType",e,t,u);return[u.getTensorList(y.id).gather(w,$,T)]}case"TensorListStack":{let y=I("tensorListId",e,t,u),w=I("elementShape",e,t,u),T=I("elementDType",e,t,u),$=I("numElements",e,t,u);return[u.getTensorList(y.id).stack(w,T,$)]}case"TensorListFromTensor":{let y=function(e,t,u){let y=e.dtype;if(e.shape.length<1)throw Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==u)throw Error(`Invalid data types; op elements ${e.dtype}, but list elements ${u}`);Hr(e.shape.slice(1),t,"TensorList shape mismatch: ");let w=pR(e);return new fS(w,t,y)}(I("tensor",e,t,u),I("elementShape",e,t,u),I("elementDType",e,t,u));return u.addTensorList(y),[y.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let y=I("tensorListId",e,t,u),w=u.getTensorList(y.id),T=I("dtype",e,t,u),$=I("elementShape",e,t,u);return[w.concat(T,$)]}case"TensorListPushBack":{let y=I("tensorListId",e,t,u),w=I("tensor",e,t,u),T=u.getTensorList(y.id);return T.pushBack(w),[T.idTensor]}case"TensorListPopBack":{let y=I("tensorListId",e,t,u),w=I("elementShape",e,t,u),T=I("elementDType",e,t,u);return[u.getTensorList(y.id).popBack(w,T)]}case"TensorListSplit":{let y=I("tensor",e,t,u),w=I("elementShape",e,t,u),T=function(e,t,u){let y=0,w=t.map(e=>y+=e);if(y!==e.shape[0])throw Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${y}, and tensor's shape is: ${e.shape}`);let T=Sf(e.shape.slice(1),u),$=0===y?0:e.size/y,M=De(()=>{let u=[];e=lA(e,[1,y,$]);for(let y=0;y<t.length;++y){let M=[0,0===y?0:w[y-1],0],O=[1,t[y],$];u[y]=lA(lN(e,M,O),T)}return e.dispose(),u}),O=new fS([],u,e.dtype,t.length);for(let e=0;e<M.length;e++)O.setItem(e,M[e]);return O}(y,I("lengths",e,t,u),w);return u.addTensorList(T),[T.idTensor]}case"TensorListLength":{let y=I("tensorListId",e,t,u);return[ke(u.getTensorList(y.id).size(),"int32")]}case"TensorListResize":{let y=I("tensorListId",e,t,u),w=I("size",e,t,u),T=u.getTensorList(y.id).resize(w);return u.addTensorList(T),[T.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function PT(e,t,u){let[y,w]=I("fusedOps",e,t,u),T="biasadd"===y,$="prelu"===w,M=I("numArgs",e,t,u);if(T){if($&&2!==M)throw Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!$&&T&&1!==M)throw Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if("fusedbatchnorm"===y)throw Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let O=I("strides",e,t,u),P=Pl(e,t,u),z=I("dataFormat",e,t,u).toUpperCase(),L=I("dilations",e,t,u),[W,B]=I("args",e,t,u);return T||(B=W,W=void 0),{stride:O,pad:P,dataFormat:z,dilations:L,biasArg:W,preluArg:B,activationFunc:w,leakyreluAlpha:I("leakyreluAlpha",e,t,u)}}var OT=(e,t,u,y=fw)=>{switch(e.op){case"Conv1D":{let w=I("stride",e,t,u),T=I("pad",e,t,u),$=I("dataFormat",e,t,u).toUpperCase(),M=I("dilation",e,t,u);return[y.conv1d(I("x",e,t,u),I("filter",e,t,u),w,T,$,M)]}case"Conv2D":{let w=I("strides",e,t,u),T=Pl(e,t,u),$=I("dataFormat",e,t,u).toUpperCase(),M=I("dilations",e,t,u);return[y.conv2d(I("x",e,t,u),I("filter",e,t,u),[w[1],w[2]],T,$,[M[1],M[2]])]}case"_FusedConv2D":{let{stride:w,pad:T,dataFormat:$,dilations:M,biasArg:O,preluArg:P,activationFunc:z,leakyreluAlpha:L}=PT(e,t,u);return[y.fused.conv2d({x:I("x",e,t,u),filter:I("filter",e,t,u),strides:[w[1],w[2]],pad:T,dataFormat:$,dilations:[M[1],M[2]],bias:O,activation:z,preluActivationWeights:P,leakyreluAlpha:L})]}case"FusedDepthwiseConv2dNative":{let{stride:w,pad:T,dataFormat:$,dilations:M,biasArg:O,preluArg:P,activationFunc:z,leakyreluAlpha:L}=PT(e,t,u);return[y.fused.depthwiseConv2d({x:I("x",e,t,u),filter:I("filter",e,t,u),strides:[w[1],w[2]],pad:T,dataFormat:$,dilations:[M[1],M[2]],bias:O,activation:z,preluActivationWeights:P,leakyreluAlpha:L})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let w=I("outputShape",e,t,u),T=I("strides",e,t,u),$=Pl(e,t,u);return[y.conv2dTranspose(I("x",e,t,u),I("filter",e,t,u),w,[T[1],T[2]],$)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let w=I("strides",e,t,u),T=Pl(e,t,u),$=I("dilations",e,t,u),M=I("dataFormat",e,t,u).toUpperCase();return[y.depthwiseConv2d(I("input",e,t,u),I("filter",e,t,u),[w[1],w[2]],T,M,[$[1],$[2]])]}case"Conv3D":{let w=I("strides",e,t,u),T=I("pad",e,t,u),$=I("dataFormat",e,t,u).toUpperCase(),M=I("dilations",e,t,u);return[y.conv3d(I("x",e,t,u),I("filter",e,t,u),[w[1],w[2],w[3]],T,$,[M[1],M[2],M[3]])]}case"AvgPool":{let w=I("strides",e,t,u),T=I("pad",e,t,u),$=I("kernelSize",e,t,u);return[y.avgPool(I("x",e,t,u),[$[1],$[2]],[w[1],w[2]],T)]}case"MaxPool":{let w=I("strides",e,t,u),T=I("pad",e,t,u),$=I("kernelSize",e,t,u);return[y.maxPool(I("x",e,t,u),[$[1],$[2]],[w[1],w[2]],T)]}case"MaxPoolWithArgmax":{let w=I("strides",e,t,u),T=I("pad",e,t,u),$=I("kernelSize",e,t,u),M=I("includeBatchInIndex",e,t,u),{result:O,indexes:P}=y.maxPoolWithArgmax(I("x",e,t,u),[$[1],$[2]],[w[1],w[2]],T,M);return[O,P]}case"AvgPool3D":{let w=I("strides",e,t,u),T=I("pad",e,t,u),$=I("kernelSize",e,t,u);return[y.avgPool3d(I("x",e,t,u),[$[1],$[2],$[3]],[w[1],w[2],w[3]],T)]}case"MaxPool3D":{let w=I("strides",e,t,u),T=I("pad",e,t,u),$=I("kernelSize",e,t,u);return[y.maxPool3d(I("x",e,t,u),[$[1],$[2],$[3]],[w[1],w[2],w[3]],T)]}case"Dilation2D":{let w=I("strides",e,t,u),T=I("pad",e,t,u),$=I("dilations",e,t,u),M=w[1],O=w[2],P=$[1],z=$[2];return[y.dilation2d(I("x",e,t,u),I("filter",e,t,u),[M,O],T,[P,z],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},MT=(e,t,u,y=fw)=>{switch(e.op){case"Fill":{let w=I("shape",e,t,u),T=I("dtype",e,t,u),$=I("value",e,t,u);return[y.fill(w,$,T)]}case"LinSpace":{let w=I("start",e,t,u),T=I("stop",e,t,u),$=I("num",e,t,u);return[y.linspace(w,T,$)]}case"Multinomial":{let w=I("logits",e,t,u),T=I("numSamples",e,t,u),$=I("seed",e,t,u);return[y.multinomial(w,T,$)]}case"OneHot":{let w=I("indices",e,t,u),T=I("depth",e,t,u),$=I("onValue",e,t,u),M=I("offValue",e,t,u),O=I("dtype",e,t,u);return[y.oneHot(w,T,$,M,O)]}case"Ones":return[y.ones(I("shape",e,t,u),I("dtype",e,t,u))];case"OnesLike":return[y.onesLike(I("x",e,t,u))];case"RandomStandardNormal":return[y.randomStandardNormal(I("shape",e,t,u),I("dtype",e,t,u),I("seed",e,t,u))];case"RandomUniform":return[y.randomUniform(I("shape",e,t,u),I("minval",e,t,u),I("maxval",e,t,u),I("dtype",e,t,u))];case"RandomUniformInt":return[y.randomUniformInt(I("shape",e,t,u),I("minval",e,t,u),I("maxval",e,t,u),I("seed",e,t,u))];case"Range":{let w=I("start",e,t,u),T=I("stop",e,t,u),$=I("step",e,t,u);return[y.range(w,T,$,I("dtype",e,t,u))]}case"TruncatedNormal":{let w=I("shape",e,t,u),T=I("mean",e,t,u),$=I("stdDev",e,t,u),M=I("seed",e,t,u);return[y.truncatedNormal(w,T,$,I("dtype",e,t,u),M)]}case"Zeros":return[y.zeros(I("shape",e,t,u),I("dtype",e,t,u))];case"ZerosLike":return[y.zerosLike(I("x",e,t,u))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function OS(e,t,u){return{boxes:I("boxes",e,t,u),scores:I("scores",e,t,u),maxOutputSize:I("maxOutputSize",e,t,u),iouThreshold:I("iouThreshold",e,t,u),scoreThreshold:I("scoreThreshold",e,t,u),softNmsSigma:I("softNmsSigma",e,t,u)}}var LT=async(e,t,u,y,w=fw)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:y,scores:T,maxOutputSize:$,iouThreshold:M,scoreThreshold:O,softNmsSigma:P}=OS(e,t,u),z=await w.image.nonMaxSuppressionWithScoreAsync(y,T,$,M,O,P);return[z.selectedIndices,z.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:y,scores:T,maxOutputSize:$,iouThreshold:M,scoreThreshold:O}=OS(e,t,u),P=I("padToMaxOutputSize",e,t,u),z=await w.image.nonMaxSuppressionPaddedAsync(y,T,$,M,O,P);return[z.selectedIndices,z.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:y,scores:T,maxOutputSize:$,iouThreshold:M,scoreThreshold:O}=OS(e,t,u);return[await w.image.nonMaxSuppressionAsync(y,T,$,M,O)]}case"Where":{let y=w.cast(I("condition",e,t,u),"bool"),T=[await w.whereAsync(y)];return y.dispose(),T}case"ListDiff":return w.setdiff1dAsync(I("x",e,t,u),I("y",e,t,u));default:throw TypeError(`Node type ${e.op} is not implemented`)}},BT=(e,t,u,y=fw)=>{switch(e.op){case"LowerBound":{let w=I("sortedSequence",e,t,u),T=I("values",e,t,u);return[y.lowerBound(w,T)]}case"TopKV2":{let w=I("x",e,t,u),T=I("k",e,t,u),$=I("sorted",e,t,u),M=y.topk(w,T,$);return[M.values,M.indices]}case"UpperBound":{let w=I("sortedSequence",e,t,u),T=I("values",e,t,u);return[y.upperBound(w,T)]}case"Unique":{let w=I("x",e,t,u),T=y.unique(w);return[T.values,T.indices]}case"UniqueV2":{let w=I("x",e,t,u),T=I("axis",e,t,u),$=y.unique(w,T);return[$.values,$.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},zT=(e,t,u,y=fw)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let w=I("default",e,t,u);return[Bt(e.name,t,u)||w];case"Placeholder":return[Bt(e.name,t,u)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[Bs(I("x",e,t,u))];case"IdentityN":return I("x",e,t,u).map(e=>Bs(e));case"Shape":return[y.tensor1d(I("x",e,t,u).shape,"int32")];case"ShapeN":return I("x",e,t,u).map(e=>y.tensor1d(e.shape));case"Size":return[y.scalar(I("x",e,t,u).size,"int32")];case"Rank":return[y.scalar(I("x",e,t,u).rank,"int32")];case"NoOp":return[y.scalar(1)];case"Print":let T=I("x",e,t,u),$=I("data",e,t,u),M=I("message",e,t,u),O=I("summarize",e,t,u);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(M);for(let e=0;e<$.length;e++)console.log(Array.prototype.slice.call($[e].dataSync()).slice(0,O));return[T];default:throw TypeError(`Node type ${e.op} is not implemented`)}},fN=class{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=ke(0),this.tensorMap=new Map,$r(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ke(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let u=await e.data();return this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),De(()=>{let e=pR(t),y=u.length,w=e.length;oc.assert(y===w,()=>`The number of elements doesn't match, keys has ${y} elements, the values has ${w} elements.`);for(let t=0;t<y;t++){let y=u[t],w=e[t];$r(w),this.tensorMap.set(y,w)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let u=await e.data();return De(()=>{let e=[];for(let y=0;y<u.length;y++){let w=u[y],T=this.findWithDefault(w,t);e.push(T)}return py(e)})}findWithDefault(e,t){let u=this.tensorMap.get(e);return null!=u?u:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},VT=async(e,t,u,y)=>{switch(e.op){case"HashTable":case"HashTableV2":{let w=y.getHashTableHandleByName(e.name);if(null!=w)return[w];{let w=I("keyDType",e,t,u),T=I("valueDType",e,t,u),$=new fN(w,T);return y.addHashTable(e.name,$),[$.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let w=I("tableHandle",e,t,u,y),T=I("keys",e,t,u),$=I("values",e,t,u);return[await y.getHashTableById(w.id).import(T,$)]}case"LookupTableFind":case"LookupTableFindV2":{let w=I("tableHandle",e,t,u,y),T=I("keys",e,t,u),$=I("defaultValue",e,t,u);return[await y.getHashTableById(w.id).find(T,$)]}case"LookupTableSize":case"LookupTableSizeV2":{let w=I("tableHandle",e,t,u,y);return[y.getHashTableById(w.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},WT=(e,t,u,y=fw)=>{switch(e.op){case"ResizeBilinear":{let w=I("images",e,t,u),T=I("size",e,t,u),$=I("alignCorners",e,t,u),M=I("halfPixelCenters",e,t,u);return[y.image.resizeBilinear(w,[T[0],T[1]],$,M)]}case"ResizeNearestNeighbor":{let w=I("images",e,t,u),T=I("size",e,t,u),$=I("alignCorners",e,t,u),M=I("halfPixelCenters",e,t,u);return[y.image.resizeNearestNeighbor(w,[T[0],T[1]],$,M)]}case"CropAndResize":{let w=I("image",e,t,u),T=I("boxes",e,t,u),$=I("boxInd",e,t,u),M=I("cropSize",e,t,u),O=I("method",e,t,u),P=I("extrapolationValue",e,t,u);return[y.image.cropAndResize(w,T,$,M,O,P)]}case"ImageProjectiveTransformV3":{let w=I("images",e,t,u),T=I("transforms",e,t,u),$=I("outputShape",e,t,u),M=I("fillValue",e,t,u),O=I("interpolation",e,t,u),P=I("fillMode",e,t,u);return[y.image.transform(w,T,O.toLowerCase(),P.toLowerCase(),M,$)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},UT=(e,t,u,y=fw)=>{switch(e.op){case"Equal":return[y.equal(I("a",e,t,u),I("b",e,t,u))];case"NotEqual":return[y.notEqual(I("a",e,t,u),I("b",e,t,u))];case"Greater":return[y.greater(I("a",e,t,u),I("b",e,t,u))];case"GreaterEqual":return[y.greaterEqual(I("a",e,t,u),I("b",e,t,u))];case"Less":return[y.less(I("a",e,t,u),I("b",e,t,u))];case"LessEqual":return[y.lessEqual(I("a",e,t,u),I("b",e,t,u))];case"LogicalAnd":return[y.logicalAnd(I("a",e,t,u),I("b",e,t,u))];case"LogicalNot":return[y.logicalNot(I("a",e,t,u))];case"LogicalOr":return[y.logicalOr(I("a",e,t,u),I("b",e,t,u))];case"Select":case"SelectV2":return[y.where(I("condition",e,t,u),I("a",e,t,u),I("b",e,t,u))];case"BitwiseAnd":return[y.bitwiseAnd(I("a",e,t,u),I("b",e,t,u))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},GT=(e,t,u,y=fw)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[y.matMul(I("a",e,t,u),I("b",e,t,u),I("transposeA",e,t,u),I("transposeB",e,t,u))];case"Einsum":return[y.einsum(I("equation",e,t,u),...I("tensors",e,t,u))];case"Transpose":return[y.transpose(I("x",e,t,u),I("perm",e,t,u))];case"_FusedMatMul":let[w,T]=I("fusedOps",e,t,u),$="prelu"===T,M=I("numArgs",e,t,u),O=I("leakyreluAlpha",e,t,u);if("biasadd"===w){if($&&2!==M)throw Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!$&&1!==M)throw Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[P,z]=I("args",e,t,u);return[y.fused.matMul({a:I("a",e,t,u),b:I("b",e,t,u),transposeA:I("transposeA",e,t,u),transposeB:I("transposeB",e,t,u),bias:P,activation:T,preluActivationWeights:z,leakyreluAlpha:O})];case"MatrixBandPart":return[y.linalg.bandPart(I("a",e,t,u),I("numLower",e,t,u),I("numUpper",e,t,u))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},HT=(e,t,u,y=fw)=>{switch(e.op){case"EuclideanNorm":return[y.euclideanNorm(I("x",e,t,u),I("axis",e,t,u),I("keepDims",e,t,u))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[y.batchNorm(I("x",e,t,u),I("mean",e,t,u),I("variance",e,t,u),I("offset",e,t,u),I("scale",e,t,u),I("epsilon",e,t,u))];case"LRN":return[y.localResponseNormalization(I("x",e,t,u),I("radius",e,t,u),I("bias",e,t,u),I("alpha",e,t,u),I("beta",e,t,u))];case"Softmax":return[y.softmax(I("x",e,t,u))];case"LogSoftmax":return[y.logSoftmax(I("x",e,t,u))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},KT=(e,t,u,y=fw)=>{switch(e.op){case"RaggedGather":{let{outputNestedSplits:w,outputDenseValues:T}=y.raggedGather(I("paramsNestedSplits",e,t,u),I("paramsDenseValues",e,t,u),I("indices",e,t,u),I("outputRaggedRank",e,t,u));return w.concat(T)}case"RaggedRange":{let{rtNestedSplits:w,rtDenseValues:T}=y.raggedRange(I("starts",e,t,u),I("limits",e,t,u),I("splits",e,t,u));return[w,T]}case"RaggedTensorToTensor":return[y.raggedTensorToTensor(I("shape",e,t,u),I("values",e,t,u),I("defaultValue",e,t,u),I("rowPartitionTensors",e,t,u),I("rowPartitionTypes",e,t,u))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},qT=(e,t,u,y=fw)=>{switch(e.op){case"Max":{let w=I("axis",e,t,u),T=I("keepDims",e,t,u);return[y.max(I("x",e,t,u),w,T)]}case"Mean":{let w=I("axis",e,t,u),T=I("keepDims",e,t,u);return[y.mean(I("x",e,t,u),w,T)]}case"Min":{let w=I("axis",e,t,u),T=I("keepDims",e,t,u);return[y.min(I("x",e,t,u),w,T)]}case"Sum":{let w=I("axis",e,t,u),T=I("keepDims",e,t,u);return[y.sum(I("x",e,t,u),w,T)]}case"All":{let w=I("axis",e,t,u),T=I("keepDims",e,t,u);return[y.all(I("x",e,t,u),w,T)]}case"Any":{let w=I("axis",e,t,u),T=I("keepDims",e,t,u);return[y.any(I("x",e,t,u),w,T)]}case"ArgMax":{let w=I("axis",e,t,u);return[y.argMax(I("x",e,t,u),w)]}case"ArgMin":{let w=I("axis",e,t,u);return[y.argMin(I("x",e,t,u),w)]}case"Prod":{let w=I("axis",e,t,u),T=I("keepDims",e,t,u);return[y.prod(I("x",e,t,u),w,T)]}case"Cumprod":{let w=I("axis",e,t,u),T=I("exclusive",e,t,u),$=I("reverse",e,t,u);return[y.cumprod(I("x",e,t,u),w,T,$)]}case"Cumsum":{let w=I("axis",e,t,u),T=I("exclusive",e,t,u),$=I("reverse",e,t,u);return[y.cumsum(I("x",e,t,u),w,T,$)]}case"Bincount":let w=I("x",e,t,u),T=I("weights",e,t,u),$=I("size",e,t,u);return[y.bincount(w,T,$)];case"DenseBincount":{let w=I("x",e,t,u),T=I("weights",e,t,u),$=I("size",e,t,u),M=I("binaryOutput",e,t,u);return[y.denseBincount(w,T,$,M)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},jT=(e,t,u,y=fw)=>{switch(e.op){case"ConcatV2":case"Concat":{let w=I("n",e,t,u),T=I("axis",e,t,u),$=I("tensors",e,t,u);return $=$.slice(0,w),[y.concat($,T)]}case"Gather":{let w=I("x",e,t,u),T=I("indices",e,t,u);return[y.gather(w,y.cast(T,"int32"),0)]}case"GatherV2":{let w=I("axis",e,t,u),T=I("batchDims",e,t,u),$=I("x",e,t,u),M=I("indices",e,t,u);return[y.gather($,y.cast(M,"int32"),w,T)]}case"Reverse":{let w=I("dims",e,t,u),T=[];for(let e=0;e<w.length;e++)w[e]&&T.push(e);let $=I("x",e,t,u);return[y.reverse($,T)]}case"ReverseV2":{let w=I("axis",e,t,u),T=I("x",e,t,u);return[y.reverse(T,w)]}case"Slice":{let w=I("begin",e,t,u),T=I("size",e,t,u);return[y.slice(I("x",e,t,u),w,T)]}case"StridedSlice":{let w=I("begin",e,t,u),T=I("end",e,t,u),$=I("strides",e,t,u),M=I("beginMask",e,t,u),O=I("endMask",e,t,u),P=I("ellipsisMask",e,t,u),z=I("newAxisMask",e,t,u),L=I("shrinkAxisMask",e,t,u),W=I("x",e,t,u);return[y.stridedSlice(W,w,T,$,M,O,P,z,L)]}case"Pack":return De(()=>{let w=I("axis",e,t,u),T=I("tensors",e,t,u),$=T[0].shape,M=y.squeeze(T[0]).shape,O=T.map(e=>{let t=oc.arraysEqual(e.shape,$);if(!t&&!oc.arraysEqual(y.squeeze(e).shape,M))throw Error("the input tensors shape does not match");return t?e:y.reshape(e,$)});return[y.stack(O,w)]});case"Unpack":{let w=I("axis",e,t,u),T=I("tensor",e,t,u);return y.unstack(T,w)}case"Tile":{let w=I("reps",e,t,u);return[y.tile(I("x",e,t,u),w)]}case"Split":case"SplitV":{let w=I("axis",e,t,u),T=I("numOrSizeSplits",e,t,u),$=I("x",e,t,u);return y.split($,T,w)}case"ScatterNd":{let w=I("indices",e,t,u),T=I("values",e,t,u),$=I("shape",e,t,u);return[y.scatterND(w,T,$)]}case"GatherNd":{let w=I("x",e,t,u),T=I("indices",e,t,u);return[y.gatherND(w,T)]}case"SparseToDense":{let w=I("sparseIndices",e,t,u),T=I("outputShape",e,t,u),$=I("sparseValues",e,t,u),M=I("defaultValue",e,t,u);return[y.sparseToDense(w,$,T,$.dtype===M.dtype?M:y.cast(M,$.dtype))]}case"TensorScatterUpdate":{let w=I("indices",e,t,u),T=I("values",e,t,u),$=I("tensor",e,t,u);return[y.tensorScatterUpdate($,w,T)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},XT=(e,t,u,y=fw)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:w,outputValues:T,emptyRowIndicator:$,reverseIndexMap:M}=y.sparse.sparseFillEmptyRows(I("indices",e,t,u),I("values",e,t,u),I("denseShape",e,t,u),I("defaultValue",e,t,u));return[w,T,$,M]}case"SparseReshape":{let{outputIndices:w,outputShape:T}=y.sparse.sparseReshape(I("inputIndices",e,t,u),I("inputShape",e,t,u),I("newShape",e,t,u));return[w,T]}case"SparseSegmentMean":return[y.sparse.sparseSegmentMean(I("data",e,t,u),I("indices",e,t,u),I("segmentIds",e,t,u))];case"SparseSegmentSum":return[y.sparse.sparseSegmentSum(I("data",e,t,u),I("indices",e,t,u),I("segmentIds",e,t,u))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},YT=(e,t,u,y=fw)=>{switch(e.op){case"FFT":return[y.fft(I("x",e,t,u))];case"IFFT":return[y.ifft(I("x",e,t,u))];case"RFFT":return[y.rfft(I("x",e,t,u))];case"IRFFT":return[y.irfft(I("x",e,t,u))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},QT=(e,t,u,y=fw)=>{switch(e.op){case"StaticRegexReplace":return[y.string.staticRegexReplace(I("input",e,t,u),I("pattern",e,t,u),I("rewrite",e,t,u),I("replaceGlobal",e,t,u))];case"StringNGrams":{let{nGrams:w,nGramsSplits:T}=y.string.stringNGrams(I("data",e,t,u),I("dataSplits",e,t,u),I("separator",e,t,u),I("nGramWidths",e,t,u),I("leftPad",e,t,u),I("rightPad",e,t,u),I("padWidth",e,t,u),I("preserveShortSequences",e,t,u));return[w,T]}case"StringSplit":{let{indices:w,values:T,shape:$}=y.string.stringSplit(I("input",e,t,u),I("delimiter",e,t,u),I("skipEmpty",e,t,u));return[w,T,$]}case"StringToHashBucketFast":return[y.string.stringToHashBucketFast(I("input",e,t,u),I("numBuckets",e,t,u))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},ZT=(e,t,u,y=fw)=>{switch(e.op){case"Cast":return[y.cast(I("x",e,t,u),I("dtype",e,t,u))];case"ExpandDims":{let w=I("axis",e,t,u);return[y.expandDims(I("x",e,t,u),w)]}case"Squeeze":{let w=I("axis",e,t,u);return[y.squeeze(I("x",e,t,u),w)]}case"Reshape":return[y.reshape(I("x",e,t,u),I("shape",e,t,u))];case"EnsureShape":return[y.ensureShape(I("x",e,t,u),I("shape",e,t,u))];case"MirrorPad":return[y.mirrorPad(I("x",e,t,u),I("padding",e,t,u),I("mode",e,t,u))];case"PadV2":case"Pad":return[y.pad(I("x",e,t,u),I("padding",e,t,u),I("constantValue",e,t,u))];case"SpaceToBatchND":{let w=I("blockShape",e,t,u),T=I("paddings",e,t,u);return[y.spaceToBatchND(I("x",e,t,u),w,T)]}case"BatchToSpaceND":{let w=I("blockShape",e,t,u),T=I("crops",e,t,u);return[y.batchToSpaceND(I("x",e,t,u),w,T)]}case"DepthToSpace":{let w=I("blockSize",e,t,u),T=I("dataFormat",e,t,u).toUpperCase();return[y.depthToSpace(I("x",e,t,u),w,T)]}case"BroadcastTo":return[y.broadcastTo(I("x",e,t,u),I("shape",e,t,u))];case"BroadcastArgs":return[y.broadcastArgs(I("s0",e,t,u),I("s1",e,t,u))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function MS(e,t,u,y,w=De){let T=((e,t,u)=>{switch(e.category){case"arithmetic":return w(()=>TT(e,t,u));case"basic_math":return w(()=>_T(e,t,u));case"control":return FT(e,t,u);case"convolution":return w(()=>OT(e,t,u));case"creation":return w(()=>MT(e,t,u));case"dynamic":return LT(e,t,u);case"evaluation":return w(()=>BT(e,t,u));case"image":return w(()=>WT(e,t,u));case"graph":return w(()=>zT(e,t,u));case"logical":return w(()=>UT(e,t,u));case"matrices":return w(()=>GT(e,t,u));case"normalization":return w(()=>HT(e,t,u));case"ragged":return w(()=>KT(e,t,u));case"reduction":return w(()=>qT(e,t,u));case"slice_join":return w(()=>jT(e,t,u));case"sparse":return w(()=>XT(e,t,u));case"spectral":return w(()=>YT(e,t,u));case"string":return w(()=>QT(e,t,u));case"transformation":return w(()=>ZT(e,t,u));case"hash_table":return VT(e,t,u,y);case"custom":let T=hM[e.op];if(T&&T.customExecutor)return T.customExecutor(new fv(e,t,u));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,u);return oc.isPromise(T)?T.then(e=>[].concat(e)):[].concat(T)}var fC=class{constructor(e={},t={},u={},y={},w){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=u,this.functionMap=y,this.parseNodeNameCache=w,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let u=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(u))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function LS(e,t,u,y){let w=new Set,T=[],$=null,M=null,O=new Set,P=new Set(Object.keys(e).map(e=>Nr(e)[0]));y=y||[];let z=new Set(y.map(e=>Nr(e.name)[0])),L=[...t];for(;L.length>0;){let e=L.pop();if((fu(e)||fR.has(e.op)||f$.has(e.op))&&null==$&&(M=($=e).children.map(e=>e.name).filter(e=>w.has(e))),w.add(e.name),null==u[e.name]&&!P.has(e.name)&&!z.has(e.name)){if(0===e.inputs.length){T.push(e.name);continue}e.inputs.forEach(e=>{O.has(e.name)||(O.add(e.name),L.push(e))})}}return{inputs:e,outputs:t,usedNodes:w,missingInputs:T,dynamicNode:$,syncInputs:M}}var fT=class extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}},fE=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),fR=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),f$=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function fu(e){return fE.has(e.op)}var f_=class r10{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(t=>{this._functionExecutorMap[t]=new r10(e.functions[t],this)})}getCompilationKey(e,t){let u=e.map(e=>e.name).sort(),y=t.map(e=>e.name).sort();return u.join(this.SEPARATOR)+"--"+y.join(this.SEPARATOR)}compile(e,t){let u=LS(e,t,this.weightMap,this._initNodes),{missingInputs:y,dynamicNode:w,syncInputs:T}=u;if(null!=w)throw Error(`This execution contains the node '${w.name}', which has the dynamic op '${w.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${T}]`);if(y.length>0){let u=t.map(e=>e.name),w=Object.keys(e);throw Error(`Cannot compute the outputs [${u}] from the provided inputs [${w}]. Missing the following inputs: [${y}]`)}let $=function(e,t){let{usedNodes:u,inputs:y}=t,w=Object.keys(y).map(e=>Nr(e)[0]).map(t=>e.nodes[t]),T=e.initNodes||[],a=e=>u.has("string"==typeof e?e:e.name);function i(e){return[...new Map(e.map(e=>[e.name,e])).values()]}let $=i([...w,...e.weights,...T]).filter(a),M=i([...$,...Object.values(e.nodes)]).filter(a),O=new Map(M.map(e=>[e.name,e])),P={};for(let e of M)for(let t of(P[e.name]=P[e.name]||0,e.children))a(t)||(P[t.name]=Number.POSITIVE_INFINITY),P[t.name]=(P[t.name]||0)+1;let z=Object.entries(P).filter(([,e])=>0===e).map(([e])=>e),L=[...z];for(;z.length>0;){let e=z.pop();for(let t of O.get(e).children.filter(a))0==--P[t.name]&&(L.push(t.name),z.push(t.name))}let W=function(e,t){let u=new Map(e.map(e=>[e.name,e])),y=t.map(e=>e.name),w=new Set(y);for(;y.length>0;){let e=y.pop();for(let t of u.get(e).children)!u.has(t.name)||w.has(t.name)||(w.add(t.name),y.push(t.name))}return e.filter(e=>w.has(e.name))}(L.map(e=>O.get(e)),$);return function(e,t){let u=new Map(e.map((e,t)=>[e.name,t])),y=new Set(t.map(e=>e.name)),n=e=>y.has("string"==typeof e?e:e.name),w=new Set(e.map(e=>e.name)),a=e=>w.has("string"==typeof e?e:e.name);for(let t of e){for(let e of t.children.filter(a)){if(!u.has(e.name))throw new fT(`Child ${e.name} of node ${t.name} is unreachable.`);if(u.get(t.name)>u.get(e.name))throw new fT(`Node ${t.name} is scheduled to run after its child ${e.name}.`)}if(!n(t))for(let e of t.inputs){if(!u.has(e.name))throw new fT(`Input ${e.name} of node ${t.name} is unreachable.`);if(u.get(e.name)>u.get(t.name))throw new fT(`Node ${t.name} is scheduled to run before its input ${e.name}.`)}}}(W,$),W}(this.graph,u),M=function(e){let t=new Map(e.map((e,t)=>[e.name,t])),u=Number.MAX_SAFE_INTEGER,y=e.map((e,t)=>fu(e)?u:t),n=e=>{let u=y[t.get(e.name)];return null==u?-1:u},w=e.map((e,t)=>e.children.map(n).reduce((e,t)=>Math.max(e,t),y[t])),T=new Map;for(let t=0;t<e.length;++t){let y=w[t];if(y===u)continue;let $=e[t],M=e[y];T.has(M.name)||T.set(M.name,[]),T.get(M.name).push($)}return T}($);return{orderedNodes:$,nodeLiveUntilMap:M}}cloneAndKeepTensor(e){if(null==e)return null;let t=e.clone();return $r(t),t}cloneTensorList(e){return e?e.map(e=>this.cloneAndKeepTensor(e)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([e,t])=>[e,this.cloneTensorList(t)]))}execute(e,t){this.disposeIntermediateTensors();let u=Object.keys(e=this.mapInputs(e)).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let y=u.map(e=>this.graph.nodes[Nr(e)[0]]),w=t.map(e=>Nr(e)[0]),T=new Set(w),$=w.map(e=>this.graph.nodes[e]);0===$.length&&($=this._outputs);let M=this.getCompilationKey(y,$),O=this.compiledMap.get(M);null==O&&(O=this.compile(e,$),this.compiledMap.set(M,O));try{this.keepIntermediateTensors=nG.getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}let P={},z={};return De(()=>{let u=new fC(this.weightMap,P,z,this.functionExecutorMap,this.parseNodeNameCache),y=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(t=>{let[w,T]=Nr(t,u),$=[];$[T]=e[t],y[w]=$,this.keepIntermediateTensors&&(this.clonedTensorsMap[w]=this.cloneTensorList($))});let w=this.getFrozenTensorIds(y),{orderedNodes:$,nodeLiveUntilMap:M}=O;for(let e of $){if(y[e.name])continue;let t=MS(e,y,u,this._resourceManager);if(oc.isPromise(t))throw Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);y[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,y,u,w,T,M.get(e.name))}return null==this.parent&&u.dispose(w),t.map(e=>Bt(e,y,u))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id)));return new Set(t)}checkTensorForDisposal(e,t,u,y,w,T,$){if(!(fu(t)||T.has(e))){for(let y of u[e])null!=y&&($[y.id]=($[y.id]||0)+t.children.length);for(let e of t.inputs){if(fu(e))continue;let t=hS(e.name,u,y);if(null!=t)for(let e of t){if(!e||e.kept||w.has(e.id))continue;let t=$[e.id];1===t?(e.dispose(),delete $[e.id]):null!=t&&$[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,u,y,w,T){if(!(fu(e)||null==T)){for(let e of T)if(!(fu(e)||w.has(e.name)))for(let w of hS(e.name,t,u))!w||w.kept||y.has(w.id)||w.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(let t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,u=!1,y={},w={}){this.disposeIntermediateTensors(),u||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=nG.getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}let T=new fC(this.weightMap,y,w,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let $=await this.executeWithControlFlow(e,T,t,u),M=t.map(e=>Bt(e,$,T)),O=M.map(e=>e.id),P=Object.keys(e).map(t=>e[t].id),z=new Set([...O,...P,...this.weightIds]);return Object.values($).forEach(e=>{e.forEach(e=>{!e||e.isDisposed||z.has(e.id)||e.dispose()})}),null==this.parent&&T.dispose(z),M}async executeFunctionAsync(e,t,u){let y=e.reduce((e,t,u)=>(e[this.inputs[u].name]=t,e),{});return this._executeAsync(y,this.outputNodes,!0,t,u)}async executeWithControlFlow(e,t,u,y){let w=Object.keys(e),T=w.map(e=>this.graph.nodes[Nr(e)[0]]),$=u.map(e=>Nr(e)[0]),M=new Set($),O=$.map(e=>this.graph.nodes[e]);0===O.length&&(O=this._outputs);let{usedNodes:P,missingInputs:z,dynamicNode:L,syncInputs:W}=LS(e,O,this.weightMap,this._initNodes),B=[...T,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext})),j=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{let[u,y]=Nr(t),w=[];w[y]=e[t],j[u]=w});let q={},Z=this.getFrozenTensorIds(j),Y={};for(;B.length>0;){let e=this.processStack(T,B,t,j,Y,Z,M,q,P);await Promise.all(e)}null!=L||y||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let J=O.filter(e=>!fu(e)&&!Bt(e.name,j,t)).map(e=>e.name);if(J.length>0){let e="";throw null!=L&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${W}]`),Error(`Cannot compute the outputs [${J}] from the provided inputs [${w}]. Consider providing the following inputs: [${z}]. ${e}`)}return j}processStack(e,t,u,y,w,T,$,M,O){let P=[];for(;t.length>0;){let e=t.pop();u.currentContext=e.contexts;let z="";if("Enter"===e.node.op&&I("isConstant",e.node,y,u)&&([z]=Ls(e.node.name,u)),null==y[e.node.name]){let L=MS(e.node,y,u,this._resourceManager);z||([z]=Ls(e.node.name,u));let W=u.currentContext;oc.isPromise(L)?P.push(L.then(P=>(y[z]=P,this.keepIntermediateTensors&&(this.clonedTensorsMap[z]=this.cloneTensorList(P)),u.currentContext=W,this.checkTensorForDisposal(z,e.node,y,u,T,$,M),this.processChildNodes(e.node,t,u,y,w,O),P))):(y[z]=L,this.keepIntermediateTensors&&(this.clonedTensorsMap[z]=this.cloneTensorList(L)),this.checkTensorForDisposal(z,e.node,y,u,T,$,M),this.processChildNodes(e.node,t,u,y,w,O))}else this.processChildNodes(e.node,t,u,y,w,O)}return P}processChildNodes(e,t,u,y,w,T){e.children.forEach(e=>{let[$]=Ls(e.name,u);w[$]||!T.has(e.name)||("Merge"===e.op?e.inputNames.some(e=>!!Bt(e,y,u))&&(w[$]=!0,t.push({contexts:u.currentContext,node:e})):e.inputNames.every(e=>!!Bt(e,y,u))&&(w[$]=!0,t.push({contexts:u.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let u=e[t],[y]=Nr(t),w=this.graph.nodes[y];if(w.attrParams.shape&&w.attrParams.shape.value){let e=w.attrParams.shape.value,t=e.length===u.shape.length&&u.shape.every((t,u)=>-1===e[u]||e[u]===t);oc.assert(t,()=>`The shape of dict['${w.name}'] provided in model.execute(dict) must be [${e}], but was [${u.shape}]`)}w.attrParams.dtype&&w.attrParams.dtype.value&&oc.assert(u.dtype===w.attrParams.dtype.value,()=>`The dtype of dict['${w.name}'] provided in model.execute(dict) must be ${w.attrParams.dtype.value}, but was ${u.dtype}`)})}mapInputs(e){var t,u;let y={};for(let w in e){let T=null===(u=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===u?void 0:u[w];null!=T?y[T.name]=e[w]:y[w]=e[w]}return y}checkInputs(e){let t=Object.keys(e).filter(e=>{let[t]=Nr(e);return null==this.graph.nodes[t]});if(t.length>0)throw Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(e=>{var t,u;let y=null===(u=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===u?void 0:u[e];return null!=y?y.name:e},{})}checkOutputs(e){e.forEach(e=>{let[t]=Nr(e);if(!this.graph.nodes[t])throw Error(`The output '${e}' is not found in the graph`)})}},fM=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},fF=class{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},u=cJ){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=u,null==t&&(this.loadOptions={}),this.resourceManager=new fM}findIOHandler(){let e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return oc.isPromise(e)?e.then(e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e)):this.loadSync(e)}loadSync(e){let t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw Error("Model artifacts missing streamWeights function");let t=await ad(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;let u=this.artifacts.modelTopology,y=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){let e=this.artifacts.userDefinedMetadata;null!=e.signature&&(y=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=y,this.version=`${u.versions.producer}.${u.versions.minConsumer}`,this.executor=new f_(fb.Instance.transformGraph(u,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){let t=fb.Instance.transformGraph(e.modelInitializer);this.initializer=new f_(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){let t=this.io.getSaveHandlers(e);if(0===t.length)throw Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){let t={};return(e instanceof oC?[e]:e).forEach((e,u)=>t[this.structuredOutputKeys[u]]=e),t}return e}predict(e,t){let u=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(u)}async predictAsync(e,t){let u=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(u)}normalizeInputs(e){var t;if(!(e instanceof oC)&&!Array.isArray(e)){let u=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=u)for(let t in u){let y=u[t];null!=y.resourceId&&(e[t]=this.resourceIdToCapturedInput[y.resourceId])}return e}e=Array.isArray(e)?e:[e];let u=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+u!==this.inputNodes.length)throw Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-u} non-resource placeholders, while there are ${e.length} input tensors provided.`);let y=0;return this.inputNodes.reduce((t,u)=>{var w,T,$;let M=null===($=null===(T=null===(w=this.signature)||void 0===w?void 0:w.inputs)||void 0===T?void 0:T[u])||void 0===$?void 0:$.resourceId;return null!=M?t[u]=this.resourceIdToCapturedInput[M]:t[u]=e[y++],t},{})}normalizeOutputs(e){return Array.isArray(e=e||this.outputNodes)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=this.initializerSignature.outputs,u=Object.keys(t);for(let y=0;y<u.length;y++){let w=t[u[y]];this.resourceIdToCapturedInput[w.resourceId]=e[y]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let u=this.executor.execute(e,t);return u.length>1?u:u[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let u=await this.executor.executeAsync(e,t);return u.length>1?u:u[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,u)=>(t[u]=[e[u]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Ot(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};async function M8(e,t={},u=cJ){var y;if(null==e)throw Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&((y=e).endsWith("/")||(y+="/"),e=`${y}model.json?tfjs-format=file`);let w=new fF(e,t,u);return await w.load(),w}function L8(e){let t;if(null==e)throw Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");if(e instanceof Array){let[u,y]=e;if(!u)throw Error("modelJSON must be the first element of the array");if(!y||!(y instanceof ArrayBuffer))throw Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in u))throw Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in u))throw Error("Model JSON is missing 'weightsManifest'");let w=cJ.getWeightSpecs(u.weightsManifest),T=cJ.getModelArtifactsForJSONSync(u,w,y);t=cJ.fromMemorySync(T)}else if("load"in e)t=e;else if("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e)t=cJ.fromMemorySync(e);else throw Error("Unknown model format");let u=new fF(t);return u.load(),u}var fO="4.21.0";function Q(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&oc.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var fP=h_.whereImpl,fD=class r11 extends nB{nextDataId(){return r11.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new nW(this,oF)}write(e,t,u){this.firstUse&&(this.firstUse=!1,nG.get("IS_NODE")&&hh.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let y={id:this.nextDataId()};return this.data.set(y,{values:e,dtype:u,refCount:1}),y}makeTensorInfo(e,t,u){let y;if("string"===t&&null!=u&&u.length>0&&oc.isString(u[0])){let w=u.map(e=>oc.encodeString(e));y=this.write(w,e,t)}else y=this.write(u,e,t);return{dataId:y,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,u,y,w){this.data.set(e,{values:t,dtype:y,refCount:w})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:u}=this.data.get(e);if("complex64"===t){let e=this.readSync(u.real.dataId),t=this.readSync(u.imag.dataId);return hh.mergeRealAndImagArrays(e,t)}return oc.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let u=t.map(e=>oc.decodeString(e));return me(e.shape,e.dtype,u)}catch(e){throw Error("Failed to decode encoded string bytes into utf-8")}return me(e.shape,e.dtype,t)}makeOutput(e,t,u){return oF.makeTensorFromTensorInfo(this.makeTensorInfo(t,u,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:u}=this.data.get(e);null!=u&&(this.disposeData(u.real.dataId,!0),this.disposeData(u.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=oc.now();return e(),{kernelMs:oc.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Q([e],"where");let t=this.readSync(e.dataId);return fP(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};fD.nextDataId=0;var fz={};function BS(e){let t=new Float32Array(e.length);for(let u=0;u<e.length;++u)t[u]=Math.abs(e[u]);return t}function Ve(e){return(t,u,y,w,T)=>{let $=hh.assertAndGetBroadcastShape(t,u),M=$.length,O=oc.computeStrides($),P=oc.sizeFromShape($),z=oc.getTypedArrayFromDType(T,P),L=t.length,W=u.length,B=oc.computeStrides(t),j=oc.computeStrides(u),q=hh.getBroadcastDims(t,$),Z=hh.getBroadcastDims(u,$);if(q.length+Z.length===0)for(let t=0;t<z.length;++t)z[t]=e(y[t%y.length],w[t%w.length]);else for(let t=0;t<z.length;++t){let u=oc.indexToLoc(t,M,O),T=u.slice(-L);q.forEach(e=>T[e]=0);let $=oc.locToIndex(T,L,B),P=u.slice(-W);Z.forEach(e=>P[e]=0);let Y=oc.locToIndex(P,W,j);z[t]=e(y[$],w[Y])}return[z,$]}}function Ht(e){let{inputs:t,backend:u}=e,{real:y,imag:w}=t,T=u.data.get(y.dataId).values,$=u.data.get(w.dataId).values,M=u.makeTensorInfo(y.shape,"complex64");return u.data.get(M.dataId).complexTensorInfos={real:u.makeTensorInfo(y.shape,"float32",T),imag:u.makeTensorInfo(w.shape,"float32",$)},M}function yc(e,t,u="float32"){if("complex64"===u)return Ht({inputs:{real:yc(e,t,"float32"),imag:yc(e,t,"float32")},backend:e});let y=oc.makeZerosTypedArray(oc.sizeFromShape(t),u);return e.makeTensorInfo(t,u,y)}function lr(e){let{inputs:t,backend:u}=e,{x:y}=t;return u.incRef(y.dataId),{dataId:y.dataId,shape:y.shape,dtype:y.dtype}}function $o(e){let{inputs:t,backend:u}=e,{input:y}=t,w=u.data.get(y.dataId).complexTensorInfos.real,T=u.data.get(w.dataId).values;return u.makeTensorInfo(w.shape,w.dtype,T)}function zS(e,t,u,y){if("int32"===y)return[t,"int32",Int32Array.from(e)];if("bool"===y){let y=oc.toTypedArray([0],u),[w,T]=Ve((e,t)=>e!==t?1:0)(t,[],e,y,"bool");return[T,"bool",w]}throw Error(`Error in Cast: failed to cast ${u} to ${y}`)}function Ro(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{dtype:T}=y;if("complex64"===T){if("complex64"===w.dtype)return lr({inputs:{x:w},backend:u});let e=yc(u,w.shape,w.dtype),t=Ro({inputs:{x:w},backend:u,attrs:{dtype:"float32"}}),y=Ht({inputs:{real:t,imag:e},backend:u});return u.disposeIntermediateTensorInfo(e),u.disposeIntermediateTensorInfo(t),y}if("complex64"===w.dtype){let e=$o({inputs:{input:w},backend:u}),t=Ro({inputs:{x:e},backend:u,attrs:{dtype:T}});return u.disposeIntermediateTensorInfo(e),t}if(!oc.hasEncodingLoss(w.dtype,T)){let e=lr({inputs:{x:w},backend:u});return{dataId:e.dataId,shape:e.shape,dtype:T}}let[$,M,O]=zS(u.data.get(w.dataId).values,w.shape,w.dtype,T);return u.makeTensorInfo($,M,O)}function Ye(e,t,u,y){return null==u?({inputs:u,backend:w})=>{let{a:T,b:$}=u;Q([T,$],e);let M=w.data.get(T.dataId).values,O=w.data.get($.dataId).values,P="string"===T.dtype?hh.fromUint8ToStringArray(M):M,z="string"===T.dtype?hh.fromUint8ToStringArray(O):O,L=y||T.dtype,[W,B]=t(T.shape,$.shape,P,z,L);return w.makeTensorInfo(B,L,W)}:({inputs:e,backend:w})=>{let{a:T,b:$}=e;if("complex64"===T.dtype||"complex64"===$.dtype){let e=Ro({inputs:{x:T},backend:w,attrs:{dtype:"complex64"}}),t=w.data.get(e.dataId),y=t.complexTensorInfos.real,M=t.complexTensorInfos.imag,O=w.data.get(y.dataId).values,P=w.data.get(M.dataId).values,z=Ro({inputs:{x:$},backend:w,attrs:{dtype:"complex64"}}),L=w.data.get(z.dataId),W=L.complexTensorInfos.real,B=L.complexTensorInfos.imag,j=w.data.get(W.dataId).values,q=w.data.get(B.dataId).values,[Z,Y,J]=u(T.shape,$.shape,O,P,j,q),ee=w.makeTensorInfo(J,"float32",Z),ea=w.makeTensorInfo(J,"float32",Y),en=Ht({inputs:{real:ee,imag:ea},backend:w});return w.disposeIntermediateTensorInfo(e),w.disposeIntermediateTensorInfo(z),w.disposeIntermediateTensorInfo(ee),w.disposeIntermediateTensorInfo(ea),en}{let e=w.data.get(T.dataId).values,u=w.data.get($.dataId).values,M=y||T.dtype,[O,P]=t(T.shape,$.shape,e,u,M);return w.makeTensorInfo(P,M,O)}}}function bc(e){return(t,u,y,w,T,$)=>{let M=hh.assertAndGetBroadcastShape(t,u),O=oc.sizeFromShape(M),P=M.length,z=oc.computeStrides(M),L=oc.getTypedArrayFromDType("float32",O),W=oc.getTypedArrayFromDType("float32",O),B=hh.getBroadcastDims(t,M),j=hh.getBroadcastDims(u,M),q=hh.mergeRealAndImagArrays(y,w),Z=hh.mergeRealAndImagArrays(T,$),Y=t.length,J=oc.computeStrides(t),ee=u.length,ea=oc.computeStrides(u);if(B.length+j.length===0)for(let t=0;t<L.length;t++){let u=t%q.length,y=t%Z.length,w=e(q[2*u],q[2*u+1],Z[2*y],Z[2*y+1]);L[t]=w.real,W[t]=w.imag}else for(let t=0;t<L.length;t++){let u=oc.indexToLoc(t,P,z),y=u.slice(-Y);B.forEach(e=>y[e]=0);let w=oc.locToIndex(y,Y,J),T=u.slice(-ee);j.forEach(e=>T[e]=0);let $=oc.locToIndex(T,ee,ea),M=e(q[2*w],q[2*w+1],Z[2*$],Z[2*$+1]);L[t]=M.real,W[t]=M.imag}return[L,W,M]}}qe(fz,{addImpl:()=>fL,bincountImpl:()=>Cc,bincountReduceImpl:()=>Nf,bitwiseAndImpl:()=>fB,castImpl:()=>zS,ceilImpl:()=>fU,concatImpl:()=>ap,equalImpl:()=>fH,expImpl:()=>fq,expm1Impl:()=>fK,floorDivImpl:()=>fQ,floorImpl:()=>fY,gatherNdImpl:()=>Tf,gatherV2Impl:()=>_f,greaterEqualImpl:()=>f3,greaterImpl:()=>f2,lessEqualImpl:()=>f8,lessImpl:()=>f4,linSpaceImpl:()=>Ef,logImpl:()=>mt,maxImpl:()=>$f,maximumImpl:()=>mn,minimumImpl:()=>mi,multiplyImpl:()=>mo,negImpl:()=>nI,notEqualImpl:()=>mc,prodImpl:()=>aI,raggedGatherImpl:()=>Rf,raggedRangeImpl:()=>Df,raggedTensorToTensorImpl:()=>Af,rangeImpl:()=>up,rsqrtImpl:()=>mx,scatterImpl:()=>zs,sigmoidImpl:()=>mv,simpleAbsImpl:()=>BS,sliceImpl:()=>pp,sparseFillEmptyRowsImpl:()=>Ff,sparseReshapeImpl:()=>Pf,sparseSegmentReductionImpl:()=>Sc,sqrtImpl:()=>mw,squaredDifferenceImpl:()=>mS,staticRegexReplaceImpl:()=>mC,stridedSliceImpl:()=>Of,stringNGramsImpl:()=>cp,stringSplitImpl:()=>lp,stringToHashBucketFastImpl:()=>mp,subImpl:()=>m$,tileImpl:()=>Mf,topKImpl:()=>Lf,transposeImpl:()=>wc,uniqueImpl:()=>dp});var fL=Ve((e,t)=>e+t),fW=Ye(nX,fL,bc((e,t,u,y)=>({real:e+u,imag:t+y})));function Cc(e,t,u,y,w){let T=oc.sizeFromShape(y),$=oc.makeZerosTypedArray(w,u);for(let u=0;u<e.length;u++){let y=e[u];if(y<0)throw Error("Input x must be non-negative!");y>=w||(T>0?$[y]+=t[u]:$[y]+=1)}return $}function Nf(e,t,u,y=!1){let w=e.shape[0],T=e.shape[1],$=me([w,u],t.dtype);for(let M=0;M<w;M++)for(let w=0;w<T;w++){let T=e.get(M,w);if(T<0)throw Error("Input x must be non-negative!");T>=u||(y?$.set(1,M,T):t.size>0?$.set($.get(M,T)+t.get(M,w),M,T):$.set($.get(M,T)+1,M,T))}return $}var fB=Ve((e,t)=>e&t),fV=Ye(rn,fB);function jt(e){return(t,u,y)=>{let w=oc.getArrayFromDType(u,t.length);for(let u=0;u<t.length;++u)w[u]=e(t[u],y);return w}}function Ie(e,t,u){return Ar(e,jt(t),u)}function Ar(e,t,u){return({inputs:y,attrs:w,backend:T})=>{let{x:$}=y;Q($,e);let M=T.data.get($.dataId).values,O;if("string"===$.dtype){if(!Array.isArray(M))throw Error("String tensor's value was not an instance of Array");O=hh.fromUint8ToStringArray(M)}else O=M;let P=u||$.dtype,z=t(O,P,w);return T.makeTensorInfo($.shape,P,z)}}var fU=jt(e=>Math.ceil(e)),fG=Ar(ro,fU);function ap(e,t,u,y){let w=oc.getArrayFromDType(u,oc.sizeFromShape(t));if(y&&"string"!==u){let t=0;e.forEach(e=>{let u=oc.sizeFromShape(e.shape);w.set(e.vals,t),t+=u})}else{let y=0;e.forEach(e=>{let T="string"===u?hh.fromUint8ToStringArray(e.vals):e.vals,$=0;for(let u=0;u<e.shape[0];++u){let M=u*t[1]+y;for(let t=0;t<e.shape[1];++t)w[M+t]=T[$++]}y+=e.shape[1]})}return w}var fH=Ve((e,t)=>e===t?1:0),fj=Ye(rH,fH,null,"bool"),fq=jt(e=>Math.exp(e)),fX=Ar(rj,fq,"float32"),fK=jt(e=>Math.expm1(e)),fZ=Ar(rX,fK),fY=jt(e=>Math.floor(e)),fJ=Ar(rJ,fY),fQ=Ve((e,t)=>Math.floor(e/t)),f1=Ye(rQ,fQ,null,"int32");function Tf(e,t,u,y,w,T,$,M,O){let P=me([y,T],u);for(let u=0;u<y;u++){let y=[],z=0;for(let t=0;t<w;t++){let T=e[u*w+t];z+=T*$[t],y.push(T)}if(z<0||z>=O/T)throw Error(`Invalid indices: ${y} does not index into ${M}`);for(let e=0;e<T;e++)P.values[u*T+e]=t.get(...t.indexToLoc(z*T+e))}return P}function _f(e,t,u){let y=me(u,e.dtype);for(let u=0;u<y.size;++u){let w=y.indexToLoc(u).slice(),T=w[0],$=w[2],M=t.locToIndex([T,$]);w[2]=t.values[M];let O=e.locToIndex(w);0<=O&&O<e.values.length&&(y.values[u]=e.values[O])}return y}var f2=Ve((e,t)=>e>t?1:0),f0=Ye(ie,f2,null,"bool"),f3=Ve((e,t)=>e>=t?1:0),f7=Ye(it,f3,null,"bool"),f4=Ve((e,t)=>e<t?1:0),f6=Ye(ig,f4,null,"bool"),f8=Ve((e,t)=>e<=t?1:0),f9=Ye(iy,f8,null,"bool");function Ef(e,t,u){let y=(t-e)/(u-1),w=oc.makeZerosTypedArray(u,"float32");w[0]=e;for(let e=1;e<w.length;e++)w[e]=w[e-1]+y;return w}var mt=jt(e=>Math.log(e)),ma=Ar(ix,mt);function $f(e,t,u,y){let w=oc.getTypedArrayFromDType(y,oc.sizeFromShape(u));for(let u=0;u<w.length;++u){let y=u*t,T=e[y];for(let u=0;u<t;++u){let t=e[y+u];(Number.isNaN(t)||t>T)&&(T=t)}w[u]=T}return w}var mn=Ve((e,t)=>Math.max(e,t)),mr=Ye(iF,mn),mi=Ve((e,t)=>Math.min(e,t)),ms=Ye(iV,mi),mo=Ve((e,t)=>e*t),md=Ye(iq,mo,bc((e,t,u,y)=>({real:e*u-t*y,imag:e*y+t*u})));function nI(e,t,u){return mo([],t,oc.createScalarValue(-1,u),e,u)}var mc=Ve((e,t)=>e!==t?1:0),mh=Ye(iK,mc,null,"bool");function wc(e,t,u,y,w){let T=t.length,$=oc.sizeFromShape(t),M=oc.computeStrides(t),O=oc.computeStrides(w),P=oc.getTypedArrayFromDType(u,oc.sizeFromShape(w));for(let t=0;t<$;++t){let u=oc.indexToLoc(t,T,M),w=Array(u.length);for(let e=0;e<w.length;e++)w[e]=u[y[e]];P[oc.locToIndex(w,T,O)]=e[t]}return P}function St(e){let{inputs:t,attrs:u,backend:y}=e,{x:w}=t,{perm:T}=u;Q(w,"transpose");let $=Array(w.shape.length);for(let e=0;e<$.length;e++)$[e]=w.shape[T[e]];let M=wc(y.data.get(w.dataId).values,w.shape,w.dtype,T,$);return{dataId:y.write(M,$,w.dtype),shape:$,dtype:w.dtype}}function aI(e,t,u,y){let[w,T]=hh.computeOutAndReduceShapes(e,y),$=dt(t,"int32"),M=oc.makeZerosTypedArray(oc.sizeFromShape(w),$),O=oc.sizeFromShape(T);for(let e=0;e<M.length;++e){let t=e*O,y=1;for(let e=0;e<O;++e)y*=u[t+e];M[e]=y}return{outVals:M,outShape:w,outDtype:$}}function N_(e,t){let u=e.slice(0,t);for(;u.length<t;)u.push(1);for(let y=t;y<e.length;y++)u[t-1]*=e[y];return u}function Rf(e,t,u,y,w,T,$,M){let O,P,z,L;if(0===e.length)throw Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw Error("Split tensors must not be scalars");if(function(e,t,u){e.forEach((e,y)=>{if(e<0||e>=u){let w=oc.indexToLoc(y,t.length,oc.computeStrides(t)).join(",");throw Error(`indices[${w}] = ${e} is not in [0, ${u})`)}})}(T,$,t[0][0]-1),0===y.length)throw Error("params.rank must be nonzero");let{outSplits:W,valueSlices:B,numValues:j}=function(e,t,u,y){let w=[],T=0,$=Array(t.length-1+u.length).fill(null).map(()=>[0]);!function(e,t){for(let u=0;u<e.length;++u){let y=e[u],w=u===e.length-1?t:e[u+1].length;if(0===y.length)throw Error("Ragged splits may not be empty");if(y[0]<0)throw Error("Ragged splits must be non-negative");if(y[y.length-1]>w)throw Error("Ragged splits must not point past values");for(let e=1;e<y.length;++e)if(y[e-1]>y[e])throw Error("Ragged splits must be sorted in ascending order")}}(u,y);let M=1;for(let e=0;e<t.length-1;++e){M*=t[e];let u=t[e+1];for(let t=1;t<M+1;++t)$[e].push(t*u)}for(let y=0;y<e.length;++y){let M=e[y],O=e[y]+1;for(let e=0;e<u.length;++e){let y=u[e],w=e+t.length-1;if(w>=0){let e=$[w],t=e[e.length-1]-y[M];for(let e=M;e<O;++e)$[w].push(y[e+1]+t)}M=y[M],O=y[O]}O!==M&&(w.push([M,O]),T+=O-M)}return{outSplits:$,valueSlices:w,numValues:T}}(T,$,e,y[0]),q=function(e){let t=[];for(let u=0;u<e.length;++u){let y=e[u].length,w=oc.getArrayFromDType("int32",y);t.push(w),e[u].forEach((e,t)=>w[t]=e)}return t}(W),Z=((O=y.slice())[0]=j,P=oc.getArrayFromDType(w,oc.sizeFromShape(O)),L=0===(z=u.length)?0:z/y[0],function(e,t,u,y,w,T){let $=N_(t,2)[1],M=N_(T,2)[1],O=0;for(let t of u)for(let u=t[0];u<t[1];++u){for(let t=0;t<y;++t)w[O*M+t]=e[u*$+t];++O}}(u,y,B,L,P,O),[P,O]);return[q,Z[0],Z[1]]}function Df(e,t,u,y,w,T,$){if(t.length>1)throw Error("starts must be a scalar or vector");if(w.length>1)throw Error("limits must be a scalar or vector");if($.length>1)throw Error("deltas must be a scalar or vector");let M=0===t.length,O=0===w.length,P=0===$.length,z=[];M||z.push(t[0]),O||z.push(w[0]),P||z.push($[0]);for(let e=1;e<z.length;++e)if(z[e]!==z[e-1])throw Error("starts, limits, and deltas must have the same shape");let L=0===z.length?1:z[0],W=oc.getArrayFromDType("int32",L+1);W[0]=0;for(let t=0;t<L;++t){let u,w=M?e[0]:e[t],$=O?y[0]:y[t],z=P?T[0]:T[t];if(0===z)throw Error("Requires delta != 0");if(z>0&&$<w||z<0&&$>w)u=0;else if((u=Math.ceil(Math.abs(($-w)/z)))>2147483647)throw Error("Requires ((limit - start) / delta) <= 2147483647");W[t+1]=W[t]+u}let B=W[L],j=oc.getArrayFromDType(u,B),q=0;for(let t=0;t<L;++t){let u=W[t+1]-W[t],y=M?e[0]:e[t],w=P?T[0]:T[t];for(let e=0;e<u;++e)j[q++]=y,y+=w}return[W,j]}var mg=hh.RowPartitionType,my=class r12{constructor(e,t,u,y,w,T,$,M,O,P){this.shape=e,this.shapeShape=t,this.values=u,this.valuesShape=y,this.valuesDType=w,this.defaultValue=T,this.defaultValueShape=$,this.rowPartitionValues=M,this.rowPartitionValuesShapes=O,this.rowPartitionTypes=hh.getRowPartitionTypesHelper(P),this.raggedRank=hh.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===mg.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===mg.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){let t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case mg.VALUE_ROWIDS:return r12.getMaxWidthValueRowID(t);case mg.ROW_SPLITS:return r12.getMaxWidthRowSplit(t);default:throw Error(`Cannot handle partition type ${mg[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){let t=e.length;if(0===t||1===t)return 0;let u=0;for(let y=0;y<t-1;++y){let t=e[y+1]-e[y];t>u&&(u=t)}return u}static getMaxWidthValueRowID(e){let t=e.length;if(0===t)return 0;let u=0,y=e[0],w=0;for(let T=1;T<t;++T){let t=e[T];t!==y&&(y=t,w=Math.max(T-u,w),u=T)}return Math.max(t-u,w)}tensorShapeFromTensor(e,t,u=!0){if(0===t.length){if(-1===e[0])return[];throw Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return E_(e,u)}calculateOutputSize(e){let t=this.valuesShape,u=this.defaultValueShape;hh.validateDefaultValueShape(u,t);let y=this.tensorShapeFromTensor(this.shape,this.shapeShape),w=hh.combineRaggedTensorToTensorShapes(this.raggedRank,y,t);w[0]<0&&(w[0]=e);for(let e=1;e<=this.raggedRank;++e)w[e]<0&&(w[e]=this.getMaxWidth(e));return w}calculateFirstParentOutputIndex(e,t,u){let y=Math.min(e,u),w=[],T=0;for(let e=0;e<y;++e,T+=t)w.push(T);for(let t=y;t<e;++t)w.push(-1);return oc.assert(w.length===e,()=>"Final length of result must be equal to firstDimension."),w}calculateOutputIndexRowSplit(e,t,u,y){let w=e.length,T=[];for(let $=0;$<w-1;++$){let w=e[$+1]-e[$],M=Math.min(y,w),O=t[$];-1===O&&(M=0);for(let e=0;e<M;++e)T.push(O),O+=u;for(let e=0;e<w-M;++e)T.push(-1)}if(w>0&&T.length!==e[w-1])throw Error("Invalid row split size.");return T}calculateOutputIndexValueRowID(e,t,u,y){let w=e.length,T=[];if(0===w)return[];let $=0,M=e[0];if(M>=t.length)throw Error(`Got currentValueRowId=${M}, which is not less than ${t.length}`);let O=t[M];T.push(O);for(let P=1;P<w;++P){let w=e[P];if(w===M)O>=0&&(++$<y?O+=u:O=-1);else{if($=0,M=w,w>=t.length)throw Error(`Got nextValueRowId=${w} which is not less than ${t.length}`);O=t[w]}T.push(O)}if(T.length!==e.length)throw Error("Invalid row ids.");return T}calculateOutputIndex(e,t,u,y){let w=this.getRowPartitionTensor(e),T=this.getRowPartitionTypeByDimension(e);switch(T){case mg.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(w,t,u,y);case mg.ROW_SPLITS:if(w.length-1>t.length)throw Error(`Row partition size is greater than output size: ${w.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(w,t,u,y);default:throw Error(`Unsupported partition type: ${mg[T]}`)}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case mg.FIRST_DIM_SIZE:return e[0];case mg.VALUE_ROWIDS:throw Error("Cannot handle VALUE_ROWIDS in first dimension.");case mg.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw Error(`Cannot handle type ${mg[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),u=Array(this.raggedRank+1);u[u.length-1]=1;for(let e=u.length-2;e>=0;--e)u[e]=u[e+1]*t[e+1];let y=E_(t,!1),w=oc.getArrayFromDType(this.valuesDType,oc.sizeFromShape(y));if(u[0]*t[0]>0){let T=this.calculateFirstParentOutputIndex(e,u[0],t[0]);for(let e=1;e<=this.raggedRank;++e)T=this.calculateOutputIndex(e-1,T,u[e],t[e]);this.setOutput(this.raggedRank,T,w,y)}return[y,w]}setOutput(e,t,u,y){if(0===u.length)return;let w=this.values,T=y.slice();T=T.slice(e+1);let $=oc.sizeFromShape(T),M=t.length,O=this.defaultValue;if(O.length!==$&&1!==O.length){let e=this.defaultValueShape;De(()=>{O=lz(lA(O,e),T).dataSync()})}let P=0,z=0,L=0;for(let e=0;e<=M;++e){let y=e<M?t[e]:-1;if(y===L){++L;continue}if(z<L){let e=w.subarray(P*$);__(u.subarray(z*$),e,(L-z)*$)}if(e>=M&&(y=Math.floor(u.length/$)),y>L){if(1===this.defaultValue.length)u.subarray(L*$,y*$).fill(this.defaultValue[0]),L=y;else for(;y>L;)__(u.slice(L*$),O,$),++L}y<0?(P=e+1,z=L):(P=e,L=(z=L)+1)}}};function __(e,t,u){for(let y=0;y<u;y++)e[y]=t[y]}function E_(e,t){let u=[];for(let y of e){if(y<0){if(!t)throw Error(`Dimension ${y} must be >= 0`);if(y<-1)throw Error(`Dimension ${y} must be >= -1`);y=-1}u.push(y)}return u}function Af(e,t,u,y,w,T,$,M,O,P){return new my(e,t,u,y,w,T,$,M,O,P).compute()}function up(e,t,u,y){let w=e===t,T=e<t&&u<0,$=t<e&&u>1;if(w||T||$)return oc.makeZerosTypedArray(0,y);let M=Math.abs(Math.ceil((t-e)/u)),O=oc.makeZerosTypedArray(M,y);t<e&&1===u&&(u=-1),O[0]=e;for(let e=1;e<O.length;e++)O[e]=O[e-1]+u;return O}var mx=jt(e=>1/Math.sqrt(e)),mb=Ar(sx,mx);function zs(e,t,u,y,w,T,$,M,O,P){let z=[y/w,w],L=e.values,W=t.values;if(0===y)return me(u,t.dtype);let B=O instanceof oI?O:me(z,t.dtype);"string"==typeof O||"number"==typeof O?B.values.fill(O):"boolean"==typeof O&&B.values.fill(+O);for(let e=0;e<T;e++){let T=[],O=0;for(let t=0;t<$;t++){let u=L[e*$+t];T.push(u),O+=u*M[t]}if(O<0||O>=y/w)throw Error(`Invalid indices: ${T} does not index into ${u}`);for(let u=0;u<w;u++)P?B.values[O*w+u]+=W[e*w+u]:B.values[O*w+u]=0===t.rank?W[0]:W[e*w+u]}return B}var mv=jt(e=>1/(1+Math.exp(-e))),mk=Ie(s_,e=>1/(1+Math.exp(-e)));function pp(e,t,u,y,w){let T=hs.isSliceContinous(y,t,u),$=oc.sizeFromShape(u),M=oc.computeStrides(y);if(T){let u=hs.computeFlatOffset(t,M);return"string"===w?e.slice(u,u+$):e.subarray(u,u+$)}let O="string"===w?hh.fromUint8ToStringArray(e):e,P=me(y,w,O),z=me(u,w);for(let e=0;e<z.size;++e){let u=z.indexToLoc(e),y=u.map((e,u)=>e+t[u]);z.set(P.get(...y),...u)}return"string"===w?hh.fromStringArrayToUint8(z.values):z.values}function Ao(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{begin:T,size:$}=y;Q(w,"slice");let[M,O]=hs.parseSliceParams(w,T,$);hs.assertParamsValid(w,M,O);let P=pp(u.data.get(w.dataId).values,M,O,w.shape,w.dtype);return u.makeTensorInfo(O,w.dtype,P)}function Ff(e,t,u,y,w,T,$){let M=t[0],O=T[0],P=Array(O),z=Array(M),L=t[1];if(0===O){if(0!==M)throw Error(hh.getSparseFillEmptyRowsIndicesDenseShapeMismatch(M));return[oc.getArrayFromDType(u,0),[0,L],oc.getArrayFromDType(w,0),P,z]}let W=!0,B=0,j=Array(O).fill(0);for(let t=0;t<M;++t){let u=e[t*L];if(u<0)throw Error(hh.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,u));if(u>=O)throw Error(hh.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,u,O));++j[u],W=W&&u>=B,B=u}let q=!0;for(let e=0;e<O;++e){let t=0===j[e];P[e]=t,q=q&&!t,j[e]=Math.max(j[e],1),e>0&&(j[e]+=j[e-1])}if(q&&W){for(let e=0;e<M;++e)z[e]=e;return[e,[M,L],y,P,z]}{let t=j[O-1],T=oc.getArrayFromDType(u,t*L),W=oc.getArrayFromDType(w,t),B=Array(O).fill(0);for(let t=0;t<M;++t){let u=e[t*L],w=B[u],$=(0===u?0:j[u-1])+w;B[u]++;for(let u=0;u<L;++u)T[$*L+u]=e[t*L+u];W[$]=y[t],z[t]=$}for(let e=0;e<O;++e)if(0===B[e]){let t=0===e?0:j[e-1];T[t*L+0]=e;for(let e=1;e<L;++e)T[t*L+e]=0;W[t]=$}return[T,[t,L],W,P,z]}}function Pf(e,t,u,y,w){let T=oc.sizeFromShape(y),$=t[0],M=w.length,O=[],P=1,z=-1;for(let e=0;e<M;++e){let t=w[e];if(-1===t){if(-1!==z)throw Error(hh.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(z,e));z=e,O.push(1)}else{if(t<0)throw Error(hh.getSparseReshapeNegativeOutputDimErrorMessage(e,t));P*=t,O.push(t)}}if(-1!==z){if(P<=0)throw Error(hh.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let e=Math.trunc(T/P);if(P*e!==T)throw Error(hh.getSparseReshapeInputOutputMultipleErrorMessage(y,O));O[z]=e}if(oc.sizeFromShape(O)!==T)throw Error(hh.getSparseReshapeInputOutputMismatchErrorMessage(y,O));let L=y.length,W=[];if(L>0){W[L-1]=1;for(let e=L-2;e>=0;--e)W[e]=W[e+1]*y[e+1]}let B=[];if(M>0){B[M-1]=1;for(let e=M-2;e>=0;--e)B[e]=B[e+1]*O[e+1]}let j=oc.getArrayFromDType(u,$*M);for(let t=0;t<$;++t){let u=0;for(let y=0;y<L;++y)u+=e[t*L+y]*W[y];for(let e=0;e<M;++e)j[t*M+e]=Math.trunc(u/B[e]),u%=B[e]}return[j,[$,M],O]}function Sc(e,t,u,y,w,T=!1,$=0){let M=y.length,O=[t[0],e.length/t[0]],P=O[1],z=M>0?w[M-1]+1:0;if(z<0)throw Error(hh.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let L=t.slice();L[0]=z;let W=L.reduce((e,t)=>e*t,1),B=oc.getArrayFromDType(u,W);if(0===M)return z>0&&B.fill($),[B,L];if(z<=0)throw Error(hh.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let j=0,q=1,Z=0,Y=w[0];for(;;){let t=0;if(q<M){if(Y===(t=w[q])){++q;continue}if(Y>=t)throw Error(hh.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(Y<0||Y>=z)throw Error(hh.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(Y,z));Y>Z&&B.fill($,Z*P,Y*P);for(let t=j;t<q;++t){let u=y[t];if(u<0||u>=O[0])throw Error(hh.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,y[t],O[0]));for(let t=0;t<P;t++)B[Y*P+t]+=e[u*P+t]}if(T)for(let e=0;e<P;e++)B[Y*P+e]/=q-j;if(j=q,++q,Z=Y+1,Y=t,q>M)break}return Z<z&&B.fill($,Z*P,z*P),[B,L]}var mw=jt(e=>Math.sqrt(e)),mI=Ie(sF,e=>Math.sqrt(e)),mS=Ve((e,t)=>{let u=e-t;return u*u}),mN=Ye(sH,mS),mC=jt((e,t)=>{let{pattern:u,replaceGlobal:y,rewrite:w}=t;return e.replace(new RegExp(u,y?"g":""),w)}),mE=Ar(sq,mC);function Of(e,t,u,y){let w=me(e,t.dtype);for(let e=0;e<w.size;e++){let T=w.indexToLoc(e),$=Array(T.length);for(let e=0;e<$.length;e++)$[e]=T[e]*u[e]+y[e];w.set(t.get(...$),...T)}return w}var mR=class{constructor(e,t,u,y,w,T){this.separator=oc.encodeString(e),this.nGramWidths=t,this.leftPad=oc.encodeString(u),this.rightPad=oc.encodeString(y),this.padWidth=w,this.preserveShort=T}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){return Math.max(0,e+2*this.getPadWidth(t)-t+1)}createNGrams(e,t,u,y,w,T){for(let $=0;$<w;++$){let M=this.getPadWidth(T),O=Math.max(0,M-$),P=Math.max(0,M-(w-($+1))),z=T-(O+P),L=t+(O>0?0:$-M),W;W=0+O*this.leftPad.length;for(let t=0;t<z;++t)W+=e[L+t].length;W+=P*this.rightPad.length+(O+P+z-1)*this.separator.length,u[y+$]=new Uint8Array(W);let B=u[y+$],j=0,x=e=>e.forEach(e=>B[j++]=e);for(let e=0;e<O;++e)x(this.leftPad),x(this.separator);for(let t=0;t<z-1;++t)x(e[L+t]),x(this.separator);if(z>0){x(e[L+z-1]);for(let e=0;e<P;++e)x(this.separator),x(this.rightPad)}else{for(let e=0;e<P-1;++e)x(this.rightPad),x(this.separator);x(this.rightPad)}}}compute(e,t){let u=e.length,y=t.length;if(y>0){let e=t[0];if(0!==e)throw Error(`First split value must be 0, got ${e}`);for(let w=1;w<y;++w){let y=t[w]>=e;if(!(y=y&&t[w]<=u))throw Error(`Invalid split value ${t[w]}, must be in [${e}, ${u}]`);e=t[w]}if(e!==u)throw Error(`Last split value must be data size. Expected ${u}, got ${e}`)}let w=y-1,T=oc.getArrayFromDType("int32",y);if(0===u||0===y){let e=Array(u);for(let e=0;e<=w;++e)T[e]=0;return[e,T]}T[0]=0;for(let e=1;e<=w;++e){let u=t[e]-t[e-1],y=0;this.nGramWidths.forEach(e=>{y+=this.getNumNGrams(u,e)}),this.preserveShort&&u>0&&0===y&&(y=1),T[e]=T[e-1]+y}let $=Array(T[w]);for(let u=0;u<w;++u){let y=t[u],w=T[u];if(this.nGramWidths.forEach(T=>{let M=t[u+1]-t[u],O=this.getNumNGrams(M,T);this.createNGrams(e,y,$,w,O,T),w+=O}),this.preserveShort&&w===T[u]){let T=t[u+1]-t[u];if(0===T)continue;let M=T+2*this.padWidth;this.createNGrams(e,y,$,w,1,M)}}return[$,T]}};function cp(e,t,u,y,w,T,$,M){return new mR(u,y,w,T,$,M).compute(e,t)}function lp(e,t,u){let y=e.length,w=[],T=0,$=0,M=Array(y);for(let O=0;O<y;++O){let y=w.length;!function(e,t,u,y){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)y.push(e.subarray(t,t+1));return}if(1===t.length){let w=t[0],T=e.indexOf(w);for(;-1!==T;){let t=e.subarray(0,T);u&&0===t.length||y.push(t),T=(e=e.subarray(T+1)).indexOf(w)}u&&0===e.length||y.push(e);return}let w=0;for(let T=0;T<e.length+1;T++)if(T===e.length||-1!==t.indexOf(e[T])){let t=e.subarray(w,T);u&&0===t.length||y.push(t),w=T+1}}(e[O],t,u,w);let P=w.length-y;M[O]=P,T+=P,$=Math.max($,P)}let O=oc.getArrayFromDType("int32",2*T),P=Array(T),z=[y,$],L=0;for(let e=0;e<y;++e)for(let t=0;t<M[e];++t)O[2*L]=e,O[2*L+1]=t,P[L]=w[L],++L;return[O,P,z]}function mp(e,t){let u=oc.getArrayFromDType("int32",e.length);for(let y=0;y<e.length;++y)u[y]=oc.fingerPrint64(e[y]).modulo(t).getLowBitsUnsigned();return u}var m$=Ve((e,t)=>e-t),m_=Ye(sJ,m$,bc((e,t,u,y)=>({real:e-u,imag:t-y})));function Mf(e,t){let u=Array(e.rank);for(let y=0;y<u.length;y++)u[y]=e.shape[y]*t[y];let y=me(u,e.dtype);for(let t=0;t<y.values.length;++t){let u=y.indexToLoc(t),w=Array(e.rank);for(let t=0;t<w.length;t++)w[t]=u[t]%e.shape[t];let T=e.locToIndex(w);y.values[t]=e.values[T]}return y}var Wl=(e,t)=>{let u=t.value-e.value;return 0===u?e.index-t.index:u};function Lf(e,t,u,y,w){let T=t[t.length-1],[$,M]=[e.length/T,T],O=oc.getTypedArrayFromDType(u,$*y),P=oc.getTypedArrayFromDType("int32",$*y);for(let t=0;t<$;t++){let u=t*M,T=e.subarray(u,u+M),$=Array(T.length);T.forEach((e,t)=>$[t]={value:e,index:t}),y<$.length&&(function B_(e,t,u=0,y=e.length-1){for(;y>u;){if(y-u>600){let w=y-u+1,T=t-u+1,$=Math.log(w),M=.5*Math.exp(2*$/3),O=.5*Math.sqrt($*M*(w-M)/w)*Math.sign(T-w/2),P=Math.max(u,Math.floor(t-T*M/w+O)),z=Math.min(y,Math.floor(t+(w-T)*M/w+O));B_(e,t,P,z)}let w=e[t],T=u,$=y;for(oc.swap(e,u,t),Wl(e[y],w)>0&&oc.swap(e,u,y);T<$;){for(oc.swap(e,T,$),T++,$--;0>Wl(e[T],w);)T+=1;for(;Wl(e[$],w)>0;)$-=1}0===Wl(e[u],w)?oc.swap(e,u,$):($+=1,oc.swap(e,$,y)),$<=t&&(u=$+1),t<=$&&(y=$-1)}}($,y),$=$.slice(0,y)),w&&$.sort(Wl);let z=t*y,L=O.subarray(z,z+y),W=P.subarray(z,z+y);for(let e=0;e<y;e++)L[e]=$[e].value,W[e]=$[e].index}let z=t.slice();return z[z.length-1]=y,[me(z,u,O),me(z,"int32",P)]}function dp(e,t,u,y){let w=oc.parseAxisParam(t,u)[0],T=[1,u[0],1];for(let e=0;e<w;e++)T[0]*=u[e];T[1]=u[w];for(let e=w+1;e<u.length;e++)T[2]*=u[e];let $=new Map,M=new Int32Array(u[w]),O=new oI(T,y,e),P=[],z=1===T[0]&&1===T[2];for(let t=0;t<u[w];t++){let u;if(z)u=e[t].toString();else{let e=[];for(let u=0;u<T[0];u++)for(let y=0;y<T[2];y++)e.push(O.get(u,t,y));u=e.join(",")}let y=$.get(u);if(null!=y)M[t]=y;else{let e=$.size;$.set(u,e),M[t]=e,P.push(t)}}let L=T.slice();L[1]=$.size;let W=new oI(L,y);P.forEach((e,t)=>{for(let u=0;u<T[0];u++)for(let y=0;y<T[2];y++)W.set(O.get(u,e,y),u,t,y)});let B=u.slice();return B[w]=L[1],{outputValues:W.values,outputShape:B,indices:M}}var mM="4.21.0";tu("cpu",()=>new fD,1);var mF=Ie(rV,e=>e>=0?e:Math.exp(e)-1);function hI(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{alpha:T}=y;Q([w],"leakyRelu");let $=oc.sizeFromShape(w.shape),M=u.data.get(w.dataId).values,O=oc.getTypedArrayFromDType("float32",$);for(let e=0;e<M.length;e++)O[e]=M[e]<0?T*M[e]:M[e];return u.makeTensorInfo(w.shape,"float32",O)}var mO=Ve((e,t)=>e<0?t*e:e);function gI(e){let{inputs:t,backend:u}=e,{x:y,alpha:w}=t;Q([y,w],"prelu");let T=u.data.get(y.dataId).values,$=u.data.get(w.dataId).values,[M,O]=mO(y.shape,w.shape,T,$,"float32");return u.makeTensorInfo(O,"float32",M)}var mP=Ie(ss,e=>Math.max(0,e)),mD=Ie(sg,e=>Math.min(Math.max(0,e),6));function fp(e,t,u,y,w){if("linear"===u)return lr({inputs:{x:t},backend:e});if("relu"===u)return mP({inputs:{x:t},backend:e});if("elu"===u)return mF({inputs:{x:t},backend:e});if("relu6"===u)return mD({inputs:{x:t},backend:e});if("prelu"===u)return gI({inputs:{x:t,alpha:y},backend:e});if("leakyrelu"===u)return hI({inputs:{x:t},backend:e,attrs:{alpha:w}});if("sigmoid"===u)return mk({inputs:{x:t},backend:e});throw Error(`Activation ${u} has not been implemented for the CPU backend.`)}function We(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{shape:T}=y,$=oc.sizeFromShape(w.shape),M=oc.inferFromImplicitShape(T,$),O=oc.sizeFromShape(M);oc.assert($===O,()=>`The new shape (${M}) has ${O} elements and the old shape (${w.shape}) has ${$} elements. The new shape and old shape must have the same number of elements.`),u.incRef(w.dataId);let P=u.data.get(w.dataId);if(null!=P.complexTensorInfos){let e=P.complexTensorInfos.real,t=P.complexTensorInfos.imag;e.shape=M,t.shape=M}return{dataId:w.dataId,shape:M,dtype:w.dtype}}function bI(e){let{inputs:t,backend:u,attrs:y}=e,{a:w,b:T}=t,{transposeA:$,transposeB:M}=y;Q([w,T],"matMul");let O=w.shape.length,P=T.shape.length,z=$?w.shape[O-2]:w.shape[O-1],L=M?T.shape[P-1]:T.shape[P-2],W=$?w.shape[O-1]:w.shape[O-2],B=M?T.shape[P-2]:T.shape[P-1],j=w.shape.slice(0,-2),q=T.shape.slice(0,-2),Z=oc.sizeFromShape(j),Y=oc.sizeFromShape(q),J=un.assertAndGetBroadcastShape(w.shape.slice(0,-2),T.shape.slice(0,-2)).concat([W,B]);oc.assert(z===L,()=>`Error in matMul: inner shapes (${z}) and (${L}) of Tensors with shapes ${w.shape} and ${T.shape} and transposeA=${$} and transposeB=${M} must match.`);let ee=M?[Y,B,L]:[Y,L,B],ea=We({inputs:{x:w},backend:u,attrs:{shape:$?[Z,z,W]:[Z,W,z]}}),en=We({inputs:{x:T},backend:u,attrs:{shape:ee}}),er=$?ea.shape[1]:ea.shape[2],ei=$?ea.shape[2]:ea.shape[1],es=M?en.shape[1]:en.shape[2],el=Math.max(Z,Y),eu=u.data.get(ea.dataId).values,ed=u.data.get(en.dataId).values,ep=oc.computeStrides(ea.shape),ec=oc.computeStrides(en.shape),[eh,em,ey]=$?[ep[0],1,ep[1]]:[ep[0],ep[1],1],[eA,ex,eb]=M?[1,ec[1],ec[0]]:[ec[1],1,ec[0]],ek=ei*es,eI=me([el,ei,es],ea.dtype),eC=eI.values,eE=u.blockSize;for(let e=0;e<el;e++){let t=e%Z,u=e%Y;for(let y=0;y<ei;y+=eE){let w=Math.min(y+eE,ei);for(let T=0;T<es;T+=eE){let $=Math.min(T+eE,es);for(let M=0;M<er;M+=eE){let O=Math.min(M+eE,er);for(let P=y;P<w;P++)for(let y=T;y<$;y++){let w=0;for(let e=M;e<O;e++)w+=eu[t*eh+P*em+e*ey]*ed[e*eA+y*ex+u*eb];eC[e*ek+(P*es+y)]+=w}}}}}return u.disposeIntermediateTensorInfo(ea),u.disposeIntermediateTensorInfo(en),u.makeTensorInfo(J,eI.dtype,eI.values)}var mz=Ie(nj,e=>Math.acos(e)),mL=Ie(nq,e=>Math.acosh(e)),mW=Ie(n1,e=>Math.asin(e)),mB=Ie(n2,e=>Math.asinh(e)),mV=Ie(n0,e=>Math.atan(e)),mU=Ye(n3,Ve((e,t)=>Math.atan2(e,t))),mG=Ie(n5,e=>Math.atanh(e));function vc(e,t,u,y,w,T){let $=w.strideHeight,M=w.strideWidth,O=w.dilationHeight,P=w.dilationWidth,z=w.effectiveFilterHeight,L=w.effectiveFilterWidth,W=w.padInfo.top,B=w.padInfo.left,j="max"===T?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,q=me(w.outShape,u),Z=q.values,Y=w.outShape[1]*w.outShape[2]*w.outShape[3],J=w.outShape[2]*w.outShape[3],ee=w.outShape[3];for(let t=0;t<w.batchSize;++t){let u=t*Y,q=t*y[0];for(let t=0;t<w.inChannels;++t)for(let Y=0;Y<w.outHeight;++Y){let ea=Y*$-W,en=Math.max(0,ea),er=Math.min(w.inHeight,z+ea),ei=u+Y*J;for(let u=0;u<w.outWidth;++u){let $=u*M-B,z=Math.max(0,$),W=Math.min(w.inWidth,L+$),Y=j,J=0,ea=0;for(let u=en;u<er;u+=O){let w=q+u*y[1];for(let u=z;u<W;u+=P){let $=e[w+u*y[2]+t];"max"===T&&$>Y?Y=$:"avg"===T&&(J+=$,ea++)}if(isNaN(Y))break}Z[ei+u*ee+t]="avg"===T?J/ea:Y}}}return q}function Bf(e,t,u,y,w=!1,T=!1){let $=me(y.outShape,"int32"),M=y.strideHeight,O=y.strideWidth,P=y.dilationHeight,z=y.dilationWidth,L=y.effectiveFilterHeight,W=y.effectiveFilterWidth,B=y.padInfo.top,j=y.padInfo.left,q=me(t,u,e);for(let e=0;e<y.batchSize;++e)for(let t=0;t<y.inChannels;++t)for(let u=0;u<y.outHeight;++u){let Z=u*M-B,Y=Z;for(;Y<0;)Y+=P;let J=Math.min(y.inHeight,L+Z);for(let M=0;M<y.outWidth;++M){let L=M*O-j,B=L;for(;B<0;)B+=z;let ee=Math.min(y.inWidth,W+L),ea=Number.NEGATIVE_INFINITY,en=-1;for(let u=Y;u<J;u+=P){let $=u-Z;for(let M=B;M<ee;M+=z){let O=M-L,P=q.get(e,u,M,t);P>ea&&(ea=P,en=w?T?((e*y.inHeight+u)*y.inWidth+M)*y.inChannels+t:(u*y.inWidth+M)*y.inChannels+t:$*W+O)}}$.set(en,e,u,M,t)}}return $}function zf(e,t,u,y,w,T){let $=w.strideDepth,M=w.strideHeight,O=w.strideWidth,P=w.dilationDepth,z=w.dilationHeight,L=w.dilationWidth,W=w.effectiveFilterDepth,B=w.effectiveFilterHeight,j=w.effectiveFilterWidth,q=w.padInfo.front,Z=w.padInfo.top,Y=w.padInfo.left,J="max"===T?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,ee=me(w.outShape,u),ea=ee.values,en=w.outShape[1]*w.outShape[2]*w.outShape[3]*w.outShape[4],er=w.outShape[2]*w.outShape[3]*w.outShape[4],ei=w.outShape[3]*w.outShape[4],es=w.outShape[4];for(let t=0;t<w.batchSize;++t){let u=t*en,ee=t*y[0];for(let t=0;t<w.inChannels;++t)for(let en=0;en<w.outDepth;++en){let el=en*$-q,eu=el;for(;eu<0;)eu+=P;let ed=Math.min(w.inDepth,W+el),ep=u+en*er;for(let u=0;u<w.outHeight;++u){let $=u*M-Z,W=$;for(;W<0;)W+=z;let q=Math.min(w.inHeight,B+$),en=ep+u*ei;for(let u=0;u<w.outWidth;++u){let $=u*O-Y,M=$;for(;M<0;)M+=L;let B=Math.min(w.inWidth,j+$),Z=en+u*es,er=J,ei=0,el=0;for(let u=eu;u<ed;u+=P){let w=ee+u*y[1];for(let u=W;u<q;u+=z){let $=w+u*y[2];for(let u=M;u<B;u+=L){let w=e[$+u*y[3]+t];if("max"===T&&w>er?er=w:"avg"===T&&(ei+=w,el++),isNaN(er))break}if(isNaN(er))break}if(isNaN(er))break}ea[Z+t]="avg"===T?ei/Math.max(el,1):er}}}}return ee}var mH=Ie(ru,(e,t)=>e>t.clipValueMax?t.clipValueMax:e<t.clipValueMin?t.clipValueMin:e);function Oa(e){let{inputs:t,backend:u}=e,{input:y}=t,w=u.data.get(y.dataId).complexTensorInfos.imag,T=u.data.get(w.dataId).values;return u.makeTensorInfo(w.shape,w.dtype,T)}function hu(e){let{inputs:t,backend:u,attrs:y}=e,{axis:w}=y,T=oc.parseAxisParam(w,t[0].shape)[0],$=t.map(e=>e.shape);hh.assertParamsConsistent($,T);let M=hh.computeOutShape(t.map(e=>e.shape),T);if(0===oc.sizeFromShape(M))return u.makeTensorInfo(M,t[0].dtype,[]);let O=t.filter(e=>oc.sizeFromShape(e.shape)>0);if(1===O.length)return lr({inputs:{x:O[0]},backend:u});if("complex64"===O[0].dtype){let e=O.map(e=>$o({inputs:{input:e},backend:u})),t=O.map(e=>Oa({inputs:{input:e},backend:u})),y=hu({inputs:e,backend:u,attrs:{axis:T}}),w=hu({inputs:t,backend:u,attrs:{axis:T}}),$=Ht({inputs:{real:y,imag:w},backend:u});return e.forEach(e=>u.disposeIntermediateTensorInfo(e)),t.forEach(e=>u.disposeIntermediateTensorInfo(e)),u.disposeIntermediateTensorInfo(y),u.disposeIntermediateTensorInfo(w),$}let P=O.map(e=>{let t=[-1,oc.sizeFromShape(e.shape.slice(T))];return We({inputs:{x:e},backend:u,attrs:{shape:t}})}),z=P.map(e=>({vals:u.data.get(e.dataId).values,shape:e.shape}));M=hh.computeOutShape(P.map(e=>e.shape),1);let L=1===P[0].shape[0],W=ap(z,M,t[0].dtype,L),B=hh.computeOutShape(O.map(e=>e.shape),T),j=u.makeTensorInfo(B,t[0].dtype,W);return P.forEach(e=>u.disposeIntermediateTensorInfo(e)),j}function CI(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,filter:T}=t,{strides:$,pad:M,dataFormat:O,dilations:P,dimRoundingMode:z}=y;Q([w,T],"conv2d");let L=hh.convertConv2DDataFormat(O),W=hh.computeConv2DInfo(w.shape,T.shape,$,P,M,z,!1,L),B=W.filterHeight,j=W.filterWidth,q=W.dilationHeight,Z=W.dilationWidth,Y=W.padInfo.left,J=W.padInfo.top,ee="channelsLast"===W.dataFormat,ea=new oI(W.outShape,w.dtype),en=oc.computeStrides(w.shape),er=oc.computeStrides(T.shape),ei=en[0],es=ee?en[1]:en[2],el=ee?en[2]:1,eu=ee?1:en[1],ed=ea.strides[0],ep=ee?ea.strides[1]:ea.strides[2],ec=ee?ea.strides[2]:1,eh=ee?1:ea.strides[1],em=u.data.get(w.dataId).values,ey=u.data.get(T.dataId).values,eA=ea.values;for(let e=0;e<W.batchSize;++e){let t=e*ei,u=e*ed;for(let e=0;e<W.outHeight;++e){let y=u+e*ep,w=e*W.strideHeight-J;for(let e=0;e<B;++e){let u=w+e*q;if(u<0||u>=W.inHeight)continue;let T=e*er[0],$=t+u*es;for(let e=0;e<W.outWidth;++e){let t=y+e*ec,u=e*W.strideWidth-Y;for(let e=0;e<j;++e){let y=u+e*Z;if(y<0||y>=W.inWidth)continue;let w=T+e*er[1],M=$+y*el,O=w;for(let e=0;e<W.inChannels;++e){let u=em[M+e*eu];for(let e=0;e<W.outChannels;++e)eA[t+e*eh]+=u*ey[O+e];O+=W.outChannels}}}}}}return u.makeTensorInfo(ea.shape,ea.dtype,eA)}var mj=Ie(rb,e=>Math.cos(e)),mq=Ie(rk,e=>Math.cosh(e));function wI(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,filter:T}=t,{strides:$,pad:M,dilations:O,dimRoundingMode:P}=y;Q([w,T],"depthwiseConv2DNative");let z=oc.computeStrides(w.shape),L=oc.computeStrides(T.shape),W=O;null==W&&(W=[1,1]),oc.assert(hh.eitherStridesOrDilationsAreOne($,W),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${$} and dilations '${W}'`);let B=hh.computeConv2DInfo(w.shape,T.shape,$,W,M,P,!0),{filterHeight:j,filterWidth:q,dilationHeight:Z,dilationWidth:Y,padInfo:J}=B,ee=J.left,ea=J.top,en=B.outChannels/B.inChannels,er=new oI(B.outShape,w.dtype),ei=u.data.get(w.dataId).values,es=u.data.get(T.dataId).values,el=er.values;for(let e=0;e<B.batchSize;++e){let t=e*z[0],u=e*er.strides[0];for(let e=0;e<B.outHeight;++e){let y=u+e*er.strides[1],w=e*B.strideHeight-ea;for(let e=0;e<j;++e){let u=w+e*Z;if(u<0||u>=B.inHeight)continue;let T=e*L[0],$=t+u*z[1];for(let e=0;e<B.outWidth;++e){let t=y+e*er.strides[2],u=e*B.strideWidth-ee;for(let e=0;e<q;++e){let y=u+e*Y;if(y<0||y>=B.inWidth)continue;let w=T+e*L[1],M=$+y*B.inChannels,O=t,P=w;for(let e=0;e<B.inChannels;++e){let t=ei[M+e];for(let e=0;e<en;++e)el[O+e]+=t*es[P+e];O+=en,P+=en}}}}}}return u.makeTensorInfo(er.shape,er.dtype,er.values)}function fi(e){let t,{inputs:u,backend:y,attrs:w}=e,{x:T}=u,{axis:$,keepDims:M}=w;Q(T,"sum");let O=(t="bool"===T.dtype?Ro({inputs:{x:T},backend:y,attrs:{dtype:"int32"}}):lr({inputs:{x:T},backend:y})).shape.length,P=oc.parseAxisParam($,t.shape),z=hh.getAxesPermutation(P,O),L=P,W=t;null!=z&&(W=St({inputs:{x:t},backend:y,attrs:{perm:z}}),L=hh.getInnerMostAxes(L.length,O)),hh.assertAxesAreInnerMostDims("sum",L,W.shape.length);let[B,j]=hh.computeOutAndReduceShapes(W.shape,L),q=yc(y,B,hh.upcastType(W.dtype,"int32")),Z=oc.sizeFromShape(j),Y=y.data.get(q.dataId).values,J=y.data.get(W.dataId).values;for(let e=0;e<Y.length;++e){let t=e*Z,u=0;for(let e=0;e<Z;++e)u+=J[t+e];Y[e]=u}if(M){let e=hh.expandShapeToKeepDim(q.shape,P),t=q;q=We({inputs:{x:q},backend:y,attrs:{shape:e}}),y.disposeIntermediateTensorInfo(t)}return y.disposeIntermediateTensorInfo(t),null!=z&&y.disposeIntermediateTensorInfo(W),q}var mX=hh.ERF_P,mY=hh.ERF_A1,mJ=hh.ERF_A2,mQ=hh.ERF_A3,m1=hh.ERF_A4,m2=hh.ERF_A5,m3=Ie(rG,e=>{let t=Math.sign(e),u=Math.abs(e),y=1/(1+mX*u);return t*(1-((((m2*y+m1)*y+mQ)*y+mJ)*y+mY)*y*Math.exp(-u*u))});function kc(e){let{inputs:t,backend:u,attrs:y}=e,{input:w}=t,{dim:T}=y,$=w.shape.length,M=w.shape.slice(),O=T;return T<0&&(oc.assert(-($+1)<=T,()=>`Axis must be in the interval [${-($+1)}, ${$}]`),O=$+T+1),M.splice(O,0,1),We({inputs:{x:w},backend:u,attrs:{shape:M}})}var m7=Ye(rW,Ve((e,t)=>e/t)),m4={kernelName:rW,backendName:"cpu",kernelFunc:m7};function Vf(e,t,u){let y=e.shape,w=y[0],T=y[1],$=u.data.get(e.dataId),M=$.complexTensorInfos.real,O=$.complexTensorInfos.imag,P=[w,T],z=oc.sizeFromShape(P),L=oc.getTypedArrayFromDType("float32",z),W=oc.getTypedArrayFromDType("float32",z);for(let e=0;e<w;e++){let y=Ao({inputs:{x:M},backend:u,attrs:{begin:[e,0],size:[1,T]}}),w=Ao({inputs:{x:O},backend:u,attrs:{begin:[e,0],size:[1,T]}}),$=Ht({inputs:{real:y,imag:w},backend:u}),{real:P,imag:z}=function(e,t,u){let y=oc.sizeFromShape(e.shape),w=u.data.get(e.dataId),T=u.data.get(w.complexTensorInfos.real.dataId).values,$=u.data.get(w.complexTensorInfos.imag.dataId).values;if((y&y-1)==0){let w=function SI(e,t,u,y,w){if(1===u)return{real:e,imag:t};let T=hh.mergeRealAndImagArrays(e,t),$=u/2,M=hh.complexWithEvenIndex(T),O=M.real,P=M.imag,z=[O.length],L=w.makeTensorInfo(z,"float32",O),W=w.makeTensorInfo(z,"float32",P),B=Ht({inputs:{real:L,imag:W},backend:w}),j=hh.complexWithOddIndex(T),q=j.real,Z=j.imag,Y=[q.length],J=w.makeTensorInfo(Y,"float32",q),ee=w.makeTensorInfo(Y,"float32",Z),ea=Ht({inputs:{real:J,imag:ee},backend:w}),en=SI(O,P,$,y,w),er=en.real,ei=en.imag,es=[er.length],el=w.makeTensorInfo(es,"float32",er),eu=w.makeTensorInfo(es,"float32",ei),ed=Ht({inputs:{real:el,imag:eu},backend:w}),ep=SI(q,Z,$,y,w),ec=ep.real,eh=ep.imag,em=[ec.length],ey=w.makeTensorInfo(em,"float32",ec),eA=w.makeTensorInfo(em,"float32",eh),ex=Ht({inputs:{real:ey,imag:eA},backend:w}),eb=hh.exponents(u,y),ek=[eb.real.length],eI=w.makeTensorInfo(ek,"float32",eb.real),eC=w.makeTensorInfo(ek,"float32",eb.imag),eE=Ht({inputs:{real:eI,imag:eC},backend:w}),eR=md({inputs:{a:eE,b:ex},backend:w}),e$=fW({inputs:{a:ed,b:eR},backend:w}),e_=m_({inputs:{a:ed,b:eR},backend:w}),eM=$o({inputs:{input:e$},backend:w}),eF=$o({inputs:{input:e_},backend:w}),eO=Oa({inputs:{input:e$},backend:w}),eP=Oa({inputs:{input:e_},backend:w}),eD=hu({inputs:[eM,eF],backend:w,attrs:{axis:0}}),eL=hu({inputs:[eO,eP],backend:w,attrs:{axis:0}}),eW=w.data.get(eD.dataId).values,eB=w.data.get(eL.dataId).values;return w.disposeIntermediateTensorInfo(L),w.disposeIntermediateTensorInfo(W),w.disposeIntermediateTensorInfo(B),w.disposeIntermediateTensorInfo(J),w.disposeIntermediateTensorInfo(ee),w.disposeIntermediateTensorInfo(ea),w.disposeIntermediateTensorInfo(el),w.disposeIntermediateTensorInfo(eu),w.disposeIntermediateTensorInfo(ed),w.disposeIntermediateTensorInfo(ey),w.disposeIntermediateTensorInfo(eA),w.disposeIntermediateTensorInfo(ex),w.disposeIntermediateTensorInfo(eI),w.disposeIntermediateTensorInfo(eC),w.disposeIntermediateTensorInfo(eE),w.disposeIntermediateTensorInfo(eR),w.disposeIntermediateTensorInfo(e$),w.disposeIntermediateTensorInfo(e_),w.disposeIntermediateTensorInfo(eM),w.disposeIntermediateTensorInfo(eO),w.disposeIntermediateTensorInfo(eF),w.disposeIntermediateTensorInfo(eP),w.disposeIntermediateTensorInfo(eD),w.disposeIntermediateTensorInfo(eL),{real:eW,imag:eB}}(T,$,y,t,u),M=[e.shape[0],e.shape[1]];if(t){let e=u.makeTensorInfo(M,"float32",w.real),t=u.makeTensorInfo(M,"float32",w.imag),T=u.makeTensorInfo([],"float32",oc.createScalarValue(y,"float32")),$=lr({inputs:{x:T},backend:u}),O=m4.kernelFunc({inputs:{a:e,b:T},backend:u}),P=m4.kernelFunc({inputs:{a:t,b:$},backend:u}),z=u.data.get(O.dataId).values,L=u.data.get(P.dataId).values;return u.disposeIntermediateTensorInfo(e),u.disposeIntermediateTensorInfo(t),u.disposeIntermediateTensorInfo(T),u.disposeIntermediateTensorInfo($),u.disposeIntermediateTensorInfo(O),u.disposeIntermediateTensorInfo(P),{real:z,imag:L}}return w}{let e=function(e,t,u){let y=new Float32Array(2*t);for(let w=0;w<t;w++){let T=0,$=0;for(let y=0;y<t;y++){let M=hh.exponent(w*y,t,u),O=hh.getComplexWithIndex(e,y);T+=O.real*M.real-O.imag*M.imag,$+=O.real*M.imag+O.imag*M.real}u&&(T/=t,$/=t),hh.assignToTypedArray(y,T,$,w)}return y}(hh.mergeRealAndImagArrays(T,$),y,t);return hh.splitRealAndImagArrays(e)}}($,t,u),B=hh.mergeRealAndImagArrays(P,z);for(let t=0;t<T;t++){let u=hh.getComplexWithIndex(B,t);L[e*T+t]=u.real,W[e*T+t]=u.imag}u.disposeIntermediateTensorInfo(y),u.disposeIntermediateTensorInfo(w),u.disposeIntermediateTensorInfo($)}let B=u.makeTensorInfo(P,"float32",L),j=u.makeTensorInfo(P,"float32",W),q=Ht({inputs:{real:B,imag:j},backend:u});return u.disposeIntermediateTensorInfo(B),u.disposeIntermediateTensorInfo(j),q}function Hl(e){let{backend:t,attrs:u}=e,{shape:y,value:w,dtype:T}=u,$=T||oc.inferDtype(w),M=oc.getArrayFromDType($,oc.sizeFromShape(y));return function(e,t,u){e.fill(t)}(M,w,0),t.makeTensorInfo(y,$,M)}var m6=Ie(iu,e=>Number.isFinite(e)?1:0,"bool"),m8=Ie(ip,e=>Math.abs(e)===1/0?1:0,"bool"),m9=Ie(ic,e=>Number.isNaN(e)?1:0,"bool"),ge=Ie(ib,e=>Math.log1p(e)),gt=Ye(iI,Ve((e,t)=>e&&t),null,"bool"),ga=Ie(iS,e=>e?0:1,"bool"),gn=Ye(iN,Ve((e,t)=>e||t),null,"bool");function II(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{reductionIndices:T,keepDims:$}=y,M=w.shape,O=M.length,P=oc.parseAxisParam(T,M),z=P,L=hh.getAxesPermutation(z,O),W=u.data.get(w.dataId).values;if(null!=L){let e=Array(O);for(let t=0;t<e.length;t++)e[t]=M[L[t]];W=wc(W,M,w.dtype,L,e),z=hh.getInnerMostAxes(z.length,O),M=e}Q(w,"max"),hh.assertAxesAreInnerMostDims("max",z,O);let[B,j]=hh.computeOutAndReduceShapes(M,z),q=$f(W,oc.sizeFromShape(j),B,w.dtype),Z=u.write(q,B,w.dtype),Y=B;return $&&(Y=hh.expandShapeToKeepDim(B,P)),{dataId:Z,shape:Y,dtype:w.dtype}}var gs=Ye(iG,Ve((e,t)=>{let u=e%t;return e<0&&t<0||e>=0&&t>=0?u:(u+t)%t})),go=zp(n$());function vI(e){let{inputs:t,backend:u,attrs:y}=e,{logits:w}=t,{dim:T}=y,$=w.shape.length,M=T;if(-1===M&&(M=$-1),M!==$-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${$} and dim was ${M}`);let O=oc.parseAxisParam([M],w.shape),P=II({inputs:{x:w},backend:u,attrs:{reductionIndices:O,keepDims:!1}}),z=hh.expandShapeToKeepDim(P.shape,O),L=We({inputs:{x:P},backend:u,attrs:{shape:z}}),W=m_({inputs:{a:w,b:L},backend:u}),B=fX({inputs:{x:W},backend:u}),j=fi({inputs:{x:B},backend:u,attrs:{axis:O,keepDims:!1}}),q=We({inputs:{x:j},backend:u,attrs:{shape:z}}),Z=m7({inputs:{a:B,b:q},backend:u});return u.disposeIntermediateTensorInfo(P),u.disposeIntermediateTensorInfo(L),u.disposeIntermediateTensorInfo(W),u.disposeIntermediateTensorInfo(B),u.disposeIntermediateTensorInfo(j),u.disposeIntermediateTensorInfo(q),Z}var gu=h_.nonMaxSuppressionV3Impl,gd=h_.nonMaxSuppressionV4Impl,gp=h_.nonMaxSuppressionV5Impl;function Kl(e){let{inputs:t,backend:u}=e,{x:y}=t;if("string"===y.dtype)throw Error("zerosLike is not supported for string tensors");if("complex64"!==y.dtype)return Hl({backend:u,attrs:{shape:y.shape,value:0,dtype:y.dtype}});{let e=$o({inputs:{input:y},backend:u}),t=Kl({inputs:{x:e},backend:u}),w=Oa({inputs:{input:y},backend:u}),T=Kl({inputs:{x:w},backend:u}),$=Ht({inputs:{real:t,imag:T},backend:u});return u.disposeIntermediateTensorInfo(e),u.disposeIntermediateTensorInfo(t),u.disposeIntermediateTensorInfo(w),u.disposeIntermediateTensorInfo(T),$}}function kI(e){let{inputs:t,backend:u,attrs:y}=e,{axis:w}=y;if(1===t.length)return kc({inputs:{input:t[0]},backend:u,attrs:{dim:w}});let T=t[0].shape,$=t[0].dtype;t.forEach(e=>{oc.assertShapesMatch(T,e.shape,"All tensors passed to stack must have matching shapes"),oc.assert($===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let M=[],O=hu({inputs:t.map(e=>{let t=kc({inputs:{input:e},backend:u,attrs:{dim:w}});return M.push(t),t}),backend:u,attrs:{axis:w}});return M.forEach(e=>u.disposeIntermediateTensorInfo(e)),O}var gc={kernelName:i0,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{paddings:T,constantValue:$}=y;Q(w,"pad");let M=T.map((e,t)=>e[0]+w.shape[t]+e[1]),O=T.map(e=>e[0]),P=u.data.get(w.dataId).values,z=oc.sizeFromShape(w.shape),L=w.shape.length,W=oc.computeStrides(w.shape),B=oc.sizeFromShape(M),j=M.length,q=oc.computeStrides(M),Z=oc.getTypedArrayFromDType(w.dtype,B);0!==$&&Z.fill($);for(let e=0;e<z;e++){let t=oc.indexToLoc(e,L,W).map((e,t)=>e+O[t]);Z[oc.locToIndex(t,j,q)]=P[e]}return{dataId:u.write(Z,M,w.dtype),shape:M,dtype:w.dtype}}},gh=Ye(i7,Ve((e,t)=>Math.pow(e,t))),gm=Ie(si,e=>1/e),gg=Ie(sA,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),gy=hh.SELU_SCALEALPHA,gA=hh.SELU_SCALE,gx=Ie(sC,e=>e>=0?gA*e:gy*(Math.exp(e)-1)),gb=Ie(s$,e=>e<0?-1:e>0?1:0),gv=Ie(sE,e=>Math.sin(e)),gw=Ie(sR,e=>Math.sinh(e)),gS=Math.log(11920928955078125e-23)+2,gN=Ie(sM,e=>{let t=Math.exp(e);return e<gS?t:e>-gS?e:Math.log(1+t)}),gC=Ie(oa,(e,t)=>isNaN(e)?NaN:e>0?1:t.alpha),gE=Ie(sQ,e=>Math.tan(e)),gR=Ie(s1,e=>Math.tanh(e));function yR(e,t,u){switch(u){case"reflect":return function(e,t){let u=e;if(u<0){if(t<=1)u=0;else{let e=2*t;u<e&&(u=e*Math.trunc(-u/e)+u),u=u<-t?u+e:-u-1}}else if(u>t-1){if(t<=1)u=0;else{let e=2*t;(u-=e*Math.trunc(u/e))>=t&&(u=e-u-1)}}return oc.clamp(0,u,t-1)}(e,t);case"wrap":return function(e,t){let u=e;if(u<0){if(t<=1)u=0;else{let e=t-1;u+=t*(Math.trunc(-u/e)+1)}}else if(u>t-1){if(t<=1)u=0;else{let e=t-1;u-=t*Math.trunc(u/e)}}return oc.clamp(0,u,t-1)}(e,t);case"nearest":return oc.clamp(0,e,t-1);default:return e}}function ql(e,t,u,y,w,T,$,M,O,P,z){return 0<=M&&M<t&&0<=O&&O<u?e[$*y+M*w+O*T+P]:z}for(let e of[{kernelName:os,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{a:w,b:T,bias:$,preluActivationWeights:M}=t,{transposeA:O,transposeB:P,activation:z,leakyreluAlpha:L}=y,W,B,j,q=[];for(let e of(W=bI({inputs:{a:w,b:T},attrs:{transposeA:O,transposeB:P},backend:u}),$&&(B=fW({inputs:{a:W,b:$},backend:u}),q.push(W),W=B),z&&(j=fp(u,W,z,M,L),q.push(W),W=j),q))u.disposeIntermediateTensorInfo(e);return W}},{kernelName:nH,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,u=e.backend;Q(t,"abs");let y=new Float32Array(oc.sizeFromShape(t.shape));return y=BS(u.data.get(t.dataId).values),u.makeOutput(y,t.shape,t.dtype)}},{kernelName:nj,backendName:"cpu",kernelFunc:mz},{kernelName:nq,backendName:"cpu",kernelFunc:mL},{kernelName:nX,backendName:"cpu",kernelFunc:fW},{kernelName:nK,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u}=e;Q(t,"addN");let y=t.map(e=>u.data.get(e.dataId).values),w=me(t[0].shape,t[0].dtype),T=w.values;for(let e=0;e<t.length;e++){let t=y[e];for(let e=0;e<T.length;e++)T[e]+=t[e]}return u.makeTensorInfo(w.shape,w.dtype,w.values)}},{kernelName:nZ,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{axis:T,keepDims:$}=y;Q(w,"all");let M=oc.parseAxisParam(T,w.shape),O=M,P=hh.getAxesPermutation(O,w.shape.length),z=w;null!=P&&(z=St({inputs:{x:w},backend:u,attrs:{perm:P}}),O=hh.getInnerMostAxes(O.length,w.shape.length)),hh.assertAxesAreInnerMostDims("all",O,z.shape.length);let[L,W]=hh.computeOutAndReduceShapes(z.shape,O),B=oc.sizeFromShape(W),j=oc.makeZerosTypedArray(oc.sizeFromShape(L),z.dtype),q=u.data.get(z.dataId).values;for(let e=0;e<j.length;++e){let t=e*B,u=q[t];for(let e=0;e<B;++e){let y=q[t+e];u=u&&y}j[e]=u}null!=P&&u.disposeIntermediateTensorInfo(z);let Z=u.makeTensorInfo(L,z.dtype,j);if($){let e=We({inputs:{x:Z},backend:u,attrs:{shape:hh.expandShapeToKeepDim(L,M)}});return u.disposeIntermediateTensorInfo(Z),e}return Z}},{kernelName:nY,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{axis:T,keepDims:$}=y;Q(w,"any");let M=oc.parseAxisParam(T,w.shape),O=M,P=hh.getAxesPermutation(O,w.shape.length),z=w;null!=P&&(z=St({inputs:{x:w},backend:u,attrs:{perm:P}}),O=hh.getInnerMostAxes(O.length,w.shape.length)),hh.assertAxesAreInnerMostDims("any",O,z.shape.length);let[L,W]=hh.computeOutAndReduceShapes(z.shape,O),B=oc.sizeFromShape(W),j=oc.makeZerosTypedArray(oc.sizeFromShape(L),z.dtype),q=u.data.get(z.dataId).values;for(let e=0;e<j.length;++e){let t=e*B,u=q[t];for(let e=0;e<B;++e){let y=q[t+e];u=u||y}j[e]=u}null!=P&&u.disposeIntermediateTensorInfo(z);let Z=u.makeTensorInfo(L,z.dtype,j);if($){let e=We({inputs:{x:Z},backend:u,attrs:{shape:hh.expandShapeToKeepDim(L,M)}});return u.disposeIntermediateTensorInfo(Z),e}return Z}},{kernelName:nJ,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{axis:T}=y;Q(w,"argMax");let $=oc.parseAxisParam(T,w.shape),M=hh.getAxesPermutation($,w.shape.length),O=w,P=[];null!=M&&(P.push(O=St({inputs:{x:w},backend:u,attrs:{perm:M}})),$=hh.getInnerMostAxes($.length,O.shape.length)),$=[$[0]],hh.assertAxesAreInnerMostDims("argMax",$,O.shape.length);let[z,L]=hh.computeOutAndReduceShapes(O.shape,$),W=oc.sizeFromShape(z),B=oc.makeZerosTypedArray(W,"int32"),j=oc.sizeFromShape(L),q=u.data.get(O.dataId).values;for(let e=0;e<B.length;++e){let t=e*j,u=q[t],y=0;for(let e=0;e<j;++e){let w=q[t+e];w>u&&(u=w,y=e)}B[e]=y}return P.forEach(e=>u.disposeIntermediateTensorInfo(e)),u.makeTensorInfo(z,"int32",B)}},{kernelName:nQ,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{axis:T}=y;Q(w,"argMin");let $=oc.parseAxisParam(T,w.shape),M=hh.getAxesPermutation($,w.shape.length),O=w,P=[];null!=M&&(P.push(O=St({inputs:{x:w},backend:u,attrs:{perm:M}})),$=hh.getInnerMostAxes($.length,O.shape.length)),$=[$[0]],hh.assertAxesAreInnerMostDims("argMin",$,O.shape.length);let[z,L]=hh.computeOutAndReduceShapes(O.shape,$),W=oc.sizeFromShape(z),B=oc.makeZerosTypedArray(W,"int32"),j=oc.sizeFromShape(L),q=u.data.get(O.dataId).values;for(let e=0;e<B.length;++e){let t=e*j,u=q[t],y=0;for(let e=0;e<j;++e){let w=q[t+e];w<u&&(u=w,y=e)}B[e]=y}return P.forEach(e=>u.disposeIntermediateTensorInfo(e)),u.makeTensorInfo(z,"int32",B)}},{kernelName:n1,backendName:"cpu",kernelFunc:mW},{kernelName:n2,backendName:"cpu",kernelFunc:mB},{kernelName:n0,backendName:"cpu",kernelFunc:mV},{kernelName:n3,backendName:"cpu",kernelFunc:mU},{kernelName:n5,backendName:"cpu",kernelFunc:mG},{kernelName:n7,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t;Q(w,"avgPool");let{filterSize:T,strides:$,pad:M,dimRoundingMode:O}=y;oc.assert(hh.eitherStridesOrDilationsAreOne($,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${$} and dilations '1'`);let P=hh.computePool2DInfo(w.shape,T,$,1,M,O),z;if(1===P.filterWidth&&1===P.filterHeight&&oc.arraysEqual(P.inShape,P.outShape))z=lr({inputs:{x:w},backend:u});else{let e=u.data.get(w.dataId).values,t=oc.computeStrides(w.shape),y=vc(e,w.shape,w.dtype,t,P,"avg");z=u.makeTensorInfo(P.outShape,w.dtype,y.values)}return z}},{kernelName:n6,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{filterSize:T,strides:$,pad:M,dimRoundingMode:O,dataFormat:P}=y;Q(w,"avgPool3d");let z=hh.computePool3DInfo(w.shape,T,$,1,M,O,P),L=zf(u.data.get(w.dataId).values,w.shape,w.dtype,oc.computeStrides(w.shape),z,"avg");return u.makeTensorInfo(L.shape,"float32",L.values)}},{kernelName:n8,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{dy:w,input:T}=t,{filterSize:$,strides:M,pad:O,dimRoundingMode:P}=y;Q([w,T],"avgPool3DGrad");let z=hh.computePool3DInfo(T.shape,$,M,1,O,P),L=z.strideDepth,W=z.strideHeight,B=z.strideWidth,j=z.filterDepth,q=z.filterHeight,Z=z.filterWidth,Y=z.dilationDepth,J=z.dilationHeight,ee=z.dilationWidth,ea=z.effectiveFilterDepth,en=z.effectiveFilterHeight,er=z.effectiveFilterWidth,ei=ea-1-z.padInfo.front,es=er-1-z.padInfo.left,el=en-1-z.padInfo.top,eu=me(T.shape,"float32"),ed=1/(j*q*Z),ep=u.bufferSync(w);for(let e=0;e<z.batchSize;++e)for(let t=0;t<z.inChannels;++t)for(let u=0;u<z.inDepth;++u)for(let y=0;y<z.inHeight;++y)for(let w=0;w<z.inWidth;++w){let T=u-ei,$=y-el,M=w-es,O=0;for(let u=0;u<ea;u+=Y){let y=(T+u)/L;if(!(y<0||y>=z.outDepth||Math.floor(y)!==y))for(let u=0;u<en;u+=J){let w=($+u)/W;if(!(w<0||w>=z.outHeight||Math.floor(w)!==w))for(let u=0;u<er;u+=ee){let T=(M+u)/B;T<0||T>=z.outWidth||Math.floor(T)!==T||(O+=ep.get(e,y,w,T,t))}}}eu.set(O*ed,e,u,y,w,t)}return u.makeTensorInfo(eu.shape,eu.dtype,eu.values)}},{kernelName:n4,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{dy:w,input:T}=t;Q([w,T],"avgPoolGrad");let{filterSize:$,strides:M,pad:O}=y,P=hh.computePool2DInfo(T.shape,$,M,1,O),z=P.strideHeight,L=P.strideWidth,W=P.filterHeight,B=P.filterWidth,j=P.dilationHeight,q=P.dilationWidth,Z=P.effectiveFilterHeight,Y=P.effectiveFilterWidth,J=Y-1-P.padInfo.left,ee=Z-1-P.padInfo.top,ea=me(T.shape,"float32"),en=1/(W*B),er=u.data.get(w.dataId).values,ei=me(w.shape,"float32",er);for(let e=0;e<P.batchSize;++e)for(let t=0;t<P.inChannels;++t)for(let u=0;u<P.inHeight;++u)for(let y=0;y<P.inWidth;++y){let w=u-ee,T=y-J,$=0;for(let u=0;u<Z;u+=j){let y=(w+u)/z;if(!(y<0||y>=P.outHeight||Math.floor(y)!==y))for(let u=0;u<Y;u+=q){let w=(T+u)/L;w<0||w>=P.outWidth||Math.floor(w)!==w||($+=ei.get(e,y,w,t))}}ea.set($*en,e,u,y,t)}return u.makeTensorInfo(ea.shape,ea.dtype,ea.values)}},{kernelName:n9,backendName:"cpu",kernelFunc:bI},{kernelName:r1,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,scale:T,offset:$,mean:M,variance:O}=t;oc.assert(M.shape.length===O.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),oc.assert(null==$||M.shape.length===$.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),oc.assert(null==T||M.shape.length===T.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Q([w,M,O,T,$],"batchNorm");let{varianceEpsilon:P}=y;null==P&&(P=.001);let z=u.data.get(w.dataId).values,L=u.data.get(M.dataId).values,W=u.data.get(O.dataId).values,B=T?u.data.get(T.dataId).values:new Float32Array([1]),j=$?u.data.get($.dataId).values:new Float32Array([0]),q=new Float32Array(z.length),Z=j.length,Y=B.length,J=W.length,ee=L.length,ea=0,en=0,er=0,ei=0;for(let e=0;e<z.length;++e)q[e]=j[ea++]+(z[e]-L[en++])*B[er++]/Math.sqrt(W[ei++]+P),ea>=Z&&(ea=0),en>=ee&&(en=0),er>=Y&&(er=0),ei>=J&&(ei=0);return u.makeTensorInfo(w.shape,w.dtype,q)}},{kernelName:re,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{blockShape:T,crops:$}=y;Q([w],"batchToSpaceND");let M=T.reduce((e,t)=>e*t),O=hh.getReshaped(w.shape,T,M),P=hh.getPermuted(O.length,T.length),z=hh.getReshapedPermuted(w.shape,T,M),L=hh.getSliceBeginCoords($,T.length),W=hh.getSliceSize(z,$,T.length),B=We({inputs:{x:w},backend:u,attrs:{shape:O}}),j=St({inputs:{x:B},backend:u,attrs:{perm:P}}),q=We({inputs:{x:j},backend:u,attrs:{shape:z}}),Z=Ao({inputs:{x:q},backend:u,attrs:{begin:L,size:W}});return u.disposeIntermediateTensorInfo(B),u.disposeIntermediateTensorInfo(j),u.disposeIntermediateTensorInfo(q),Z}},{kernelName:ra,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,weights:T}=t,{size:$}=y,M=Cc(u.data.get(w.dataId).values,u.data.get(T.dataId).values,T.dtype,T.shape,$);return u.makeTensorInfo([$],T.dtype,M)}},{kernelName:rn,backendName:"cpu",kernelFunc:fV},{kernelName:ri,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u}=e,{s0:y,s1:w}=t,T=u.data.get(y.dataId).values,$=u.data.get(w.dataId).values,M=hh.assertAndGetBroadcastShape(Array.from(T),Array.from($));return u.makeTensorInfo([M.length],"int32",Int32Array.from(M))}},{kernelName:rs,backendName:"cpu",kernelFunc:Ro},{kernelName:ro,backendName:"cpu",kernelFunc:fG},{kernelName:ru,backendName:"cpu",kernelFunc:mH},{kernelName:rp,backendName:"cpu",kernelFunc:Ht},{kernelName:rc,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,u=e.backend,y=new Float32Array(oc.sizeFromShape(t.shape)),w=u.data.get(t.dataId),T=w.complexTensorInfos.real,$=w.complexTensorInfos.imag,M=u.data.get(T.dataId).values,O=u.data.get($.dataId).values;for(let e=0;e<M.length;e++){let t=M[e],u=O[e];y[e]=Math.hypot(t,u)}return u.makeOutput(y,t.shape,"float32")}},{kernelName:rh,backendName:"cpu",kernelFunc:hu},{kernelName:rf,backendName:"cpu",kernelFunc:CI},{kernelName:rm,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,dy:T}=t,{strides:$,pad:M,dataFormat:O,dimRoundingMode:P,filterShape:z}=y;Q([w,T],"conv2dBackpropFilter");let L=hh.convertConv2DDataFormat(O),W=hh.computeConv2DInfo(w.shape,z,$,1,M,P,!1,L),{strideHeight:B,strideWidth:j,filterHeight:q,filterWidth:Z}=W,Y="channelsLast"===W.dataFormat,J=new oI(W.filterShape,"float32"),ee=W.padInfo.left,ea=W.padInfo.top,en=u.data.get(w.dataId).values,er=u.data.get(T.dataId).values,ei=new oI(w.shape,w.dtype,en),es=new oI(T.shape,T.dtype,er);for(let e=0;e<q;++e){let t=Math.max(0,Math.ceil((ea-e)/B)),u=Math.min(W.outHeight,(W.inHeight+ea-e)/B);for(let y=0;y<Z;++y){let w=Math.max(0,Math.ceil((ee-y)/j)),T=Math.min(W.outWidth,(W.inWidth+ee-y)/j);for(let $=0;$<W.inChannels;++$)for(let M=0;M<W.outChannels;++M){let O=0;for(let P=0;P<W.batchSize;++P)for(let z=t;z<u;++z){let t=e+z*B-ea;for(let e=w;e<T;++e){let u=y+e*j-ee;Y?O+=ei.get(P,t,u,$)*es.get(P,z,e,M):O+=ei.get(P,$,t,u)*es.get(P,M,z,e)}}J.set(O,e,y,$,M)}}}return u.makeTensorInfo(J.shape,J.dtype,J.values)}},{kernelName:rg,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{dy:w,filter:T}=t,{inputShape:$,strides:M,pad:O,dataFormat:P,dimRoundingMode:z}=y;Q([w,T],"conv2dBackpropInput");let L=oc.computeStrides(T.shape),W=oc.computeStrides(w.shape),B=hh.convertConv2DDataFormat(P),j=hh.computeConv2DInfo($,T.shape,M,1,O,z,!1,B),q=new oI(j.inShape,"float32"),Z=q.values,Y=u.data.get(w.dataId).values,J=u.data.get(T.dataId).values,[ee,ea,en]=L,{batchSize:er,filterHeight:ei,filterWidth:es,inChannels:el,inHeight:eu,inWidth:ed,outChannels:ep,outHeight:ec,outWidth:eh,strideHeight:em,strideWidth:ey}=j;B=j.dataFormat;let eA=ei-1-j.padInfo.top,ex=es-1-j.padInfo.left,eb="channelsLast"===B,ek=q.strides[0],eI=eb?q.strides[1]:q.strides[2],eC=eb?q.strides[2]:1,eE=eb?1:q.strides[1],eR=W[0],e$=eb?W[1]:W[2],e_=eb?W[2]:1,eM=eb?1:W[1];for(let e=0;e<er;++e)for(let t=0;t<el;++t)for(let u=0;u<eu;++u){let y=u-eA,w=Math.max(0,Math.ceil(y/em)),T=Math.min(ec,(ei+y)/em);for(let $=0;$<ed;++$){let M=$-ex,O=Math.max(0,Math.ceil(M/ey)),P=Math.min(eh,(es+M)/ey),z=0;for(let u=w;u<T;++u){let w=u*em-y;for(let y=O;y<P;++y){let T=y*ey-M,$=eR*e+e$*u+e_*y,O=ee*(ei-1-w)+ea*(es-1-T)+en*t;for(let e=0;e<ep;++e)z+=Y[$+eM*e]*J[O+e]}}Z[ek*e+eI*u+eC*$+eE*t]=z}}return u.makeTensorInfo(q.shape,q.dtype,q.values)}},{kernelName:ry,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,filter:T}=t,{strides:$,pad:M,dilations:O}=y;Q([w,T],"conv3d");let P=hh.computeConv3DInfo(w.shape,T.shape,$,O,M),{filterDepth:z,filterHeight:L,filterWidth:W,dilationDepth:B,dilationHeight:j,dilationWidth:q,padInfo:Z}=P,Y=Z.front,J=Z.left,ee=Z.top,ea=new oI(P.outShape,w.dtype),en=u.data.get(w.dataId).values,er=u.data.get(T.dataId).values,ei=ea.values,es=oc.computeStrides(w.shape),el=oc.computeStrides(T.shape);for(let e=0;e<P.batchSize;++e){let t=e*es[0],u=e*ea.strides[0];for(let e=0;e<P.outDepth;++e){let y=u+e*ea.strides[1],w=e*P.strideDepth-Y;for(let e=0;e<z;++e){let u=w+e*B;if(u<0||u>=P.inDepth)continue;let T=e*el[0],$=t+u*es[1];for(let e=0;e<P.outHeight;++e){let t=y+e*ea.strides[2],u=e*P.strideHeight-ee;for(let e=0;e<L;++e){let y=u+e*j;if(y<0||y>=P.inHeight)continue;let w=T+e*el[1],M=$+y*es[2];for(let e=0;e<P.outWidth;++e){let u=t+e*P.outChannels,y=e*P.strideWidth-J;for(let e=0;e<W;++e){let t=y+e*q;if(t<0||t>=P.inWidth)continue;let T=w+e*el[2],$=M+t*P.inChannels,O=T;for(let e=0;e<P.inChannels;++e){let t=en[$+e];for(let e=0;e<P.outChannels;++e)ei[u+e]+=t*er[O+e];O+=P.outChannels}}}}}}}}return u.makeTensorInfo(ea.shape,ea.dtype,ea.values)}},{kernelName:rA,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,dy:T}=t,{strides:$,pad:M,filterShape:O}=y;Q([w,T],"conv3dBackpropFilterV2");let P=oc.computeStrides(w.shape),z=oc.computeStrides(T.shape),L=hh.computeConv3DInfo(w.shape,O,$,1,M),W=L.strideDepth,B=L.strideHeight,j=L.strideWidth,q=L.filterDepth,Z=L.filterHeight,Y=L.filterWidth,J=new oI(L.filterShape,"float32"),ee=J.values,[ea,en,er,ei]=J.strides,es=u.data.get(T.dataId).values,[el,eu,ed,ep]=z,ec=u.data.get(w.dataId).values,[eh,em,ey,eA]=P,ex=L.padInfo.front,eb=L.padInfo.left,ek=L.padInfo.top;for(let e=0;e<q;++e){let t=Math.max(0,Math.ceil((ex-e)/W)),u=Math.min(L.outDepth,(L.inDepth+ex-e)/W),y=e*ea;for(let w=0;w<Z;++w){let T=Math.max(0,Math.ceil((ek-w)/B)),$=Math.min(L.outHeight,(L.inHeight+ek-w)/B),M=w*en+y;for(let y=0;y<Y;++y){let O=Math.max(0,Math.ceil((eb-y)/j)),P=Math.min(L.outWidth,(L.inWidth+eb-y)/j),z=y*er+M;for(let M=0;M<L.inChannels;++M){let q=M*ei+z;for(let z=0;z<L.outChannels;++z){let Z=0;for(let q=0;q<L.batchSize;++q){let L=q*eh,Y=q*el;for(let q=t;q<u;++q){let t=(e+q*W-ex)*em+L,u=q*eu+Y;for(let e=T;e<$;++e){let T=(w+e*B-ek)*ey+t,$=e*ed+u;for(let e=O;e<P;++e){let t=(y+e*j-eb)*eA+T,u=e*ep+$;Z+=ec[t+M]*es[u+z]}}}}ee[q+z]=Z}}}}}return u.makeTensorInfo(J.shape,J.dtype,J.values)}},{kernelName:rx,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{dy:w,filter:T}=t,{pad:$,strides:M,inputShape:O}=y;Q([w],"conv3dBackpropInputV2");let P=oc.computeStrides(w.shape),z=oc.computeStrides(T.shape),L=hh.computeConv3DInfo(O,T.shape,M,1,$),W=new oI(L.inShape,"float32"),B=W.values,[j,q,Z,Y]=W.strides,J=u.data.get(w.dataId).values,[ee,ea,en,er]=P,ei=u.data.get(T.dataId).values,[es,el,eu,ed]=z,{batchSize:ep,filterDepth:ec,filterHeight:eh,filterWidth:em,inChannels:ey,inDepth:eA,inHeight:ex,inWidth:eb,outChannels:ek,outDepth:eI,outHeight:eC,outWidth:eE,strideDepth:eR,strideHeight:e$,strideWidth:e_}=L,eM=ec-1-L.padInfo.front,eF=eh-1-L.padInfo.top,eO=em-1-L.padInfo.left;for(let e=0;e<ep;++e)for(let t=0;t<ey;++t)for(let u=0;u<eA;++u){let y=u-eM,w=Math.max(0,Math.ceil(y/eR)),T=Math.min(eI,(ec+y)/eR);for(let $=0;$<ex;++$){let M=$-eF,O=Math.max(0,Math.ceil(M/e$)),P=Math.min(eC,(eh+M)/e$);for(let z=0;z<eb;++z){let L=z-eO,W=Math.max(0,Math.ceil(L/e_)),ep=Math.min(eE,(em+L)/e_),ey=0;for(let u=w;u<T;++u){let w=u*eR-y;for(let y=O;y<P;++y){let T=y*e$-M;for(let $=W;$<ep;++$){let M=$*e_-L,O=ee*e+ea*u+en*y+er*$,P=es*(ec-1-w)+el*(eh-1-T)+eu*(em-1-M)+ed*t;for(let e=0;e<ek;++e)ey+=J[O+e]*ei[P+e]}}}B[j*e+q*u+Z*$+Y*z+t]=ey}}}return u.makeTensorInfo(W.shape,W.dtype,W.values)}},{kernelName:rb,backendName:"cpu",kernelFunc:mj},{kernelName:rk,backendName:"cpu",kernelFunc:mq},{kernelName:rC,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{image:w,boxes:T,boxInd:$}=t,{cropSize:M,method:O,extrapolationValue:P}=y,[z,L,W,B]=w.shape,j=T.shape[0],[q,Z]=M,Y=me([j,q,Z,B],"float32"),J=u.data.get(T.dataId).values,ee=u.data.get($.dataId).values,ea=u.data.get(w.dataId).values,en=oc.computeStrides(w.shape),er=oc.computeStrides(Y.shape);for(let e=0;e<j;e++){let t=4*e,u=J[t],y=J[t+1],w=J[t+2],T=J[t+3],$=ee[e];if($>=z)continue;let M=q>1?(w-u)*(L-1)/(q-1):0,j=Z>1?(T-y)*(W-1)/(Z-1):0;for(let t=0;t<q;t++){let z=q>1?u*(L-1)+t*M:.5*(u+w)*(L-1);if(z<0||z>L-1){for(let u=0;u<Z;u++)for(let y=0;y<B;y++){let w=y+u*er[2]+t*er[1]+e*er[0];Y.values[w]=P}continue}if("bilinear"===O){let u=Math.floor(z),w=Math.ceil(z),M=z-u;for(let O=0;O<Z;O++){let z=Z>1?y*(W-1)+O*j:.5*(y+T)*(W-1);if(z<0||z>W-1){for(let u=0;u<B;u++){let y=u+O*er[2]+t*er[1]+e*er[0];Y.values[y]=P}continue}let L=Math.floor(z),q=Math.ceil(z),J=z-L;for(let y=0;y<B;y++){let T=y+L*en[2]+u*en[1]+$*en[0],P=ea[T],z=ea[T=y+q*en[2]+u*en[1]+$*en[0]],W=ea[T=y+L*en[2]+w*en[1]+$*en[0]],B=ea[T=y+q*en[2]+w*en[1]+$*en[0]],j=P+(z-P)*J,Z=W+(B-W)*J;T=y+O*er[2]+t*er[1]+e*er[0],Y.values[T]=j+(Z-j)*M}}}else for(let u=0;u<Z;++u){let w=Z>1?y*(W-1)+u*j:.5*(y+T)*(W-1);if(w<0||w>W-1){for(let y=0;y<B;y++){let w=y+u*er[2]+t*er[1]+e*er[0];Y.values[w]=P}continue}let M=Math.round(w),O=Math.round(z);for(let y=0;y<B;y++){let w=y+M*en[2]+O*en[1]+$*en[0],T=y+u*er[2]+t*er[1]+e*er[0];Y.values[T]=ea[w]}}}}return u.makeTensorInfo(Y.shape,Y.dtype,Y.values)}},{kernelName:rI,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{axis:T,exclusive:$,reverse:M}=y;Q(w,"cumprod");let O=hh.getAxesPermutation([T],w.shape.length),P=w;null!=O&&(P=St({inputs:{x:w},backend:u,attrs:{perm:O}}));let z=hh.getInnerMostAxes(1,w.shape.length)[0];if(z!==P.shape.length-1)throw Error(`backend.cumprod in CPU expects an inner-most axis=${P.shape.length-1} but got axis=${z}`);let L=dt(P.dtype,"int32"),W=oc.makeOnesTypedArray(oc.sizeFromShape(P.shape),L),B=u.data.get(P.dataId).values,j=P.shape[P.shape.length-1],q=M?(e,t)=>e+j-t-1:(e,t)=>e+t;for(let e=0;e<B.length;e+=j)for(let t=0;t<j;t++){let u=q(e,t);if(0===t)W[u]=$?1:B[u];else{let y=q(e,t-1);W[u]=$?B[y]*W[y]:B[u]*W[y]}}let Z=u.makeTensorInfo(P.shape,L,W);if(null!=O){let e=St({inputs:{x:Z},backend:u,attrs:{perm:hh.getUndoAxesPermutation(O)}});return u.disposeIntermediateTensorInfo(Z),u.disposeIntermediateTensorInfo(P),e}return Z}},{kernelName:rN,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{axis:T,exclusive:$,reverse:M}=y;Q(w,"cumsum");let O=hh.getAxesPermutation([T],w.shape.length),P=w;null!=O&&(P=St({inputs:{x:w},backend:u,attrs:{perm:O}}));let z=hh.getInnerMostAxes(1,w.shape.length)[0];if(z!==P.shape.length-1)throw Error(`backend.cumsum in CPU expects an inner-most axis=${P.shape.length-1} but got axis=${z}`);let L=dt(P.dtype,"int32"),W=oc.makeZerosTypedArray(oc.sizeFromShape(P.shape),L),B=u.data.get(P.dataId).values,j=P.shape[P.shape.length-1],q=M?(e,t)=>e+j-t-1:(e,t)=>e+t;for(let e=0;e<B.length;e+=j)for(let t=0;t<j;t++){let u=q(e,t);if(0===t)W[u]=$?0:B[u];else{let y=q(e,t-1);W[u]=$?B[y]+W[y]:B[u]+W[y]}}let Z=u.makeTensorInfo(P.shape,L,W);if(null!=O){let e=St({inputs:{x:Z},backend:u,attrs:{perm:hh.getUndoAxesPermutation(O)}});return u.disposeIntermediateTensorInfo(Z),u.disposeIntermediateTensorInfo(P),e}return Z}},{kernelName:rE,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,weights:T}=t,{size:$,binaryOutput:M}=y;if(1===w.shape.length){let e=Cc(u.data.get(w.dataId).values,u.data.get(T.dataId).values,T.dtype,T.shape,$);return u.makeTensorInfo([$],T.dtype,e)}if(2===w.shape.length){let e=Nf(u.bufferSync(w),u.bufferSync(T),$,M);return u.makeTensorInfo(e.shape,T.dtype,e.values)}throw Error(`Error in denseBincount: input must be at most rank 2, but got rank${w.shape.length}.`)}},{kernelName:rR,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{blockSize:T,dataFormat:$}=y;oc.assert("NHWC"===$,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${$}`);let M=w.shape[0],O=w.shape[1],P=w.shape[2],z=w.shape[3],L=O*T,W=P*T,B=z/(T*T),j=u.data.get(w.dataId).values,q=new Float32Array(M*L*W*B),Z=0;for(let e=0;e<M;++e)for(let t=0;t<L;++t){let u=Math.floor(t/T),y=t%T;for(let t=0;t<W;++t){let w=Math.floor(t/T),$=t%T,M=(y*T+$)*B;for(let t=0;t<B;++t){let y=t+M+z*(w+P*(u+O*e));q[Z++]=j[y]}}}return u.makeTensorInfo([M,L,W,B],w.dtype,q)}},{kernelName:r$,backendName:"cpu",kernelFunc:wI},{kernelName:r_,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,dy:T}=t,{strides:$,dilations:M,pad:O,dimRoundingMode:P,filterShape:z}=y;Q([w,T],"depthwiseConv2dNativeBackpropFilter");let L=hh.computeConv2DInfo(w.shape,z,$,M,O,P,!0),{strideHeight:W,strideWidth:B,filterHeight:j,filterWidth:q}=L,Z=new oI(L.filterShape,"float32"),Y=L.padInfo.left,J=L.padInfo.top,ee=L.outChannels/L.inChannels,ea=u.data.get(w.dataId).values,en=new oI(w.shape,w.dtype,ea),er=u.data.get(T.dataId).values,ei=new oI(T.shape,T.dtype,er);for(let e=0;e<j;++e){let t=Math.max(0,Math.ceil((J-e)/W)),u=Math.min(L.outHeight,(L.inHeight+J-e)/W);for(let y=0;y<q;++y){let w=Math.max(0,Math.ceil((Y-y)/B)),T=Math.min(L.outWidth,(L.inWidth+Y-y)/B);for(let $=0;$<L.outChannels;++$){let M=Math.trunc($/ee),O=$%ee,P=0;for(let O=0;O<L.batchSize;++O)for(let z=t;z<u;++z){let t=e+z*W-J;for(let e=w;e<T;++e){let u=y+e*B-Y;P+=en.get(O,t,u,M)*ei.get(O,z,e,$)}}Z.set(P,e,y,M,O)}}}return u.makeTensorInfo(Z.shape,Z.dtype,Z.values)}},{kernelName:rM,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{dy:w,filter:T}=t,{strides:$,dilations:M,pad:O,dimRoundingMode:P,inputShape:z}=y;Q([w,T],"depthwiseConv2DNativeBackpropInput");let L=oc.computeStrides(w.shape),W=oc.computeStrides(T.shape),B=hh.computeConv2DInfo(z,T.shape,$,M,O,P,!0),j=new oI(B.inShape,"float32"),q=j.values,[Z,Y,J]=j.strides,ee=u.data.get(w.dataId).values,[ea,en,er]=L,ei=u.data.get(T.dataId).values,[es,el,eu]=W,{batchSize:ed,filterHeight:ep,filterWidth:ec,inChannels:eh,inHeight:em,inWidth:ey,outChannels:eA,outHeight:ex,outWidth:eb,strideHeight:ek,strideWidth:eI}=B,eC=ep-1-B.padInfo.top,eE=ec-1-B.padInfo.left,eR=eA/eh;for(let e=0;e<ed;++e)for(let t=0;t<eh;++t)for(let u=0;u<em;++u){let y=u-eC,w=Math.max(0,Math.ceil(y/ek)),T=Math.min(ex,(ep+y)/ek);for(let $=0;$<ey;++$){let M=$-eE,O=Math.max(0,Math.ceil(M/eI)),P=Math.min(eb,(ec+M)/eI),z=0;for(let u=w;u<T;++u){let w=u*ek-y;for(let y=O;y<P;++y){let T=y*eI-M,$=ea*e+en*u+er*y,O=es*(ep-1-w)+el*(ec-1-T)+eu*t;for(let e=0;e<eR;++e)z+=ee[$+(t*eR+e)]*ei[O+e]}}q[Z*e+Y*u+J*$+t]=z}}return u.makeTensorInfo(j.shape,j.dtype,j.values)}},{kernelName:rF,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u}=e,{x:y}=t,w=oc.sizeFromShape(y.shape),T=u.data.get(y.dataId).values,$=me([w,w],y.dtype),M=$.values;for(let e=0;e<T.length;e++)M[e*w+e]=T[e];let O=[...y.shape,...y.shape];return u.makeTensorInfo(O,$.dtype,$.values)}},{kernelName:rO,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:u})=>{let{x:y,filter:w}=e,{strides:T,pad:$,dilations:M}=u,O=t.data.get(y.dataId).values,P=y.shape.length,z=t.data.get(w.dataId).values,L=w.shape.length,{batchSize:W,inHeight:B,inWidth:j,inChannels:q,outHeight:Z,outWidth:Y,padInfo:J,strideHeight:ee,strideWidth:ea,filterHeight:en,filterWidth:er,dilationHeight:ei,dilationWidth:es,outShape:el}=hh.computeDilation2DInfo(y.shape,w.shape,T,$,"NHWC",M),eu=oc.sizeFromShape(el),ed=el.length,ep=oc.getArrayFromDType(y.dtype,eu);for(let e=0;e<W;++e)for(let t=0;t<Z;++t){let u=t*ee-J.top;for(let T=0;T<Y;++T){let $=T*ea-J.left;for(let M=0;M<q;++M){let W=Number.MIN_SAFE_INTEGER;for(let t=0;t<en;++t){let T=u+t*ei;if(T>=0&&T<B)for(let u=0;u<er;++u){let B=$+u*es;if(B>=0&&B<j){let $=oc.locToIndex([e,T,B,M],P,oc.computeStrides(y.shape)),j=oc.locToIndex([t,u,M],L,oc.computeStrides(w.shape)),q=O[$]+z[j];q>W&&(W=q)}}}ep[oc.locToIndex([e,t,T,M],ed,oc.computeStrides(el))]=W}}}return{dataId:t.write(oc.toTypedArray(ep,y.dtype),el,y.dtype),shape:el,dtype:y.dtype}}},{kernelName:rD,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:u})=>{let{x:y,filter:w,dy:T}=e,{strides:$,pad:M,dilations:O}=u,P=oc.toNestedArray(y.shape,t.data.get(y.dataId).values),z=oc.toNestedArray(w.shape,t.data.get(w.dataId).values),{batchSize:L,inHeight:W,inWidth:B,inChannels:j,outHeight:q,outWidth:Z,padInfo:Y,strideHeight:J,strideWidth:ee,filterHeight:ea,filterWidth:en,dilationHeight:er,dilationWidth:ei,outShape:es}=hh.computeDilation2DInfo(y.shape,w.shape,$,M,"NHWC",O);oc.assert(T.rank===es.length,()=>`Error in ${rD}, dy must have the same rank as output ${es.length}, but got ${T.rank}`);let el=oc.toNestedArray(es,t.data.get(T.dataId).values),eu=oc.makeZerosNestedTypedArray(w.shape,w.dtype);for(let e=0;e<L;++e)for(let t=0;t<q;++t){let u=t*J-Y.top;for(let y=0;y<Z;++y){let w=y*ee-Y.left;for(let T=0;T<j;++T){let $=Number.MIN_SAFE_INTEGER,M=0,O=0;for(let t=0;t<ea;++t){let y=u+t*er;if(y>=0&&y<W)for(let u=0;u<en;++u){let L=w+u*ei;if(L>=0&&L<B){let w=P[e][y][L][T]+z[t][u][T];w>$&&($=w,M=t,O=u)}}}eu[M][O][T]+=el[e][t][y][T]}}}return{dataId:t.write(oc.toTypedArray(eu,y.dtype),w.shape,w.dtype),shape:w.shape,dtype:w.dtype}}},{kernelName:rP,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:u})=>{let{x:y,filter:w,dy:T}=e,{strides:$,pad:M,dilations:O}=u,P=oc.toNestedArray(y.shape,t.data.get(y.dataId).values),z=oc.toNestedArray(w.shape,t.data.get(w.dataId).values),{batchSize:L,inHeight:W,inWidth:B,inChannels:j,outHeight:q,outWidth:Z,padInfo:Y,strideHeight:J,strideWidth:ee,filterHeight:ea,filterWidth:en,dilationHeight:er,dilationWidth:ei,outShape:es}=hh.computeDilation2DInfo(y.shape,w.shape,$,M,"NHWC",O);oc.assert(T.rank===es.length,()=>`Error in ${rP}, dy must have the same rank as output ${es.length}, but got ${T.rank}`);let el=oc.toNestedArray(es,t.data.get(T.dataId).values),eu=oc.makeZerosNestedTypedArray(y.shape,y.dtype);for(let e=0;e<L;++e)for(let t=0;t<q;++t){let u=t*J-Y.top;for(let y=0;y<Z;++y){let w=y*ee-Y.left;for(let T=0;T<j;++T){let $=Number.MIN_SAFE_INTEGER,M=u<0?0:u,O=w<0?0:w;for(let t=0;t<ea;++t){let y=u+t*er;if(y>=0&&y<W)for(let u=0;u<en;++u){let L=w+u*ei;if(L>=0&&L<B){let w=P[e][y][L][T]+z[t][u][T];w>$&&($=w,M=y,O=L)}}}eu[e][M][O][T]+=el[e][t][y][T]}}}return{dataId:t.write(oc.toTypedArray(eu,y.dtype),y.shape,y.dtype),shape:y.shape,dtype:y.dtype}}},{kernelName:rL,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{image:w}=t,{canvas:T,options:$}=y,{contextOptions:M,imageOptions:O}=$||{},P=(null==O?void 0:O.alpha)||1,z=(null==M?void 0:M.contextType)||"2d";if("2d"!==z)throw Error(`Context type ${M.contextType} is not supported by the CPU backend.`);let L=T.getContext(z,(null==M?void 0:M.contextAttributes)||{});if(null==L)throw Error(`Could not get the context with ${z} type.`);let[W,B]=w.shape.slice(0,2),j=2===w.shape.length?1:w.shape[2],q=u.data.get(w.dataId).values,Z="float32"===w.dtype?255:1,Y=new Uint8ClampedArray(B*W*4);for(let e=0;e<W*B;++e){let t=[0,0,0,255*P];for(let u=0;u<j;u++){let y=q[e*j+u];if("float32"===w.dtype){if(y<0||y>1)throw Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${y}.`)}else if("int32"===w.dtype&&(y<0||y>255))throw Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${y}.`);1===j?(t[0]=y*Z,t[1]=y*Z,t[2]=y*Z):t[u]=y*Z}let u=4*e;Y[u+0]=Math.round(t[0]),Y[u+1]=Math.round(t[1]),Y[u+2]=Math.round(t[2]),Y[u+3]=Math.round(t[3])}T.width=B,T.height=W;let J=new ImageData(Y,B,W);return L.putImageData(J,0,0),w}},{kernelName:rB,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{equation:w}=y,{allDims:T,summedDims:$,idDims:M}=hh.decodeEinsumEquation(w,t.length);hh.checkEinsumDimSizes(T.length,M,t);let{path:O,steps:P}=hh.getEinsumComputePath($,M),z=P.length,L=null,W=T.length,B=[];for(let e=0;e<z;++e){for(let y of P[e]){let{permutationIndices:e,expandDims:w}=hh.getEinsumPermutation(W,M[y]),T;hh.isIdentityPermutation(e)?T=t[y]:(T=St({inputs:{x:t[y]},backend:u,attrs:{perm:e}}),B.push(T));let $=T.shape.slice();for(let e=0;e<w.length;++e)$.splice(w[e],0,1);oc.arraysEqual(T.shape,$)||(T=We({inputs:{x:T},backend:u,attrs:{shape:$}}),B.push(T)),null===L?L=T:(L=md({inputs:{a:T,b:L},backend:u}),B.push(L))}e<z-1&&(O[e]>=0&&(L=fi({inputs:{x:L},backend:u,attrs:{axis:O[e]-(T.length-W),keepDims:!1}}),B.push(L)),W--)}for(let e of B)e!==L&&u.disposeIntermediateTensorInfo(e);return L}},{kernelName:rV,backendName:"cpu",kernelFunc:mF},{kernelName:rU,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u}=e,{dy:y,y:w}=t;Q([y,w],"eluGrad");let T=new Float32Array(oc.sizeFromShape(w.shape)),$=u.data.get(w.dataId).values,M=u.data.get(y.dataId).values;for(let e=0;e<$.length;++e){let t=$[e];t>=0?T[e]=M[e]:T[e]=M[e]*(t+1)}return u.makeTensorInfo(w.shape,"float32",T)}},{kernelName:rH,backendName:"cpu",kernelFunc:fj},{kernelName:rG,backendName:"cpu",kernelFunc:m3},{kernelName:rj,backendName:"cpu",kernelFunc:fX},{kernelName:rq,backendName:"cpu",kernelFunc:kc},{kernelName:rX,backendName:"cpu",kernelFunc:fZ},{kernelName:rK,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u}=e,{input:y}=t,w=oc.sizeFromShape(y.shape),T=y.shape[y.shape.length-1],$=We({inputs:{x:y},backend:u,attrs:{shape:[w/T,T]}}),M=Vf($,!1,u),O=We({inputs:{x:M},backend:u,attrs:{shape:y.shape}});return u.disposeIntermediateTensorInfo($),u.disposeIntermediateTensorInfo(M),O}},{kernelName:rZ,backendName:"cpu",kernelFunc:Hl},{kernelName:rY,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:u})=>{let{image:y}=e,w=oc.getTypedArrayFromDType(y.dtype,oc.sizeFromShape(y.shape)),[T,$,M,O]=y.shape,P=u.data.get(y.dataId).values;for(let e=0;e<T;e++){let t=e*M*$*O;for(let e=0;e<$;e++){let u=e*(M*O);for(let e=0;e<M;e++){let y=e*O;for(let T=0;T<O;T++){let $=Math.round(M-e-1),z=t+u+y+T,L=P[z];$>=0&&$<M&&(L=P[t+u+$*O+T]),w[z]=L}}}}return{dataId:u.write(w,y.shape,y.dtype),shape:y.shape,dtype:y.dtype}}},{kernelName:rJ,backendName:"cpu",kernelFunc:fJ},{kernelName:rQ,backendName:"cpu",kernelFunc:f1},{kernelName:oo,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,filter:T,bias:$,preluActivationWeights:M}=t,{strides:O,pad:P,dataFormat:z,dilations:L,dimRoundingMode:W,activation:B,leakyreluAlpha:j}=y,q=CI({inputs:{x:w,filter:T},backend:u,attrs:{strides:O,pad:P,dataFormat:z,dilations:L,dimRoundingMode:W}});if($){let e=q;if("NCHW"===z&&1===$.shape.length&&1!==$.shape[0]){let e=We({inputs:{x:$},backend:u,attrs:{shape:[$.shape[0],1,1]}});q=fW({inputs:{a:q,b:e},backend:u}),u.disposeIntermediateTensorInfo(e)}else q=fW({inputs:{a:q,b:$},backend:u});u.disposeIntermediateTensorInfo(e)}if(B){let e=q;if("NCHW"===z&&"prelu"===B&&1===M.shape.length&&1!==M.shape[0]){let e=We({inputs:{x:M},backend:u,attrs:{shape:[M.shape[0],1,1]}});q=fp(u,q,B,e,j),u.disposeIntermediateTensorInfo(e)}else q=fp(u,q,B,M,j);u.disposeIntermediateTensorInfo(e)}return q}},{kernelName:ol,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,filter:T,bias:$,preluActivationWeights:M}=t,{strides:O,pad:P,dataFormat:z,dilations:L,dimRoundingMode:W,activation:B,leakyreluAlpha:j}=y,q=wI({inputs:{x:w,filter:T},backend:u,attrs:{strides:O,pad:P,dataFormat:z,dilations:L,dimRoundingMode:W}});if($){let e=q;q=fW({inputs:{a:q,b:$},backend:u}),u.disposeIntermediateTensorInfo(e)}if(B){let e=q;q=fp(u,q,B,M,j),u.disposeIntermediateTensorInfo(e)}return q}},{kernelName:r8,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u}=e,{params:y,indices:w}=t,T=oc.sizeFromShape(y.shape),$=w.shape,M=$[$.length-1],[O,P,z,L]=hh.prepareAndValidate(y,w);if(0===P)return u.makeTensorInfo(O,y.dtype,[]);let W=Tf(u.data.get(w.dataId).values,u.bufferSync(y),y.dtype,P,M,z,L,y.shape,T);return u.makeTensorInfo(O,y.dtype,W.values)}},{kernelName:r6,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,indices:T}=t,{axis:$,batchDims:M}=y;Q([w,T],"gatherV2");let O=oc.parseAxisParam($,w.shape)[0],P=u.data.get(T.dataId).values,z=w.shape[O];for(let e=0;e<P.length;++e){let t=P[e];oc.assert(t<=z-1&&t>=0,()=>`GatherV2: the index value ${t} is not in [0, ${z-1}]`)}let L=M;null==M&&(L=0);let W=oc.sizeFromShape(T.shape),B=hh.segment_util.collectGatherOpShapeInfo(w,T,O,L),j=We({inputs:{x:w},backend:u,attrs:{shape:[B.batchSize,B.outerSize,B.dimSize,B.sliceSize]}}),q=We({inputs:{x:T},backend:u,attrs:{shape:[B.batchSize,W/B.batchSize]}}),Z=[B.batchSize,B.outerSize,W/B.batchSize,B.sliceSize],Y=u.bufferSync(q),J=_f(u.bufferSync(j),Y,Z);return u.disposeIntermediateTensorInfo(j),u.disposeIntermediateTensorInfo(q),u.makeTensorInfo(B.outputShape,J.dtype,J.values)}},{kernelName:ie,backendName:"cpu",kernelFunc:f0},{kernelName:it,backendName:"cpu",kernelFunc:f7},{kernelName:ia,backendName:"cpu",kernelFunc:lr},{kernelName:ir,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u}=e,{input:y}=t,w=oc.sizeFromShape(y.shape),T=y.shape[y.shape.length-1],$=We({inputs:{x:y},backend:u,attrs:{shape:[w/T,T]}}),M=Vf($,!0,u),O=We({inputs:{x:M},backend:u,attrs:{shape:y.shape}});return u.disposeIntermediateTensorInfo($),u.disposeIntermediateTensorInfo(M),O}},{kernelName:is,backendName:"cpu",kernelFunc:Oa},{kernelName:iu,backendName:"cpu",kernelFunc:m6},{kernelName:ip,backendName:"cpu",kernelFunc:m8},{kernelName:ic,backendName:"cpu",kernelFunc:m9},{kernelName:im,backendName:"cpu",kernelFunc:hI},{kernelName:ig,backendName:"cpu",kernelFunc:f6},{kernelName:iy,backendName:"cpu",kernelFunc:f9},{kernelName:iA,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:u}=e,{start:y,stop:w,num:T}=u,$=Ef(y,w,T);return t.makeTensorInfo([$.length],"float32",$)}},{kernelName:ix,backendName:"cpu",kernelFunc:ma},{kernelName:ib,backendName:"cpu",kernelFunc:ge},{kernelName:iI,backendName:"cpu",kernelFunc:gt},{kernelName:iS,backendName:"cpu",kernelFunc:ga},{kernelName:iN,backendName:"cpu",kernelFunc:gn},{kernelName:iR,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{depthRadius:T,bias:$,alpha:M,beta:O}=y;Q(w,"LRN");let P=w.shape[3],z=P-1,L=u.data.get(w.dataId).values,W=oc.sizeFromShape(w.shape),B=new Float32Array(W);for(let e=0;e<W;e++){let t=function(e){let t=e%P,u=e-t+Math.max(0,t-T),y=e-t+Math.min(t+T,z),w=0;for(;u<=y;u++){let e=L[u];w+=e*e}return w}(e),u=L[e]*Math.pow($+M*t,-O);B[e]=u}return u.makeTensorInfo(w.shape,w.dtype,B)}},{kernelName:i$,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,y:T,dy:$}=t,{depthRadius:M,bias:O,alpha:P,beta:z}=y;Q($,"LRNGrad");let L=oc.sizeFromShape($.shape),W=$.shape[3],B=u.data.get($.dataId).values,j=u.data.get(w.dataId).values,q=u.data.get(T.dataId).values,Z=new Float32Array(L);for(let e=0;e<L;e++){let t=e%W,u=e-t+Math.max(0,t-M),y=e-t+Math.min(W,t+M+1),w=0;for(let e=u;e<y;e++)w+=Math.pow(j[e],2);w=P*w+O;for(let t=u;t<y;t++){let u=-2*P*z*j[t]*q[e]/w;e===t&&(u+=Math.pow(w,-z)),u*=B[e],Z[t]+=u}}return u.makeTensorInfo($.shape,w.dtype,Z)}},{kernelName:iM,backendName:"cpu",kernelFunc:II},{kernelName:iF,backendName:"cpu",kernelFunc:mr},{kernelName:iO,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t;Q(w,"maxPool");let{filterSize:T,strides:$,pad:M,dimRoundingMode:O}=y;oc.assert(hh.eitherStridesOrDilationsAreOne($,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${$} and dilations '1'`);let P=hh.computePool2DInfo(w.shape,T,$,1,M,O),z;if(1===P.filterWidth&&1===P.filterHeight&&oc.arraysEqual(P.inShape,P.outShape))z=lr({inputs:{x:w},backend:u});else{let e=u.data.get(w.dataId).values,t=oc.computeStrides(w.shape),y=vc(e,w.shape,w.dtype,t,P,"max");z=u.makeTensorInfo(P.outShape,w.dtype,y.values)}return z}},{kernelName:iD,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{filterSize:T,strides:$,pad:M,dimRoundingMode:O,dataFormat:P}=y;Q(w,"maxPool3d");let z=hh.computePool3DInfo(w.shape,T,$,1,M,O,P),L=zf(u.data.get(w.dataId).values,w.shape,w.dtype,oc.computeStrides(w.shape),z,"max");return u.makeTensorInfo(L.shape,"float32",L.values)}},{kernelName:iz,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{dy:w,input:T}=t,{filterSize:$,strides:M,pad:O,dimRoundingMode:P}=y;Q([w,T],"maxPool3DGrad");let z=hh.computePool3DInfo(T.shape,$,M,1,O,P),L=function(e,t){let u=me(t.outShape,"int32"),y=t.strideDepth,w=t.strideHeight,T=t.strideWidth,$=t.dilationDepth,M=t.dilationHeight,O=t.dilationWidth,P=t.effectiveFilterDepth,z=t.effectiveFilterHeight,L=t.effectiveFilterWidth,W=t.padInfo.front,B=t.padInfo.top,j=t.padInfo.left;for(let q=0;q<t.batchSize;++q)for(let Z=0;Z<t.inChannels;++Z)for(let Y=0;Y<t.outDepth;++Y){let J=Y*y-W,ee=J;for(;ee<0;)ee+=$;let ea=Math.min(t.inDepth,P+J);for(let y=0;y<t.outHeight;++y){let P=y*w-B,W=P;for(;W<0;)W+=M;let en=Math.min(t.inHeight,z+P);for(let w=0;w<t.outWidth;++w){let B=w*T-j,er=B;for(;er<0;)er+=O;let ei=Math.min(t.inWidth,L+B),es=Number.NEGATIVE_INFINITY,el=-1;for(let t=ee;t<ea;t+=$){let u=t-J;for(let y=W;y<en;y+=M){let w=y-P;for(let T=er;T<ei;T+=O){let $=T-B,M=e.get(q,t,y,T,Z);M>=es&&(es=M,el=u*z*L+w*z+$)}}}u.set(el,q,Y,y,w,Z)}}}return u}(u.bufferSync(T),z),W=z.strideDepth,B=z.strideHeight,j=z.strideWidth,q=z.dilationDepth,Z=z.dilationHeight,Y=z.dilationWidth,J=z.effectiveFilterDepth,ee=z.effectiveFilterHeight,ea=z.effectiveFilterWidth,en=J-1-z.padInfo.front,er=ea-1-z.padInfo.left,ei=ee-1-z.padInfo.top,es=me(T.shape,"float32"),el=u.bufferSync(w);for(let e=0;e<z.batchSize;++e)for(let t=0;t<z.inChannels;++t)for(let u=0;u<z.inDepth;++u)for(let y=0;y<z.inHeight;++y)for(let w=0;w<z.inWidth;++w){let T=u-en,$=y-ei,M=w-er,O=0;for(let u=0;u<J;u+=q){let y=(T+u)/W;if(!(y<0||y>=z.outDepth||Math.floor(y)!==y))for(let w=0;w<ee;w+=Z){let T=($+w)/B;if(!(T<0||T>=z.outHeight||Math.floor(T)!==T))for(let $=0;$<ea;$+=Y){let P=(M+$)/j;if(P<0||P>=z.outWidth||Math.floor(P)!==P)continue;let W=J*ee*ea-1-L.get(e,y,T,P,t)===u*ee*ea+w*ea+$?1:0;0!==W&&(O+=el.get(e,y,T,P,t)*W)}}}es.set(O,e,u,y,w,t)}return u.makeTensorInfo(es.shape,es.dtype,es.values)}},{kernelName:iP,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{dy:w,input:T,output:$}=t;Q([T,$],"maxPoolGrad");let{filterSize:M,strides:O,pad:P,dimRoundingMode:z}=y,L=hh.computePool2DInfo(T.shape,M,O,1,P,z),W=u.data.get(T.dataId).values,B=me(L.outShape,T.dtype,Bf(W,T.shape,T.dtype,L).values),j=L.strideHeight,q=L.strideWidth,Z=L.dilationHeight,Y=L.dilationWidth,J=L.effectiveFilterHeight,ee=L.effectiveFilterWidth,ea=ee-1-L.padInfo.left,en=J-1-L.padInfo.top,er=me(T.shape,"float32"),ei=u.data.get(w.dataId).values,es=me(w.shape,"float32",ei);for(let e=0;e<L.batchSize;++e)for(let t=0;t<L.inChannels;++t)for(let u=0;u<L.inHeight;++u)for(let y=0;y<L.inWidth;++y){let w=u-en,T=y-ea,$=0;for(let u=0;u<J;u+=Z){let y=(w+u)/j;if(!(y<0||y>=L.outHeight||Math.floor(y)!==y))for(let w=0;w<ee;w+=Y){let M=(T+w)/q;if(M<0||M>=L.outWidth||Math.floor(M)!==M)continue;let O=J*ee-1-B.get(e,y,M,t)===u*ee+w?1:0;0!==O&&($+=es.get(e,y,M,t)*O)}}er.set($,e,u,y,t)}return u.makeTensorInfo(er.shape,er.dtype,er.values)}},{kernelName:iL,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:u})=>{var y,w;let T,$,M,{x:O}=e,{filterSize:P,strides:z,pad:L,includeBatchInIndex:W}=t;Q(O,"MaxPoolWithArgmax");let B=u.data.get(O.dataId).values,j=hh.computePool2DInfo(O.shape,P,z,[1,1],L),[q,Z]=(y=O.shape,w=O.dtype,T=oc.computeStrides(y),$=vc(B,y,w,T,j,"max"),M=Bf(B,y,w,j,!0,W),[$.values,M.values]),Y=u.write(q,j.outShape,O.dtype),J=u.write(Z,j.outShape,O.dtype);return[{dataId:Y,shape:j.outShape,dtype:O.dtype},{dataId:J,shape:j.outShape,dtype:"int32"}]}},{kernelName:iW,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{axis:T,keepDims:$}=y,M=oc.parseAxisParam(T,w.shape),O=hh.computeOutAndReduceShapes(w.shape,M)[1],P=oc.sizeFromShape(O),z=[],L=u.makeTensorInfo([],"float32",new Float32Array([P]));z.push(L);let W=Ro({inputs:{x:w},backend:u,attrs:{dtype:"float32"}});z.push(W);let B=m7({inputs:{a:W,b:L},backend:u});z.push(B);let j=fi({inputs:{x:B},backend:u,attrs:{axis:T,keepDims:$}});return z.forEach(e=>u.disposeIntermediateTensorInfo(e)),j}},{kernelName:iB,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{axis:T,keepDims:$}=y;Q(w,"min");let M=oc.parseAxisParam(T,w.shape),O=M,P=hh.getAxesPermutation(O,w.shape.length),z=w;null!=P&&(z=St({inputs:{x:w},backend:u,attrs:{perm:P}}),O=hh.getInnerMostAxes(O.length,w.shape.length)),hh.assertAxesAreInnerMostDims("min",O,z.shape.length);let[L,W]=hh.computeOutAndReduceShapes(z.shape,O),B=oc.sizeFromShape(W),j=oc.makeZerosTypedArray(oc.sizeFromShape(L),z.dtype),q=u.data.get(z.dataId).values;for(let e=0;e<j.length;++e){let t=e*B,u=q[t];for(let e=0;e<B;++e){let y=q[t+e];(Number.isNaN(y)||y<u)&&(u=y)}j[e]=u}null!=P&&u.disposeIntermediateTensorInfo(z);let Z=u.makeTensorInfo(L,z.dtype,j);if($){let e=We({inputs:{x:Z},backend:u,attrs:{shape:hh.expandShapeToKeepDim(L,M)}});return u.disposeIntermediateTensorInfo(Z),e}return Z}},{kernelName:iV,backendName:"cpu",kernelFunc:ms},{kernelName:iU,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{paddings:T,mode:$}=y;Q(w,"mirrorPad");let M=T.map((e,t)=>e[0]+w.shape[t]+e[1]),O=T.map(e=>e[0]),P=T.map((e,t)=>e[0]+w.shape[t]),z="reflect"===$?0:1,L=u.data.get(w.dataId).values,W=w.shape.length,B=oc.computeStrides(w.shape),j=oc.sizeFromShape(M),q=M.length,Z=oc.computeStrides(M),Y=oc.getTypedArrayFromDType(w.dtype,j);for(let e=0;e<j;e++){let t=oc.indexToLoc(e,q,Z);for(let e=0;e<q;e++)t[e]<O[e]?t[e]=2*O[e]-t[e]-z:t[e]>=P[e]&&(t[e]=(P[e]-1)*2-t[e]+z);t=t.map((e,t)=>e-O[t]);let u=oc.locToIndex(t,W,B);Y[e]=L[u]}return{dataId:u.write(Y,M,w.dtype),shape:M,dtype:w.dtype}}},{kernelName:iG,backendName:"cpu",kernelFunc:gs},{kernelName:ij,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{logits:w}=t,{numSamples:T,seed:$,normalized:M}=y;Q(w,"multinomial");let O=M?w:vI({inputs:{logits:w},backend:u,attrs:{dim:-1}}),P=O.shape[0],z=O.shape[1],L=u.data.get(O.dataId).values,W=[P,T],B=oc.makeZerosTypedArray(oc.sizeFromShape(W),"int32");for(let e=0;e<P;++e){let t=e*z,u=new Float32Array(z-1);u[0]=L[t];for(let e=1;e<u.length;++e)u[e]=u[e-1]+L[t+e];let y=go.alea($.toString()),w=e*T;for(let e=0;e<T;++e){let t=y();B[w+e]=u.length;for(let y=0;y<u.length;y++)if(t<u[y]){B[w+e]=y;break}}}return M||u.disposeIntermediateTensorInfo(O),u.makeTensorInfo(W,"int32",B)}},{kernelName:iq,backendName:"cpu",kernelFunc:md},{kernelName:iX,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u}=e,{x:y}=t;Q(y,"neg");let[w,T]=nI(u.data.get(y.dataId).values,y.shape,y.dtype);return u.makeTensorInfo(T,y.dtype,w)}},{kernelName:iZ,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{boxes:w,scores:T}=t,{maxOutputSize:$,iouThreshold:M,scoreThreshold:O}=y;Q(w,"NonMaxSuppression");let{selectedIndices:P}=gu(u.data.get(w.dataId).values,u.data.get(T.dataId).values,$,M,O);return u.makeTensorInfo([P.length],"int32",new Int32Array(P))}},{kernelName:iY,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{boxes:w,scores:T}=t,{maxOutputSize:$,iouThreshold:M,scoreThreshold:O,padToMaxOutputSize:P}=y;Q(w,"NonMaxSuppressionPadded");let{selectedIndices:z,validOutputs:L}=gd(u.data.get(w.dataId).values,u.data.get(T.dataId).values,$,M,O,P);return[u.makeTensorInfo([z.length],"int32",new Int32Array(z)),u.makeTensorInfo([],"int32",new Int32Array([L]))]}},{kernelName:iJ,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{boxes:w,scores:T}=t,{maxOutputSize:$,iouThreshold:M,scoreThreshold:O,softNmsSigma:P}=y;Q(w,"NonMaxSuppressionWithScore");let{selectedIndices:z,selectedScores:L}=gp(u.data.get(w.dataId).values,u.data.get(T.dataId).values,$,M,O,P);return[u.makeTensorInfo([z.length],"int32",new Int32Array(z)),u.makeTensorInfo([L.length],"float32",new Float32Array(L))]}},{kernelName:iK,backendName:"cpu",kernelFunc:mh},{kernelName:i1,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{indices:w}=t,{dtype:T,depth:$,onValue:M,offValue:O}=y;Q(w,"oneHot");let P=oc.sizeFromShape(w.shape),z=new Float32Array(P*$);z.fill(O);let L=u.data.get(w.dataId).values;for(let e=0;e<P;++e)L[e]>=0&&L[e]<$&&(z[e*$+L[e]]=M);return u.makeTensorInfo([...w.shape,$],T,z)}},{kernelName:iQ,backendName:"cpu",kernelFunc:function _$(e){let{inputs:t,backend:u}=e,{x:y}=t;if("string"===y.dtype)throw Error("onesLike is not supported for string tensors");if("complex64"!==y.dtype)return Hl({backend:u,attrs:{shape:y.shape,value:1,dtype:y.dtype}});{let e=$o({inputs:{input:y},backend:u}),t=_$({inputs:{x:e},backend:u}),w=Oa({inputs:{input:y},backend:u}),T=Kl({inputs:{x:w},backend:u}),$=Ht({inputs:{real:t,imag:T},backend:u});return u.disposeIntermediateTensorInfo(e),u.disposeIntermediateTensorInfo(t),u.disposeIntermediateTensorInfo(w),u.disposeIntermediateTensorInfo(T),$}}},{kernelName:i2,backendName:"cpu",kernelFunc:kI},gc,{kernelName:i7,backendName:"cpu",kernelFunc:gh},{kernelName:i6,backendName:"cpu",kernelFunc:gI},{kernelName:i8,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{axis:T,keepDims:$}=y;Q(w,"prod");let M=w.shape.length,O=oc.parseAxisParam(T,w.shape),P=hh.getAxesPermutation(O,M),z=O,L=w,W=[];null!=P&&(W.push(L=St({inputs:{x:w},backend:u,attrs:{perm:P}})),z=hh.getInnerMostAxes(z.length,M));let B=u.data.get(L.dataId).values,{outVals:j,outShape:q,outDtype:Z}=aI(L.shape,L.dtype,B,z),Y=q;return $&&(Y=hh.expandShapeToKeepDim(q,O)),W.forEach(e=>u.disposeIntermediateTensorInfo(e)),u.makeTensorInfo(Y,Z,j)}},{kernelName:i9,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{paramsNestedSplits:w,paramsDenseValues:T,indices:$}=t,{outputRaggedRank:M}=y,O=w.map(e=>u.data.get(e.dataId).values),P=w.map(e=>e.shape),z=u.data.get(T.dataId).values,L=u.data.get($.dataId).values,[W,B,j]=Rf(O,P,z,T.shape,T.dtype,L,$.shape,M),q=W.map(e=>u.makeTensorInfo([e.length],"int32",e)),Z=u.makeTensorInfo(j,T.dtype,B);return q.concat([Z])}},{kernelName:se,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u}=e,{starts:y,limits:w,deltas:T}=t,$=u.data.get(y.dataId).values,M=u.data.get(w.dataId).values,O=u.data.get(T.dataId).values,[P,z]=Df($,y.shape,y.dtype,M,w.shape,O,T.shape);return[u.makeTensorInfo([P.length],"int32",P),u.makeTensorInfo([z.length],y.dtype,z)]}},{kernelName:st,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{shape:w,values:T,defaultValue:$,rowPartitionTensors:M}=t,{rowPartitionTypes:O}=y,P=u.data.get(w.dataId).values,z=u.data.get(T.dataId).values,L=u.data.get($.dataId).values,W=M.map(e=>u.data.get(e.dataId).values),B=M.map(e=>e.shape),[j,q]=Af(P,w.shape,z,T.shape,T.dtype,L,$.shape,W,B,O);return u.makeTensorInfo(j,T.dtype,q)}},{kernelName:sa,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:u}=e,{start:y,stop:w,dtype:T,step:$}=u,M=up(y,w,$,T);return t.makeTensorInfo([M.length],T,M)}},{kernelName:sn,backendName:"cpu",kernelFunc:$o},m4,{kernelName:si,backendName:"cpu",kernelFunc:gm},{kernelName:ss,backendName:"cpu",kernelFunc:mP},{kernelName:sg,backendName:"cpu",kernelFunc:mD},{kernelName:so,backendName:"cpu",kernelFunc:We},{kernelName:sc,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{images:w}=t,{alignCorners:T,halfPixelCenters:$,size:M}=y;Q(w,"resizeBilinear");let O=oc.computeStrides(w.shape),[P,z]=M,[L,W,B,j]=w.shape,q=u.data.get(w.dataId).values,Z=new Float32Array(oc.sizeFromShape([L,P,z,j])),Y=[T&&P>1?W-1:W,T&&z>1?B-1:B],J=[T&&P>1?P-1:P,T&&z>1?z-1:z],ee=0,ea=Y[0]/J[0],en=Y[1]/J[1];for(let e=0;e<L;e++)for(let t=0;t<P;t++){let u;let y=Math.max(0,Math.floor(u=$?ea*(t+.5)-.5:ea*t)),w=u-y,T=Math.min(W-1,Math.ceil(u)),M=e*O[0]+y*O[1],P=e*O[0]+T*O[1];for(let e=0;e<z;e++){let t;let u=Math.max(0,Math.floor(t=$?en*(e+.5)-.5:en*e)),y=t-u,T=Math.min(B-1,Math.ceil(t)),z=M+u*O[2],L=P+u*O[2],W=M+T*O[2],Y=P+T*O[2];for(let e=0;e<j;e++){let t=q[z+e],u=q[L+e],T=q[W+e],$=q[Y+e],M=t+(T-t)*y,O=M+(u+($-u)*y-M)*w;Z[ee++]=O}}}return u.makeTensorInfo([L,P,z,j],"float32",Z)}},{kernelName:sf,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{images:w,dy:T}=t,{alignCorners:$}=y;Q([T,w],"resizeBilinearGrad");let M=oc.computeStrides(w.shape),[O,P,z,L]=w.shape,[,W,B]=T.shape,j=new Float32Array(O*P*z*L),q=[$&&W>1?P-1:P,$&&B>1?z-1:z],Z=[$&&W>1?W-1:W,$&&B>1?B-1:B],Y=q[0]/Z[0],J=q[1]/Z[1],ee=u.data.get(T.dataId).values,ea=0;for(let e=0;e<O;e++){let t=e*M[0];for(let e=0;e<W;e++){let u=e*Y,y=Math.floor(u),w=Math.min(Math.ceil(u),P-1),T=t+y*M[1],$=t+w*M[1],O=u-y,W=1-O;for(let e=0;e<B;e++){let t=e*J,u=Math.floor(t),y=Math.min(Math.ceil(t),z-1),w=t-u,P=1-w,B=T+u*M[2],q=T+y*M[2],Z=$+u*M[2],Y=$+y*M[2],en=W*P,er=W*w,ei=O*P,es=O*w;for(let e=0;e<L;e++){let t=ee[ea++];j[B+e]+=t*en,j[q+e]+=t*er,j[Z+e]+=t*ei,j[Y+e]+=t*es}}}}return u.makeTensorInfo([O,z,P,L],"float32",j)}},{kernelName:su,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{images:w}=t,{alignCorners:T,halfPixelCenters:$,size:M}=y;Q(w,"resizeNearestNeighbor");let O=oc.computeStrides(w.shape),[P,z]=M,[L,W,B,j]=w.shape,q=u.data.get(w.dataId).values,Z=new Float32Array(L*P*z*j),Y=[T&&P>1?W-1:W,T&&z>1?B-1:B],J=[T&&P>1?P-1:P,T&&z>1?z-1:z],ee=Y[0]/J[0],ea=Y[1]/J[1],en=0;for(let e=0;e<L;e++){let t=e*O[0];for(let e=0;e<P;e++){let u=$?ee*(e+.5):ee*e,y=Math.min(W-1,T?Math.round(u):Math.floor(u));$&&(y=Math.max(0,y));let w=t+y*O[1];for(let e=0;e<z;e++){let t=$?ea*(e+.5):ea*e,u=Math.min(B-1,T?Math.round(t):Math.floor(t));$&&(u=Math.max(0,u));let y=w+u*O[2];for(let e=0;e<j;e++){let t=q[y+e];Z[en++]=t}}}}return u.makeTensorInfo([L,P,z,j],w.dtype,Z)}},{kernelName:sp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{images:w,dy:T}=t,{alignCorners:$}=y;Q([T,w],"resizeNearestNeighborGrad");let M=oc.computeStrides(w.shape),O=oc.computeStrides(T.shape),[P,z,L,W]=w.shape,[,B,j]=T.shape,q=new Float32Array(P*z*L*W),Z=u.data.get(T.dataId).values,Y=[$&&B>1?z-1:z,$&&j>1?L-1:L],J=[$&&B>1?B-1:B,$&&j>1?j-1:j],ee=Y[0]/J[0],ea=Y[1]/J[1],en=1/ee,er=1/ea,ei=2*Math.ceil(en)+2,es=2*Math.ceil(er)+2;for(let e=0;e<P;e++){let t=e*M[0];for(let e=0;e<z;e++){let u=t+e*M[1],y=Math.floor(Math.floor(e*en)-ei/2);for(let w=0;w<L;w++){let T=u+w*M[2],P=Math.floor(Math.floor(w*er)-es/2);for(let u=0;u<W;u++){let M=0;for(let T=0;T<ei;T++){let W=T+y;if(W<0||W>=B)continue;let q=t+W*O[1],Y=W*ee;if(e===Math.min(z-1,$?Math.round(Y):Math.floor(Y)))for(let e=0;e<es;e++){let t=e+P;if(t<0||t>=j)continue;let y=q+t*O[2],T=t*ea;w===Math.min(L-1,$?Math.round(T):Math.floor(T))&&(M+=Z[y+u])}}q[T+u]=M}}}}return u.makeTensorInfo(w.shape,w.dtype,q)}},{kernelName:sy,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{dims:T}=y;Q(w,"reverse");let $=w.shape.length,M=oc.parseAxisParam(T,w.shape);if(0===$)return lr({inputs:{x:w},backend:u});let O=new oI(w.shape,w.dtype),P=u.bufferSync(w);for(let e=0;e<O.size;e++){let t=O.indexToLoc(e),u=t.slice();M.forEach(e=>u[e]=w.shape[e]-1-u[e]),O.set(P.get(...u),...t)}return u.makeTensorInfo(O.shape,O.dtype,O.values)}},{kernelName:or,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:u})=>{let{image:y}=e,{radians:w,fillValue:T,center:$}=t,M=oc.getTypedArrayFromDType(y.dtype,oc.sizeFromShape(y.shape)),[O,P,z,L]=y.shape,[W,B]=hh.getImageCenter($,P,z),j=Math.sin(w),q=Math.cos(w),Z=u.data.get(y.dataId).values;for(let e=0;e<O;e++){let t=e*z*P*L;for(let e=0;e<P;e++){let u=e*(z*L);for(let y=0;y<z;y++){let w=y*L;for(let $=0;$<L;$++){let Y=[O,e,y,$],J=Y[2],ee=Y[1],ea=(J-W)*q-(ee-B)*j,en=(J-W)*j+(ee-B)*q;ea=Math.round(ea+W),en=Math.round(en+B);let er=T;"number"!=typeof T&&(er=3===$?255:T[$]),ea>=0&&ea<z&&en>=0&&en<P&&(er=Z[t+en*(z*L)+ea*L+$]),M[t+u+w+$]=er}}}}return{dataId:u.write(M,y.shape,y.dtype),shape:y.shape,dtype:y.dtype}}},{kernelName:sA,backendName:"cpu",kernelFunc:gg},{kernelName:sx,backendName:"cpu",kernelFunc:mb},{kernelName:sb,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{indices:w,updates:T}=t,{shape:$}=y,{sliceRank:M,numUpdates:O,sliceSize:P,strides:z,outputSize:L}=hh.calculateShapes(T,w,$),W=zs(u.bufferSync(w),u.bufferSync(T),$,L,P,O,M,z,0,!0);return u.makeTensorInfo($,W.dtype,W.values)}},{kernelName:sI,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{sortedSequence:w,values:T}=t,{side:$}=y,M=function(e,t,u,y,w,T){let $=oc.getArrayFromDType("int32",u*w);for(let M=0;M<u;++M){let u=e.slice(M*y,(M+1)*y),O=M*w;for(let e=0;e<w;++e)$[O+e]="left"===T?function(e,t){let u=0,y=e.length,w=0;for(;u<y;)e[w=Math.floor((u+y)/2)]<t?u=w+1:y=w;return y}(u,t[e+O]):function(e,t){let u=0,y=e.length,w=0;for(;u<y;)e[w=Math.floor((u+y)/2)]<=t?u=w+1:y=w;return y}(u,t[e+O])}return $}(u.data.get(w.dataId).values,u.data.get(T.dataId).values,w.shape[0],w.shape[1],T.shape[1],$);return u.makeTensorInfo(T.shape,"int32",M)}},{kernelName:sN,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u}=e,{condition:y,t:w,e:T}=t;Q([y,w,T],"select");let $=y.shape.length,M=u.data.get(y.dataId).values,O=u.data.get(w.dataId).values,P=u.data.get(T.dataId).values,z=dt(w.dtype,T.dtype),L=oc.makeZerosTypedArray(oc.sizeFromShape(w.shape),z),W=0,B=0===$||$>1||1===w.shape.length?1:oc.sizeFromShape(w.shape.slice(1));for(let e=0;e<M.length;e++)for(let t=0;t<B;t++)1===M[e]?L[W++]=O[e]:L[W++]=P[e];return u.makeTensorInfo(w.shape,z,L)}},{kernelName:sC,backendName:"cpu",kernelFunc:gx},{kernelName:s_,backendName:"cpu",kernelFunc:mk},{kernelName:s$,backendName:"cpu",kernelFunc:gb},{kernelName:sE,backendName:"cpu",kernelFunc:gv},{kernelName:sR,backendName:"cpu",kernelFunc:gw},{kernelName:sT,backendName:"cpu",kernelFunc:Ao},{kernelName:sL,backendName:"cpu",kernelFunc:vI},{kernelName:sM,backendName:"cpu",kernelFunc:gN},{kernelName:sP,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{blockShape:T,paddings:$}=y;Q([w],"spaceToBatchND");let M=oc.sizeFromShape(T),O=[[0,0]];O.push(...$);for(let e=1+T.length;e<w.shape.length;++e)O.push([0,0]);let P=gc.kernelFunc({inputs:{x:w},backend:u,attrs:{paddings:O,constantValue:0}}),z=hh.getReshaped(P.shape,T,M,!1),L=hh.getPermuted(z.length,T.length,!1),W=hh.getReshapedPermuted(P.shape,T,M,!1),B=We({inputs:{x:P},backend:u,attrs:{shape:z}}),j=St({inputs:{x:B},backend:u,attrs:{perm:L}}),q=We({inputs:{x:j},backend:u,attrs:{shape:W}});return u.disposeIntermediateTensorInfo(P),u.disposeIntermediateTensorInfo(B),u.disposeIntermediateTensorInfo(j),q}},{kernelName:sW,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u}=e,{indices:y,values:w,denseShape:T,defaultValue:$}=t;if(1!==T.shape.length)throw Error(`Dense shape must be a vector, saw:
        ${T.shape}`);if(2!==y.shape.length)throw Error(`Indices must be a matrix, saw:
        ${y.shape}`);if(1!==w.shape.length)throw Error(`Values must be a vector, saw:
        ${w.shape}`);if(0!==$.shape.length)throw Error(`Default value must be a scalar, saw:
        ${$.shape}`);let M=u.data.get(y.dataId).values,O=u.data.get(w.dataId).values,P=u.data.get(T.dataId).values,z=u.data.get($.dataId).values[0],[L,W,B,j,q]=Ff(M,y.shape,y.dtype,O,w.dtype,P,z);return[u.makeTensorInfo(W,y.dtype,L),u.makeTensorInfo([W[0]],w.dtype,B),u.makeTensorInfo([j.length],"bool",new Uint8Array(j.map(e=>Number(e)))),u.makeTensorInfo([q.length],y.dtype,new Int32Array(q))]}},{kernelName:sB,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u}=e,{inputIndices:y,inputShape:w,newShape:T}=t;if(2!==y.shape.length)throw Error(`Input indices should be a matrix but received shape
        ${y.shape}`);if(1!==w.shape.length)throw Error(`Input shape should be a vector but received shape
        ${w.shape}`);if(1!==T.shape.length)throw Error(`Target shape should be a vector but received shape ${T.shape}`);let $=Array.from(u.data.get(w.dataId).values),M=u.data.get(y.dataId).values,O=Array.from(u.data.get(T.dataId).values),[P,z,L]=Pf(M,y.shape,y.dtype,$,O);return[u.makeTensorInfo(z,y.dtype,P),u.makeTensorInfo([L.length],T.dtype,new Int32Array(L))]}},{kernelName:sV,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u}=e,{data:y,indices:w,segmentIds:T}=t;if(y.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==w.shape.length)throw Error(`Indices should be a vector but received shape
          ${w.shape}`);if(1!==T.shape.length)throw Error(`Segment ids should be a vector but received shape
          ${T.shape}`);if(w.shape[0]!==T.shape[0])throw Error("segmentIds and indices should have same size.");let $=u.data.get(y.dataId).values,M=u.data.get(w.dataId).values,O=u.data.get(T.dataId).values,[P,z]=Sc($,y.shape,y.dtype,M,O,!0);return u.makeTensorInfo(z,y.dtype,P)}},{kernelName:sU,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u}=e,{data:y,indices:w,segmentIds:T}=t;if(y.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==w.shape.length)throw Error(`Indices should be a vector but received shape
         ${w.shape}`);if(1!==T.shape.length)throw Error(`Segment ids should be a vector but received shape
         ${T.shape}`);if(w.shape[0]!==T.shape[0])throw Error("segmentIds and indices should have same size.");let $=u.data.get(y.dataId).values,M=u.data.get(w.dataId).values,O=u.data.get(T.dataId).values,[P,z]=Sc($,y.shape,y.dtype,M,O);return u.makeTensorInfo(z,y.dtype,P)}},{kernelName:sG,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{sparseIndices:w,sparseValues:T,defaultValue:$}=t,{outputShape:M}=y,{sliceRank:O,numUpdates:P,sliceSize:z,strides:L,outputSize:W}=hh.calculateShapes(T,w,M),B=u.bufferSync(w),j;switch(T.dtype){case"bool":j=zs(B,u.bufferSync(T),M,W,z,P,O,L,!!u.data.get($.dataId).values[0],!1);break;case"float32":case"int32":j=zs(B,u.bufferSync(T),M,W,z,P,O,L,u.data.get($.dataId).values[0],!1);break;case"string":j=zs(B,u.bufferSync(T),M,W,z,P,O,L,oc.decodeString(u.data.get($.dataId).values[0]),!1);break;default:throw Error(`Unsupported type ${T.dtype}`)}return u.makeTensorInfo(M,j.dtype,j.values)}},{kernelName:sD,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{numOrSizeSplits:T,axis:$}=y,M=oc.parseAxisParam($,w.shape)[0],O=hh.prepareSplitSize(w,T,M),P=Array(w.shape.length).fill(0),z=w.shape.slice();return O.map(e=>{let t=[...z];t[M]=e;let y=Ao({inputs:{x:w},backend:u,attrs:{begin:P,size:t}});return P[M]+=e,y})}},{kernelName:sF,backendName:"cpu",kernelFunc:mI},{kernelName:sj,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:u}=e;Q(u,"square");let y=t.data.get(u.dataId).values,w=new Float32Array(y.length);for(let e=0;e<y.length;++e){let t=y[e];w[e]=t*t}return{dataId:t.write(w,u.shape,u.dtype),shape:u.shape,dtype:u.dtype}}},{kernelName:sH,backendName:"cpu",kernelFunc:mN},{kernelName:sq,backendName:"cpu",kernelFunc:mE},{kernelName:oa,backendName:"cpu",kernelFunc:gC},{kernelName:sX,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{begin:T,end:$,strides:M,beginMask:O,endMask:P,ellipsisMask:z,newAxisMask:L,shrinkAxisMask:W}=y;Q(w,"stridedSlice");let{finalShapeSparse:B,finalShape:j,isIdentity:q,sliceDim0:Z,isSimpleSlice:Y,begin:J,end:ee,strides:ea}=hs.sliceInfo(w.shape,T,$,M,O,P,z,L,W),en;if(q)en=We({inputs:{x:w},backend:u,attrs:{shape:j}});else if(Z||Y){oc.assert(w.shape.length>=1,()=>`Input must have rank at least 1, got: ${w.shape.length}`);let e=hs.computeOutShape(J,ee,ea),t=Ao({inputs:{x:w},backend:u,attrs:{begin:J,size:e}});en=We({inputs:{x:t},backend:u,attrs:{shape:j}}),u.disposeIntermediateTensorInfo(t)}else{let e=Of(B,u.bufferSync(w),ea,J);en=u.makeTensorInfo(j,e.dtype,e.values)}return en}},{kernelName:sK,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{separator:w,nGramWidths:T,leftPad:$,rightPad:M,padWidth:O,preserveShortSequences:P}=y,{data:z,dataSplits:L}=t,[W,B]=cp(u.data.get(z.dataId).values,u.data.get(L.dataId).values,w,T,$,M,O,P);return[u.makeTensorInfo([W.length],"string",W),u.makeTensorInfo(L.shape,"int32",B)]}},{kernelName:sZ,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{skipEmpty:w}=y,{input:T,delimiter:$}=t;if("string"!==T.dtype)throw Error("Input must be of datatype string");if(1!==T.shape.length)throw Error(`Input must be a vector, got shape: ${T.shape}`);if(0!==$.shape.length)throw Error(`Delimiter must be a scalar, got shape: ${$.shape}`);let[M,O,P]=lp(u.data.get(T.dataId).values,u.data.get($.dataId).values[0],w),z=O.length;return[u.makeTensorInfo([z,2],"int32",M),u.makeTensorInfo([z],"string",O),u.makeTensorInfo([2],"int32",new Int32Array(P))]}},{kernelName:sY,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{numBuckets:w}=y,{input:T}=t;if("string"!==T.dtype)throw Error("Input must be of datatype string");if(w<=0)throw Error("Number of buckets must be at least 1");let $=mp(u.data.get(T.dataId).values,w);return u.makeTensorInfo(T.shape,"int32",$)}},{kernelName:sJ,backendName:"cpu",kernelFunc:m_},{kernelName:sO,backendName:"cpu",kernelFunc:fi},{kernelName:sQ,backendName:"cpu",kernelFunc:gE},{kernelName:s1,backendName:"cpu",kernelFunc:gR},{kernelName:sw,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u}=e,{tensor:y,indices:w,updates:T}=t,{sliceRank:$,numUpdates:M,sliceSize:O,strides:P,outputSize:z}=hh.calculateShapes(T,w,y.shape),L=u.bufferSync(w),W=u.bufferSync(T),B=u.bufferSync(y),j=zs(L,W,y.shape,z,O,M,$,P,B,!1);return u.makeTensorInfo(y.shape,j.dtype,j.values)}},{kernelName:s2,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{reps:T}=y;Q(w,"tile");let $=Mf(u.bufferSync(w),T);return u.makeTensorInfo($.shape,$.dtype,$.values)}},{kernelName:s3,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{k:T,sorted:$}=y;Q(w,"topk");let[M,O]=Lf(u.data.get(w.dataId).values,w.shape,w.dtype,T,$);return[u.makeTensorInfo(M.shape,M.dtype,M.values),u.makeTensorInfo(O.shape,O.dtype,O.values)]}},{kernelName:s7,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:u,backend:y}=e,{image:w,transforms:T}=t,{interpolation:$,fillMode:M,fillValue:O,outputShape:P}=u,[z,L,W,B]=w.shape,[j,q]=null!=P?P:[L,W],Z=[z,j,q,B],Y=oc.computeStrides(w.shape),J=Y[0],ee=Y[1],ea=Y[2],en=oc.computeStrides(Z),er=en[0],ei=en[1],es=en[2],el=oc.getTypedArrayFromDType(w.dtype,oc.sizeFromShape(Z));el.fill(O);let eu=y.data.get(w.dataId).values,ed=y.data.get(T.dataId).values;for(let e=0;e<z;++e){let t=1===T.shape[0]?ed:ed.subarray(8*e,8*e+8);for(let u=0;u<j;++u)for(let y=0;y<q;++y)for(let w=0;w<B;++w){let T,P=t[6]*y+t[7]*u+1;if(0===P)continue;let z=(t[0]*y+t[1]*u+t[2])/P,B=(t[3]*y+t[4]*u+t[5])/P,j=yR(z,W,M),q=yR(B,L,M);switch($){case"nearest":T=ql(eu,L,W,J,ee,ea,e,Math.round(q),Math.round(j),w,O);break;case"bilinear":T=function(e,t,u,y,w,T,$,M,O,P,z){let L=Math.floor(M),W=Math.floor(O),B=L+1,j=W+1,q=(j-O)*ql(e,t,u,y,w,T,$,L,W,P,z)+(O-W)*ql(e,t,u,y,w,T,$,L,j,P,z),Z=(j-O)*ql(e,t,u,y,w,T,$,B,W,P,z)+(O-W)*ql(e,t,u,y,w,T,$,B,j,P,z);return(B-M)*q+(M-L)*Z}(eu,L,W,J,ee,ea,e,q,j,w,O);break;default:throw Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${$}`)}el[e*er+u*ei+y*es+w]=T}return y.makeTensorInfo(Z,w.dtype,el)}return{dataId:y.write(el,Z,w.dtype),shape:w.shape,dtype:w.dtype}}},{kernelName:s4,backendName:"cpu",kernelFunc:St},{kernelName:s6,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:u,backend:y}=e,{axis:w}=u,{x:T}=t;Q(T,"unique");let{outputValues:$,outputShape:M,indices:O}=dp(y.data.get(T.dataId).values,w,T.shape,T.dtype);return[y.makeTensorInfo(M,T.dtype,$),y.makeTensorInfo([O.length],"int32",O)]}},{kernelName:s8,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{value:w}=t,{axis:T}=y;T<0&&(T+=w.shape.length);let $=w.shape.length,M=w.shape[T],O=Array($-1),P=0;for(let e=0;e<$;e++)e!==T&&(O[P++]=w.shape[e]);let z=Array($).fill(0),L=w.shape.slice();L[T]=1;let W=Array(M);for(let e=0;e<W.length;e++){z[T]=e;let t=Ao({inputs:{x:w},backend:u,attrs:{begin:z,size:L}});W[e]=We({inputs:{x:t},backend:u,attrs:{shape:O}}),u.disposeIntermediateTensorInfo(t)}return W}},{kernelName:s9,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,segmentIds:T}=t,{numSegments:$}=y;Q(w,"unsortedSegmentSum");let M=w.shape.length,O=T.shape.length,P=[],z=[],L=M-O,W=T;for(let e=0;e<L;++e){let t=kc({inputs:{input:W},backend:u,attrs:{dim:e+1}});W=t,z.push(t)}for(let e=0;e<$;++e){let t=oc.createScalarValue(e,"int32"),y=u.makeTensorInfo([],"int32",t),T=fj({inputs:{a:y,b:W},backend:u}),$=Ro({inputs:{x:T},backend:u,attrs:{dtype:"float32"}}),M=md({inputs:{a:$,b:w},backend:u}),O=fi({inputs:{x:M},backend:u,attrs:{axis:0,keepDims:!1}});P.push(O),z.push(y),z.push(T),z.push($),z.push(M),z.push(O)}let B=kI({inputs:P,backend:u,attrs:{axis:0}});return z.forEach(e=>u.disposeIntermediateTensorInfo(e)),B}},{kernelName:ot,backendName:"cpu",kernelFunc:Kl}])ti(e);var g$={};qe(g$,{assertNotComplex:()=>Vs,bindCanvasToFramebuffer:()=>cZ,bindColorTextureToFramebuffer:()=>Ql,bindTextureToProgramUniformSampler:()=>VI,bindTextureUnit:()=>NR,bindVertexBufferToProgramAttribute:()=>jf,callAndCheck:()=>ce,canBeRepresented:()=>EI,createFragmentShader:()=>RI,createFramebuffer:()=>LI,createProgram:()=>DI,createStaticIndexBuffer:()=>PI,createStaticVertexBuffer:()=>FI,createTexture:()=>OI,createVertexShader:()=>$I,getBatchDim:()=>gi,getExtensionOrThrow:()=>Nc,getFramebufferErrorMessage:()=>TR,getMaxTexturesInShader:()=>GI,getNumChannels:()=>uZ,getProgramUniformLocation:()=>zI,getProgramUniformLocationOrThrow:()=>BI,getRowsCols:()=>xi,getShapeAs3D:()=>_c,getTextureShapeFromLogicalShape:()=>WI,getWebGLDisjointQueryTimerVersion:()=>HI,getWebGLErrorMessage:()=>kR,getWebGLMaxTextureSize:()=>UI,hasExtension:()=>qr,isCapableOfRenderingToFloatTexture:()=>KI,isDownloadFloatTextureEnabled:()=>qI,isReshapeFree:()=>xu,isWebGLFenceEnabled:()=>jI,isWebGLVersionEnabled:()=>Yf,linkProgram:()=>AI,logShaderSourceAndInfoLog:()=>qf,resetMaxTextureSize:()=>lZ,resetMaxTexturesInShader:()=>mZ,unbindColorTextureFromFramebuffer:()=>Xf,unbindTextureUnit:()=>pZ,validateFramebuffer:()=>Tc,validateProgram:()=>Yl,validateTextureSize:()=>MI});var g_={},gM={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function NI(e,t){g_[e]=t}function Kr(e,t){if(!(e in g_)||null!=t){let u=function(e,t){if(1!==e&&2!==e)throw Error("Cannot get WebGL rendering context, WebGL is disabled.");let u=null==t?function(e){if(!nG.getBool("IS_SAFARI")&&"undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw Error("Cannot create a canvas in this context")}(e):t;return u.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete g_[e]},!1),nG.getBool("SOFTWARE_WEBGL_ENABLED")&&(gM.failIfMajorPerformanceCaveat=!1),1===e?u.getContext("webgl",gM)||u.getContext("experimental-webgl",gM):u.getContext("webgl2",gM)}(e,t);if(null===u)return console.log("Could not get context for WebGL version",e),null;g_[e]=u}let u=g_[e];return null==u||u.isContextLost()?(delete g_[e],Kr(e)):(u.disable(u.DEPTH_TEST),u.disable(u.STENCIL_TEST),u.disable(u.BLEND),u.disable(u.DITHER),u.disable(u.POLYGON_OFFSET_FILL),u.disable(u.SAMPLE_COVERAGE),u.enable(u.SCISSOR_TEST),u.enable(u.CULL_FACE),u.cullFace(u.BACK),g_[e])}function jl(e){let t=Math.ceil(oc.sizeFromShape(e)/4);return oc.sizeToSquarishShape(t)}function Ma(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function Xl(e,t){let u,y,w,T,$,M,O,P,z,L;return 2===nG.getNumber("WEBGL_VERSION")?(u=e.R32F,y=e.R16F,w=e.RGBA16F,T=e.RGBA32F,$=e.RED,O=4,P=1,z=e.HALF_FLOAT,L=e.FLOAT,M=e.RGBA8):(u=e.RGBA,y=e.RGBA,w=e.RGBA,T=e.RGBA,$=e.RGBA,O=4,P=4,z=null!=t?t.HALF_FLOAT_OES:null,L=e.FLOAT,M=e.RGBA),{internalFormatFloat:u,internalFormatHalfFloat:y,internalFormatPackedHalfFloat:w,internalFormatPackedFloat:T,textureFormatFloat:$,downloadTextureFormat:M,downloadUnpackNumChannels:O,defaultNumChannels:P,textureTypeHalfFloat:z,textureTypeFloat:L}}function ce(e,t){let u=t();return nG.getBool("DEBUG")&&function(e){let t=e.getError();if(t!==e.NO_ERROR)throw Error("WebGL Error: "+kR(e,t))}(e),u}function EI(e){return!!(nG.getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||596e-10<Math.abs(e)&&65504>Math.abs(e))}function kR(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Nc(e,t){return hi(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function $I(e,t){let u=hi(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ce(e,()=>e.shaderSource(u,t)),ce(e,()=>e.compileShader(u)),!1===e.getShaderParameter(u,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(u)),Error("Failed to compile vertex shader.");return u}function RI(e,t){let u=hi(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ce(e,()=>e.shaderSource(u,t)),ce(e,()=>e.compileShader(u)),nG.get("ENGINE_COMPILE_ONLY"))return u;if(!1===e.getShaderParameter(u,e.COMPILE_STATUS))throw qf(t,e.getShaderInfoLog(u)),Error("Failed to compile fragment shader.");return u}(B=eE||(eE={}))[B.DENSE=0]="DENSE",B[B.SHARED_BATCH=1]="SHARED_BATCH",(j=eR||(eR={}))[j.RENDER=0]="RENDER",j[j.UPLOAD=1]="UPLOAD",j[j.PIXELS=2]="PIXELS",j[j.DOWNLOAD=3]="DOWNLOAD",(q=e$||(e$={}))[q.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",q[q.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",q[q.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",q[q.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",q[q.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16";var gF=/ERROR: [0-9]+:([0-9]+):/g;function qf(e,t){let u=gF.exec(t);if(null==u){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let y=+u[1],w=e.split(`
`),T=w.length.toString().length+2,$=w.map((e,t)=>oc.rightPad((t+1).toString(),T)+e),M=0;for(let e=0;e<$.length;e++)M=Math.max($[e].length,M);let O=$.slice(0,y-1),P=$.slice(y-1,y),z=$.slice(y);console.log(O.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${oc.rightPad(P[0],M)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(z.join(`
`))}function DI(e){return hi(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function AI(e,t){if(ce(e,()=>e.linkProgram(t)),!nG.get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),Error("Failed to link vertex and fragment shaders.")}function Yl(e,t){if(ce(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),Error("Shader program validation failed.")}function FI(e,t){let u=hi(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return ce(e,()=>e.bindBuffer(e.ARRAY_BUFFER,u)),ce(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),u}function PI(e,t){let u=hi(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return ce(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,u)),ce(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),u}function uZ(){return 2===nG.getNumber("WEBGL_VERSION")?1:4}function OI(e){return hi(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function MI(e,t){let u=nG.getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>u||t>u)throw Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${u}x${u}].`)}function LI(e){return hi(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function jf(e,t,u,y,w,T,$){let M=e.getAttribLocation(t,u);return -1!==M&&(ce(e,()=>e.bindBuffer(e.ARRAY_BUFFER,y)),ce(e,()=>e.vertexAttribPointer(M,w,e.FLOAT,!1,T,$)),ce(e,()=>e.enableVertexAttribArray(M)),!0)}function NR(e,t,u){_R(e,u),ce(e,()=>e.activeTexture(e.TEXTURE0+u)),ce(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function pZ(e,t){_R(e,t),ce(e,()=>e.activeTexture(e.TEXTURE0+t)),ce(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function BI(e,t,u){return hi(e,()=>e.getUniformLocation(t,u),'uniform "'+u+'" not present in program.')}function zI(e,t,u){return e.getUniformLocation(t,u)}function VI(e,t,u,y){ce(e,()=>NR(e,t,y)),ce(e,()=>e.uniform1i(u,y))}function cZ(e){ce(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ce(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),ce(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function Ql(e,t,u){ce(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,u)),ce(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function Xf(e,t){ce(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),ce(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Tc(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw Error("Error binding framebuffer: "+TR(e,t))}function TR(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function hi(e,t,u){let y=ce(e,()=>t());if(null==y)throw Error(u);return y}function _R(e,t){let u=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,y=t+e.TEXTURE0;if(y<e.TEXTURE0||y>u){let e=`[gl.TEXTURE0, gl.TEXTURE${u}]`;throw Error(`textureUnit must be in ${e}.`)}}function gi(e,t=2){return oc.sizeFromShape(e.slice(0,e.length-t))}function xi(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function _c(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[gi(e),...xi(e)]),t}function WI(e,t=!1){let u=nG.getNumber("WEBGL_MAX_TEXTURE_SIZE"),y=nG.getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");y===1/0&&nG.getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(y=u/2),t&&(u*=2,y*=2,1===(e=e.map((t,u)=>u>=e.length-2?oc.nearestLargerEven(e[u]):e[u])).length&&(e=[2,e[0]])),2!==e.length&&(e=oc.squeezeShape(e).newShape);let w=oc.sizeFromShape(e),T=null;e.length<=1&&w<=u?T=[1,w]:2===e.length&&e[0]<=u&&e[1]<=u?T=e:3===e.length&&e[0]*e[1]<=u&&e[2]<=u?T=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=u&&e[1]*e[2]<=u?T=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=u&&e[3]<=u?T=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=u&&e[1]*e[2]*e[3]<=u&&(T=[e[0],e[1]*e[2]*e[3]]);let $=null!=T&&Math.max(...T)>y&&Math.min(...T)<=(t?2:1)&&Math.min(...T)>0;if(null==T||$){if(t){let t=gi(e),u=2,y=2;e.length&&([u,y]=xi(e)),w=t*(u/2)*(y/2),T=oc.sizeToSquarishShape(w).map(e=>2*e)}else T=oc.sizeToSquarishShape(w)}return T}function xu(e,t){if(e=e.slice(-2),t=t.slice(-2),oc.arraysEqual(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let u=e[e.length-1],y=t[t.length-1];if(u===y||u%2==0&&y%2==0&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&e[0]%2==0&&t[0]%2==0}function UI(e){if(null==e_){let t=Kr(e);e_=t.getParameter(t.MAX_TEXTURE_SIZE)}return e_}function lZ(){e_=null}function mZ(){eM=null}function GI(e){if(null==eM){let t=Kr(e);eM=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,eM)}function HI(e){if(0===e)return 0;let t=Kr(e);return qr(t,"EXT_disjoint_timer_query_webgl2")&&2===e?2:qr(t,"EXT_disjoint_timer_query")?1:0}function qr(e,t){return null!=e.getExtension(t)}function Yf(e){try{if(null!=Kr(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function KI(e){if(0===e)return!1;let t=Kr(e);if(1===e){if(!qr(t,"OES_texture_float"))return!1}else if(!qr(t,"EXT_color_buffer_float"))return!1;return _I(t)}function qI(e){if(0===e)return!1;let t=Kr(e);if(1===e){if(!qr(t,"OES_texture_float")||!qr(t,"WEBGL_color_buffer_float"))return!1}else{if(qr(t,"EXT_color_buffer_float"))return _I(t);let e="EXT_color_buffer_half_float";if(qr(t,e)){let u,y,w,T,$=t.getExtension(e);return u=Xl(t,$),y=t.createTexture(),t.bindTexture(t.TEXTURE_2D,y),t.texImage2D(t.TEXTURE_2D,0,u.internalFormatHalfFloat,1,1,0,u.textureFormatFloat,u.textureTypeHalfFloat,null),w=t.createFramebuffer(),t.bindFramebuffer(t.FRAMEBUFFER,w),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,y,0),T=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE,t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(y),t.deleteFramebuffer(w),T}return!1}return _I(t)}function _I(e){let t=Xl(e),u=e.createTexture();e.bindTexture(e.TEXTURE_2D,u),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let y=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,y),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,u,0);let w=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(u),e.deleteFramebuffer(y),w}function jI(e){return 2===e&&null!=Kr(e).fenceSync}function Vs(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&oc.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var gO=nG;function It(){let e,t,u,y,w,T,$,M,O,P;return 2===nG.getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",u="out",y="in",w="texture",T="outputColor",$="out vec4 outputColor;",M=nG.getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",O="",P=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",u="varying",y="varying",w="texture2D",T="gl_FragColor",$="",M=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,O=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,P=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:u,varyingFs:y,texture2D:w,output:T,defineOutput:$,defineSpecialNaN:M,defineSpecialInf:O,defineRound:P}}function Ws(e,t,u="index"){let y=oc.computeStrides(t);return y.map((t,w)=>{let T=`int ${e[w]} = ${u} / ${t}`,$=w===y.length-1?`int ${e[w+1]} = ${u} - ${e[w]} * ${t}`:`index -= ${e[w]} * ${t}`;return`${T}; ${$};`}).join("")}function xp(e,t,u="index"){let y=oc.computeStrides(t);return y.map((t,w)=>{let T=`int ${e[w]} = ${u} / outShapeStrides[${w}]`,$=w===y.length-1?`int ${e[w+1]} = ${u} - ${e[w]} * outShapeStrides[${w}]`:`index -= ${e[w]} * outShapeStrides[${w}]`;return`${T}; ${$};`}).join("")}function $c(e){let t=oc.computeStrides(e).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Rc(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}gO.registerFlag("HAS_WEBGL",()=>gO.getNumber("WEBGL_VERSION")>0),gO.registerFlag("WEBGL_VERSION",()=>Yf(2)?2:Yf(1)?1:0),gO.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),gO.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===gO.get("WEBGL_VERSION")),gO.registerFlag("WEBGL_CPU_FORWARD",()=>!0),gO.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),gO.registerFlag("WEBGL_PACK",()=>gO.getBool("HAS_WEBGL")),gO.registerFlag("WEBGL_PACK_NORMALIZATION",()=>gO.getBool("WEBGL_PACK")),gO.registerFlag("WEBGL_PACK_CLIP",()=>gO.getBool("WEBGL_PACK")),gO.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>gO.getBool("WEBGL_PACK")),gO.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>gO.getBool("WEBGL_PACK")),gO.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>gO.getBool("WEBGL_PACK")),gO.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>gO.getBool("WEBGL_PACK")),gO.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>gO.getBool("WEBGL_PACK")),gO.registerFlag("WEBGL_PACK_REDUCE",()=>gO.getBool("WEBGL_PACK")),gO.registerFlag("WEBGL_LAZILY_UNPACK",()=>gO.getBool("WEBGL_PACK")),gO.registerFlag("WEBGL_CONV_IM2COL",()=>gO.getBool("WEBGL_PACK")),gO.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>gO.getBool("WEBGL_PACK")),gO.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>UI(gO.getNumber("WEBGL_VERSION"))),gO.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>GI(gO.getNumber("WEBGL_VERSION"))),gO.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=gO.getNumber("WEBGL_VERSION");return 0===e?0:HI(e)}),gO.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>gO.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!oO.isMobile()),gO.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>KI(gO.getNumber("WEBGL_VERSION"))),gO.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!gO.getBool("WEBGL_FORCE_F16_TEXTURES")&&gO.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),gO.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>qI(gO.getNumber("WEBGL_VERSION"))),gO.registerFlag("WEBGL_FENCE_API_ENABLED",()=>jI(gO.getNumber("WEBGL_VERSION"))),gO.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>gO.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),gO.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if("number"!=typeof e)throw Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),gO.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>oO.isMobile()?1:-1,e=>{if("number"!=typeof e)throw Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}),gO.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),gO.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),gO.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),gO.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),gO.registerFlag("WEBGL_EXP_CONV",()=>!1),gO.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>gO.getBool("IS_TEST")),gO.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),gO.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),gO.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),gO.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);var gP=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:gD}=hh,gz=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,gL=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,gW=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,gB=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function AR(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function yp(e){return`offset${e}`}function Fc(e){let t=e.name,u=oc.sizeFromShape(e.shapeInfo.logicalShape);return u<2?`return ${t};`:`
    for (int i = 0; i < ${u}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function Re(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Zf(e,t,u){let{newShape:y,keptDims:w}=oc.squeezeShape(t),T=t.length,$=e&&3===T&&1===t[0],M=$?t.slice(1):y,O=!e&&T>1&&!oc.arraysEqual(t,u)&&y.length<T||$;return{useSqueezeShape:O,uniformShape:O?M:t,keptDims:w}}function Pc(e,t){let u=JSON.parse(JSON.stringify(e));return u.shapeInfo.logicalShape=t,u}function Oc(e,t){return t.map(t=>e[t]).join(", ")}function XI(e,t,u){let y=[],w=[],T,$,M,O=null,P=null;for(let w of(P=e.getUniformLocation(u,"NAN",!1),1===nG.getNumber("WEBGL_VERSION")&&(O=e.getUniformLocation(u,"INFINITY",!1)),t.variableNames)){let T={name:w,uniform:e.getUniformLocation(u,w,!1),offset:e.getUniformLocation(u,`offset${w}`,!1)};t.enableShapeUniforms&&(T.shape=e.getUniformLocation(u,`${w}Shape`,!1),T.texShape=e.getUniformLocation(u,`${w}TexShape`,!1)),y.push(T)}if(t.enableShapeUniforms&&(T=e.getUniformLocation(u,"outShape",!1),M=e.getUniformLocation(u,"outShapeStrides",!1),$=e.getUniformLocation(u,"outTexShape",!1)),t.customUniforms)for(let y of t.customUniforms)w.push(e.getUniformLocation(u,y.name,!1));return{variablesLocations:y,customUniformLocations:w,infLoc:O,nanLoc:P,outShapeLocation:T,outShapeStridesLocation:M,outTexShapeLocation:$}}function FR(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,u)=>{let y=e.logicalShape,w=t[u],T=w.shape;if(!oc.arraysEqual(y,T))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${y} and ${T} must match`);if(e.isUniform&&w.isUniform)return;let $=e.texShape,M=w.isUniform?null:w.texData.texShape;if(!oc.arraysEqual($,M))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${$} and ${M} must match`)})}function ut(e){return nG.getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var gV=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=eE.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=It();this.outputShape=e,this.enableShapeUniforms=ut(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?xp(["r","c","d"],e):Ws(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},gU=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=eE.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=It();this.outputShape=e,this.enableShapeUniforms=ut(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?xp(["r","c","d"],e):Ws(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},gG=class{constructor(e){this.variableNames=["A"],this.outTexUsage=eR.DOWNLOAD;let t=It();this.outputShape=e,this.userCode=`
      ${gP}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},gH=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=eR.DOWNLOAD;let t=It();this.outputShape=e,this.userCode=`
      ${gP}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},gq={R:0,G:1,B:2,A:3},gX=class{constructor(e,t=!1,u="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let y=It();this.outputShape=e,this.enableShapeUniforms=ut(this.outputShape.length);let w="result";t&&(w="floor(result * 255. + 0.5)");let T="";for(let e=0;e<u.length;e++){let t=u[e];T+=`
          if(offset == ${e}) {
            result = values[${gq[t]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Rc():$c(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${u.length});

        flatIndex = idiv(flatIndex, ${u.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${y.texture2D}(A, uv);
          ${T}
        }
        ${y.output} = vec4(${w}, 0., 0., 0.);
      }
    `}},gK=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let u=It();this.outputShape=e,this.enableShapeUniforms=ut(this.outputShape.length);let y="",w="result";t&&(w="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let w=0;w<=1;w++){let T=2*t+w;y+=`
          localCoords = coords;
          if(localCoords[2] + ${w} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${w};
          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${t};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${u.texture2D}(A, uv);

            if (offset == 0) {
              result[${T}] = values[0];
            } else if (offset == 1) {
              result[${T}] = values[1];
            } else if (offset == 2) {
              result[${T}] = values[2];
            } else {
              result[${T}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Rc():$c(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${y}

          ${u.output} = ${w};
        }
    `}},gZ={};function YI(e){let t=It();return $I(e,`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`)}function QI(e){return FI(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function ZI(e){return PI(e,new Uint16Array([0,1,2,2,1,3]))}function Jl(e,t,u,y,w,T){MI(t,u);let $=OI(e),M=e.TEXTURE_2D;return ce(e,()=>e.bindTexture(M,$)),ce(e,()=>e.texParameteri(M,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),ce(e,()=>e.texParameteri(M,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),ce(e,()=>e.texParameteri(M,e.TEXTURE_MIN_FILTER,e.NEAREST)),ce(e,()=>e.texParameteri(M,e.TEXTURE_MAG_FILTER,e.NEAREST)),1===nG.getNumber("WEBGL_VERSION")?ce(e,()=>e.texImage2D(M,0,y,t,u,0,w,T,null)):ce(e,()=>e.texStorage2D(M,1,y,t,u)),ce(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:$,texShape:[u,t]}}function nh(e){return e.internalFormatFloat}function JI(e,t,u,y){let[w,T]=[u,t];return Jl(e,w,T,nh(y),y.textureFormatFloat,e.FLOAT)}function sh(e){return e.internalFormatHalfFloat}function ev(e,t,u,y){let[w,T]=[u,t];return Jl(e,w,T,sh(y),y.textureFormatFloat,y.textureTypeHalfFloat)}function ah(e){return e.downloadTextureFormat}function tv(e,t,u,y){let[w,T]=[u,t];return Jl(e,w,T,ah(y),e.RGBA,e.UNSIGNED_BYTE)}function ih(e){return e.internalFormatPackedFloat}function rv(e,t,u,y){let[w,T]=Ma(t,u);return Jl(e,w,T,ih(y),e.RGBA,e.FLOAT)}function uh(e){return e.internalFormatPackedHalfFloat}function ov(e,t,u,y){let[w,T]=Ma(t,u);return Jl(e,w,T,uh(y),e.RGBA,y.textureTypeHalfFloat)}function nv(e,t,u){return ce(e,()=>e.bindBuffer(e.ARRAY_BUFFER,u)),jf(e,t,"clipSpacePos",u,3,20,0)&&jf(e,t,"uv",u,2,20,12)}function sv(e,t,u,y,w,T){let $,M,O;ce(e,()=>e.bindTexture(e.TEXTURE_2D,t)),w instanceof Uint8Array?($=new Uint8Array(u*y*4),M=e.UNSIGNED_BYTE,O=e.RGBA):($=new Float32Array(u*y*4),M=e.FLOAT,O=T.internalFormatPackedFloat),$.set(w),2===nG.getNumber("WEBGL_VERSION")?ce(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,u,y,e.RGBA,M,$)):ce(e,()=>e.texImage2D(e.TEXTURE_2D,0,O,u,y,0,e.RGBA,M,$)),ce(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function av(e,t,u){ce(e,()=>e.bindTexture(e.TEXTURE_2D,t)),u.data instanceof Uint8Array?2===nG.getNumber("WEBGL_VERSION")?ce(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,u.width,u.height,e.RGBA,e.UNSIGNED_BYTE,u.data)):ce(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,u.width,u.height,0,e.RGBA,e.UNSIGNED_BYTE,u.data)):2===nG.getNumber("WEBGL_VERSION")?ce(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,u)):ce(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,u)),ce(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function iv(e,t,u,y){let w=e.createBuffer();ce(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,w));let T=16*t*u;return ce(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,T,e.STREAM_READ)),ce(e,()=>e.readPixels(0,0,u,t,e.RGBA,e.FLOAT,0)),ce(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),w}function uv(e,t,u){let y=new Float32Array(u);return e.bindBuffer(e.PIXEL_PACK_BUFFER,t),e.getBufferSubData(e.PIXEL_PACK_BUFFER,0,y),e.bindBuffer(e.PIXEL_PACK_BUFFER,null),y}function pv(e,t,u,y){let[w,T]=[u,t],$=new Uint8Array(t*u*4);return ce(e,()=>e.readPixels(0,0,w,T,y.downloadTextureFormat,e.UNSIGNED_BYTE,$)),new Float32Array($.buffer)}function cv(e,t,u,y,w,T,$,M){let O=new Float32Array(function(e,t){let[u,y]=Ma(e,t);return u*y*4}(T,$));return e.bindBuffer(e.PIXEL_PACK_BUFFER,t),e.getBufferSubData(e.PIXEL_PACK_BUFFER,0,O),e.bindBuffer(e.PIXEL_PACK_BUFFER,null),O}function lv(e,t,u){let y=new Float32Array(t*u*4);return ce(e,()=>e.readPixels(0,0,u,t,e.RGBA,e.FLOAT,y)),y}qe(gZ,{bindVertexProgramAttributeStreams:()=>nv,createBufferFromOutputTexture:()=>iv,createFloat16MatrixTexture:()=>ev,createFloat16PackedMatrixTexture:()=>ov,createFloat32MatrixTexture:()=>JI,createIndexBuffer:()=>ZI,createPackedMatrixTexture:()=>rv,createUnsignedBytesMatrixTexture:()=>tv,createVertexBuffer:()=>QI,createVertexShader:()=>YI,downloadByteEncodedFloatMatrixFromOutputTexture:()=>pv,downloadFloat32MatrixFromBuffer:()=>uv,downloadMatrixFromPackedOutputTexture:()=>lv,downloadPackedMatrixFromBuffer:()=>cv,getInternalFormatForFloat16MatrixTexture:()=>sh,getInternalFormatForFloat16PackedMatrixTexture:()=>uh,getInternalFormatForFloat32MatrixTexture:()=>nh,getInternalFormatForPackedMatrixTexture:()=>ih,getInternalFormatForUnsignedBytesMatrixTexture:()=>ah,uploadDenseMatrixToTexture:()=>sv,uploadPixelDataToTexture:()=>av});var gY=class{constructor(e){var t;this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let u=nG.getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,t=e,g_[u]=t):this.gl=Kr(u),e=this.gl,2===nG.getNumber("WEBGL_VERSION")){let t=e;this.createVertexArray=()=>ce(t,()=>t.createVertexArray()),this.bindVertexArray=e=>ce(t,()=>t.bindVertexArray(e)),this.deleteVertexArray=e=>ce(t,()=>t.deleteVertexArray(e)),this.getVertexArray=()=>ce(t,()=>t.getParameter(t.VERTEX_ARRAY_BINDING))}else if(null!=e){let t=e.getExtension("OES_vertex_array_object");if(null==t)throw Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>ce(e,()=>t.createVertexArrayOES()),this.bindVertexArray=u=>ce(e,()=>t.bindVertexArrayOES(u)),this.deleteVertexArray=u=>ce(e,()=>t.deleteVertexArrayOES(u)),this.getVertexArray=()=>ce(e,()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES))}let y="WEBGL_color_buffer_float",w="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===nG.getNumber("WEBGL_VERSION")){let e="OES_texture_half_float";if(this.textureFloatExtension=Nc(this.gl,"OES_texture_float"),qr(this.gl,e))this.textureHalfFloatExtension=Nc(this.gl,e);else if(nG.get("WEBGL_FORCE_F16_TEXTURES"))throw Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(y),qr(this.gl,w))this.colorBufferHalfFloatExtension=Nc(this.gl,w);else if(nG.get("WEBGL_FORCE_F16_TEXTURES"))throw Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(y="EXT_color_buffer_float",qr(this.gl,y))this.colorBufferFloatExtension=this.gl.getExtension(y);else if(qr(this.gl,w))this.colorBufferHalfFloatExtension=this.gl.getExtension(w);else throw Error("GL context does not support color renderable floats");this.vertexBuffer=QI(this.gl),this.indexBuffer=ZI(this.gl),this.framebuffer=LI(this.gl),this.textureConfig=Xl(this.gl,this.textureHalfFloatExtension)}get debug(){return nG.getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;ce(e,()=>e.finish()),ce(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ce(e,()=>e.deleteFramebuffer(this.framebuffer)),ce(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),ce(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),ce(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),JI(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),ev(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),tv(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),av(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,u,y){this.throwIfDisposed(),sv(this.gl,e,t,u,y,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),ov(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),rv(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Xf(this.gl,this.framebuffer),this.outputTexture=null),ce(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,u){return this.downloadMatrixDriver(e,()=>pv(this.gl,t,u,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,u,y,w,T){return cv(this.gl,e,t,u,y,w,T,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return uv(this.gl,e,t)}createBufferFromTexture(e,t,u){this.bindTextureToFrameBuffer(e);let y=iv(this.gl,t,u,this.textureConfig);return this.unbindTextureToFrameBuffer(),y}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,u;if(nG.getBool("WEBGL_FENCE_API_ENABLED")){let y=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),u=()=>{let t=e.clientWaitSync(y,0,0);return t===e.ALREADY_SIGNALED||t===e.CONDITION_SATISFIED},t=y}else nG.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),u=()=>this.isQueryAvailable(t,nG.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):u=()=>!0;return{query:t,isFencePassed:u}}downloadMatrixFromPackedTexture(e,t,u){return this.downloadMatrixDriver(e,()=>lv(this.gl,t,u))}createProgram(e){this.throwIfDisposed();let t=this.gl;null==this.vertexShader&&(this.vertexShader=YI(t));let u=DI(t);ce(t,()=>t.attachShader(u,this.vertexShader)),ce(t,()=>t.attachShader(u,e)),AI(t,u);let y=Object.assign(u,{vao:this.createVertexArray()});return this.debug&&Yl(t,y),y}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);let t=this.gl;ce(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),nv(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(ce(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&Yl(this.gl,this.program),ce(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,u=!0){return this.throwIfDisposed(),u?BI(this.gl,e,t):zI(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),ce(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,u){this.throwIfDisposed(),this.throwIfNoProgram(),VI(this.gl,e,t,u)}setOutputMatrixTexture(e,t,u){this.setOutputMatrixTextureDriver(e,u,t)}setOutputPackedMatrixTexture(e,t,u){this.throwIfDisposed();let[y,w]=Ma(t,u);this.setOutputMatrixTextureDriver(e,y,w)}setOutputMatrixWriteRegion(e,t,u,y){this.setOutputMatrixWriteRegionDriver(u,e,y,t)}setOutputPackedMatrixWriteRegion(e,t,u,y){throw Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Yl(this.gl,this.program),Tc(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&(console.assert(this.getVertexArray()===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()),ce(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ce(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Nc(this.gl,2===nG.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===nG.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),u=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,u),u}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===nG.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2();e.endQuery(t.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await oc.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,nG.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,nG.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){let t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{let t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let t=this.gl,u=this.getQueryTimerExtensionWebGL2(),y=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(u.GPU_DISJOINT_EXT)),y&&!this.disjoint}{let t=this.getQueryTimerExtensionWebGL1(),u=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),u&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){let u;this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||("setTimeoutCustom"in nG.platform&&(u=nG.platform.setTimeoutCustom.bind(nG.platform)),oc.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,u))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Ql(this.gl,e,this.framebuffer),this.debug&&Tc(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Ql(this.gl,this.outputTexture,this.framebuffer),this.debug&&Tc(this.gl)):Xf(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let u=t();return this.unbindTextureToFrameBuffer(),u}setOutputMatrixTextureDriver(e,t,u){this.throwIfDisposed();let y=this.gl;Ql(y,e,this.framebuffer),this.debug&&Tc(y),this.outputTexture=e,ce(y,()=>y.viewport(0,0,t,u)),ce(y,()=>y.scissor(0,0,t,u))}setOutputMatrixWriteRegionDriver(e,t,u,y){this.throwIfDisposed(),ce(this.gl,()=>this.gl.scissor(e,t,u,y))}throwIfDisposed(){if(this.disposed)throw Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw Error("No GPU program is currently set.")}},{addImpl:gJ,bincountImpl:gQ,bincountReduceImpl:g1,bitwiseAndImpl:g2,castImpl:g0,ceilImpl:g3,concatImpl:g7,equalImpl:g4,expImpl:g6,expm1Impl:g8,floorImpl:g9,gatherNdImpl:yt,gatherV2Impl:ya,greaterImpl:yn,greaterEqualImpl:yr,lessImpl:ys,lessEqualImpl:yo,linSpaceImpl:yd,logImpl:yh,maxImpl:ym,maximumImpl:yg,minimumImpl:yy,multiplyImpl:yA,negImpl:yb,notEqualImpl:yv,prodImpl:yw,raggedGatherImpl:yI,raggedRangeImpl:yS,raggedTensorToTensorImpl:yC,rangeImpl:yE,rsqrtImpl:y$,scatterImpl:y_,sigmoidImpl:yM,simpleAbsImpl:yF,sliceImpl:yO,sparseFillEmptyRowsImpl:yP,sparseReshapeImpl:yD,sparseSegmentReductionImpl:yz,sqrtImpl:yL,staticRegexReplaceImpl:yW,stridedSliceImpl:yB,stringNGramsImpl:yV,stringSplitImpl:yU,stringToHashBucketFastImpl:yG,subImpl:yH,tileImpl:yj,topKImpl:yq,transposeImpl:yX,uniqueImpl:yK}=fz;function dv(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function Rt(e,t){return 1===t?[e]:dv(e,t)}var yZ=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=ut(this.outputShape.length),0===this.rank)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let e=Rt("rc",this.rank),t=Re(this.rank),u=this.getOutOfBoundsCondition(e),y=this.getSetup(e),w=this.getOutput(e);this.userCode=`
        void main() {
          ${t} rc = getOutputCoords();

          if(${u}) {
            setOutput(vec4(0));
          } else {
            ${y}

            setOutput(vec4(${w}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let u=0;u<=1;u++)for(let y=0;y<=1;y++){let w=`${0===u?"r":"rp1"}, ${0===y?"c":"cp1"}`;for(let t=2;t<this.rank;t++)w=`${e[e.length-1-t]},`+w;t.push(w)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let u=this.rank-2;u<this.rank;u++)t+=`${e[u]} >= ${this.enableShapeUniforms?`outShape[${u}]`:this.outputShape[u]}`,u<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";let t=e.slice(-2),u=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],y=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${u};
      bool rEdge = rp1 >= ${y};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}},yY=class{constructor(e,t){var u;this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=ut(this.outputShape.length);let y="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),y+=`
        ${t}
        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${e}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${e>0?"}":""}
      `}this.userCode=`
      ${u=this.enableShapeUniforms,`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${u?function(e,t,u="index"){let y=function(e,t){let u=e.length,y=e.map(e=>`${t}[${e}]`),w=Array(u-1);w[u-2]=y[u-1];for(let e=u-3;e>=0;--e)w[e]=`(${w[e+1]} * ${y[e+1]})`;return w}(e.map((e,t)=>t),t);return y.map((t,w)=>{let T=`int ${e[w]} = ${u} / ${y[w]}`,$=w===y.length-1?`int ${e[w+1]} = ${u} - ${e[w]} * ${y[w]}`:`index -= ${e[w]} * ${y[w]}`;return`${T}; ${$};`}).join("")}(["r","c","d"],"inputShape"):Ws(["r","c","d"],t)}
      return ivec3(r, c, d);
    }
  `}
      ${this.enableShapeUniforms?Rc():$c(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${y}

        setOutput(result);
      }
    `}},yJ=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,u){let y,w=RD(t,u),T=DD(e,w,u);T in this.freeTextures||(this.freeTextures[T]=[]),T in this.usedTextures||(this.usedTextures[T]=[]);let $=$D(e,w,this.gpgpu.gl,this.gpgpu.textureConfig,u);if(this.freeTextures[T].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=$,this.log();let e=this.freeTextures[T].pop();return this.usedTextures[T].push(e),e}return w===e$.PACKED_2X2_FLOAT32?y=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):w===e$.PACKED_2X2_FLOAT16?y=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):w===e$.UNPACKED_FLOAT32?y=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):w===e$.UNPACKED_FLOAT16?y=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):w===e$.PACKED_4X1_UNSIGNED_BYTE&&(y=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[T].push(y),this.numUsedTextures++,this._numBytesAllocated+=$,this.log(),y}releaseTexture(e,t,u,y){if(null==this.freeTextures)return;let w=RD(u,y),T=DD(t,w,y);T in this.freeTextures||(this.freeTextures[T]=[]);let $=$D(t,w,this.gpgpu.gl,this.gpgpu.textureConfig,y),M=nG.getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==M&&this._numBytesAllocated>M?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=$):(this.freeTextures[T].push(e),this.numFreeTextures++,this._numBytesFree+=$),this.numUsedTextures--;let O=this.usedTextures[T],P=O&&O.indexOf(e);if(null==P||P<0)throw Error("Cannot release a texture that was never provided by this texture manager");O[P]=O[O.length-1],O.pop(),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function $D(e,t,u,y,w){let T=function(e,t){switch(e){case e$.PACKED_2X2_FLOAT32:return ih(t);case e$.PACKED_2X2_FLOAT16:return uh(t);case e$.UNPACKED_FLOAT32:return nh(t);case e$.UNPACKED_FLOAT16:return sh(t);case e$.PACKED_4X1_UNSIGNED_BYTE:return ah(t);default:throw Error(`Unknown physical texture type ${e}`)}}(t,y),$;if(w){let[t,u]=Ma(e[0],e[1]);$=t*u}else{var M;let[t,u]=(M=e[0],[e[1],M]);$=t*u}return $*function(e,t){if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F||t===e.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw Error(`Unknown internal format ${t}`)}(u,T)}function RD(e,t){if(e===eR.UPLOAD)return e$.PACKED_2X2_FLOAT32;if(e===eR.RENDER||null==e)return nG.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?e$.PACKED_2X2_FLOAT32:e$.UNPACKED_FLOAT32:t?e$.PACKED_2X2_FLOAT16:e$.UNPACKED_FLOAT16;if(e===eR.DOWNLOAD||e===eR.PIXELS)return e$.PACKED_4X1_UNSIGNED_BYTE;throw Error(`Unknown logical texture type ${e}`)}function DD(e,t,u){return`${e[0]}_${e[1]}_${t}_${u}`}var yQ=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=ut(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},y1="if (isnan(x)) return x;",y0="return abs(x);",y3=y1+`
  return (x < 0.0) ? 0.0 : x;
`,y7=y1+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,y6="return x;",y8=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,y9=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Aa=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,An=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=ut(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},Ai=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=ut(this.outputShape.length);let t=e.length,u=Rt("rc",t),y=Re(t),w=function(e,t){if(1===e)return"rc";let u="";for(let y=0;y<e;y++)u+=t[y],y<e-1&&(u+=",");return u}(t,u),T=u.slice(-2),$=t<=1?"rc":`vec2(${T.join(",")})`;this.userCode=`
      void main() {
        ${y} rc = getOutputCoords();
        vec4 packedInput = getA(${w});

        setOutput(getChannel(packedInput, ${$}));
      }
    `}},Al=h_.whereImpl,Au={},Ad=nG.getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),Ah=class r13 extends nB{nextDataId(){return r13.nextDataId++}constructor(e){let t;if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!nG.getBool("HAS_WEBGL"))throw Error("WebGL is not supported on this device");if(null!=e){if(e instanceof gY)t=e;else{let u=Kr(nG.getNumber("WEBGL_VERSION"),e);t=new gY(u)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{var u;let e=Kr(nG.getNumber("WEBGL_VERSION"));t=new gY(e),this.binaryCache=((u=nG.getNumber("WEBGL_VERSION"))in Au||(Au[u]={}),Au[u]),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new yJ(this.gpgpu),this.numMBBeforeWarning=null==nG.global.screen?1024:nG.global.screen.height*nG.global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new nW(this,oF)}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,u,y,w,T){let $=this.makeTensorInfo(t,u),M=this.texData.get($.dataId);M.isPacked=!1,M.texture={texture:e,texShape:[y,w]},M.texShape=[y,w];let O=_c(t),P=new gX(O,!1,T),z=this.runWebGLProgram(P,[$],u,[[y,w]]);return z.shape=t,M.texture=null,this.disposeIntermediateTensorInfo($),z.dataId}write(e,t,u){if((nG.getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||nG.getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===u&&null!=e)throw Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let y={id:this.nextDataId()};return this.texData.set(y,{shape:t,dtype:u,values:e,usage:eR.UPLOAD,refCount:1}),y}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,u,y,w){if(nG.getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===y)throw Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:u,dtype:y,values:t,usage:eR.UPLOAD,refCount:w})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t,{values:u,dtype:y,complexTensorInfos:w,slice:T,shape:$,isPacked:M}=this.texData.get(e);if(null!=T){let t;t=M?new An($,y6):new yQ($,y6);let u=this.runWebGLProgram(t,[{dataId:e,shape:$,dtype:y}],y),w=this.readSync(u.dataId);return this.disposeIntermediateTensorInfo(u),w}if(null!=u)return this.convertAndCacheOnCPU(e);if("string"===y)return u;let O=null!=this.activeTimers,P;if(O&&(P=oc.now()),"complex64"===y){let e=this.readSync(w.real.dataId),u=this.readSync(w.imag.dataId);t=hh.mergeRealAndImagArrays(e,u)}else t=this.getValuesFromTexture(e);return O&&(this.downloadWaitMs+=oc.now()-P),this.convertAndCacheOnCPU(e,t)}async read(e){let t;if(this.pendingRead.has(e)){let t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}let{values:u,shape:y,slice:w,dtype:T,complexTensorInfos:$,isPacked:M}=this.texData.get(e);if(null!=w){let t;t=M?new An(y,y6):new yQ(y,y6);let u=this.runWebGLProgram(t,[{dataId:e,shape:y,dtype:T}],T),w=this.read(u.dataId);return this.disposeIntermediateTensorInfo(u),w}if(null!=u)return this.convertAndCacheOnCPU(e);if(nG.getBool("DEBUG")&&!nG.getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===nG.getNumber("WEBGL_VERSION"))throw Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let O=null,P;if("complex64"!==T&&nG.get("WEBGL_BUFFER_SUPPORTED")){P=this.decode(e);let t=this.texData.get(P.dataId);O=this.gpgpu.createBufferFromTexture(t.texture.texture,...jl(y))}if(this.pendingRead.set(e,[]),"complex64"!==T&&await this.gpgpu.createAndWaitForFence(),"complex64"===T){let e=await Promise.all([this.read($.real.dataId),this.read($.imag.dataId)]),u=e[0],y=e[1];t=hh.mergeRealAndImagArrays(u,y)}else if(null==O)t=this.getValuesFromTexture(e);else{let e=oc.sizeFromShape(y);t=this.gpgpu.downloadFloat32MatrixFromBuffer(O,e)}if(null!=P&&this.disposeIntermediateTensorInfo(P),null!=O){let e=this.gpgpu.gl;ce(e,()=>e.deleteBuffer(O))}let z=this.convertAndCacheOnCPU(e,t),L=this.pendingRead.get(e);return this.pendingRead.delete(e),L.forEach(e=>e(z)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&oF.removeDataId(e,this),this.pendingDeletes--),z}readToGPU(e,t={}){let{values:u,shape:y,slice:w,dtype:T,isPacked:$,texture:M}=this.texData.get(e);if("complex64"===T)throw Error("Does not support reading texture for complex64 dtype.");if(null!=w){let u;u=$?new An(y,y6):new yQ(y,y6);let w=this.runWebGLProgram(u,[{dataId:e,shape:y,dtype:T}],T),M=this.readToGPU(w,t);return this.disposeIntermediateTensorInfo(w),M}if(null==M)throw null!=u?Error("Data is not on GPU but on CPU."):Error("There is no data on GPU or CPU.");let O=this.decode(e,t.customTexShape);return Object.assign({tensorRef:oF.makeTensorFromTensorInfo(O)},this.texData.get(O.dataId).texture)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let u=t.map(e=>oc.decodeString(e));return me(e.shape,e.dtype,u)}catch(e){throw Error("Failed to decode encoded string bytes into utf-8")}return me(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){let u=e[t];if(!EI(u))throw nG.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${u} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${u} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:u,isPacked:y}=this.texData.get(e),w=oc.sizeFromShape(t);if(nG.getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let u=this.decode(e),y=this.texData.get(u.dataId),T=this.gpgpu.downloadMatrixFromPackedTexture(y.texture.texture,...jl(t)).subarray(0,w);return this.disposeIntermediateTensorInfo(u),T}let T=nG.getBool("WEBGL_PACK")&&!0===y,$=T?_c(t):t,M=T?new gH($):new gG($),O=this.runWebGLProgram(M,[{shape:$,dtype:u,dataId:e}],"float32"),P=this.texData.get(O.dataId),z=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(P.texture.texture,P.texShape[0],P.texShape[1]).subarray(0,w);return this.disposeIntermediateTensorInfo(O),z}timerAvailable(){return nG.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,u=[],y=!1;null==this.programTimersStack?(this.programTimersStack=u,y=!0):this.activeTimers.push(u),this.activeTimers=u,e();let w=oc.flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),T=oc.flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,y&&(this.programTimersStack=null);let $={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(nG.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let e=await Promise.all(w);$.kernelMs=oc.sum(e),$.getExtraProfileInfo=()=>e.map((e,t)=>({name:T[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else $.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,$})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return nG.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:oc.now(),endMs:null}}endTimer(e){return nG.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.endQuery():e.endMs=oc.now(),e}async getQueryTime(e){return nG.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.waitForQueryAndGetTime(e):e.endMs-e.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:u}=this.texData.get(e);return null!=u&&(this.disposeData(u.real.dataId,t),this.disposeData(u.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:u,texShape:y,usage:w,isPacked:T,slice:$}=this.texData.get(e),M=$&&$.origDataId||e,O=this.dataRefCount.get(M);O>1?this.dataRefCount.set(M,O-1):(this.dataRefCount.delete(M),null!=t&&(this.numBytesInGPU-=this.computeBytes(y,u),this.textureManager.releaseTexture(t,y,w,T)));let P=this.texData.get(e);P.texture=null,P.texShape=null,P.isPacked=!1,P.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Ad){return nG.getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&oc.sizeFromShape(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){hh.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return Al(e.shape,t)}packedUnaryOp(e,t,u){let y=new An(e.shape,t),w=this.compileAndRun(y,[e],u);return oF.makeTensorFromTensorInfo(w)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){let t=yF(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(nG.getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,y0,e.dtype);let t=new yQ(e.shape,y0),u=this.compileAndRun(t,[e]);return oF.makeTensorFromTensorInfo(u)}makeTensorInfo(e,t,u){let y;if("string"===t&&null!=u&&u.length>0&&oc.isString(u[0])){let w=u.map(e=>oc.encodeString(e));y=this.write(w,e,t)}else y=this.write(u,e,t);return this.texData.get(y).usage=null,{dataId:y,shape:e,dtype:t}}makeOutput(e,t,u){return oF.makeTensorFromTensorInfo(this.makeTensorInfo(e,t,u),this)}unpackTensor(e){let t=new Ai(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new yZ(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){let u=[gi(e.shape),...xi(e.shape)],y={dtype:e.dtype,shape:u,dataId:e.dataId},w=[gi(t),...xi(t)],T=new yY(w,u),$=[u],M=this.runWebGLProgram(T,[y],e.dtype,$,!0);return{dataId:M.dataId,shape:t,dtype:M.dtype}}decode(e,t){let{isPacked:u,shape:y,dtype:w}=this.texData.get(e);if(null!=t){let e=oc.sizeFromShape(y),u=t[0]*t[1]*4;oc.assert(e<=u,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let T=_c(y),$;$=u?new gU(T):new gV(T);let M=[null!=t?t:jl(T)],O=this.runWebGLProgram($,[{shape:T,dtype:w,dataId:e}],w,M,!0,t);return{dtype:w,shape:y,dataId:O.dataId}}runWebGLProgram(e,t,u,y,w=!1,T){let $=this.makeTensorInfo(e.outputShape,u),M=this.texData.get($.dataId);if(e.packedOutput&&(M.isPacked=!0),e.outPackingScheme===eE.DENSE){let t=null!=T?T:jl(e.outputShape);M.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(M.usage=e.outTexUsage),0===oc.sizeFromShape($.shape))return M.values=oc.getTypedArrayFromDType($.dtype,0),$;let O=[],P=t.map(t=>{if("complex64"===t.dtype)throw Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let u=this.texData.get(t.dataId);if(null==u.texture){if(!e.packedInputs&&oc.sizeFromShape(t.shape)<=nG.getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:u.values};e.packedInputs&&(u.isPacked=!0,u.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!u.isPacked!=!!e.packedInputs)t=u.isPacked?this.unpackTensor(t):this.packTensor(t),O.push(t),u=this.texData.get(t.dataId);else if(u.isPacked&&!xu(u.shape,t.shape)){let e=t,y=t.shape;t.shape=u.shape,t=this.packedReshape(t,y),O.push(t),u=this.texData.get(t.dataId),e.shape=y}return{shape:t.shape,texData:u,isUniform:!1}});this.uploadToGPU($.dataId);let z={shape:$.shape,texData:M,isUniform:!1},L=function(e,t,u){let y="";t.concat(u).forEach(t=>{let w=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){let T=t.texData.texShape,{useSqueezeShape:$,uniformShape:M,keptDims:O}=Zf(e.packedInputs,t.shape,T),P="",z="",L="";if(1===M.length&&e.packedInputs){let e=[Math.ceil(T[0]/2),Math.ceil(T[1]/2)];P=`${e[0]>1}_${e[1]>1}`}else if(2!==M.length||e.packedInputs){if(M.length>2&&!e.packedInputs){let e=oc.computeStrides(M);L=`${e[0]===T[1]}_${e[e.length-1]===T[1]}`}}else z=`${M[0]>1}_${M[1]>1}`;let W=t.shape.length,B=2===M.length&&oc.arraysEqual(t.shape,T),j=1===oc.sizeFromShape(t.shape),q=hh.getBroadcastDims(t.shape,u.shape),Z=!e.packedInputs&&W===u.shape.length&&oc.arraysEqual(T,u.texData.texShape),Y=e.packedInputs||M.length>2?"":`${T[0]>1}_${T[1]>1}`;y+=`${W}_${Z}_${$?O:""}_${M.length}_${j}_${q}_${B}_${P}_${z}_${L}_${Y}_${w}`}else{let e=t.isUniform?"uniform":t.texData.texShape;y+=`${t.shape}_${e}_${w}`}});let w=e.userCode;return e.constructor.name+("_"+y+"_")+w+`${nG.getNumber("WEBGL_VERSION")}`}(e,P,z),W=this.getAndSaveBinary(L,()=>{var t;let u,y,w,T,$,M;return t=this.gpgpu,y=(u=P.map((t,u)=>{let y={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(y.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[u],shapeInfo:y}})).map(e=>e.shapeInfo),T=function(e,t,u){let y=[];if(e.forEach(e=>{let t=oc.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?y.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(y.push(`uniform sampler2D ${e.name};`),y.push(`uniform int offset${e.name};`)),u.enableShapeUniforms){let{uniformShape:t}=Zf(u.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:y.push(`uniform int ${e.name}Shape;`);break;case 2:y.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:y.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:y.push(`uniform ivec4 ${e.name}Shape;`)}y.push(`uniform ivec2 ${e.name}TexShape;`)}}),u.enableShapeUniforms){switch(t.logicalShape.length){case 1:y.push("uniform int outShape;");break;case 2:y.push("uniform ivec2 outShape;"),y.push("uniform int outShapeStrides;");break;case 3:y.push("uniform ivec3 outShape;"),y.push("uniform ivec2 outShapeStrides;");break;case 4:y.push("uniform ivec4 outShape;"),y.push("uniform ivec3 outShapeStrides;")}y.push("uniform ivec2 outTexShape;")}u.customUniforms&&u.customUniforms.forEach(e=>{y.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)});let w=y.join(`
`),T=e.map(e=>(function(e,t,u=!1,y){let w="";u?w+=function DR(e,t){switch(e.shapeInfo.logicalShape.length){case 0:let u,y,w;return y="get"+(u=e.name).charAt(0).toUpperCase()+u.slice(1),w=It(),`
    vec4 ${y}() {
      return ${w.texture2D}(${u}, halfCR);
    }
  `;case 1:return function(e,t){let u=e.name,y="get"+u.charAt(0).toUpperCase()+u.slice(1),w=e.shapeInfo.texShape,T=It();if(t)return`
    vec4 ${y}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${u}TexShape[0]) / 2.0), ceil(float(${u}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${T.texture2D}(${u}, uv);
    }
  `;let $=[Math.ceil(w[0]/2),Math.ceil(w[1]/2)];return`
    vec4 ${y}(int index) {
      vec2 uv = packedUVfrom1D(
        ${$[0]}, ${$[1]}, index);
      return ${T.texture2D}(${u}, uv);
    }
  `}(e,t);case 2:return function(e,t){let u=e.shapeInfo.logicalShape,y=e.name,w="get"+y.charAt(0).toUpperCase()+y.slice(1),T=e.shapeInfo.texShape,$=T[0],M=T[1],O=It();if(null!=T&&oc.arraysEqual(u,T))return t?`
      vec4 ${w}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${y}TexShape[1], ${y}TexShape[0]);

        return ${O.texture2D}(${y}, uv);
      }
    `:`
      vec4 ${w}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${M}.0, ${$}.0);

        return ${O.texture2D}(${y}, uv);
      }
    `;if(t)return`
    vec4 ${w}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${y}TexShape[0]) / 2.0), ceil(float(${y}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${y}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${O.texture2D}(${y}, uv);
    }
  `;let P=[Math.ceil(T[0]/2),Math.ceil(T[1]/2)],z=Math.ceil(u[1]/2);return`
    vec4 ${w}(int row, int col) {
      vec2 uv = packedUVfrom2D(${z}, ${P[0]}, ${P[1]}, row, col);
      return ${O.texture2D}(${y}, uv);
    }
  `}(e,t);case 3:return function(e,t){let u=e.shapeInfo.logicalShape,y=e.name,w="get"+y.charAt(0).toUpperCase()+y.slice(1),T=e.shapeInfo.texShape,$=[Math.ceil(T[0]/2),Math.ceil(T[1]/2)];if(1===u[0]){let y=Pc(e,u.slice(1));return`
        ${DR(y,t)}
        vec4 ${w}(int b, int row, int col) {
          return ${w}(${Oc(["b","row","col"],[1,2])});
        }
      `}let M=It();if(t)return`
    vec4 ${w}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${y}TexShape[0]) / 2.0), ceil(float(${y}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${y}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${y}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${M.texture2D}(${y}, uv);
    }
  `;let O=$[0],P=$[1],z=Math.ceil(u[2]/2),L=z*Math.ceil(u[1]/2);return`
    vec4 ${w}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${O}, ${P}, ${L}, ${z}, b, row, col);
      return ${M.texture2D}(${y}, uv);
    }
  `}(e,t);default:return function(e,t){let u=e.name,y="get"+u.charAt(0).toUpperCase()+u.slice(1),w=It();if(t)return`
    vec4 ${y}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${u}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${u}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${u}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${u}TexShape[0]) / 2.0), ceil(float(${u}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${w.texture2D}(${u}, uv);
    }
  `;let T=e.shapeInfo.logicalShape,$=T.length,M=e.shapeInfo.texShape,O=[Math.ceil(M[0]/2),Math.ceil(M[1]/2)],P=O[0],z=O[1],L=Math.ceil(T[$-1]/2),W=L*Math.ceil(T[$-2]/2),B="int b, int row, int col",j=`b * ${W} + (row / 2) * ${L} + (col / 2)`;for(let e=2;e<$-1;e++)B=`int b${e}, `+B,W*=T[$-e-1],j=`b${e} * ${W} + `+j;return`
    vec4 ${y}(${B}) {
      int index = ${j};
      int texR = index / ${z};
      int texC = index - texR * ${z};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${z}, ${P});
      return ${w.texture2D}(${u}, uv);
    }
  `}(e,t)}}(e,y):w+=function Ac(e,t=!1){let u=e.shapeInfo.logicalShape;switch(u.length){case 0:return function(e,t){let u=e.name,y="get"+u.charAt(0).toUpperCase()+u.slice(1);if(e.shapeInfo.isUniform)return`float ${y}() {return ${u};}`;let[w,T]=e.shapeInfo.texShape;if(1===w&&1===T)return`
      float ${y}() {
        return sampleTexture(${u}, halfCR);
      }
    `;let $=yp(u);if(t)return`
    float ${y}() {
      vec2 uv = uvFromFlat(${u}TexShape[0], ${u}TexShape[1], ${$});
      return sampleTexture(${u}, uv);
    }
  `;let[M,O]=e.shapeInfo.texShape;return`
    float ${y}() {
      vec2 uv = uvFromFlat(${M}, ${O}, ${$});
      return sampleTexture(${u}, uv);
    }
  `}(e,t);case 1:return function(e,t){let u=e.name,y="get"+u.charAt(0).toUpperCase()+u.slice(1);if(e.shapeInfo.isUniform)return`
      float ${y}(int index) {
        ${Fc(e)}
      }
    `;let w=e.shapeInfo.texShape,T=w[0],$=w[1];if(1===$&&1===T)return`
      float ${y}(int index) {
        return sampleTexture(${u}, halfCR);
      }
    `;let M=yp(u);return 1===$?t?`
      float ${y}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${M}) + 0.5) / float(${u}TexShape[0]));
        return sampleTexture(${u}, uv);
      }
    `:`
      float ${y}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${M}) + 0.5) / ${T}.0);
        return sampleTexture(${u}, uv);
      }
    `:1===T?t?`
      float ${y}(int index) {
        vec2 uv = vec2((float(index + ${M}) + 0.5) / float(${u}TexShape[1]), 0.5);
        return sampleTexture(${u}, uv);
      }
    `:`
      float ${y}(int index) {
        vec2 uv = vec2((float(index + ${M}) + 0.5) / ${$}.0, 0.5);
        return sampleTexture(${u}, uv);
      }
    `:t?`
    float ${y}(int index) {
      vec2 uv = uvFromFlat(${u}TexShape[0], ${u}TexShape[1], index + ${M});
      return sampleTexture(${u}, uv);
    }
  `:`
    float ${y}(int index) {
      vec2 uv = uvFromFlat(${T}, ${$}, index + ${M});
      return sampleTexture(${u}, uv);
    }
  `}(e,t);case 2:return function(e,t){let u=e.shapeInfo.logicalShape,y=e.name,w="get"+y.charAt(0).toUpperCase()+y.slice(1),T=e.shapeInfo.texShape;if(null!=T&&oc.arraysEqual(u,T)){if(t)return`
      float ${w}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${y}TexShape[1], ${y}TexShape[0]);
        return sampleTexture(${y}, uv);
      }
    `;let e=T[0],u=T[1];return`
    float ${w}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${u}.0, ${e}.0);
      return sampleTexture(${y}, uv);
    }
  `}let{newShape:$,keptDims:M}=oc.squeezeShape(u);if($.length<u.length){let u=Pc(e,$);return`
      ${Ac(u,t)}
      float ${w}(int row, int col) {
        return ${w}(${Oc(["row","col"],M)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${w}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${u[1]}, 1)));
        ${Fc(e)}
      }
    `;let O=T[0],P=T[1],z=yp(y);return 1===P?t?`
      float ${w}(int row, int col) {
        float index = dot(vec3(row, col, ${z}), vec3(${y}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${y}TexShape[0]));
        return sampleTexture(${y}, uv);
      }
    `:`
    float ${w}(int row, int col) {
      float index = dot(vec3(row, col, ${z}), vec3(${u[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${O}.0);
      return sampleTexture(${y}, uv);
    }
  `:1===O?t?`
      float ${w}(int row, int col) {
        float index = dot(vec3(row, col, ${z}), vec3(${y}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${y}TexShape[1]), 0.5);
        return sampleTexture(${y}, uv);
      }
    `:`
    float ${w}(int row, int col) {
      float index = dot(vec3(row, col, ${z}), vec3(${u[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${P}.0, 0.5);
      return sampleTexture(${y}, uv);
    }
  `:t?`
      float ${w}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${y}Shape[1] + col + ${z};
        vec2 uv = uvFromFlat(${y}TexShape[0], ${y}TexShape[1], index);
        return sampleTexture(${y}, uv);
      }
    `:`
  float ${w}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${u[1]} + col + ${z};
    vec2 uv = uvFromFlat(${O}, ${P}, index);
    return sampleTexture(${y}, uv);
  }
`}(e,t);case 3:return function(e,t){let u=e.shapeInfo.logicalShape,y=e.name,w="get"+y.charAt(0).toUpperCase()+y.slice(1),T=u[1]*u[2],$=u[2],{newShape:M,keptDims:O}=oc.squeezeShape(u);if(M.length<u.length){let u=Pc(e,M);return`
        ${Ac(u,t)}
        float ${w}(int row, int col, int depth) {
          return ${w}(${Oc(["row","col","depth"],O)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${w}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${T}, ${$}, 1)));
        ${Fc(e)}
      }
    `;let P=e.shapeInfo.texShape,z=P[0],L=P[1],W=e.shapeInfo.flatOffset;if(L===T&&null==W)return t?`
      float ${w}(int row, int col, int depth) {
        int stride1 = ${y}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${y}TexShape[1], ${y}TexShape[0]);
        return sampleTexture(${y}, uv);
      }
    `:`
        float ${w}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${$}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${L}.0, ${z}.0);
          return sampleTexture(${y}, uv);
        }
      `;if(L===$&&null==W)return t?`
      float ${w}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${y}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${y}TexShape[1], ${y}TexShape[0]);
        return sampleTexture(${y}, uv);
      }
    `:`
    float ${w}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${u[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${L}.0, ${z}.0);
      return sampleTexture(${y}, uv);
    }
  `;let B=yp(y);return t?`
    float ${w}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${y}Shape[1] * ${y}Shape[2];
      int stride1 = ${y}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${B};
      vec2 uv = uvFromFlat(${y}TexShape[0], ${y}TexShape[1], index);
      return sampleTexture(${y}, uv);
    }
    `:`
      float ${w}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${T} + col * ${$} + depth + ${B};
        vec2 uv = uvFromFlat(${z}, ${L}, index);
        return sampleTexture(${y}, uv);
      }
  `}(e,t);case 4:return function(e,t){let u=e.shapeInfo.logicalShape,y=e.name,w="get"+y.charAt(0).toUpperCase()+y.slice(1),T=u[3],$=u[2]*T,M=u[1]*$,{newShape:O,keptDims:P}=oc.squeezeShape(u);if(O.length<u.length){let u=Pc(e,O);return`
      ${Ac(u,t)}
      float ${w}(int row, int col, int depth, int depth2) {
        return ${w}(${Oc(["row","col","depth","depth2"],P)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${w}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${M}, ${$}, ${T}, 1)));
        ${Fc(e)}
      }
    `;let z=e.shapeInfo.flatOffset,L=e.shapeInfo.texShape,W=L[0],B=L[1],j=`int stride2 = ${y}Shape[3];`,q=`int stride1 = ${y}Shape[2] * stride2;`,Z=`int stride0 = ${y}Shape[1] * stride1;`;if(B===M&&null==z)return t?`
      float ${w}(int row, int col, int depth, int depth2) {
        ${j}
        ${q}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${y}TexShape[1], ${y}TexShape[0]);
        return sampleTexture(${y}, uv);
      }
    `:`
      float ${w}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${$}, ${T}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${B}.0, ${W}.0);
        return sampleTexture(${y}, uv);
      }
    `;if(B===T&&null==z)return t?`
      float ${w}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${y}Shape[1] * ${y}Shape[2], ${y}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${y}TexShape[1], ${y}TexShape[0]);
        return sampleTexture(${y}, uv);
      }
    `:`
      float ${w}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${u[1]*u[2]}, ${u[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${B}.0, ${W}.0);
        return sampleTexture(${y}, uv);
      }
    `;let Y=yp(y);return t?`
    float ${w}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${j}
      ${q}
      ${Z}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${y}TexShape[0], ${y}TexShape[1], index + ${Y});
      return sampleTexture(${y}, uv);
    }
  `:`
    float ${w}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${M} + col * ${$} +
          depth * ${T} + depth2;
      vec2 uv = uvFromFlat(${W}, ${B}, index + ${Y});
      return sampleTexture(${y}, uv);
    }
  `}(e,t);case 5:return function(e){let t=e.shapeInfo.logicalShape,u=e.name,y="get"+u.charAt(0).toUpperCase()+u.slice(1),w=t[4],T=t[3]*w,$=t[2]*T,M=t[1]*$,{newShape:O,keptDims:P}=oc.squeezeShape(t);if(O.length<t.length){let t=Pc(e,O);return`
      ${Ac(t)}
      float ${y}(int row, int col, int depth, int depth2, int depth3) {
        return ${y}(${Oc(["row","col","depth","depth2","depth3"],P)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${y}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${M}, ${$}, ${T}, ${w})) +
          depth3;
        ${Fc(e)}
      }
    `;let z=e.shapeInfo.flatOffset,L=e.shapeInfo.texShape,W=L[0],B=L[1];if(B===M&&null==z)return`
      float ${y}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${$}, ${T}, ${w}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${B}.0, ${W}.0);
        return sampleTexture(${u}, uv);
      }
    `;if(B===w&&null==z)return`
      float ${y}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${B}.0, ${W}.0);
        return sampleTexture(${u}, uv);
      }
    `;let j=yp(u);return`
    float ${y}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${M} + col * ${$} + depth * ${T} +
          depth2 * ${w} + depth3 + ${j};
      vec2 uv = uvFromFlat(${W}, ${B}, index);
      return sampleTexture(${u}, uv);
    }
  `}(e);case 6:return function(e){let t=e.shapeInfo.logicalShape,u=e.name,y="get"+u.charAt(0).toUpperCase()+u.slice(1),{newShape:w,keptDims:T}=oc.squeezeShape(t);if(w.length<t.length){let t=Pc(e,w);return`
      ${Ac(t)}
      float ${y}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${y}(${Oc(["row","col","depth","depth2","depth3","depth4"],T)});
      }
    `}let $=t[5],M=t[4]*$,O=t[3]*M,P=t[2]*O,z=t[1]*P;if(e.shapeInfo.isUniform)return`
      float ${y}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${z}, ${P}, ${O}, ${M})) +
          dot(
            vec2(depth3, depth4),
            vec2(${$}, 1)));
        ${Fc(e)}
      }
    `;let L=e.shapeInfo.flatOffset,W=e.shapeInfo.texShape,B=W[0],j=W[1];if(j===z&&null==L)return`
      float ${y}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${P}, ${O}, ${M}, ${$})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${j}.0, ${B}.0);
        return sampleTexture(${u}, uv);
      }
    `;if(j===$&&null==L)return`
      float ${y}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${j}.0, ${B}.0);
        return sampleTexture(${u}, uv);
      }
    `;let q=yp(u);return`
    float ${y}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${z} + col * ${P} + depth * ${O} +
          depth2 * ${M} + depth3 * ${$} + depth4 + ${q};
      vec2 uv = uvFromFlat(${B}, ${j}, index);
      return sampleTexture(${u}, uv);
    }
  `}(e);default:throw Error(`${u.length}-D input sampling is not yet supported`)}}(e,y);let T=e.shapeInfo.logicalShape,$=t.logicalShape;return T.length<=$.length&&(u?w+=function(e,t){let u=e.name,y=u.charAt(0).toUpperCase()+u.slice(1),w=e.shapeInfo.logicalShape.length,T=t.logicalShape.length,$=gD(e.shapeInfo.logicalShape,t.logicalShape),M=Re(T),O=T-w,P,z=["x","y","z","w","u","v"];P=0===w?"":T<2&&$.length>=1?"coords = 0;":$.map(e=>`coords.${z[e+O]} = 0;`).join(`
`);let L="";L=T<2&&w>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${z[t+O]}`).join(", ");let W="return outputValue;",B=1===oc.sizeFromShape(e.shapeInfo.logicalShape),j=1===oc.sizeFromShape(t.logicalShape);if(1!==w||B||j){if(B&&!j)W=1===T?`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:`
        return vec4(outputValue.x);
      `;else if($.length){let e=w-2,t=w-1;$.indexOf(e)>-1&&$.indexOf(t)>-1?W="return vec4(outputValue.x);":$.indexOf(e)>-1?W="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":$.indexOf(t)>-1&&(W="return vec4(outputValue.xx, outputValue.zz);")}}else W=`
      return vec4(outputValue.xy, outputValue.xy);
    `;return`
    vec4 ${"get"+y+"AtOutCoords"}() {
      ${M} coords = getOutputCoords();
      ${P}
      vec4 outputValue = get${y}(${L});
      ${W}
    }
  `}(e,t):w+=function(e,t){let u=e.name,y=u.charAt(0).toUpperCase()+u.slice(1),w="get"+y+"AtOutCoords",T=t.texShape,$=e.shapeInfo.texShape,M=e.shapeInfo.logicalShape.length,O=t.logicalShape.length;if(!e.shapeInfo.isUniform&&M===O&&null==e.shapeInfo.flatOffset&&oc.arraysEqual($,T))return`
      float ${w}() {
        return sampleTexture(${u}, resultUV);
      }
    `;let P=Re(O),z=gD(e.shapeInfo.logicalShape,t.logicalShape),L=O-M,W,B=["x","y","z","w","u","v"];W=0===M?"":O<2&&z.length>=1?"coords = 0;":z.map(e=>`coords.${B[e+L]} = 0;`).join(`
`);let j="";return j=O<2&&M>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${B[t+L]}`).join(", "),`
    float ${w}() {
      ${P} coords = getOutputCoords();
      ${W}
      return get${y}(${j});
    }
  `}(e,t)),w})(e,t,u.packedInputs,u.enableShapeUniforms)).join(`
`),$=t.texShape,M=It(),O=`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${M.texture2D}(textureSampler, uv).r;
    }
  `,P,z,L=`${M.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${M.varyingFs} vec2 resultUV;
    ${M.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${M.defineSpecialNaN}
    ${M.defineSpecialInf}
    ${M.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${gz}
    ${gL}
    ${gW}
  `;return t.isPacked?(P=function(e,t,u){switch(e.length){case 0:return AR();case 1:let y;return 1===(y=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)])[0]?u?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${y[1]}.0);
      }
    `:1===y[1]?u?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${y[0]}.0);
      }
    `:u?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${y[0]}, ${y[1]}));
      return 2 * (resTexRC.x * ${y[1]} + resTexRC.y);
    }
  `;case 2:return function(e,t,u){let y=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(oc.arraysEqual(e,t))return u?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${y[0]}, ${y[1]}));
      }
    `;let w=Math.ceil(e[1]/2);return u?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${y[0]}, ${y[1]}));

      int index = resTexRC.x * ${y[1]} + resTexRC.y;
      int r = 2 * (index / ${w});
      int c = imod(index, ${w}) * 2;

      return ivec2(r, c);
    }
  `}(e,t,u);case 3:return function(e,t,u){if(u)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let y=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],w=Math.ceil(e[2]/2),T=w*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${y[0]}, ${y[1]}));
      int index = resTexRC.x * ${y[1]} + resTexRC.y;

      int b = index / ${T};
      index -= b * ${T};

      int r = 2 * (index / ${w});
      int c = imod(index, ${w}) * 2;

      return ivec3(b, r, c);
    }
  `}(e,t,u);default:return function(e,t,u){if(u)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let y=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],w=Math.ceil(e[e.length-1]/2),T=w*Math.ceil(e[e.length-2]/2),$=T,M="",O="b, r, c";for(let t=2;t<e.length-1;t++)$*=e[e.length-t-1],M=`
      int b${t} = index / ${$};
      index -= b${t} * ${$};
    `+M,O=`b${t}, `+O;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${y[0]}, ${y[1]}));
      int index = resTexRC.x * ${y[1]} + resTexRC.y;

      ${M}

      int b = index / ${T};
      index -= b * ${T};

      int r = 2 * (index / ${w});
      int c = imod(index, ${w}) * 2;

      return ivec${e.length}(${O});
    }
  `}(e,t,u)}}(t.logicalShape,$,u.enableShapeUniforms),z=`
    void setOutput(vec4 val) {
      ${M.output} = val;
    }
  `):(P=function(e,t,u){switch(e.length){case 0:return AR();case 1:return 1===t[0]?u?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:1===t[1]?u?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:u?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `;case 2:return oc.arraysEqual(e,t)?u?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:1===e[1]?u?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:1===e[0]?u?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:u?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `;case 3:return function(e,t,u){if(u)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${xp(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let y=Ws(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${y}
      return ivec3(r, c, d);
    }
  `}(e,t,u);case 4:return function(e,t,u){if(u)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${xp(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let y=Ws(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${y}
      return ivec4(r, c, d, d2);
    }
  `}(e,t,u);case 5:let y;return y=Ws(["r","c","d","d2","d3"],e),`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${y}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `;case 6:let w;return w=Ws(["r","c","d","d2","d3","d4"],e),`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${w}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `;default:throw Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,$,u.enableShapeUniforms),z=`
    void setOutput(float val) {
      ${M.output} = vec4(val, 0, 0, 0);
    }
  `),u.packedInputs&&(L+=gB),[L,O,z,w,P,T,u.userCode].join(`
`)}(u,w={logicalShape:z.shape,texShape:z.texData.texShape,isUniform:!1,isPacked:z.texData.isPacked,flatOffset:null},e),$=RI(t.gl,T),M=t.createProgram($),nG.get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:$,source:T,webGLProgram:M,inShapeInfos:y,outShapeInfo:w,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(t.buildVao(M),Object.assign({program:e,fragmentShader:$,source:T,webGLProgram:M,inShapeInfos:y,outShapeInfo:w},XI(t,e,M)))}),B=null!=this.activeTimers,j;B&&(j=this.startTimer()),nG.get("ENGINE_COMPILE_ONLY")||function(e,t,u,y,w){t.program.enableShapeUniforms||(FR(t.inShapeInfos,u),FR([t.outShapeInfo],[y]));let T=y.texData.texture,$=y.texData.texShape;y.texData.isPacked?e.setOutputPackedMatrixTexture(T.texture,$[0],$[1]):e.setOutputMatrixTexture(T.texture,$[0],$[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===nG.getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let y=0;y<u.length;++y){let w=u[y],{uniform:T,offset:$,shape:M,texShape:O}=t.variablesLocations[y];if(M){let{uniformShape:u}=Zf(t.program.packedInputs,w.shape,w.texData.texShape);switch(u.length){case 1:e.gl.uniform1iv(M,new Int32Array(u));break;case 2:e.gl.uniform2iv(M,new Int32Array(u));break;case 3:e.gl.uniform3iv(M,new Int32Array(u));break;case 4:e.gl.uniform4iv(M,new Int32Array(u))}}if(O&&e.gl.uniform2i(O,w.texData.texShape[0],w.texData.texShape[1]),null!=T){if(w.isUniform){if(2>oc.sizeFromShape(w.shape))e.gl.uniform1f(T,w.uniformValues[0]);else{let t=w.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(T,t)}continue}null!=w.texData.slice&&null!=$&&e.gl.uniform1i($,w.texData.slice.flatOffset),e.setInputMatrixTexture(w.texData.texture.texture,T,y)}}let M=t.outShapeLocation;if(M)switch(y.shape.length){case 1:e.gl.uniform1iv(M,new Int32Array(y.shape));break;case 2:e.gl.uniform2iv(M,new Int32Array(y.shape));break;case 3:e.gl.uniform3iv(M,new Int32Array(y.shape));break;case 4:e.gl.uniform4iv(M,new Int32Array(y.shape))}if(t.outShapeStridesLocation){let u=oc.computeStrides(y.shape);switch(y.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(u));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(u));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(u))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,y.texData.texShape[0],y.texData.texShape[1]),t.program.customUniforms&&w)for(let u=0;u<t.program.customUniforms.length;++u){let y=t.program.customUniforms[u],T=t.customUniformLocations[u],$=w[u];if("float"===y.type)e.gl.uniform1fv(T,$);else if("vec2"===y.type)e.gl.uniform2fv(T,$);else if("vec3"===y.type)e.gl.uniform3fv(T,$);else if("vec4"===y.type)e.gl.uniform4fv(T,$);else if("int"===y.type)e.gl.uniform1iv(T,$);else if("ivec2"===y.type)e.gl.uniform2iv(T,$);else if("ivec3"===y.type)e.gl.uniform3iv(T,$);else if("ivec4"===y.type)e.gl.uniform4iv(T,$);else throw Error(`uniform type ${y.type} is not supported yet.`)}e.executeProgram()}(this.gpgpu,W,P,z,y),O.forEach(e=>this.disposeIntermediateTensorInfo(e)),B&&(j=this.endTimer(j),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(j)}));let q=nG.getNumber("WEBGL_FLUSH_THRESHOLD");if(q>0){let e=oc.now();e-this.lastGlFlushTime>q&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!nG.getBool("WEBGL_LAZILY_UNPACK")&&M.isPacked&&!1===w){let e=this.unpackTensor($);return this.disposeIntermediateTensorInfo($),e}return $}compileAndRun(e,t,u,y,w=!1){return u=u||t[0].dtype,this.runWebGLProgram(e,t,u,y,w)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(nG.getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=De(()=>{if(!nG.get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=nG.getBool("DEBUG");nG.set("DEBUG",!1);let t=this.abs(ke(1e-8)).dataSync()[0];if(nG.set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){let t=this.texData.get(e),{shape:u,dtype:y,values:w,texture:T,usage:$,isPacked:M}=t;if(null!=T)return;let O=null!=this.activeTimers,P;O&&(P=oc.now());let z=t.texShape;if(null==z&&(z=WI(u,M),t.texShape=z),null!=w){let e=_c(u),T,$=z[1],L=z[0],W=w instanceof Uint8Array||w instanceof Uint8ClampedArray;(M||!W)&&([$,L]=Ma(z[0],z[1])),T=M?new gK(e,W):new gX(e,W);let B=W?[L,$]:z,j=this.makeTensorInfo(B,y),q=this.texData.get(j.dataId);W?q.usage=eR.PIXELS:q.usage=eR.UPLOAD,q.texShape=B,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(j.dataId),$,L,w);let Z=[[L,$]],Y=this.runWebGLProgram(T,[j],y,Z,!0),J=this.texData.get(Y.dataId);t.texShape=J.texShape,t.isPacked=J.isPacked,t.usage=J.usage,nG.get("ENGINE_COMPILE_ONLY")?this.disposeData(Y.dataId):(t.texture=J.texture,t.values=null,this.texData.delete(Y.dataId)),this.disposeIntermediateTensorInfo(j),O&&(this.uploadWaitMs+=oc.now()-P)}else{let e=this.acquireTexture(z,$,y,M);t.texture=e}}convertAndCacheOnCPU(e,t){let u=this.texData.get(e),{dtype:y}=u;return null!=t&&(u.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){let u="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<u.length;++t)u[t]=Math.round(e[t]);return u}throw Error(`Unknown dtype ${t}`)}(t,y)),u.values}acquireTexture(e,t,u,y){if(this.numBytesInGPU+=this.computeBytes(e,u),!this.warnedAboutMemory&&this.numBytesInGPU>1048576*this.numMBBeforeWarning){let e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,y)}computeBytes(e,t){return e[0]*e[1]*oc.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(let[,t]of Object.entries(this.binaryCache)){let u=new Promise(e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}});e.push(u)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await cS(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(qf(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),Error("Failed to compile fragment shader.")):Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);let{variablesLocations:t,customUniformLocations:u,infLoc:y,nanLoc:w,outShapeLocation:T,outShapeStridesLocation:$,outTexShapeLocation:M}=XI(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=u,e.infLoc=y,e.nanLoc=w,e.outShapeLocation=T,e.outShapeStridesLocation=$,e.outTexShapeLocation=M}}createTensorFromGPUData(e,t,u){e.channels=e.channels||"RGBA";let{texture:y,height:w,width:T,channels:$}=e,M=oF.backend;if(!M.gpgpu.gl.isTexture(y))throw Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let O=M.writeTexture(y,t,u,w,T,$);return oF.makeTensorFromDataId(O,t,u,M)}};Ah.nextDataId=0;var Ag="4.21.0";function GD(){nG.set("WEBGL_FORCE_F16_TEXTURES",!0)}oO.isBrowser()&&tu("webgl",()=>new Ah,2);var Ay={forceHalfFloat:GD},AA=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,Ax=class{constructor(e,t,u){this.variableNames=["A","B"],this.outputShape=hh.assertAndGetBroadcastShape(t,u),this.enableShapeUniforms=ut(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},Ab=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`,Ak=class{constructor(e,t,u,y=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=hh.assertAndGetBroadcastShape(t,u);let w=this.outputShape.length;this.enableShapeUniforms=ut(w);let T="";if(y){if(0===w||1===oc.sizeFromShape(this.outputShape))T=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(T=`
          ${Re(w)} coords = getOutputCoords();
        `,1===w)this.enableShapeUniforms?T+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:T+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let e=Rt("coords",w);this.enableShapeUniforms?T+=`
            bool nextRowOutOfBounds =
              (${e[w-2]} + 1) >= outShape[${w} - 2];
            bool nextColOutOfBounds =
              (${e[w-1]} + 1) >= outShape[${w} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:T+=`
            bool nextRowOutOfBounds =
              (${e[w-2]} + 1) >= ${this.outputShape[w-2]};
            bool nextColOutOfBounds =
              (${e[w-1]} + 1) >= ${this.outputShape[w-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${T}

        setOutput(result);
      }
    `}};function Dt(e){let{inputs:t,backend:u}=e,{x:y}=t;return u.incRef(y.dataId),{dataId:y.dataId,shape:y.shape,dtype:y.dtype}}function Or(e){let{inputs:t,backend:u}=e,{real:y,imag:w}=t,T=u.makeTensorInfo(y.shape,"complex64"),$=u.texData.get(T.dataId),M=Dt({inputs:{x:y},backend:u}),O=Dt({inputs:{x:w},backend:u});return $.complexTensorInfos={real:M,imag:O},T}var AS="return (a < 0.) ? b * a : a;",AN=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`,AC="return (a < 0.) ? b * a : a;",AT=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`,AE="if (isnan(x)) return x;";function xe({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:u,dtype:y}){return({inputs:w,backend:T})=>{let $,{x:M}=w,O=y||M.dtype;if(T.shouldExecuteOnCPU([M])&&null!=u){let e=u(T.texData.get(M.dataId).values,O);return T.makeTensorInfo(M.shape,O,e)}return $=nG.getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new An(M.shape,t):new yQ(M.shape,e),T.runWebGLProgram($,[M],O)}}function nt({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:u=!1,supportsComplex:y=!1,cpuKernelImpl:w,dtype:T}){return({inputs:$,backend:M})=>{let O,{a:P,b:z}=$;if(y&&"complex64"===P.dtype){let t=M.texData.get(P.dataId),u=M.texData.get(z.dataId),[y,w]=[[t.complexTensorInfos.real,u.complexTensorInfos.real],[t.complexTensorInfos.imag,u.complexTensorInfos.imag]].map(t=>{let[u,y]=t,w={dataId:u.dataId,dtype:u.dtype,shape:P.shape},T={dataId:y.dataId,dtype:y.dtype,shape:z.shape},$=new Ax(e,P.shape,z.shape);return M.runWebGLProgram($,[w,T],dt(u.dtype,y.dtype))}),T=Or({inputs:{real:y,imag:w},backend:M});return M.disposeIntermediateTensorInfo(y),M.disposeIntermediateTensorInfo(w),T}let L=T||dt(P.dtype,z.dtype);if(("string"===P.dtype||"string"===z.dtype||M.shouldExecuteOnCPU([P,z]))&&null!=w){let e=M.texData.get(P.dataId).values,t=M.texData.get(z.dataId).values,u="string"===P.dtype?hh.fromUint8ToStringArray(e):e,y="string"===P.dtype?hh.fromUint8ToStringArray(t):t,[T,$]=w(P.shape,z.shape,u,y,L),O=M.makeTensorInfo($,L);return M.texData.get(O.dataId).values=T,O}return O=nG.getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new Ak(t,P.shape,z.shape,u):new Ax(e,P.shape,z.shape),M.runWebGLProgram(O,[P,z],L)}}function yi(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?y9:y3;if("elu"===e)return t?y8:"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?Aa:y7;if("prelu"===e)return t?AT:AC;if("leakyrelu"===e)return t?AN:AS;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var A$=class{constructor(e,t,u,y=!1,w=!1,T=!1,$=null,M=!1,O=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=u,this.enableShapeUniforms=ut(this.outputShape.length);let P=Math.ceil((y?e[1]:e[2])/2),z=y?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],L=w?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],W="",B="";$&&(W=M?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${$}
        }`:O?`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${$}
        }`:`vec4 activation(vec4 x) {
          ${$}
        }`,B="result = activation(result);"),T&&this.variableNames.push("bias"),M&&this.variableNames.push("preluActivationWeights"),O&&this.variableNames.push("leakyreluAlpha");let j="rc.x",q="rc.x";e[0]<t[0]?j=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(q=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${W}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${P}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${j};
        int batchB = ${q};
        for (int i = 0; i < ${P}; i++) {
          vec4 a = getMatrixA(batchA, ${y?"i * 2, rc.y":"rc.y, i * 2"});
          vec4 b = getMatrixB(batchB, ${w?"rc.z, i * 2":"i * 2, rc.z"});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${z[0]} * ${L[0]});
          result += (${z[1]} * ${L[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${T?"result += getBiasAtOutCoords();":""}

        ${B}

        setOutput(result);
      }
    `}},A_={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},AM=class{constructor(e,t,u){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=hh.assertAndGetBroadcastShape(t,u),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},AF="return a * b;";function tm(e){let t,{inputs:u,backend:y}=e,{a:w,b:T}=u,$=hh.upcastType(w.dtype,T.dtype);if("complex64"===w.dtype){let e=y.texData.get(w.dataId),t=y.texData.get(T.dataId),u=new AM(A_.REAL,w.shape,T.shape),$=new AM(A_.IMAG,w.shape,T.shape),M=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:w.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:w.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:T.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:T.shape}],O=y.runWebGLProgram(u,M,"float32"),P=y.runWebGLProgram($,M,"float32"),z=Or({inputs:{real:O,imag:P},backend:y});return y.disposeIntermediateTensorInfo(O),y.disposeIntermediateTensorInfo(P),z}if(y.shouldExecuteOnCPU([w,T])){let e=y.texData.get(w.dataId),t=y.texData.get(T.dataId),[u,M]=yA(w.shape,T.shape,e.values,t.values,$),O=y.makeTensorInfo(M,$);return y.texData.get(O.dataId).values=u,O}return t=nG.getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ak(AF,w.shape,T.shape):new Ax(AF,w.shape,T.shape),y.runWebGLProgram(t,[w,T],$)}function te(e){let t,u,y,w,T,$,{inputs:M,backend:O,attrs:P}=e,{x:z}=M,{shape:L}=P,W=oc.sizeFromShape(z.shape),B=oc.inferFromImplicitShape(L,W),j=oc.sizeFromShape(B);oc.assert(W===j,()=>`The new shape (${B}) has ${j} elements and the old shape (${z.shape}) has ${W} elements. The new shape and old shape must have the same number of elements.`);let q=O.texData.get(z.dataId);return!q.isPacked||xu(z.shape,B)||null!==q.texture&&xu(q.shape,B)?(O.incRef(z.dataId),{dataId:z.dataId,shape:B,dtype:z.dtype}):(t=[gi(z.shape),...xi(z.shape)],u={dtype:z.dtype,shape:t,dataId:z.dataId},y=[gi(B),...xi(B)],w=new yY(y,t),T=[t],{dataId:($=O.runWebGLProgram(w,[u],z.dtype,T,!0)).dataId,shape:B,dtype:$.dtype})}var AO=class{constructor(e,t){this.variableNames=["x"];let{windowSize:u,batchSize:y,inSize:w,outSize:T}=e;this.outputShape=[y,T];let $=4*Math.floor(u/4),M=u%4,O="sumValue += dot(values, ones);";if(null!=t){let e=1/t;O=`sumValue += dot(values * ${oc.isInt(e)?e.toPrecision(2):e}, ones);`}let P="";w%u>0&&(P=`
        if (inIdx < 0 || inIdx >= ${w}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${P}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${u};

        float sumValue = 0.0;

        for (int i = 0; i < ${$}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${O}
        }

        int inIdx = inOffset + ${$};
        if (${1===M}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${O}
        } else if (${2===M}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${O}
        } else if (${3===M}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${O}
        }
        setOutput(sumValue);
      }
    `}},AP=class{constructor(e,t){this.variableNames=["x"];let{windowSize:u,batchSize:y,inSize:w,outSize:T}=e;this.outputShape=[y,T];let $="0.0",M="";"prod"===t?$="1.0":"min"===t?($="1.0 / 1e-20",M="min"):"max"===t&&($="-1.0 / 1e-20",M="max");let O=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?O="sumValue":"prod"===t?O="prodValue":"all"===t?O="allValue":"any"===t&&(O="anyValue");let P=4*Math.floor(u/4),z=u%4,L=`
      if (${"sum"===t}) {
        sumValue += dot(values, ones);
      } else if (${"prod"===t}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${M}(values, minMaxValue);
        if (${"min"===t} || ${"max"===t}) {
          minMaxValue = ${M}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,W="vec4";"all"===t?($="1.0",L=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,W="bvec4"):"any"===t&&($="0.0",L=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,W="bvec4");let B="";w%u>0&&(B=`
        if (inIdx < 0 || inIdx >= ${w}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${$};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${B}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${u};

        vec4 minMaxValue = vec4(${$});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${P}; i += 4) {
          int inIdx = inOffset + i;
          ${W} values = ${W}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${L}
        }

        int inIdx = inOffset + ${P};
        if (${1===z}) {
          ${W} values = ${W}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${L}
        } else if (${2===z}) {
          ${W} values = ${W}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${L}
        } else if (${3===z}) {
          ${W} values = ${W}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${L}
        }
        setOutput(${O});
      }
    `}};function Yr(e,t,u,y){let w=function(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let u=t.length?t[t.length-1].outSize:e[1],y=hh.computeOptimalWindowSize(u);t.push({inSize:u,windowSize:y,outSize:Math.ceil(u/y)})}return t}(e.shape),T=e;for(let $=0;$<w.length;$++){let{inSize:M,windowSize:O,outSize:P}=w[$],z,L;z="mean"===u?0===$?new AO({windowSize:O,inSize:M,batchSize:e.shape[0],outSize:P},M):new AO({windowSize:O,inSize:M,batchSize:e.shape[0],outSize:P}):new AP({windowSize:O,inSize:M,batchSize:e.shape[0],outSize:P},u),L=T,T=y.runWebGLProgram(z,[T],t),L.dataId!==e.dataId&&y.disposeIntermediateTensorInfo(L)}return T}var AD=class{constructor(e,t){this.variableNames=["A"];let u=Array(e.length);for(let y=0;y<u.length;y++)u[y]=e[t[y]];this.outputShape=u,this.rank=u.length;let y=Re(this.rank),w=function(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let u=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],y=Array(t);for(let t=0;t<e.length;t++)y[e[t]]=u[t];return y.join()}(t);this.userCode=`
    void main() {
      ${y} resRC = getOutputCoords();
      setOutput(getA(${w}));
    }
    `}},Az=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let u=Array(e.length);for(let y=0;y<u.length;y++)u[y]=e[t[y]];if(this.outputShape=u,this.rank=u.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let y=Re(this.rank),w=dv("rc",this.rank),T=Array(this.rank);for(let e=0;e<t.length;e++)T[t[e]]=w[e];let $=`vec2(${T.slice(-2).join()})`,M=`++${w[this.rank-1]} < ${u[this.rank-1]}`,O=`getChannel(getA(${T.join()}), ${$})`;this.userCode=`
    void main() {
      ${y} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${O};
      if(${M}) {
        result[1] = ${O};
      }
      --${w[this.rank-1]};
      if(++${w[this.rank-2]} < ${u[this.rank-2]}) {
        result[2] = ${O};
        if(${M}) {
          result[3] = ${O};
        }
      }
      setOutput(result);
    }
    `}};function yu(e,t,u){let y=nG.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Az(e.shape,t):new AD(e.shape,t);return u.runWebGLProgram(y,[e],e.dtype)}function wp(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{axis:T,keepDims:$}=y;return function(e,t,u,y){let w=e.shape.length,T=oc.parseAxisParam(t,e.shape),$=T,M=hh.getAxesPermutation($,w),O=null!=M,P=e;O&&(P=yu(e,M,y),$=hh.getInnerMostAxes($.length,w)),hh.assertAxesAreInnerMostDims("sum",$,w);let[z,L]=hh.computeOutAndReduceShapes(P.shape,$),W=z;u&&(W=hh.expandShapeToKeepDim(z,T));let B=oc.sizeFromShape(L),j=te({inputs:{x:P},attrs:{shape:[oc.sizeFromShape(e.shape)/B,B]},backend:y}),q=Yr(j,oi(e.dtype),"sum",y),Z=te({inputs:{x:q},attrs:{shape:W},backend:y});return y.disposeIntermediateTensorInfo(j),y.disposeIntermediateTensorInfo(q),O&&y.disposeIntermediateTensorInfo(P),Z}(w,T,$,u)}function bt(e){let t,{inputs:u,backend:y,attrs:w}=e,{x:T}=u,{perm:$}=w,M=Array(T.shape.length);for(let e=0;e<M.length;e++)M[e]=T.shape[$[e]];if(y.shouldExecuteOnCPU([T])){let e=yX(y.texData.get(T.dataId).values,T.shape,T.dtype,$,M);t=y.makeTensorInfo(M,T.dtype),y.texData.get(t.dataId).values=e}else t=yu(T,$,y);return t}function Sp({a:e,b:t,transposeA:u,transposeB:y,backend:w,bias:T=null,preluActivationWeights:$=null,leakyreluAlpha:M=0,activation:O=null}){let P=e.shape.length,z=t.shape.length,L=u?e.shape[P-2]:e.shape[P-1],W=y?t.shape[z-1]:t.shape[z-2],B=u?e.shape[P-1]:e.shape[P-2],j=y?t.shape[z-2]:t.shape[z-1],q=e.shape.slice(0,-2),Z=t.shape.slice(0,-2),Y=oc.sizeFromShape(q),J=oc.sizeFromShape(Z),ee=un.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([B,j]);oc.assert(L===W,()=>`Error in matMul: inner shapes (${L}) and (${W}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${u} and transposeB=${y} must match.`);let ea=u?[Y,L,B]:[Y,B,L],en=y?[J,j,W]:[J,W,j],er=te({inputs:{x:e},backend:w,attrs:{shape:ea}}),ei=te({inputs:{x:t},backend:w,attrs:{shape:en}}),es=[er,ei],el=Math.max(Y,J),eu=u?er.shape[1]:er.shape[2],ed=null!=T,ep=null!=$,ec="leakyrelu"===O,eh=null!=O?yi(O,!0):null,em=ed||ep||ec||null!=eh,ey;if((1===B||1===j)&&eu>1e3&&!1===em){let e=er,t=ei;u&&(e=bt({inputs:{x:er},backend:w,attrs:{perm:[0,2,1]}}),es.push(e)),y&&(t=bt({inputs:{x:ei},backend:w,attrs:{perm:[0,2,1]}}),es.push(t));let T=1!==j,$=1===j,M=e;T&&(M=te({inputs:{x:e},backend:w,attrs:{shape:[el,eu,1]}}),es.push(M));let O=1===j?2:1,P=t;$&&(P=te({inputs:{x:t},backend:w,attrs:{shape:[el,1,eu]}}),es.push(P));let z=tm({inputs:{a:M,b:P},backend:w});ey=wp({inputs:{x:z},backend:w,attrs:{axis:O,keepDims:!0}}),es.push(z)}else{let O=dt(e.dtype,t.dtype),P=new A$(ea,en,[el,B,j],u,y,ed,eh,ep,ec),z=[er,ei];if(null!=T&&z.push(T),ep&&z.push($),ec){let e=w.makeTensorInfo([],"float32",oc.createScalarValue(M,"float32"));z.push(e),es.push(e)}ey=w.runWebGLProgram(P,z,O)}let eA=te({inputs:{x:ey},backend:w,attrs:{shape:ee}});for(let e of(es.push(ey),es))w.disposeIntermediateTensorInfo(e);return eA}var AL="return abs(x);",AW=xe({opSnippet:y1+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`}),AB=xe({opSnippet:y1+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`}),AV="return a + b;",AU=nt({opSnippet:AV,packedOpSnippet:AV,supportsComplex:!0,cpuKernelImpl:gJ}),AH=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);let u=[];this.variableNames.forEach(e=>{u.push(`float v${e} = get${e}AtOutCoords();`)});let y=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`
      void main() {
        ${u.join(`
        `)}

        float result = ${y};
        setOutput(result);
      }
    `}},Aj=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);let u=[];this.variableNames.forEach(e=>{u.push(`vec4 v${e} = get${e}AtOutCoords();`)});let y=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`
      void main() {
        ${u.join(`
        `)}

        vec4 result = ${y};
        setOutput(result);
      }
    `}},Aq=class{constructor(e,t,u){this.variableNames=["A"];let{windowSize:y,batchSize:w,outSize:T}=e;u||this.variableNames.push("bestIndicesA"),this.outputShape=[w,T],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${y};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${y}; i++) {
          int inIdx = ${u?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};
          float candidate = getA(batch, inIdx);
          if (candidate ${"max"===t?">":"<"} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},AK=class{constructor(e,t,u,y){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,oc.assert(e.length>2,()=>`Packed arg${u.charAt(0).toUpperCase()+u.slice(1)} supports only inputs with rank above 2.`);let w=Math.ceil(e[e.length-1]/t);this.outputShape=e.slice(0,-1),w>1&&this.outputShape.push(w),y||this.variableNames.push("bestIndicesA");let T=this.outputShape,$=T.length,M=Re($),O=Rt("coords",$),P,z;if(1===w){let e=Re(z=$+1);P=`
        ${e} sourceLocR = ${e}(${O.join()}, 0);
        ++${O[$-1]};
        ${e} sourceLocG = ${e}(${O.join()}, 0);
        ++${O[$-2]};
        ${e} sourceLocA = ${e}(${O.join()}, 0);
        --${O[$-1]};
        ${e} sourceLocB = ${e}(${O.join()}, 0);
        --${O[$-2]};`}else z=$,P=`
        ${M} sourceLocR = coords;
        ++${O[$-1]};
        ${M} sourceLocG = coords;
        ++${O[$-2]};
        ${M} sourceLocA = coords;
        --${O[$-1]};
        ${M} sourceLocB = coords;
        --${O[$-2]};`;let L=["x","y","z","w","u","v"].slice(0,z),W="."+L[z-1],B=L.map(e=>"int "+e),j=Rt("sourceLocR",z-1).concat("inIdx.r"),q=Rt("sourceLocG",z-1).concat("inIdx.g"),Z=Rt("sourceLocB",z-1).concat("inIdx.b"),Y=Rt("sourceLocA",z-1).concat("inIdx.a"),J=y?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${j.join()}),
                             getBestIndicesAChannel(${q.join()}),
                             getBestIndicesAChannel(${Z.join()}),
                             getBestIndicesAChannel(${Y.join()})));`,ee=`vec4(
            getAChannel(${j.join()}),
            hasNextCol ? getAChannel(${q.join()}) : 0.,
            hasNextRow ? getAChannel(${Z.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${Y.join()}) : 0.)`,ea=y?"":`
      float getBestIndicesAChannel(${B.join()}) {
        return getChannel(getBestIndicesA(${L.join()}),
                                          vec2(${L.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${B.join()}) {
        return getChannel(getA(${L.join()}),
                               vec2(${L.slice(-2).join()}));
      }
      ${ea}
      void main() {
        ${M} coords = getOutputCoords();
        bool hasNextCol = ${O[$-1]} < ${T[$-1]-1};
        bool hasNextRow = ${O[$-2]} < ${T[$-2]-1};
        ${P}
        ivec4 srcIdx = ivec4(sourceLocR${W}, sourceLocG${W},
          sourceLocB${W}, sourceLocA${W}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${ee};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${J}
          vec4 candidate = ${ee};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${"max"===u?"greaterThan":"lessThan"}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function vh(e,t,u,y){let w=[u];if(hh.assertAxesAreInnerMostDims("arg"+y.charAt(0).toUpperCase()+y.slice(1),w,t.shape.length),!nG.getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let u=[],T=e.texData.get(t.dataId),$=null!==T&&T.isPacked,M=t;$&&u.push(M=e.unpackTensor(t));let[O,P]=hh.computeOutAndReduceShapes(M.shape,w),z=te({inputs:{x:M},backend:e,attrs:{shape:[-1,oc.sizeFromShape(P)]}});u.push(z);let L=function mA(e,t,u,y=null){let w=t.shape[0],T=t.shape[1];null!=y&&(w=y.shape[0],T=y.shape[1]);let $=hh.computeOptimalWindowSize(T),M={windowSize:$,inSize:T,batchSize:w,outSize:Math.ceil(T/$)},O=new Aq(M,u,null==y),P=[t];null!=y&&P.push(y);let z=e.runWebGLProgram(O,P,"int32");if(1===z.shape[1])return z;let L=mA(e,t,u,z);return e.disposeIntermediateTensorInfo(z),L}(e,z,y);u.push(L);let W=te({inputs:{x:L},backend:e,attrs:{shape:O}});return u.forEach(t=>e.disposeIntermediateTensorInfo(t)),W}return function dA(e,t,u,y=null){let w=null!=y?y.shape:t.shape,T=w[w.length-1],$=hh.computeOptimalWindowSize(T),M=new AK(w,$,u,null==y),O=null==y?[t]:[t,y],P=e.runWebGLProgram(M,O,"int32");if(P.shape.length===t.shape.length){let y=dA(e,t,u,P);return e.disposeIntermediateTensorInfo(P),y}return P}(e,t,y)}var AZ=xe({opSnippet:y1+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`}),AY=xe({opSnippet:y1+"return log(x + sqrt(x * x + 1.0));"}),AJ=xe({opSnippet:y1+`
  return atan(x);
`}),AQ=nt({opSnippet:AA+`
  return atan(a, b);
`,packedOpSnippet:`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ab+`
  return result;
`}),A2=xe({opSnippet:y1+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`}),A0=class{constructor(e,t,u,y=!1,w=!1){if(this.variableNames=["x"],"avg"===t&&u)throw Error("Cannot compute positions for average pool.");let T=e.filterWidth,$=e.strideHeight,M=e.strideWidth,O=e.dilationHeight,P=e.dilationWidth,z=e.effectiveFilterHeight,L=e.effectiveFilterWidth,W=e.padInfo.top,B=e.padInfo.left;this.outputShape=e.outShape;let j="avg"===t,q=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,Z=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,Y="0.0";if(j||(Y="-1.0 / 1e-20"),u){this.userCode=`
        const ivec2 strides = ivec2(${$}, ${M});
        const ivec2 pads = ivec2(${W}, ${B});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${z};
              wR += ${O}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${L};
                wC += ${P}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value >= currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${y?w?q:Z:`wR * ${L} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let J=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(J="avgValue / max(count, 1.0)");let ee=4*Math.floor(T/4),ea=T%4,en=`
      if (${j}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${$}, ${M});
      const ivec2 pads = ivec2(${W}, ${B});
      const float initializationValue = ${Y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${Y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${z};
            wR += ${O}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${ee}; wC += 4) {
            int xC = xCCorner + wC * ${P};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${P}, d),
              getValue(batch, xR, xC + 2 * ${P}, d),
              getValue(batch, xR, xC + 3 * ${P}, d)
            );

            ${en}
          }

          int xC = xCCorner + ${ee};
          if (${1===ea}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${en}
          } else if (${2===ea}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${P}, d),
              initializationValue,
              initializationValue
            );

            ${en}
          } else if (${3===ea}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${P}, d),
              getValue(batch, xR, xC + 2 * ${P}, d),
              initializationValue
            );

            ${en}
          }
        }
        setOutput(${J});
      }
    `}},A3=class{constructor(e,t,u,y=!1,w=!1){if(this.variableNames=["x"],"avg"===t&&u)throw Error("Cannot compute positions for average pool.");let T=e.filterWidth,$=e.strideDepth,M=e.strideHeight,O=e.strideWidth,P=e.dilationDepth,z=e.dilationHeight,L=e.dilationWidth,W=e.effectiveFilterDepth,B=e.effectiveFilterHeight,j=e.effectiveFilterWidth,q=e.padInfo.front,Z=e.padInfo.top,Y=e.padInfo.left;this.outputShape=e.outShape;let J="avg"===t,ee="0.0";if(J||(ee="-1.0 / 1e-20"),u){this.userCode=`
        const ivec3 strides =
            ivec3(${$}, ${M}, ${O});
        const ivec3 pads = ivec3(${q}, ${Z}, ${Y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${W};
              wD += ${P}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${B};
                wR += ${z}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${j};
                  wC += ${L}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value >= currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${y?w?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${B} * ${j} +
                      wR * ${j} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let ea=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(ea="avgValue / max(count, 1.0)");let en=4*Math.floor(T/4),er=T%4,ei=`
      if (${J}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${$}, ${M}, ${O});
      const ivec3 pads = ivec3(${q}, ${Z}, ${Y});
      const float initializationValue = ${ee};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${ee});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${W};
            wD += ${P}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${B};
            wR += ${z}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${en}; wC += 4) {
              int xC = xCCorner + wC * ${L};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${L}, ch),
                getValue(batch, xD, xR, xC + 2 * ${L}, ch),
                getValue(batch, xD, xR, xC + 3 * ${L}, ch)
              );

              ${ei}
            }

            int xC = xCCorner + ${en};
            if (${1===er}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${ei}
            } else if (${2===er}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${L}, ch),
                initializationValue,
                initializationValue
              );

              ${ei}
            } else if (${3===er}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${L}, ch),
                getValue(batch, xD, xR, xC + 2 * ${L}, ch),
                initializationValue
              );

              ${ei}
            }
          }
        }
        setOutput(${ea});
      }
    `}},A7=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,u=e.filterWidth,y=e.strideHeight,w=e.strideWidth,T=e.dilationHeight,$=e.dilationWidth,M=e.effectiveFilterHeight,O=e.effectiveFilterWidth,P=M-1-e.padInfo.top,z=O-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${P}, ${z});
      const float avgMultiplier = float(${1/(t*u)});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${M};
            wR += ${T}) {
          float dyR = float(dyRCorner + wR) / ${y}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${O};
            wC+= ${$}) {
            float dyC = float(dyCCorner + wC) / ${w}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},A4=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,u=e.filterHeight,y=e.filterWidth,w=e.strideDepth,T=e.strideHeight,$=e.strideWidth,M=e.dilationDepth,O=e.dilationHeight,P=e.dilationWidth,z=e.effectiveFilterDepth,L=e.effectiveFilterHeight,W=e.effectiveFilterWidth,B=z-1-e.padInfo.front,j=L-1-e.padInfo.top,q=W-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${B}, ${j}, ${q});
      const float avgMultiplier = float(${1/(t*u*y)});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${z};
            wD += ${M}) {
          float dyD = float(dyDCorner + wD) / ${w}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${L};
              wR += ${O}) {
            float dyR = float(dyRCorner + wR) / ${T}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${W};
                wC += ${P}) {
              float dyC = float(dyCCorner + wC) / ${$}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}},A6=class{constructor(e,t,u,y,w,T){this.outputShape=[],this.variableNames=["x","mean","variance"],hh.assertAndGetBroadcastShape(e,t),hh.assertAndGetBroadcastShape(e,u);let $="0.0";null!=y&&(hh.assertAndGetBroadcastShape(e,y),this.variableNames.push("offset"),$="getOffsetAtOutCoords()");let M="1.0";null!=w&&(hh.assertAndGetBroadcastShape(e,w),this.variableNames.push("scale"),M="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${$};
        float scale = ${M};
        float inv = scale * inversesqrt(variance + float(${T}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},A8=class{constructor(e,t,u,y,w,T){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],hh.assertAndGetBroadcastShape(e,t),hh.assertAndGetBroadcastShape(e,u);let $="vec4(0.0)";null!=y&&(hh.assertAndGetBroadcastShape(e,y),this.variableNames.push("offset"),$="getOffsetAtOutCoords()");let M="vec4(1.0)";null!=w&&(hh.assertAndGetBroadcastShape(e,w),this.variableNames.push("scale"),M="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${$};
        vec4 scale = ${M};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${T}));

        setOutput((x - mean) * inv + offset);
      }
    `}},A9=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=Re(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let u=function(e){if(1===e)return"sourceLoc";if(e<=6)return xa.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank),y,w=e.map((e,t)=>`sourceLoc.${xa[t]} = start[${t}] + coords.${xa[t]};`);y=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${w.join(`
`)}
      `,this.userCode=`
      void main() {
        ${y}
        setOutput(getSource(${u}));
      }
    `}},xa=["x","y","z","w","u","v"],xn=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=Re(this.rank),u=Rt("coords",this.rank),y=Rt("sourceLoc",this.rank),w=1===this.rank?"sourceLoc":`vec2(${y.slice(-2).join()})`,T=`getChannel(getSource(${y.join()}), ${w})`,$=`
      result.x = ${T};
      if (++${u[this.rank-1]} < ${e[this.rank-1]}) {
        ++${y[this.rank-1]};
        result.y = ${T};
        --${y[this.rank-1]};
      }
    `,M=1===this.rank?"":`
      --${u[this.rank-1]};
      if (++${u[this.rank-2]} < ${e[this.rank-2]}) {
        ++${y[this.rank-2]};
        result.z = ${T};
        if (++${u[this.rank-1]} < ${e[this.rank-1]}) {
          ++${y[this.rank-1]};
          result.w = ${T};
        }
      }
    `,O=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${y[t]} = ${u[t]} + start[${t}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${O}
        vec4 result = vec4(0.);
        ${$}
        ${M}
        setOutput(result);
      }
    `}};function Gs(e){let t,u,y,w,T,{inputs:$,backend:M,attrs:O}=e,{x:P}=$,{begin:z,size:L}=O,[W,B]=hs.parseSliceParams(P,z,L);if(hs.assertParamsValid(P,W,B),0===oc.sizeFromShape(B))return M.makeTensorInfo(B,P.dtype,[]);if(M.shouldExecuteOnCPU([P])||"string"===P.dtype){let e=yO(M.texData.get(P.dataId).values,W,B,P.shape,P.dtype);return M.makeTensorInfo(B,P.dtype,e)}let{isPacked:j}=M.texData.get(P.dataId),q=hs.isSliceContinous(P.shape,W,B);if(j||!q){let e=nG.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xn(B):new A9(B),t=[W];return M.runWebGLProgram(e,[P],P.dtype,t)}return M.uploadToGPU(P.dataId),t=M.texData.get(P.dataId),u=M.makeTensorInfo(B,P.dtype),Object.assign(y=M.texData.get(u.dataId),t),y.refCount=1,y.shape=B,y.dtype=P.dtype,w=hs.computeFlatOffset(W,oc.computeStrides(P.shape)),t.slice&&(w+=t.slice.flatOffset),y.slice={flatOffset:w,origDataId:t.slice&&t.slice.origDataId||P.dataId},T=M.dataRefCount.get(y.slice.origDataId)||1,M.dataRefCount.set(y.slice.origDataId,T+1),u}var xs=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,xl=`
  return float(int(a.r) & int(b.r));
`,xc=nt({opSnippet:"return float(a != b);",cpuKernelImpl:yv,dtype:"bool"});function bi(e){let{inputs:t,backend:u}=e,{input:y}=t;return Dt({inputs:{x:u.texData.get(y.dataId).complexTensorInfos.real},backend:u})}var xh="return ceil(x);",xm=xe({opSnippet:xh,packedOpSnippet:xh,cpuKernelImpl:g3}),xg=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},xy=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}},xA=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function BA(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var xx=class{constructor(e){this.outputShape=[],this.outputShape=hh.computeOutShape(e,1),this.variableNames=e.map((e,t)=>`T${t}`);let t=Array(e.length-1);t[0]=e[0][1];for(let u=1;u<t.length;u++)t[u]=t[u-1]+e[u][1];let u=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){let y=t[e-1];u.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${y}));`)}let y=t.length,w=t[t.length-1];u.push(`else setOutput(getT${y}(yR, yC-${w}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${u.join(`
        `)}
      }
    `}},xb=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=hh.computeOutShape(e,t);let u=this.outputShape,y=u.length,w=Re(y),T=Rt("coords",y),$=["x","y","z","w","u","v"].slice(0,y);this.variableNames=e.map((e,t)=>`T${t}`);let M=Array(e.length-1);M[0]=e[0][t];for(let u=1;u<M.length;u++)M[u]=M[u-1]+e[u][t];let O=$[t],P=$.slice(-2),z=$.join(),L=`if (${O} < ${M[0]}) {
        return getChannel(
            getT0(${z}), vec2(${P.join()}));
        }`;for(let e=1;e<M.length;e++){let t=M[e-1];L+=`
        if (${O} < ${M[e]}  && ${O} >= ${M[e-1]}) {
          return getChannel(
            getT${e}(${Ph($,O,t)}),
            vec2(${Ph(P,O,t)}));
        }`}let W=M.length,B=M[M.length-1];L+=`
        return getChannel(
          getT${W}(${Ph($,O,B)}),
          vec2(${Ph(P,O,B)}));`,this.userCode=`
      float getValue(${$.map(e=>"int "+e)}) {
        ${L}
      }

      void main() {
        ${w} coords = getOutputCoords();
        vec4 result = vec4(getValue(${T}), 0., 0., 0.);

        ${T[y-1]} = ${T[y-1]} + 1;
        if (${T[y-1]} < ${u[y-1]}) {
          result.g = getValue(${T});
        }

        ${T[y-2]} = ${T[y-2]} + 1;
        if (${T[y-2]} < ${u[y-2]}) {
          result.a = getValue(${T});
        }

        ${T[y-1]} = ${T[y-1]} - 1;
        if (${T[y-2]} < ${u[y-2]} &&
            ${T[y-1]} < ${u[y-1]}) {
          result.b = getValue(${T});
        }
        setOutput(result);
      }
    `}};function Ph(e,t,u){let y=e.indexOf(t);return e.map((e,t)=>t===y?`${e} - ${u}`:e).join()}function Ip(e){let{inputs:t,backend:u}=e,{input:y}=t;return Dt({inputs:{x:u.texData.get(y.dataId).complexTensorInfos.imag},backend:u})}function vv(e){let{inputs:t,backend:u,attrs:y}=e,{axis:w}=y,T=oc.parseAxisParam(w,t[0].shape)[0],$=t.map(e=>e.shape);hh.assertParamsConsistent($,T);let M=hh.computeOutShape(t.map(e=>e.shape),T);if(0===oc.sizeFromShape(M))return u.makeTensorInfo(M,t[0].dtype,[]);let O=t.filter(e=>oc.sizeFromShape(e.shape)>0);return 1===O.length?Dt({inputs:{x:O[0]},backend:u}):function Vc(e,t,u){let y,w=e[0].dtype;if("complex64"===w){let y=e.map(e=>bi({inputs:{input:e},backend:u})),w=e.map(e=>Ip({inputs:{input:e},backend:u})),T=Vc(y,t,u),$=Vc(w,t,u),M=Or({inputs:{real:T,imag:$},backend:u});return y.forEach(e=>u.disposeIntermediateTensorInfo(e)),w.forEach(e=>u.disposeIntermediateTensorInfo(e)),u.disposeIntermediateTensorInfo(T),u.disposeIntermediateTensorInfo($),M}let T=u.shouldExecuteOnCPU(e);if("string"===w&&(T=!0),T){let y=e.map(e=>{let y=[-1,oc.sizeFromShape(e.shape.slice(t))];return te({inputs:{x:e},backend:u,attrs:{shape:y}})}),T=g7(y.map(e=>({vals:u.readSync(e.dataId),shape:e.shape})),hh.computeOutShape(y.map(e=>e.shape),1),w,1===y[0].shape[0]),$=hh.computeOutShape(e.map(e=>e.shape),t),M=u.makeTensorInfo($,w,T);return y.forEach(e=>u.disposeIntermediateTensorInfo(e)),M}let $=e.filter(e=>oc.sizeFromShape(e.shape)>0),M=nG.getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&$[0].shape.length>1;if(1===$.length){let t=M?new yQ(e[0].shape,y6):new An(e[0].shape,y6);return u.runWebGLProgram(t,e,w)}let O=nG.getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if($.length>O){let e=[];for(let y=0;y<$.length;y+=O){let w=$.slice(y,y+O);e.push(Vc(w,t,u))}let y=Vc(e,t,u);for(let t of e)u.disposeIntermediateTensorInfo(t);return y}if(M){let e=new xb($.map(e=>e.shape),t);return u.runWebGLProgram(e,$,w)}let{tensors2D:P,outShape:z}=(y=hh.computeOutShape($.map(e=>e.shape),t),{tensors2D:$.map(e=>te({inputs:{x:e},attrs:{shape:[-1,oc.sizeFromShape(e.shape.slice(t))]},backend:u})),outShape:y}),L=new xx(P.map(e=>e.shape)),W=u.runWebGLProgram(L,P,w);P.forEach(e=>u.disposeIntermediateTensorInfo(e));let B=te({inputs:{x:W},attrs:{shape:z},backend:u});return u.disposeIntermediateTensorInfo(W),B}(O,T,u)}var xv=class{constructor(e,t=!1,u=null,y=!1,w=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let T=e.padInfo.top,$=e.padInfo.left,M=e.strideHeight,O=e.strideWidth,P=e.dilationHeight,z=e.dilationWidth,L=e.filterHeight,W=e.filterWidth,B=4*Math.floor(e.inChannels/4),j=e.inChannels%4,q="channelsLast"===e.dataFormat,Z="",Y="";u&&(Z=y?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${u}
        }`:w?`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${u}
        }`:`
          float activation(float x) {
            ${u}
          }
        `,Y="result = activation(result);"),t&&this.variableNames.push("bias"),y&&this.variableNames.push("preluActivationWeights"),w&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${Z}

      const ivec2 strides = ivec2(${M}, ${O});
      const ivec2 pads = ivec2(${T}, ${$});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${q?3:1}];

        ivec2 xRCCorner =
            ivec2(coords[${q?1:2}], coords[${q?2:3}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${L}; wR++) {
          int xR = xRCorner + wR * ${P};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${W}; wC++) {
            int xC = xCCorner + wC * ${z};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${B}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${q}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${1===j}) {

              if (${q}) {
                dotProd +=
                    getX(batch, xR, xC, ${B}) *
                    getW(wR, wC, ${B}, d2);
              } else {
                dotProd +=
                    getX(batch, ${B}, xR, xC) *
                    getW(wR, wC, ${B}, d2);
              }

            } else if (${2===j}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${B}, d2),
                getW(wR, wC, ${B} + 1, d2)
              );

              if (${q}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${B}),
                  getX(batch, xR, xC, ${B} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${B}, xR, xC),
                  getX(batch, ${B} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${3===j}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${B}, d2),
                getW(wR, wC, ${B} + 1, d2),
                getW(wR, wC, ${B} + 2, d2)
              );

              if (${q}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${B}),
                  getX(batch, xR, xC, ${B} + 1),
                  getX(batch, xR, xC, ${B} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${B}, xR, xC),
                  getX(batch, ${B} + 1, xR, xC),
                  getX(batch, ${B} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${t?"result += getBiasAtOutCoords();":""}
        ${Y}
        setOutput(result);
      }
    `}},xw=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,u=e.padInfo.top,y=e.padInfo.left,w=e.strideDepth,T=e.strideHeight,$=e.strideWidth,M=e.dilationDepth,O=e.dilationHeight,P=e.dilationWidth,z=e.filterDepth,L=e.filterHeight,W=e.filterWidth,B=4*Math.floor(e.inChannels/4),j=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${w}, ${T}, ${$});
      const ivec3 pads = ivec3(${t}, ${u}, ${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${z}; wF++) {
          int xF = xFCorner + wF * ${M};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${L}; wR++) {
            int xR = xRCorner + wR * ${O};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${W}; wC++) {
              int xC = xCCorner + wC * ${P};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${B}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${1===j}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${B}) *
                  getW(wF, wR, wC, ${B}, d2);
              } else if (${2===j}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${B}),
                  getX(batch, xF, xR, xC, ${B} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${B}, d2),
                  getW(wF, wR, wC, ${B} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${3===j}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${B}),
                  getX(batch, xF, xR, xC, ${B} + 1),
                  getX(batch, xF, xR, xC, ${B} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${B}, d2),
                  getW(wF, wR, wC, ${B} + 1, d2),
                  getW(wF, wR, wC, ${B} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},xI=class{constructor(e,t=!1,u=null,y=!1,w=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ut(this.outputShape.length);let T=e.padInfo.left,$=e.strideWidth,M=e.dilationWidth,O=e.filterHeight,P=e.filterWidth,z=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let e=0;e<P;e++)z+=`
           vec4 xTexelC${2*e};
           int xTexelC${2*e}Ready;
           vec4 xTexelC${2*e+1};
           int xTexelC${2*e+1}Ready;
           vec4 xC${e};`;z+=`
     for (int r = 0; r < ${O}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let e=0;e<P;e++)z+=`
           xTexelC${2*e} = vec4(0.0);
           xTexelC${2*e}Ready = 0;
           xTexelC${2*e+1} = vec4(0.0);
           xTexelC${2*e+1}Ready = 0;
           xC${e} = vec4(0.0);`;z+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let t=0;t<(P+1)/2;t++){let u=2*t;if(z+=`
           xC = xCCorner + ${u*M};
           `,1===$){if(u<P&&(T%2==1?(z+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${u}Ready == 0) {
                   xTexelC${u} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${u}.zw = vec2(0.0);
                   }
                   xTexelC${u}Ready = 1;
                 }
               `,1===M&&u>0?z+=`
                 xC${u} = vec4(xTexelC${u-2}.zw, xTexelC${u}.xy);
                 `:z+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${u} = vec4(previous.zw, xTexelC${u}.xy);
                   } else {
                     xC${u} = vec4(0.0, 0.0, xTexelC${u}.xy);
                   }
                   `):z+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${u}Ready == 0) {
                   xTexelC${u} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${u}.zw = vec2(0.0);
                   }
                   xTexelC${u}Ready = 1;
                 }

                 xC${u} = xTexelC${u};
                 `,u+1<P)){let e=T%2==0?oc.nearestLargerEven(M):M;M%2==0&&T%2==1||M%2!=0&&T%2!=1?(z+=`
                   xCOffset = xC + imod(pads[1], 2) + ${e};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${u+1}Ready == 0) {
                     xTexelC${u+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${u+1}.zw = vec2(0.0);
                     }
                     xTexelC${u+1}Ready = 1;
                   }
                   `,M>1?z+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${u+1} = vec4(previous.zw, xTexelC${u+1}.xy);
                     } else {
                      xC${u+1} = vec4(0.0, 0.0, xTexelC${u+1}.xy);
                     }
                     `:z+=`
                     xC${u+1} = vec4(xTexelC${u}.zw, xTexelC${u+1}.xy);
                     `):1===e?z+=`
                     xC${u+1} = xTexelC${u};
                     `:z+=`
                     xCOffset = xC + ${e};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${u+1}Ready == 0) {
                       xTexelC${u+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${u+1}.zw = vec2(0.0);
                       }
                       xTexelC${u+1}Ready = 1;
                     }

                     xC${u+1} = xTexelC${u+1};
                     `}}else u<P&&(T%2==1?(z+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${u}Ready == 0) {
                   xTexelC${u} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${u}.zw = vec2(0.0);
                   }
                   xTexelC${u}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${u+1}Ready == 0) {
                   xTexelC${u+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${u+1}.zw = vec2(0.0);
                   }
                   xTexelC${u+1}Ready = 1;
                 }

                 xC${u} = vec4(xTexelC${u}.zw, xTexelC${u+1}.zw);
               `,u+1<P&&(z+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${u+1} = vec4(xTexelC${u+1}.xy, final.xy);
                 `)):(z+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${u}Ready == 0) {
                   xTexelC${u} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${u}.zw = vec2(0.0);
                   }
                   xTexelC${u}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${u+1}Ready == 0) {
                   xTexelC${u+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${u+1}.zw = vec2(0.);
                   }
                   xTexelC${u+1}Ready = 1;
                 }

                 xC${u} = vec4(
                   xTexelC${u}.xy, xTexelC${u+1}.xy);
               `,u+1<P&&(z+=`
                   xC${u+1} = vec4(xTexelC${u}.zw, xTexelC${u+1}.zw);
                 `)));u<P&&(z+=`
             wTexel = getW(r, ${u}, d1, d2);
             dotProd += xC${u}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${u}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,u+1<P&&(z+=`
               wTexel = getW(r, ${u+1}, d1, d2);
               dotProd += xC${u+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${u+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}z+=`
     }
   
     }
   
     }
   `;let L="",W="";u&&(L=y?`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${u}
         }`:w?`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${u}
         }`:`vec4 activation(vec4 x) {
           ${u}
         }`,W="result = activation(result);"),t&&this.variableNames.push("bias"),y&&this.variableNames.push("preluActivationWeights"),w&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${L}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${z}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${t?"result += getBiasAtOutCoords();":""}
         ${W}
         setOutput(result);
       }
     `}},xS=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=ut(this.outputShape.length);let{dataFormat:u}=t,y=It(),w="channelsLast"===u,T=w?1:2,$=w?2:3,M=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,O="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)O+=`
          blockIndex = rc.z + ${t};
          pos = rc.y + ${e};

          ${M}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${T}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${$}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${w}) {
                  innerDims = vec2(d1, ch);
                  result[${2*e+t}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${2*e+t}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${O}

        ${y.output} = result;
      }
    `}};function Bh(e,t){let u=e.length;return u>=3?t?[...e.slice(0,-3),e[u-3]*e[u-2],e[u-1]]:[...e.slice(0,-3),e[u-3],e[u-2]*e[u-1]]:!t&&1===u&&e[0]>1?[e[0],1]:null}function zh({x:e,filter:t,convInfo:u,backend:y,bias:w=null,preluActivationWeights:T=null,leakyreluAlpha:$=0,activation:M=null}){let O=e.shape,P=y.texData.get(e.dataId),z=u.inChannels,L=O[0]*O[1]*O[2],W=u.outChannels,B="channelsLast"===u.dataFormat,j,q=[];if(null!=T){let e=Bh(T.shape,B);null!=e&&(T=te({inputs:{x:T},backend:y,attrs:{shape:e}}),q.push(T))}if(null!=w){let e=Bh(w.shape,B);null!=e&&(w=te({inputs:{x:w},backend:y,attrs:{shape:e}}),q.push(w))}if(!((1===L||1===W)&&z>1e3)&&P.isPacked&&B&&null!=P.texture&&O[2]%2!=0&&oc.arraysEqual(P.shape.slice(-3),O.slice(-3))){let z=O[0]*O[1]*(O[2]+1),L={dataId:e.dataId,shape:[1,z,u.inChannels],dtype:e.dtype},W=P.shape;P.shape=P.shape.slice(),P.shape[P.shape.length-2]++,oc.assert(xu(P.shape,L.shape),()=>`packed reshape ${P.shape} to ${L.shape} isn't free`);let B=te({inputs:{x:t},backend:y,attrs:{shape:[1,u.inChannels,u.outChannels]}});q.push(B);let Z=Sp({a:L,b:B,backend:y,transposeA:!1,transposeB:!1,bias:w,activation:M,preluActivationWeights:T,leakyreluAlpha:$}),Y=y.texData.get(Z.dataId);oc.assert(Y.isPacked,()=>"batchMatMul result is expected to be packed"),P.shape=W,Y.shape=u.outShape,(j=Dt({inputs:{x:Z},backend:y})).shape=u.outShape,q.push(Z)}else{let O=u.outHeight*u.outWidth,P=te({inputs:{x:e},backend:y,attrs:{shape:B?[u.batchSize,O,u.inChannels]:[u.batchSize,u.inChannels,O]}}),z=te({inputs:{x:t},backend:y,attrs:{shape:[1,u.inChannels,u.outChannels]}}),L=Sp({a:B?P:z,b:B?z:P,transposeA:!B,transposeB:!1,backend:y,bias:w,activation:M,preluActivationWeights:T,leakyreluAlpha:$});j=te({inputs:{x:L},backend:y,attrs:{shape:u.outShape}}),q.push(P),q.push(z),q.push(L)}for(let e of q)y.disposeIntermediateTensorInfo(e);return j}function Vh({x:e,filter:t,convInfo:u,backend:y,bias:w=null,preluActivationWeights:T=null,leakyreluAlpha:$=0,activation:M=null}){let{filterWidth:O,filterHeight:P,inChannels:z,outWidth:L,outHeight:W,dataFormat:B}=u,j="channelsLast"===B,q=O*P*z,Z=W*L,Y=[u.batchSize,q,Z],J=[];if(null!=T){let e=Bh(T.shape,j);null!=e&&(T=te({inputs:{x:T},backend:y,attrs:{shape:e}}),J.push(T))}if(null!=w){let e=Bh(w.shape,j);null!=e&&(w=te({inputs:{x:w},backend:y,attrs:{shape:e}}),J.push(w))}let ee=te({inputs:{x:t},backend:y,attrs:{shape:[1,q,oc.sizeFromShape(t.shape)/q]}});J.push(ee);let ea=new xS(Y,u),en=[e.shape,[u.padInfo.top,u.padInfo.left],[u.strideHeight,u.strideWidth],[u.dilationHeight,u.dilationWidth],[u.inChannels],[u.filterWidth*u.inChannels],[u.outWidth]],er=y.runWebGLProgram(ea,[e],"float32",en),ei=te({inputs:{x:er},backend:y,attrs:{shape:Y}});J.push(er),J.push(ei);let es=null!=w,el=null!=T,eu="leakyrelu"===M,ed=M?yi(M,!0):null,ep=new A$(j?ei.shape:ee.shape,j?ee.shape:ei.shape,j?[u.batchSize,Z,u.outChannels]:[u.batchSize,u.outChannels,Z],!0,!1,es,ed,el,eu),ec=j?[ei,ee]:[ee,ei];if(w&&ec.push(w),el&&ec.push(T),eu){let e=y.makeTensorInfo([],"float32",oc.createScalarValue($,"float32"));ec.push(e),J.push(e)}let eh=y.runWebGLProgram(ep,ec,"float32"),em=te({inputs:{x:eh},backend:y,attrs:{shape:u.outShape}});for(let e of(J.push(eh),J))y.disposeIntermediateTensorInfo(e);return em}var xN=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,u=e.strideWidth,y=e.padInfo.top,w=e.padInfo.left,T="channelsLast"===e.dataFormat;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${y};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${u} - ${w};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${T?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}},xC=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,u=e.filterWidth,y=e.strideHeight,w=e.strideWidth,T="channelsLast"===e.dataFormat,$=t-1-e.padInfo.top,M=u-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${$}, ${M});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${T?3:1}];

        ivec2 dyCorner = ivec2(coords[${T?1:2}], coords[${T?2:3}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${y}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${u}; wC++) {
            float dyC = float(dyCCorner + wC) / ${w}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${u} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${T}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},xE=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,u=e.strideHeight,y=e.strideWidth,w=e.padInfo.front,T=e.padInfo.top,$=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${w};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${u} - ${T};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${y} - ${$};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},xR=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,u=e.filterHeight,y=e.filterWidth,w=e.strideDepth,T=e.strideHeight,$=e.strideWidth,M=t-1-e.padInfo.front,O=u-1-e.padInfo.top,P=y-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${M}, ${O}, ${P});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${w}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${u}; wR++) {
            float dyR = float(dyRCorner + wR) / ${T}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${u} - 1 - wR;

            for (int wC = 0; wC < ${y}; wC++) {
              float dyC = float(dyCCorner + wC) / ${$}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${y} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},x$=class{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=ut(this.outputShape.length);let t=e.filterHeight,u=e.filterWidth,y=t-1-e.padInfo.top,w=u-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${y}, ${w});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${u}; wC++) {
            int wCPerm = ${u} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}},x_=xe({opSnippet:AE+`
  return cos(x);
`,packedOpSnippet:`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Ab}
  return result;
`}),xM=xe({opSnippet:`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`}),xF=class{constructor(e,t,u,y,w){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[T,$,M,O]=e,[P]=t,[z,L]=u;this.outputShape=[P,z,L,O];let[W,B]=[`${$-1}.0`,`${M-1}.0`],[j,q,Z]=z>1?[`${($-1)/(z-1)}`,"(y2-y1) * height_ratio",`y1*${W} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${W}`],[Y,J,ee]=L>1?[`${(M-1)/(L-1)}`,"(x2-x1) * width_ratio",`x1*${B} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${B}`];this.userCode=`
      const float height_ratio = float(${j});
      const float width_ratio = float(${Y});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${T}) {
          return;
        }

        float height_scale = ${q};
        float width_scale = ${J};

        float in_y = ${Z};
        if( in_y < 0.0 || in_y > ${W} ) {
          setOutput(float(${w}));
          return;
        }
        float in_x = ${ee};
        if( in_x < 0.0 || in_x > ${B} ) {
          setOutput(float(${w}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${"bilinear"===y?1:0} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};(Z=eF||(eF={})).Prod="*",Z.Sum="+";var xO=class{constructor(e,t,u,y){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let w=this.outputShape.length,T=this.op===eF.Prod?"1.0":"0.0",$=u?T:`getX(${ZA(w,"coords",this.op)})`,M=this.outputShape[this.outputShape.length-1],O="",P="";u?(O=y?`end != ${M-1}`:"end != 0",P=y?"end + 1":"end - 1"):(O=y?`end + pow2 < ${M}`:"end >= pow2",P=y?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Re(w)} coords = getOutputCoords();
        int end = ${JA(w,"coords",this.op)};
        float val = ${$};
        int pow2 = int(pow(2.0, index));
        if (${O}) {
          int idx = ${P};
          ${JA(w,"coords",this.op)} = idx;
          val ${this.op}= getX(${ZA(w,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function ZA(e,t,u){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${u} for rank ${e} is not yet supported`)}function JA(e,t,u){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative ${u} for rank ${e} is not yet supported`)}function jh(e,t,u,y,w,T){let $=t.shape.length,M=hh.getAxesPermutation([y],$),O=t;null!=M&&(O=bt({inputs:{x:t},backend:u,attrs:{perm:M}}));let P=hh.getInnerMostAxes(1,$)[0];if(P!==$-1)throw Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${y}`);let z=O.shape[P],L=Dt({inputs:{x:O},backend:u});for(let t=0;t<=Math.ceil(Math.log2(z))-1;t++){let y=new xO(e,O.shape,!1,T),w=[[t]],$=L;L=u.runWebGLProgram(y,[L],L.dtype,w),u.disposeIntermediateTensorInfo($)}if(w){let t=new xO(e,O.shape,w,T),y=L;L=u.runWebGLProgram(t,[L],L.dtype),u.disposeIntermediateTensorInfo(y)}if(null!=M){let e=bt({inputs:{x:L},backend:u,attrs:{perm:hh.getUndoAxesPermutation(M)}});return u.disposeIntermediateTensorInfo(L),u.disposeIntermediateTensorInfo(O),e}return L}var xP=class{constructor(e,t,u){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=u,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}},xD=class{constructor(e,t=!1,u=null,y=!1,w=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ut(this.outputShape.length);let T=e.filterHeight,$=e.filterWidth,M=e.outChannels/e.inChannels,O="",P="";u&&(O=y?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${u}
        }`:w?`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${u}
        }`:`
          float activation(float x) {
            ${u}
          }
        `,P="result = activation(result);"),t&&this.variableNames.push("bias"),y&&this.variableNames.push("preluActivationWeights"),w&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${O}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${M};
        int q = d2 - d1 * ${M};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${T}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${$}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${t?"result += getBiasAtOutCoords();":""}
        ${P}
        setOutput(result);
      }
    `}},xz=class{constructor(e,t=!1,u=null,y=!1,w=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ut(this.outputShape.length);let T=e.outChannels/e.inChannels,$=e.padInfo.left,M=e.strideWidth,O=e.dilationWidth,P=e.filterHeight,z=e.filterWidth,L=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let e=0;e<z;e++)L+=`
          vec4 xTexelC${2*e};
          int xTexelC${2*e}Ready;
          vec4 xTexelC${2*e+1};
          int xTexelC${2*e+1}Ready;
          vec4 xC${e};`;L+=`
    for (int r = 0; r < ${P}; r++) {
      `;for(let e=0;e<z;e++)L+=`
          xTexelC${2*e} = vec4(0.0);
          xTexelC${2*e}Ready = 0;
          xTexelC${2*e+1} = vec4(0.0);
          xTexelC${2*e+1}Ready = 0;
          xC${e} = vec4(0.0);`;L+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let e=0;e<(z+1)/2;e++){let t=2*e;if(L+=`
          xC = xCCorner + ${t*O};
          `,1===M){if(t<z&&($%2==1?(L+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }
              `,1===O&&t>0?L+=`
                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);
                `:L+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);
                  } else {
                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);
                  }
                  `):L+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }

                xC${t} = xTexelC${t};
                `,t+1<z)){let e=$%2==0?oc.nearestLargerEven(O):O;O%2==0&&$%2==1||O%2!=0&&$%2!=1?(L+=`
                  xCOffset = xC + imod(pads[1], 2) + ${e};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {
                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${t+1}.zw = vec2(0.0);
                    }
                    xTexelC${t+1}Ready = 1;
                  }
                  `,O>1?L+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);
                    } else {
                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);
                    }
                    `:L+=`
                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);
                    `):1===e?L+=`
                    xC${t+1} = xTexelC${t};
                    `:L+=`
                    xCOffset = xC + ${e};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {
                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${t+1}.zw = vec2(0.0);
                      }
                      xTexelC${t+1}Ready = 1;
                    }

                    xC${t+1} = xTexelC${t+1};
                    `}}else t<z&&($%2==1?(L+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {
                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${t+1}.zw = vec2(0.0);
                  }
                  xTexelC${t+1}Ready = 1;
                }

                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);
              `,t+1<z&&(L+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);
                `)):(L+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {
                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${t+1}.zw = vec2(0.);
                  }
                  xTexelC${t+1}Ready = 1;
                }

                xC${t} = vec4(
                  xTexelC${t}.xy, xTexelC${t+1}.xy);
              `,t+1<z&&(L+=`
                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);
                `)));t<z&&(L+=`
            wTexel = getW(r, ${t}, d1, q);
            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);
          `,t+1<z&&(L+=`
              wTexel = getW(r, ${t+1}, d1, q);
              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);
            `))}L+=`
    }
  
      }
    `;let W="",B="";u&&(W=y?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${u}
        }`:w?`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${u}
        }`:`vec4 activation(vec4 x) {
          ${u}
        }`,B="result = activation(result);"),t&&this.variableNames.push("bias"),y&&this.variableNames.push("preluActivationWeights"),w&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${W}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${T};
        int q = d2 - d1 * ${T};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${L}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${t?"result += getBiasAtOutCoords();":""}
        ${B}
        setOutput(result);
      }
    `}},xL=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,u=e.strideWidth,y=e.padInfo.top,w=e.padInfo.left,T=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${T} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${y};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${u} - ${w};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},xW=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,u=e.filterWidth,y=e.strideHeight,w=e.strideWidth,T=t-1-e.padInfo.top,$=u-1-e.padInfo.left,M=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${T}, ${$});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${y}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${u}; wC++) {
            float dyC = float(dyCCorner + wC) / ${w}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${u} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${M}; dm++) {
              int d2 = d1 * ${M} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}},xB=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}},xV=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:u,padInfo:y,strideHeight:w,strideWidth:T,filterHeight:$,filterWidth:M,dilationHeight:O,dilationWidth:P}=e,{top:z,left:L}=y;this.userCode=`
      const ivec2 strides = ivec2(${w}, ${T});
      const ivec2 pads = ivec2(${z}, ${L});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${$}; h++) {
          int hIn = hBeg + h * ${O};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${M}; w++) {
              int wIn = wBeg + w * ${P};

              if (wIn >= 0 && wIn < ${u}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}},xU=xe({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`}),xG=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,xH=nt({opSnippet:"return float(a == b);",packedOpSnippet:`
  return vec4(equal(a, b));
`,dtype:"bool",cpuKernelImpl:g4}),xj=xe({opSnippet:`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${hh.ERF_P};
  float a1 = ${hh.ERF_A1};
  float a2 = ${hh.ERF_A2};
  float a3 = ${hh.ERF_A3};
  float a4 = ${hh.ERF_A4};
  float a5 = ${hh.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`}),xq=xe({opSnippet:AE+`
  return exp(x);
`,packedOpSnippet:`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:g6,dtype:"float32"});function eg(e){let{inputs:t,attrs:u,backend:y}=e,{dim:w}=u,{input:T}=t,$=T.shape.length,M=T.shape.slice(),O=w;return w<0&&(oc.assert(-($+1)<=w,()=>`Axis must be in the interval [${-($+1)}, ${$}]`),O=$+w+1),M.splice(O,0,1),te({inputs:{x:T},backend:y,attrs:{shape:M}})}var xX="return exp(x) - 1.0;",xK=xe({opSnippet:xX,packedOpSnippet:xX,cpuKernelImpl:g8}),xZ=class{constructor(e,t,u){this.variableNames=["real","imag"];let y=t[1];this.outputShape=t;let w=u?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,T=u?`${y}.0`:"1.0",$;if("real"===e)$="return real * expR - imag * expI;";else if("imag"===e)$="return real * expI + imag * expR;";else throw Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${w};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${$}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${y});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${y}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${T};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function tg(e,t,u){let y=u.texData.get(e.dataId),w=oc.sizeFromShape(e.shape),T=e.shape[e.shape.length-1],$=te({inputs:{x:e},backend:u,attrs:{shape:[w/T,T]}}),M=$.shape,O=new xZ("real",M,t),P=new xZ("imag",M,t),z=[{dataId:y.complexTensorInfos.real.dataId,dtype:y.complexTensorInfos.real.dtype,shape:M},{dataId:y.complexTensorInfos.imag.dataId,dtype:y.complexTensorInfos.imag.dtype,shape:M}],L=u.runWebGLProgram(O,z,"float32"),W=u.runWebGLProgram(P,z,"float32"),B=Or({inputs:{real:L,imag:W},backend:u});u.disposeIntermediateTensorInfo(L),u.disposeIntermediateTensorInfo(W);let j=te({inputs:{x:B},backend:u,attrs:{shape:e.shape}});return u.disposeIntermediateTensorInfo($),u.disposeIntermediateTensorInfo(B),j}var xY=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function Ci(e){let{backend:t,attrs:u}=e,{shape:y,value:w}=u,{dtype:T}=u;if("string"===(T=T||oc.inferDtype(w))){let e=oc.getArrayFromDType(T,oc.sizeFromShape(y));return e.fill(w),t.makeTensorInfo(y,T,e)}{let e=new xY(y,w),u=[[w]];return t.runWebGLProgram(e,[],T,u)}}var xJ=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},xQ="return floor(x);",x1=xe({opSnippet:xQ,packedOpSnippet:xQ,cpuKernelImpl:g9}),x2=nt({opSnippet:`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,packedOpSnippet:`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,dtype:"int32"}),x0=class{constructor(e){this.variableNames=["A"];let t=It(),[u,y]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${y}.0, ${u}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},x7=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=It(),[u,y]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${y}.0, ${u}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},x4=nG.getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU"),x6=class{constructor(e,t,u,y){this.sliceDim=e,this.strides=t,this.paramsShape=y,this.variableNames=["x","indices"],this.outputShape=u;let w=Re(u.length),T=`
    int index;`;for(let e=0;e<this.sliceDim;e++)T+=`
          index = round(getIndices(coords[0], ${e}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};
          flattenIndex += index * ${this.strides[e]};`;this.userCode=`
         void main() {
          ${w} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${T}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}},x8=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let u=Re(this.rank),y=function(e,t){let u=["resRC.x","resRC.y","resRC.z","resRC.w"],y=[];for(let t=0;t<e.length;t++)2===t?y.push("index"):y.push(`${u[t]}`);return y.join()}(e,0);this.userCode=`
      void main() {
        ${u} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${y}));
      }
    `}};function Tv(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,indices:T}=t,{axis:$,batchDims:M}=y,O=oc.parseAxisParam($,w.shape)[0];if(nG.get("DEBUG")){let e=u.readSync(T.dataId),t=w.shape[O];for(let u=0;u<e.length;++u){let y=e[u];oc.assert(y<=t-1&&y>=0,()=>`GatherV2: the index value ${y} is not in [0, ${t-1}]`)}}let P=hh.segment_util.collectGatherOpShapeInfo(w,T,O,M),z=oc.sizeFromShape(T.shape),L=[],W=te({inputs:{x:w},backend:u,attrs:{shape:[P.batchSize,P.outerSize,P.dimSize,P.sliceSize]}}),B=te({inputs:{x:T},backend:u,attrs:{shape:[P.batchSize,z/P.batchSize]}});L.push(W),L.push(B);let j=[P.batchSize,P.outerSize,z/P.batchSize,P.sliceSize];if(u.shouldExecuteOnCPU([w,T])||"string"===w.dtype){let e=u.bufferSync(B),t=ya(u.bufferSync(W),e,j);return L.forEach(e=>u.disposeIntermediateTensorInfo(e)),u.makeTensorInfo(P.outputShape,t.dtype,t.values)}let q=new x8(W.shape,j),Z=u.runWebGLProgram(q,[W,B],W.dtype);L.push(Z);let Y=te({inputs:{x:Z},backend:u,attrs:{shape:P.outputShape}});return L.forEach(e=>u.disposeIntermediateTensorInfo(e)),Y}var x9=nt({opSnippet:"return float(a > b);",packedOpSnippet:`
  return vec4(greaterThan(a, b));
`,cpuKernelImpl:yn,dtype:"bool"}),be=nt({opSnippet:"return float(a >= b);",packedOpSnippet:`
  return vec4(greaterThanEqual(a, b));
`,dtype:"bool",cpuKernelImpl:yr}),ba=xe({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),bn=xe({opSnippet:"return float(isinf(x));",dtype:"bool"}),bs=xe({opSnippet:"return float(isnan(x));",dtype:"bool"}),bo=nt({opSnippet:"return float(a < b);",packedOpSnippet:`
  return vec4(lessThan(a, b));
`,cpuKernelImpl:ys,dtype:"bool"}),bu=nt({opSnippet:"return float(a <= b);",packedOpSnippet:`
  return vec4(lessThanEqual(a, b));
`,cpuKernelImpl:yo,dtype:"bool"}),bd=xe({opSnippet:AE+`
  return x < 0.0 ? 0./0. : log(x);
`,packedOpSnippet:`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,cpuKernelImpl:yh}),bp=xe({opSnippet:AE+`
  return log(1.0 + x);
`}),bh=nt({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,dtype:"bool"}),bg=xe({opSnippet:"return float(!(x >= 1.0));"}),by=nt({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,dtype:"bool"}),bA=class{constructor(e,t,u,y,w){this.variableNames=["x"],this.outputShape=[];let T=e[3]-1;this.outputShape=e;let $,M=`float(${u}) + float(${y}) * sum`;$=.5===w?`inversesqrt(${M})`:1===w?`1.0/(${M})`:`exp(log(${M}) * float(-${w}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${t}; j <= ${t}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${T}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${$};
        setOutput(val);
      }
    `}},bb=class{constructor(e,t,u,y,w){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let T=e[3]-1;this.outputShape=e;let $,M=`float(${u}) + float(${y}) * sum`;$=.5===w?`inversesqrt(${M})`:1===w?`1.0/(${M})`:`exp(log(${M}) * float(-${w}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${t};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${t}; j <= ${t}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${T}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${$};
        setOutput(result);
      }
    `}},bv=class{constructor(e,t,u,y,w){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=u,this.alpha=y,this.beta=w,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${y}) * norm + float(${u});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${y})
                * float(${w})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${w});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};function _v(e){let t,{inputs:u,backend:y,attrs:w}=e,{x:T}=u,{reductionIndices:$,keepDims:M}=w,O=T.shape.length,P=oc.parseAxisParam($,T.shape),z=P,L=hh.getAxesPermutation(z,O),W=null!=L,B=y.shouldExecuteOnCPU([T]),j=T;if(W){if(B){let e=y.texData.get(j.dataId).values,t=Array(O);for(let e=0;e<t.length;e++)t[e]=T.shape[L[e]];let u=yX(e,T.shape,T.dtype,L,t);j=y.makeTensorInfo(t,T.dtype),y.texData.get(j.dataId).values=u}else j=yu(T,L,y);z=hh.getInnerMostAxes(z.length,O)}hh.assertAxesAreInnerMostDims("max",z,O);let[q,Z]=hh.computeOutAndReduceShapes(j.shape,z),Y=q;if(M&&(Y=hh.expandShapeToKeepDim(q,P)),B){let e=ym(y.texData.get(j.dataId).values,oc.sizeFromShape(Z),Y,T.dtype);t=y.makeTensorInfo(Y,T.dtype),y.texData.get(t.dataId).values=e}else{var J,ee;let e,u,w,T,$;J=j,ee=Y,e=oc.sizeFromShape(Z),u=oc.sizeFromShape(J.shape)/e,T=Yr(w=te({inputs:{x:J},attrs:{shape:[u,e]},backend:y}),J.dtype,"max",y),$=te({inputs:{x:T},attrs:{shape:ee},backend:y}),y.disposeIntermediateTensorInfo(w),y.disposeIntermediateTensorInfo(T),t=$}return W&&y.disposeIntermediateTensorInfo(j),t}var bw=nt({opSnippet:AA+`
  return max(a, b);
`,packedOpSnippet:`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ab+`
  return result;
`,cpuKernelImpl:yg}),bS=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,u=e.strideWidth,y=e.dilationHeight,w=e.effectiveFilterHeight,T=e.effectiveFilterWidth,$=w-1-e.padInfo.top,M=T-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${$}, ${M});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${w};
          wR += ${y}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${T}; wC++) {
            float dyC = float(dyCCorner + wC) / ${u}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${w*T-1} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${T} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},bN=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,u=e.strideHeight,y=e.strideWidth,w=e.dilationDepth,T=e.dilationHeight,$=e.dilationWidth,M=e.effectiveFilterDepth,O=e.effectiveFilterHeight,P=e.effectiveFilterWidth,z=M-1-e.padInfo.front,L=O-1-e.padInfo.top,W=P-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${z}, ${L}, ${W});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${M};
           wD += ${w}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${O};
              wR += ${T}) {
            float dyR = float(dyRCorner + wR) / ${u}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${P};
                wC += ${$}) {
              float dyC = float(dyCCorner + wC) / ${y}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${M*O*P-1} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${O} * ${P} +
                  wR * ${P} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}},bC=nt({opSnippet:AA+`
  return min(a, b);
`,packedOpSnippet:`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ab+`
  return result;
`,cpuKernelImpl:yy}),bE=class{constructor(e,t,u){this.variableNames=["x"],this.outputShape=t.map((t,u)=>t[0]+e[u]+t[1]);let y=e.length,w=Re(y),T=t.map(e=>e[0]).join(","),$=t.map((t,u)=>t[0]+e[u]).join(","),M=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,y),O="reflect"===u?0:1;if(1===y){this.userCode=`
        int start = ${T};
        int end = ${$};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${O};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${O};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${w} start = ${w}(${T});
      ${w} end = ${w}(${$});

      void main() {
        ${w} outC = getOutputCoords();
        for (int i = 0; i < ${y}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${O};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${O};
          }
        }
        ${w} coords = outC - start;
        setOutput(getX(${M}));
      }
    `}},bR=class{constructor(e,t,u){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,u)=>t[0]+e[u]+t[1]);let y=e.length,w=Re(y),T=t.map(e=>e[0]).join(","),$=t.map((t,u)=>t[0]+e[u]).join(","),M=Rt("rc",y),O=Rt("source",y),P=`${M[y-1]} < ${this.outputShape[y-1]}`,z=1===y?"source":`vec2(${O.slice(-2).join()})`,L="reflect"===u?0:1,W="";if(1===y){let e=`
        ${w} source = rc;
        if (source < start) {
          source = start * 2 - source - ${L};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${L};
        }
        source -= start;
      `;W=`
        ${w} rc = outputLoc;
        ${e}
        result[0] = getChannel(getX(${O.join()}), ${z});
        ${M[y-1]} += 1;
        if(${P}) {
          ${e}
          result[1] = getChannel(getX(${O.join()}), ${z});
        }
      `}else{let e=`
        ${w} source = rc;
        ${w} lt = ${w}(lessThan(source, start));
        ${w} gte = ${w}(greaterThanEqual(source, end));
        ${w} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${L}) +
                gte * ((end - 1) * 2 - source + ${L});
        source -= start;
      `;W=`
        ${w} rc = outputLoc;
        ${e}
        result[0] = getChannel(getX(${O.join()}), ${z});
        ${M[y-1]} += 1;
        if(${P}) {
          ${e}
          result[1] = getChannel(getX(${O.join()}), ${z});
        }
        rc = outputLoc;
        ${M[y-2]} += 1;
        if(${M[y-2]} < ${this.outputShape[y-2]}) {
          ${e}
          result[2] = getChannel(getX(${O.join()}), ${z});
          ${M[y-1]} += 1;
          if(${P}) {
            ${e}
            result[3] = getChannel(getX(${O.join()}), ${z});
          }
        }
      `}this.userCode=`
      const ${w} start = ${w}(${T});
      const ${w} end = ${w}(${$});

      void main() {
        ${w} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${W}
        setOutput(result);
      }
    `}},b$=nt({opSnippet:`if (b == 0.0) return NAN;
  return mod(a, b);`,packedOpSnippet:`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Ab+`
  return result;
`}),b_=class{constructor(e,t,u){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,u],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},bM=nt({opSnippet:`
if (a == b) {
  return 1.0;
};
return a / b;`,packedOpSnippet:`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,checkOutOfBounds:!0}),bF="return a - b;",bO=nt({opSnippet:bF,packedOpSnippet:bF,supportsComplex:!0,cpuKernelImpl:yH});function Rv(e){let{inputs:t,backend:u,attrs:y}=e,{logits:w}=t,{dim:T}=y,$=oc.parseAxisParam([T],w.shape),M=_v({inputs:{x:w},backend:u,attrs:{reductionIndices:$,keepDims:!1}}),O=hh.expandShapeToKeepDim(M.shape,$),P=te({inputs:{x:M},backend:u,attrs:{shape:O}}),z=bO({inputs:{a:w,b:P},backend:u}),L=xq({inputs:{x:z},backend:u}),W=wp({inputs:{x:L},backend:u,attrs:{axis:$,keepDims:!1}}),B=te({inputs:{x:W},backend:u,attrs:{shape:O}}),j=bM({inputs:{a:L,b:B},backend:u});return u.disposeIntermediateTensorInfo(M),u.disposeIntermediateTensorInfo(P),u.disposeIntermediateTensorInfo(z),u.disposeIntermediateTensorInfo(L),u.disposeIntermediateTensorInfo(W),u.disposeIntermediateTensorInfo(B),j}var bP=y1+`
  return -x;
`,bD=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,bz=h_.nonMaxSuppressionV3Impl,bL=h_.nonMaxSuppressionV4Impl,bW=h_.nonMaxSuppressionV5Impl,bB=class{constructor(e,t,u,y){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${y}), float(${u}),
                      float(index == coords.y)));
      }
    `}};function sm(e){let{inputs:t,backend:u}=e,{x:y}=t;if("complex64"!==y.dtype)return Ci({attrs:{shape:y.shape,dtype:y.dtype,value:"string"===y.dtype?"":0},backend:u});{let e=bi({inputs:{input:y},backend:u}),t=sm({inputs:{x:e},backend:u}),w=Ip({inputs:{input:y},backend:u}),T=sm({inputs:{x:w},backend:u}),$=Or({inputs:{real:t,imag:T},backend:u});return u.disposeIntermediateTensorInfo(e),u.disposeIntermediateTensorInfo(t),u.disposeIntermediateTensorInfo(w),u.disposeIntermediateTensorInfo(T),$}}var bV=class{constructor(e,t,u){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,u)=>t[0]+e[u]+t[1]);let y=e.length,w=Re(y),T=t.map(e=>e[0]).join(","),$=t.map((t,u)=>t[0]+e[u]).join(","),M=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,y);if(1===y){this.userCode=`
        int start = ${T};
        int end = ${$};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${w} start = ${w}(${T});
      ${w} end = ${w}(${$});

      void main() {
        ${w} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${w} coords = outC - start;
          setOutput(getX(${M}));
        }
      }
    `}},bU=class{constructor(e,t,u){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,u)=>t[0]+e[u]+t[1]);let y=e.length,w=Re(y),T=t.map(e=>e[0]).join(","),$=t.map((t,u)=>t[0]+e[u]).join(","),M=Rt("rc",y),O=Rt("source",y),P=`${M[y-1]} < ${this.outputShape[y-1]}`,z=1===y?"source":`vec2(${O.slice(-2).join()})`,L=[`${w} rc = outputLoc;`,`${M[y-1]} += 1;
       if(${P}) {
      `,1===y?"":`}
       rc = outputLoc;
       ${M[y-2]} += 1;
       if(${M[y-2]} < ${this.outputShape[y-2]}) {`,1===y?"":`  ${M[y-1]} += 1;
         if(${P}) {`],W=1===y?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",B="";for(let e=0,t=1===y?2:4;e<t;e++)B+=`
        ${L[e]}
        if (${W}) {
          result[${e}] = float(value);
        } else {
          ${w} source = rc - start;
          result[${e}] = getChannel(getX(${O.join()}), ${z});
        }
      `;B+=1===y?"} ":"}}",this.userCode=`
      const ${w} start = ${w}(${T});
      const ${w} end = ${w}(${$});

      void main() {
        ${w} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${B}
        setOutput(result);
      }
    `}},Dv=e=>{let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{paddings:T,constantValue:$}=y;if(0===oc.sizeFromShape(w.shape))return Ci({backend:u,attrs:{shape:T.map((e,t)=>e[0]+w.shape[t]+e[1]),value:$,dtype:w.dtype}});let M=nG.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bU(w.shape,T,$):new bV(w.shape,T,$),O=[[$]];return u.runWebGLProgram(M,[w],w.dtype,O)},bG=nt({opSnippet:`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,packedOpSnippet:`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Ab+`
  return result;
`}),Av=e=>{let{backend:t,attrs:u}=e,{start:y,stop:w,step:T,dtype:$}=u,M=yE(y,w,T,$);return t.makeTensorInfo([M.length],$,M)},bH=xe({opSnippet:"return 1.0 / x;"}),bj=xe({opSnippet:y1+`
  return (x < 0.0) ? 0.0 : x;
`,packedOpSnippet:`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),bq=xe({opSnippet:y1+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,packedOpSnippet:`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),bX=class{constructor(e,t,u,y,w){this.variableNames=["A"],this.outputShape=[];let[T,$,M,O]=e;this.outputShape=[T,t,u,O];let P=[y&&t>1?$-1:$,y&&u>1?M-1:M],z=[y&&t>1?t-1:t,y&&u>1?u-1:u];this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${P[0]/z[0]},
          ${P[1]/z[1]});
      const vec2 inputShapeRC = vec2(${$}.0, ${M}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${w?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC"};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},bK=class{constructor(e,t,u,y,w){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[T,$,M,O]=e;this.outputShape=[T,t,u,O];let P=[y&&t>1?$-1:$,y&&u>1?M-1:M],z=[y&&t>1?t-1:t,y&&u>1?u-1:u];this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${P[0]/z[0]},
          ${P[1]/z[1]},
          ${P[1]/z[1]});
      const vec3 inputShapeRC = vec3(${$}.0, ${M}.0,
                                     ${M}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${w?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC"};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${O-1};
        bool hasNextRow = coords.z < ${u-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}},bZ=class{constructor(e,t,u){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,y,w]=t,[,T,$]=e,M=[u&&T>1?y-1:y,u&&$>1?w-1:w],O=[u&&T>1?T-1:T,u&&$>1?$-1:$],P=M[0]/O[0],z=M[1]/O[1],L=1/P,W=1/z,B=2*Math.ceil(L)+2,j=2*Math.ceil(W)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${P});
        const float widthScale = float(${z});

        const float invHeightScale = float(${L});
        const float invWidthScale = float(${W});

        const int winHeight = int(${B});
        const int winWidth = int(${j});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${T}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${$}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${y-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${w-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}},bY=class{constructor(e,t,u,y,w){this.variableNames=["A"],this.outputShape=[];let[T,$,M,O]=e;this.outputShape=[T,t,u,O];let P=[y&&t>1?$-1:$,y&&u>1?M-1:M],z=[y&&t>1?t-1:t,y&&u>1?u-1:u];this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${P[0]/z[0]},
          ${P[1]/z[1]});
      const vec2 inputShapeRC = vec2(${$}.0, ${M}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${w?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC"};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${y?"0.5":"0.0"})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},bJ=class{constructor(e,t,u,y,w){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[T,$,M,O]=e;this.outputShape=[T,t,u,O];let P=[y&&t>1?$-1:$,y&&u>1?M-1:M],z=[y&&t>1?t-1:t,y&&u>1?u-1:u];this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${P[0]/z[0]},
          ${P[1]/z[1]},
          ${P[1]/z[1]});
      const vec3 inputShapeRC = vec3(${$}.0, ${M}.0,
                                     ${M}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${w?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC"};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${y?"0.5":"0.0"})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${O-1};
        bool hasNextRow = coords.z < ${u-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}},bQ=class{constructor(e,t,u){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,y,w]=t,[,T,$]=e,M=[u&&T>1?y-1:y,u&&$>1?w-1:w],O=[u&&T>1?T-1:T,u&&$>1?$-1:$],P=M[0]/O[0],z=M[1]/O[1],L=1/P,W=1/z,B=2*Math.ceil(L)+2,j=2*Math.ceil(W)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${P});
        const float widthScale = float(${z});

        const float invHeightScale = float(${L});
        const float invWidthScale = float(${W});

        const int winHeight = int(${B});
        const int winWidth = int(${j});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${T}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${$}) {
              continue;
            }

            float sourceFracRow =
              float(${M[0]}) *
                (float(dyR) / float(${O[0]}));

            float sourceFracCol =
                float(${M[1]}) *
                  (float(dyC) / float(${O[1]}));

            int sourceNearestRow = int(min(
                float(int(${y}) - 1),
                ${u} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${w}) - 1),
                ${u} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}},b2=class{constructor(e,t){this.variableNames=["x"];let u=e.length;if(u>4)throw Error(`WebGL backend: Reverse of rank-${u} tensor is not yet supported`);if(this.outputShape=e,1===u){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let n=u=>-1!==t.indexOf(u)&&1!==e[u]?`${e[u]} - coords[${u}] - 1`:`coords[${u}]`,y=e.map((e,t)=>n(t)).join(","),w=Re(u);this.userCode=`
      void main() {
        ${w} coords = getOutputCoords();
        setOutput(getX(${y}));
      }
    `}},b0=class{constructor(e,t){var u,y,w;this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let T=e.length;if(T>4)throw Error(`WebGL backend: Reverse of rank-${T} tensor is not yet supported`);this.outputShape=e;let $=Rt("rc",T),M=`${$[T-1]} + 1 < ${this.outputShape[T-1]}`,O=`${$[T-2]} + 1 < ${this.outputShape[T-2]}`,P=Re(T);function m(u){let y=e.map((y,w)=>-1!==t.indexOf(w)&&1!==e[w]?`${e[w]} - ${u[w]} - 1`:`${u[w]}`),w=y.join(","),T=y.slice(-2).join(",");return`getChannel(getX(${w}), vec2(${T}))`}1===T?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${M}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${P} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${m($.slice())};
          if(${M}){
            result.g = ${(u=$.slice())[T-1]="("+u[T-1]+" + 1)",m(u)};
          }
          if(${O}) {
            result.b = ${(y=$.slice())[T-2]="("+y[T-2]+" + 1)",m(y)};
            if(${M}) {
              result.a = ${(w=$.slice())[T-1]="("+w[T-1]+" + 1)",w[T-2]="("+w[T-2]+" + 1)",m(w)};
            }
          }
          setOutput(result);
        }
    `}},b5=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let u=e[1],y=e[2];this.outputShape=e;let w="";w="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${w}
          if(coordX >= 0 && coordX < ${y} && coordY >= 0 && coordY < ${u}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},b3=xe({opSnippet:`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`}),b7=xe({opSnippet:"return inversesqrt(x);",cpuKernelImpl:y$}),b4=class{constructor(e,t,u,y,w,T,$=!0,M=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=T;let O=Re(w.length),P=Re(T.length),z="";1===u?z="i":2===u&&(z="i, j");let L=`getIndices(${z})`,W="";1===y?W="i":2===y&&(W="i, coords[1]");let B=`getUpdates(${W})`,j="";M&&(j="coords[0], coords[1]");let q=`getDefaultValue(${j})`;this.userCode=`
        ${O} strides = ${O}(${w});

        void main() {
          ${P} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${L});
              flattenedIndex += index * ${t>1?"strides[j]":"strides"};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${B};
              found = true;
            }
          }
          setOutput(mix(${q}, sum, float(found)));
        }
      `}},b6=class{constructor(e,t,u,y,w,T,$=!0,M=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=T;let O=Re(w.length),P=Re(T.length),z="";1===u?z="i":2===u&&(z="i, j");let L=`getIndices(${z})`,W="";1===y?W="i":2===y&&(W="i, coords[1]");let B=`getUpdates(${W})`,j="";M&&(j="coords[0], coords[1]");let q=`getDefaultValue(${j})`;this.userCode=`
        ${O} strides = ${O}(${w});

        void main() {
          ${P} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${L});
              flattenedIndex += index.xz * ${t>1?"strides[j]":"strides"};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${t>1?"strides[j + 1]":"strides"};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${B};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${q}, sum, found));
        }
      `}},b8=class{constructor(e,t,u,y){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,u];let w=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,T=2===nG.getNumber("WEBGL_VERSION")?"while (left < right) {":w;this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${T}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${"left"===y?"<":"<="} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}},b9=class{constructor(e,t,u){let y,w;if(this.variableNames=["c","a","b"],this.outputShape=t,u>4)throw Error(`Where for rank ${u} is not yet supported`);if(1===u)w="resRC",y="resRC";else{let u=["resRC.x","resRC.y","resRC.z","resRC.w"],T=[],$=[];for(let y=0;y<t.length;y++)$.push(`${u[y]}`),y<e&&T.push(`${u[y]}`);y=T.join(),w=$.join()}let T=Re(u);this.userCode=`
      void main() {
        ${T} resRC = getOutputCoords();
        float cVal = getC(${y});
        if (cVal >= 1.0) {
          setOutput(getA(${w}));
        } else {
          setOutput(getB(${w}));
        }
      }
    `}},vn=xe({opSnippet:`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${hh.SELU_SCALEALPHA};
  float scale = ${hh.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`}),vr=xe({opSnippet:AE+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,packedOpSnippet:`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:yM}),vs=xe({opSnippet:`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`}),vo=xe({opSnippet:AE+`
  return sin(x);
`,packedOpSnippet:`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Ab}
  return result;
`}),vd=xe({opSnippet:`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`}),vp=xe({opSnippet:`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`}),vf="return sqrt(x);",vm=xe({opSnippet:vf,packedOpSnippet:vf,cpuKernelImpl:yL}),vg=xe({opSnippet:"return x * x;"}),vy="return (a - b) * (a - b);",vA=nt({opSnippet:vy,packedOpSnippet:vy}),vx=class{constructor(e,t,u){this.variableNames=["x"],this.outputShape=u;let y=u.length,w=Re(u.length),T=Re(u.length),$="";if(1===y)$="coords * strides + begin";else{let e=0;$=u.map((t,y)=>(e++,1===u.length?`coords * strides[${y}] + begin[${y}]`:`coords[${e-1}] * strides[${y}] + begin[${y}]`)).join(",")}this.userCode=`
      ${w} begin = ${w}(${e});
      ${w} strides = ${w}(${t});

      void main() {
        ${T} coords = getOutputCoords();
        setOutput(getX(${$}));
      }
    `}},vb=xe({opSnippet:"return tan(x);"}),vw=xe({opSnippet:`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`}),vS=class{constructor(e,t){this.variableNames=["A"];let u=Array(e.length);for(let y=0;y<u.length;y++)u[y]=e[y]*t[y];this.outputShape=u,this.rank=u.length;let y=Re(this.rank),w=function(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let u=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],y=[];for(let t=0;t<e.length;t++)y.push(`imod(${u[t]}, ${e[t]})`);return y.join()}(e);this.userCode=`
      void main() {
        ${y} resRC = getOutputCoords();
        setOutput(getA(${w}));
      }
    `}};function Fv(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{reps:T}=y;if("string"===w.dtype||w.shape.length>5){let e=u.readSync(w.dataId),t="string"===w.dtype?e.map(e=>oc.decodeString(e)):e,y=yj(me(w.shape,w.dtype,t),T);return u.makeTensorInfo(y.shape,y.dtype,y.values)}let $=new vS(w.shape,T);return u.runWebGLProgram($,[w],w.dtype)}var vN=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},vC=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function kp(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function hP(e){let t=1;for(;t<e;)t*=2;return t}var vE=class{constructor(e,t,u,y,w,T){let $;switch(this.variableNames=["Image","Transforms"],this.outputShape=T,y){case"constant":default:$=1;break;case"reflect":$=2;break;case"wrap":$=3;break;case"nearest":$=4}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${$} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${$} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${$} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${w});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${w});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${"nearest"===u?1:2} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}},vR=class{constructor(e,t){this.variableNames=["x","segmentIds"];let u=e.windowSize,y=e.batchSize,w=e.inSize,T=e.numSegments,$=T*Math.ceil(w/u);this.outputShape=[y,$];let M=4*Math.floor(u/4),O=u%4,P=`
        sumValue += dot(values, segFilter);
    `,z="";w%u>0&&(z=`
        if (inIdx < 0 || inIdx >= ${w}) {
          return initializationValue;
        }
      `);let L="";w%u>0&&(L=`
        if (inIdx < 0 || inIdx >= ${w}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = 0.0;

      float getValue(int batch, int inIdx) {
        ${z}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${L}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${T})) * float(${u}));
        int currentSeg = int(mod(float(outIdx), float(${T})));

        float sumValue = 0.0;

        for (int i = 0; i < ${M}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${P}
        }

        int inIdx = inOffset + ${M};
        if (${1===O}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${P}
        } else if (${2===O}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${P}
        } else if (${3===O}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${P}
        }
        setOutput(sumValue);
      }
    `}};for(let e of[{kernelName:os,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{a:w,b:T,bias:$,preluActivationWeights:M}=t,{transposeA:O,transposeB:P,activation:z,leakyreluAlpha:L}=y;return Sp({a:w,b:T,transposeA:O,transposeB:P,backend:u,bias:$,preluActivationWeights:M,leakyreluAlpha:L,activation:z})}},{kernelName:nH,backendName:"webgl",kernelFunc:function(e){let t,{inputs:u,backend:y}=e,{x:w}=u;if(y.shouldExecuteOnCPU([w])&&"complex64"!==w.dtype){let e=yF(y.texData.get(w.dataId).values);return y.makeTensorInfo(w.shape,w.dtype,e)}return t=nG.getBool("WEBGL_PACK_UNARY_OPERATIONS")?new An(w.shape,AL):new yQ(w.shape,AL),y.runWebGLProgram(t,[w],w.dtype)}},{kernelName:nj,backendName:"webgl",kernelFunc:AW},{kernelName:nq,backendName:"webgl",kernelFunc:AB},{kernelName:nX,backendName:"webgl",kernelFunc:AU},{kernelName:nK,backendName:"webgl",kernelFunc:function wh(e){let{inputs:t,backend:u}=e;if(1===t.length)return Dt({inputs:{x:t[0]},backend:u});if(t.length>nG.getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let e=Math.floor(t.length/2),y=wh({inputs:t.slice(0,e),backend:u}),w=wh({inputs:t.slice(e),backend:u});return wh({inputs:[y,w],backend:u})}let y=t.map(e=>e.dtype).reduce((e,t)=>dt(e,t)),w=t.map(e=>e.shape),T=nG.getBool("WEBGL_PACK")?new Aj(t[0].shape,w):new AH(t[0].shape,w);return u.runWebGLProgram(T,t,y)}},{kernelName:nZ,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{axis:T,keepDims:$}=y,M=w.shape.length,O=oc.parseAxisParam(T,w.shape),P=O,z=hh.getAxesPermutation(P,M),L=w;null!=z&&(L=bt({inputs:{x:w},backend:u,attrs:{perm:z}}),P=hh.getInnerMostAxes(P.length,M)),hh.assertAxesAreInnerMostDims("all",P,M);let[W,B]=hh.computeOutAndReduceShapes(L.shape,P),j=te({inputs:{x:L},backend:u,attrs:{shape:[-1,oc.sizeFromShape(B)]}}),q=Yr(j,j.dtype,"all",u),Z;return Z=$?te({inputs:{x:q},backend:u,attrs:{shape:hh.expandShapeToKeepDim(W,O)}}):te({inputs:{x:q},backend:u,attrs:{shape:W}}),u.disposeIntermediateTensorInfo(j),u.disposeIntermediateTensorInfo(q),null!=z&&u.disposeIntermediateTensorInfo(L),Z}},{kernelName:nY,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{axis:T,keepDims:$}=y,M=w.shape.length,O=oc.parseAxisParam(T,w.shape),P=O,z=hh.getAxesPermutation(P,M),L=w;null!=z&&(L=bt({inputs:{x:w},backend:u,attrs:{perm:z}}),P=hh.getInnerMostAxes(P.length,M)),hh.assertAxesAreInnerMostDims("any",P,M);let[W,B]=hh.computeOutAndReduceShapes(L.shape,P),j=te({inputs:{x:L},backend:u,attrs:{shape:[-1,oc.sizeFromShape(B)]}}),q=Yr(j,j.dtype,"any",u),Z;return Z=$?te({inputs:{x:q},backend:u,attrs:{shape:hh.expandShapeToKeepDim(W,O)}}):te({inputs:{x:q},backend:u,attrs:{shape:W}}),u.disposeIntermediateTensorInfo(j),u.disposeIntermediateTensorInfo(q),null!=z&&u.disposeIntermediateTensorInfo(L),Z}},{kernelName:nJ,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{axis:T}=y,$=oc.parseAxisParam(T,w.shape),M=hh.getAxesPermutation($,w.shape.length),O=w,P=[];null!=M&&(P.push(O=bt({inputs:{x:w},backend:u,attrs:{perm:M}})),$=hh.getInnerMostAxes($.length,O.shape.length)),hh.assertAxesAreInnerMostDims("argMax",[$[0]],O.shape.length);let z=vh(u,O,$[0],"max");return P.forEach(e=>u.disposeIntermediateTensorInfo(e)),z}},{kernelName:nQ,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{axis:T}=y,$=oc.parseAxisParam(T,w.shape),M=hh.getAxesPermutation($,w.shape.length),O=w,P=[];null!=M&&(P.push(O=bt({inputs:{x:w},backend:u,attrs:{perm:M}})),$=hh.getInnerMostAxes($.length,O.shape.length)),hh.assertAxesAreInnerMostDims("argMin",[$[0]],O.shape.length);let z=vh(u,O,$[0],"min");return P.forEach(e=>u.disposeIntermediateTensorInfo(e)),z}},{kernelName:n1,backendName:"webgl",kernelFunc:AZ},{kernelName:n2,backendName:"webgl",kernelFunc:AY},{kernelName:n0,backendName:"webgl",kernelFunc:AJ},{kernelName:n3,backendName:"webgl",kernelFunc:AQ},{kernelName:n5,backendName:"webgl",kernelFunc:A2},{kernelName:n7,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t;Vs(w,"avgPool");let{filterSize:T,strides:$,pad:M,dimRoundingMode:O}=y;oc.assert(hh.eitherStridesOrDilationsAreOne($,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${$} and dilations '1'`);let P=hh.computePool2DInfo(w.shape,T,$,1,M,O);if(1===P.filterWidth&&1===P.filterHeight&&oc.arraysEqual(P.inShape,P.outShape))return Dt({inputs:{x:w},backend:u});let z=new A0(P,"avg",!1);return u.runWebGLProgram(z,[w],"float32")}},{kernelName:n6,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{filterSize:T,strides:$,pad:M,dimRoundingMode:O,dataFormat:P}=y,z=hh.computePool3DInfo(w.shape,T,$,[1,1,1],M,O,P),L=new A3(z,"avg",!1);return u.runWebGLProgram(L,[w],"float32")}},{kernelName:n8,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{dy:w,input:T}=t,{filterSize:$,strides:M,pad:O,dimRoundingMode:P}=y,z=hh.computePool3DInfo(T.shape,$,M,[1,1,1],O,P),L=new A4(z);return u.runWebGLProgram(L,[w],T.dtype)}},{kernelName:n4,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{dy:w,input:T}=t;Vs([w,T],"avgPoolGrad");let{filterSize:$,strides:M,pad:O}=y,P=hh.computePool2DInfo(T.shape,$,M,1,O),z=new A7(P);return u.runWebGLProgram(z,[w],T.dtype)}},{kernelName:n9,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{a:w,b:T}=t,{transposeA:$,transposeB:M}=y;return Sp({a:w,b:T,transposeA:$,transposeB:M,backend:u})}},{kernelName:r1,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:u})=>{let{x:y,mean:w,variance:T,offset:$,scale:M}=e;oc.assert(w.shape.length===T.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),oc.assert(null==$||w.shape.length===$.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),oc.assert(null==M||w.shape.length===M.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:O}=u;null==O&&(O=.001);let P=[y,w,T],z=null;null!=$&&(z=$.shape,P.push($));let L=null;null!=M&&(L=M.shape,P.push(M));let W=nG.getBool("WEBGL_PACK_NORMALIZATION")?new A8(y.shape,w.shape,T.shape,z,L,O):new A6(y.shape,w.shape,T.shape,z,L,O);return t.runWebGLProgram(W,P,P[0].dtype)}},{kernelName:re,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{blockShape:T,crops:$}=y;oc.assert(w.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let M=T.reduce((e,t)=>e*t),O=hh.getReshaped(w.shape,T,M),P=hh.getPermuted(O.length,T.length),z=hh.getReshapedPermuted(w.shape,T,M),L=hh.getSliceBeginCoords($,T.length),W=hh.getSliceSize(z,$,T.length),B=[],j=te({inputs:{x:w},backend:u,attrs:{shape:O}}),q=bt({inputs:{x:j},backend:u,attrs:{perm:P}}),Z=te({inputs:{x:q},backend:u,attrs:{shape:z}}),Y=Gs({inputs:{x:Z},backend:u,attrs:{begin:L,size:W}});return B.push(j),B.push(q),B.push(Z),B.forEach(e=>u.disposeIntermediateTensorInfo(e)),Y}},{kernelName:ra,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,weights:T}=t,{size:$}=y,M=gQ(u.readSync(w.dataId),u.readSync(T.dataId),T.dtype,T.shape,$);return u.makeTensorInfo([$],T.dtype,M)}},{kernelName:rn,backendName:"webgl",kernelFunc:function(e){let t,{inputs:u,backend:y}=e,{a:w,b:T}=u,$=nG.getBool("WEBGL_PACK_BINARY_OPERATIONS"),M=nG.getNumber("WEBGL_VERSION");if(y.shouldExecuteOnCPU([w,T])||1===M){let e=y.texData.get(w.dataId).values,t=y.texData.get(T.dataId).values,[u,$]=g2(w.shape,T.shape,e,t,w.dtype),M=y.makeTensorInfo($,w.dtype);return y.texData.get(M.dataId).values=u,M}return t=$?new Ak(xs,w.shape,T.shape,!1):new Ax(xl,w.shape,T.shape),y.runWebGLProgram(t,[w,T],w.dtype)}},{kernelName:ri,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u}=e,{s0:y,s1:w}=t,T=u.readSync(y.dataId),$=u.readSync(w.dataId),M=hh.assertAndGetBroadcastShape(Array.from(T),Array.from($));return u.makeTensorInfo([M.length],"int32",Int32Array.from(M))}},{kernelName:rs,backendName:"webgl",kernelFunc:function Iv(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{dtype:T}=y;if("complex64"===T){if("complex64"===w.dtype)return Dt({inputs:{x:w},backend:u});let e=Gr(w.shape),t=Iv({inputs:{x:w},backend:u,attrs:{dtype:"float32"}}),y=Or({inputs:{real:t,imag:e},backend:u});return e.dispose(),u.disposeIntermediateTensorInfo(t),y}if("complex64"===w.dtype){let e=bi({inputs:{input:w},backend:u}),t=Iv({inputs:{x:e},backend:u,attrs:{dtype:T}});return u.disposeIntermediateTensorInfo(e),t}if(!oc.hasEncodingLoss(w.dtype,T)){let e=Dt({inputs:{x:w},backend:u});return{dataId:e.dataId,shape:e.shape,dtype:T}}if(u.shouldExecuteOnCPU([w])){let[e,t,y]=g0(u.texData.get(w.dataId).values,w.shape,w.dtype,T);return u.makeTensorInfo(e,t,y)}if("int32"===T){let e,t;return e=new yQ(w.shape,"return float(int(x));"),{dataId:(t=u.runWebGLProgram(e,[w],"int32")).dataId,shape:t.shape,dtype:t.dtype}}if("bool"===T){let e=u.makeTensorInfo([],"bool",oc.getTypedArrayFromDType("bool",1)),t=xc({inputs:{a:w,b:e},backend:u});return u.disposeIntermediateTensorInfo(e),t}throw Error(`Error in Cast: failed to cast ${w.dtype} to ${T}`)}},{kernelName:ro,backendName:"webgl",kernelFunc:xm},{kernelName:ru,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{clipValueMin:T,clipValueMax:$}=y,M;M=nG.getBool("WEBGL_PACK_CLIP")?new xy(w.shape):new xg(w.shape);let O=[[T],[$]];return u.runWebGLProgram(M,[w],w.dtype,O)}},{kernelName:rp,backendName:"webgl",kernelFunc:Or},{kernelName:rc,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u}=e,{x:y}=t,w=u.texData.get(y.dataId),T=new xA(y.shape),$=[BA(y,w.complexTensorInfos.real),BA(y,w.complexTensorInfos.imag)];return u.runWebGLProgram(T,$,$[0].dtype)}},{kernelName:rh,backendName:"webgl",kernelFunc:vv},{kernelName:rf,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,filter:T}=t,{strides:$,pad:M,dataFormat:O,dilations:P,dimRoundingMode:z}=y,L=hh.convertConv2DDataFormat(O),W=hh.computeConv2DInfo(w.shape,T.shape,$,P,M,z,!1,L),B;if(1===W.filterHeight&&1===W.filterWidth&&1===W.dilationHeight&&1===W.dilationWidth&&1===W.strideHeight&&1===W.strideWidth&&("SAME"===W.padInfo.type||"VALID"===W.padInfo.type))B=zh({x:w,filter:T,convInfo:W,backend:u});else if(W.strideWidth<=2&&"channelsLast"===L&&nG.getBool("WEBGL_EXP_CONV")){let e=new xI(W),t=[[W.padInfo.top,W.padInfo.left],[W.strideHeight,W.strideWidth],[W.dilationHeight,W.dilationWidth],[W.inHeight,W.inWidth]];B=u.runWebGLProgram(e,[w,T],"float32",t)}else if(nG.getBool("WEBGL_CONV_IM2COL"))B=Vh({x:w,filter:T,convInfo:W,backend:u});else{let e=new xv(W);B=u.runWebGLProgram(e,[w,T],"float32")}let j=te({inputs:{x:B},backend:u,attrs:{shape:W.outShape}});return u.disposeIntermediateTensorInfo(B),j}},{kernelName:rm,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,dy:T}=t,{strides:$,pad:M,dataFormat:O,dimRoundingMode:P,filterShape:z}=y,L=hh.convertConv2DDataFormat(O),W=hh.computeConv2DInfo(w.shape,z,$,1,M,P,!1,L),B=new xN(W);return u.runWebGLProgram(B,[w,T],"float32")}},{kernelName:rg,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{dy:w,filter:T}=t,{inputShape:$,strides:M,pad:O,dataFormat:P,dimRoundingMode:z}=y,L=hh.convertConv2DDataFormat(P),W=hh.computeConv2DInfo($,T.shape,M,1,O,z,!1,L);if(nG.getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===L){let e=[[W.strideHeight,W.strideWidth]],t=new x$(W);return u.runWebGLProgram(t,[w,T],"float32",e)}{let e=new xC(W);return u.runWebGLProgram(e,[w,T],"float32")}}},{kernelName:ry,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,filter:T}=t,{strides:$,pad:M,dilations:O}=y,P=hh.computeConv3DInfo(w.shape,T.shape,$,O,M),z=new xw(P);return u.runWebGLProgram(z,[w,T],"float32")}},{kernelName:rA,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,dy:T}=t,{strides:$,pad:M,filterShape:O}=y,P=hh.computeConv3DInfo(w.shape,O,$,1,M),z=new xE(P);return u.runWebGLProgram(z,[w,T],"float32")}},{kernelName:rx,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{dy:w,filter:T}=t,{pad:$,strides:M,inputShape:O}=y,P=hh.computeConv3DInfo(O,T.shape,M,1,$),z=new xR(P);return u.runWebGLProgram(z,[w,T],"float32")}},{kernelName:rb,backendName:"webgl",kernelFunc:x_},{kernelName:rk,backendName:"webgl",kernelFunc:xM},{kernelName:rC,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:u,attrs:y}=e,{image:w,boxes:T,boxInd:$}=t,{cropSize:M,method:O,extrapolationValue:P}=y,z=new xF(w.shape,T.shape,M,O,P);return u.runWebGLProgram(z,[w,T,$],"float32")}},{kernelName:rI,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{axis:T,exclusive:$,reverse:M}=y;return jh(eF.Prod,w,u,T,$,M)}},{kernelName:rN,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{axis:T,exclusive:$,reverse:M}=y;return jh(eF.Sum,w,u,T,$,M)}},{kernelName:rE,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,weights:T}=t,{size:$,binaryOutput:M}=y;if(1===w.shape.length){let e=gQ(u.readSync(w.dataId),u.readSync(T.dataId),T.dtype,T.shape,$);return u.makeTensorInfo([$],T.dtype,e)}if(2===w.shape.length){let e=g1(u.bufferSync(w),u.bufferSync(T),$,M);return u.makeTensorInfo(e.shape,T.dtype,e.values)}throw Error(`Error in denseBincount: input must be at most rank 2, but got rank${w.shape.length}.`)}},{kernelName:rR,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{blockSize:T,dataFormat:$}=y,M=w.shape[0],O="NHWC"===$?w.shape[1]:w.shape[2],P="NHWC"===$?w.shape[2]:w.shape[3],z="NHWC"===$?w.shape[3]:w.shape[1],L=O*T,W=P*T,B=z/(T*T),j="NHWC"===$?[M,L,W,B]:[M,B,L,W],q=new xP(j,T,$);return u.runWebGLProgram(q,[w],w.dtype)}},{kernelName:r$,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,filter:T}=t,{strides:$,pad:M,dilations:O,dimRoundingMode:P}=y,z=O;null==z&&(z=[1,1]),oc.assert(hh.eitherStridesOrDilationsAreOne($,z),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${$} and dilations '${z}'`);let L=hh.computeConv2DInfo(w.shape,T.shape,$,z,M,P,!0),W;W=nG.getBool("WEBGL_PACK_DEPTHWISECONV")&&L.strideWidth<=2&&L.outChannels/L.inChannels==1?new xz(L):new xD(L);let B=[[L.padInfo.top,L.padInfo.left],[L.strideHeight,L.strideWidth],[L.dilationHeight,L.dilationWidth],[L.inHeight,L.inWidth]];return u.runWebGLProgram(W,[w,T],"float32",B)}},{kernelName:r_,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,dy:T}=t,{strides:$,dilations:M,pad:O,dimRoundingMode:P,filterShape:z}=y,L=hh.computeConv2DInfo(w.shape,z,$,M,O,P,!0),W=new xL(L);return u.runWebGLProgram(W,[w,T],"float32")}},{kernelName:rM,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{dy:w,filter:T}=t,{strides:$,dilations:M,pad:O,dimRoundingMode:P,inputShape:z}=y,L=hh.computeConv2DInfo(z,T.shape,$,M,O,P,!0),W=new xW(L);return u.runWebGLProgram(W,[w,T],"float32")}},{kernelName:rF,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u}=e,{x:y}=t,w=[...y.shape,...y.shape],T=oc.sizeFromShape(y.shape),$=te({inputs:{x:y},backend:u,attrs:{shape:[T]}}),M=new xB(T),O=u.runWebGLProgram(M,[$],$.dtype),P=te({inputs:{x:O},backend:u,attrs:{shape:w}});return u.disposeIntermediateTensorInfo($),u.disposeIntermediateTensorInfo(O),P}},{kernelName:rO,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,filter:T}=t,{strides:$,pad:M,dilations:O}=y,P=hh.computeDilation2DInfo(w.shape,T.shape,$,M,"NHWC",O),z,L=new xV(P),W=te({inputs:{x:z=u.runWebGLProgram(L,[w,T],"float32")},backend:u,attrs:{shape:P.outShape}});return u.disposeIntermediateTensorInfo(z),W}},{kernelName:rB,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{equation:w}=y,{allDims:T,summedDims:$,idDims:M}=hh.decodeEinsumEquation(w,t.length);hh.checkEinsumDimSizes(T.length,M,t);let{path:O,steps:P}=hh.getEinsumComputePath($,M),z=P.length,L=null,W=T.length,B=[];for(let e=0;e<z;++e){for(let y of P[e]){let{permutationIndices:e,expandDims:w}=hh.getEinsumPermutation(W,M[y]),T;hh.isIdentityPermutation(e)?T=t[y]:(T=bt({inputs:{x:t[y]},backend:u,attrs:{perm:e}}),B.push(T));let $=T.shape.slice();for(let e=0;e<w.length;++e)$.splice(w[e],0,1);oc.arraysEqual(T.shape,$)||(T=te({inputs:{x:T},backend:u,attrs:{shape:$}}),B.push(T)),null===L?L=T:(L=tm({inputs:{a:T,b:L},backend:u}),B.push(L))}e<z-1&&(O[e]>=0&&(L=wp({inputs:{x:L},backend:u,attrs:{axis:O[e]-(T.length-W),keepDims:!1}}),B.push(L)),W--)}for(let e of B)e!==L&&u.disposeIntermediateTensorInfo(e);return L}},{kernelName:rV,backendName:"webgl",kernelFunc:xU},{kernelName:rU,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:u}=e,{dy:y,y:w}=t,T=nG.getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ak(xG,y.shape,w.shape):new Ax("return (b >= 0.0) ? a : a * (b + 1.0);",y.shape,w.shape);return u.runWebGLProgram(T,[y,w],y.dtype)}},{kernelName:rH,backendName:"webgl",kernelFunc:xH},{kernelName:rG,backendName:"webgl",kernelFunc:xj},{kernelName:rj,backendName:"webgl",kernelFunc:xq},{kernelName:rq,backendName:"webgl",kernelFunc:eg},{kernelName:rX,backendName:"webgl",kernelFunc:xK},{kernelName:rK,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u}=e,{input:y}=t;return tg(y,!1,u)}},{kernelName:rZ,backendName:"webgl",kernelFunc:Ci},{kernelName:rY,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:u}=e,y=new xJ(u.shape);return t.runWebGLProgram(y,[u],u.dtype)}},{kernelName:rJ,backendName:"webgl",kernelFunc:x1},{kernelName:rQ,backendName:"webgl",kernelFunc:x2},{kernelName:on,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{pixels:w}=t,{numChannels:T}=y,$="undefined"!=typeof HTMLVideoElement&&w instanceof HTMLVideoElement,M="undefined"!=typeof HTMLImageElement&&w instanceof HTMLImageElement,[O,P]=$?[w.videoWidth,w.videoHeight]:[w.width,w.height],z=[P,O],L=[P,O,T];if(M||$){let e=nG.getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==eO||e!==x4)&&(x4=e,eO=document.createElement("canvas").getContext("2d",{willReadFrequently:x4})),eO.canvas.width=O,eO.canvas.height=P,eO.drawImage(w,0,0,O,P),w=eO.canvas}let W=u.makeTensorInfo(z,"int32");u.texData.get(W.dataId).usage=eR.PIXELS,u.gpgpu.uploadPixelDataToTexture(u.getTexture(W.dataId),w);let B=nG.getBool("WEBGL_PACK")?new x7(L):new x0(L),j=u.runWebGLProgram(B,[W],"int32");return u.disposeData(W.dataId),j}},{kernelName:oo,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,filter:T,bias:$,preluActivationWeights:M}=t,{strides:O,pad:P,dataFormat:z,dilations:L,dimRoundingMode:W,activation:B,leakyreluAlpha:j}=y,q=hh.convertConv2DDataFormat(z),Z=hh.computeConv2DInfo(w.shape,T.shape,O,L,P,W,!1,q),Y,J=[],ee=null!=$,ea=null!=M,en="leakyrelu"===B,_=()=>{let e=[w,T],D=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){let t=te({inputs:{x:e},backend:u,attrs:{shape:[e.shape[0],1,1]}});return J.push(t),t}return e};if(ee&&e.push(D($,z)),ea&&e.push(D(M,z)),en){let t=u.makeTensorInfo([],"float32",oc.createScalarValue(j,"float32"));e.push(t),J.push(t)}return e};if(1===Z.filterHeight&&1===Z.filterWidth&&1===Z.dilationHeight&&1===Z.dilationWidth&&1===Z.strideHeight&&1===Z.strideWidth&&("SAME"===Z.padInfo.type||"VALID"===Z.padInfo.type))Y=zh({x:w,filter:T,convInfo:Z,backend:u,bias:$,activation:B,preluActivationWeights:M,leakyreluAlpha:j});else if(Z.strideWidth<=2&&"channelsLast"===q&&nG.getBool("WEBGL_EXP_CONV")){let e=B?yi(B,!0):null,t=new xI(Z,ee,e,ea,en),y=[[Z.padInfo.top,Z.padInfo.left],[Z.strideHeight,Z.strideWidth],[Z.dilationHeight,Z.dilationWidth],[Z.inHeight,Z.inWidth]],w=_();Y=u.runWebGLProgram(t,w,"float32",y)}else if(nG.getBool("WEBGL_CONV_IM2COL"))Y=Vh({x:w,filter:T,convInfo:Z,backend:u,bias:$,activation:B,preluActivationWeights:M,leakyreluAlpha:j});else{let e=B?yi(B,!1):null,t=new xv(Z,ee,e,ea,en),y=_();Y=u.runWebGLProgram(t,y,"float32")}let er=te({inputs:{x:Y},backend:u,attrs:{shape:Z.outShape}});return J.push(Y),J.forEach(e=>u.disposeIntermediateTensorInfo(e)),er}},{kernelName:ol,backendName:"webgl",kernelFunc:function(e){let t,{inputs:u,backend:y,attrs:w}=e,{x:T,filter:$,bias:M,preluActivationWeights:O}=u,{strides:P,pad:z,dilations:L,dimRoundingMode:W,activation:B,leakyreluAlpha:j}=w,q=[],Z=L;null==Z&&(Z=[1,1]),oc.assert(hh.eitherStridesOrDilationsAreOne(P,Z),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${P} and dilations '${Z}'`);let Y=hh.computeConv2DInfo(T.shape,$.shape,P,Z,z,W,!0),J=nG.getBool("WEBGL_PACK_DEPTHWISECONV")&&Y.strideWidth<=2&&Y.outChannels/Y.inChannels==1,ee=B?yi(B,J):null,ea=[T,$],en=null!=M,er=null!=O,ei="leakyrelu"===B;if(en&&ea.push(M),er&&ea.push(O),ei){let e=y.makeTensorInfo([],"float32",oc.createScalarValue(j,"float32"));ea.push(e),q.push(e)}t=J?new xz(Y,en,ee,er,ei):new xD(Y,en,ee,er,ei);let es=[[Y.padInfo.top,Y.padInfo.left],[Y.strideHeight,Y.strideWidth],[Y.dilationHeight,Y.dilationWidth],[Y.inHeight,Y.inWidth]],el=y.runWebGLProgram(t,ea,"float32",es);return q.forEach(e=>y.disposeIntermediateTensorInfo(e)),el}},{kernelName:r8,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u}=e,{params:y,indices:w}=t,T=w.shape,$=T[T.length-1],M=oc.sizeFromShape(y.shape),[O,P,z,L]=hh.prepareAndValidate(y,w),W=te({inputs:{x:w},backend:u,attrs:{shape:[P,$]}}),B=te({inputs:{x:y},backend:u,attrs:{shape:[oc.sizeFromShape(y.shape)/z,z]}});if(u.shouldExecuteOnCPU([y,w])||"string"===y.dtype){let e=yt(u.readSync(w.dataId),u.bufferSync(y),y.dtype,P,$,z,L,y.shape,M);return u.makeTensorInfo(O,y.dtype,e.values)}let j=new x6($,L,[P,z],y.shape),q=u.runWebGLProgram(j,[B,W],B.dtype),Z=te({inputs:{x:q},backend:u,attrs:{shape:O}});return u.disposeIntermediateTensorInfo(W),u.disposeIntermediateTensorInfo(B),u.disposeIntermediateTensorInfo(q),Z}},{kernelName:r6,backendName:"webgl",kernelFunc:Tv},{kernelName:ie,backendName:"webgl",kernelFunc:x9},{kernelName:it,backendName:"webgl",kernelFunc:be},{kernelName:ia,backendName:"webgl",kernelFunc:Dt},{kernelName:ir,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u}=e,{input:y}=t;return tg(y,!0,u)}},{kernelName:is,backendName:"webgl",kernelFunc:Ip},{kernelName:iu,backendName:"webgl",kernelFunc:ba},{kernelName:ip,backendName:"webgl",kernelFunc:bn},{kernelName:ic,backendName:"webgl",kernelFunc:bs},{kernelName:im,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{alpha:T}=y,$=u.makeTensorInfo([],"float32",oc.createScalarValue(T,"float32")),M=nG.getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ak(AN,w.shape,$.shape):new Ax(AS,w.shape,$.shape),O=u.runWebGLProgram(M,[w,$],"float32");return u.disposeIntermediateTensorInfo($),O}},{kernelName:ig,backendName:"webgl",kernelFunc:bo},{kernelName:iy,backendName:"webgl",kernelFunc:bu},{kernelName:iA,backendName:"webgl",kernelFunc:function(e){let{backend:t,attrs:u}=e,{start:y,stop:w,num:T}=u,$=yd(y,w,T);return t.makeTensorInfo([$.length],"float32",$)}},{kernelName:ix,backendName:"webgl",kernelFunc:bd},{kernelName:ib,backendName:"webgl",kernelFunc:bp},{kernelName:iI,backendName:"webgl",kernelFunc:bh},{kernelName:iS,backendName:"webgl",kernelFunc:bg},{kernelName:iN,backendName:"webgl",kernelFunc:by},{kernelName:iR,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{depthRadius:T,bias:$,alpha:M,beta:O}=y,P=nG.getBool("WEBGL_PACK_NORMALIZATION")?new bb(w.shape,T,$,M,O):new bA(w.shape,T,$,M,O);return u.runWebGLProgram(P,[w],w.dtype)}},{kernelName:i$,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:u,attrs:y}=e,{x:w,y:T,dy:$}=t,{depthRadius:M,bias:O,alpha:P,beta:z}=y,L=new bv(w.shape,M,O,P,z);return u.runWebGLProgram(L,[w,T,$],w.dtype)}},{kernelName:iM,backendName:"webgl",kernelFunc:_v},{kernelName:iF,backendName:"webgl",kernelFunc:bw},{kernelName:iO,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t;Vs(w,"maxPool");let{filterSize:T,strides:$,pad:M,dimRoundingMode:O}=y;oc.assert(hh.eitherStridesOrDilationsAreOne($,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${$} and dilations '1'`);let P=hh.computePool2DInfo(w.shape,T,$,1,M,O);if(1===P.filterWidth&&1===P.filterHeight&&oc.arraysEqual(P.inShape,P.outShape))return Dt({inputs:{x:w},backend:u});let z=new A0(P,"max",!1);return u.runWebGLProgram(z,[w],w.dtype)}},{kernelName:iD,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{filterSize:T,strides:$,pad:M,dataFormat:O,dimRoundingMode:P}=y,z=hh.computePool3DInfo(w.shape,T,$,[1,1,1],M,P,O),L=new A3(z,"max",!1);return u.runWebGLProgram(L,[w],w.dtype)}},{kernelName:iz,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{dy:w,input:T}=t,{filterSize:$,strides:M,pad:O,dimRoundingMode:P}=y,z=hh.computePool3DInfo(T.shape,$,M,[1,1,1],O,P),L=new A3(z,"max",!0),W=u.runWebGLProgram(L,[T],T.dtype),B=new bN(z),j=u.runWebGLProgram(B,[w,W],T.dtype);return u.disposeIntermediateTensorInfo(W),j}},{kernelName:iP,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{dy:w,input:T,output:$}=t;Vs([T,$],"maxPoolGrad");let{filterSize:M,strides:O,pad:P,dimRoundingMode:z}=y,L=hh.computePool2DInfo(T.shape,M,O,1,P,z),W=new A0(L,"max",!0),B=u.runWebGLProgram(W,[T],T.dtype),j=new bS(L),q=u.runWebGLProgram(j,[w,B],T.dtype);return u.disposeIntermediateTensorInfo(B),q}},{kernelName:iL,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:u})=>{let y,w,{x:T}=e,{filterSize:$,strides:M,pad:O,includeBatchInIndex:P}=t;oc.assert(4===T.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${T.shape.length}.`);let z=[1,1];oc.assert(hh.eitherStridesOrDilationsAreOne(M,z),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${M} and dilations '${z}'`);let L=hh.computePool2DInfo(T.shape,$,M,z,O),[W,B]=(y=new A0(L,"max",!1),w=u.runWebGLProgram(y,[T],"float32"),y=new A0(L,"max",!0,!0,P),[w,u.runWebGLProgram(y,[T],"float32")]);return[W,B]}},{kernelName:iW,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:u})=>{var y,w;let T,$,M,O,P,{x:z}=e,{keepDims:L,axis:W}=t,B=z.shape.length,j=oc.parseAxisParam(W,z.shape),q=j,Z=hh.getAxesPermutation(q,B),Y=null!=Z,J=u.shouldExecuteOnCPU([z]),ee=[],ea=z;if(Y){if(J){let e=u.texData.get(ea.dataId).values,t=Array(B);for(let e=0;e<t.length;e++)t[e]=z.shape[Z[e]];let y=yX(e,z.shape,z.dtype,Z,t);ea=u.makeTensorInfo(t,z.dtype),u.texData.get(ea.dataId).values=y}else ea=yu(z,Z,u);ee.push(ea),q=hh.getInnerMostAxes(q.length,B)}hh.assertAxesAreInnerMostDims("sum",q,B);let[en,er]=hh.computeOutAndReduceShapes(ea.shape,q),ei=en;L&&(ei=hh.expandShapeToKeepDim(en,j));let es=(y=ea,w=ei,T=oc.sizeFromShape(er),$=oc.sizeFromShape(y.shape)/T,O=Yr(M=te({inputs:{x:y},attrs:{shape:[$,T]},backend:u}),"float32","mean",u),P=te({inputs:{x:O},attrs:{shape:w},backend:u}),u.disposeIntermediateTensorInfo(M),u.disposeIntermediateTensorInfo(O),P);for(let e of ee)u.disposeIntermediateTensorInfo(e);return es}},{kernelName:iB,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{axis:T,keepDims:$}=y,M=w.shape.length,O=oc.parseAxisParam(T,w.shape),P=O,z=hh.getAxesPermutation(P,M),L=w;null!=z&&(L=bt({inputs:{x:w},backend:u,attrs:{perm:z}}),P=hh.getInnerMostAxes(P.length,w.shape.length)),hh.assertAxesAreInnerMostDims("min",P,M);let[W,B]=hh.computeOutAndReduceShapes(L.shape,P),j=te({inputs:{x:L},backend:u,attrs:{shape:[-1,oc.sizeFromShape(B)]}}),q=Yr(j,j.dtype,"min",u),Z;return Z=$?te({inputs:{x:q},backend:u,attrs:{shape:hh.expandShapeToKeepDim(W,O)}}):te({inputs:{x:q},backend:u,attrs:{shape:W}}),u.disposeIntermediateTensorInfo(j),u.disposeIntermediateTensorInfo(q),null!=z&&u.disposeIntermediateTensorInfo(L),Z}},{kernelName:iV,backendName:"webgl",kernelFunc:bC},{kernelName:iU,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:u})=>{let{x:y}=e,{paddings:w,mode:T}=u,$=nG.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bR(y.shape,w,T):new bE(y.shape,w,T);return t.runWebGLProgram($,[y],y.dtype)}},{kernelName:iG,backendName:"webgl",kernelFunc:b$},{kernelName:ij,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{logits:w}=t,{numSamples:T,seed:$,normalized:M}=y,O=M?w:Rv({inputs:{logits:w},backend:u,attrs:{dim:w.shape.length-1}}),P=O.shape[0],z=O.shape[1],L=new b_(P,z,T),W=u.runWebGLProgram(L,[O],"int32",[[$]]);return M||u.disposeIntermediateTensorInfo(O),W}},{kernelName:iq,backendName:"webgl",kernelFunc:tm},{kernelName:iX,backendName:"webgl",kernelFunc:function(e){let t,{inputs:u,backend:y}=e,{x:w}=u;if(y.shouldExecuteOnCPU([w])){let[e,t]=yb(y.texData.get(w.dataId).values,w.shape,w.dtype);return y.makeTensorInfo(t,w.dtype,e)}return t=nG.getBool("WEBGL_PACK_UNARY_OPERATIONS")?new An(w.shape,bD):new yQ(w.shape,bP),y.runWebGLProgram(t,[w],w.dtype)}},{kernelName:iZ,backendName:"webgl",kernelFunc:function(e){hh.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:u,attrs:y}=e,{boxes:w,scores:T}=t,{maxOutputSize:$,iouThreshold:M,scoreThreshold:O}=y,{selectedIndices:P}=bz(u.readSync(w.dataId),u.readSync(T.dataId),$,M,O);return u.makeTensorInfo([P.length],"int32",new Int32Array(P))}},{kernelName:iY,backendName:"webgl",kernelFunc:function(e){hh.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:u,attrs:y}=e,{boxes:w,scores:T}=t,{maxOutputSize:$,iouThreshold:M,scoreThreshold:O,padToMaxOutputSize:P}=y,{selectedIndices:z,validOutputs:L}=bL(u.readSync(w.dataId),u.readSync(T.dataId),$,M,O,P);return[u.makeTensorInfo([z.length],"int32",new Int32Array(z)),u.makeTensorInfo([],"int32",new Int32Array([L]))]}},{kernelName:iJ,backendName:"webgl",kernelFunc:function(e){hh.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:u,attrs:y}=e,{boxes:w,scores:T}=t,{maxOutputSize:$,iouThreshold:M,scoreThreshold:O,softNmsSigma:P}=y,{selectedIndices:z,selectedScores:L}=bW(u.readSync(w.dataId),u.readSync(T.dataId),$,M,O,P);return[u.makeTensorInfo([z.length],"int32",new Int32Array(z)),u.makeTensorInfo([L.length],"float32",new Float32Array(L))]}},{kernelName:iK,backendName:"webgl",kernelFunc:xc},{kernelName:i1,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:u,attrs:y}=e,{indices:w}=t,{dtype:T,depth:$,onValue:M,offValue:O}=y,P=oc.sizeFromShape(w.shape),z=new bB(P,$,M,O),L=te({inputs:{x:w},backend:u,attrs:{shape:[P]}}),W=u.runWebGLProgram(z,[L],T);u.disposeIntermediateTensorInfo(L);let B=te({inputs:{x:W},backend:u,attrs:{shape:[...w.shape,$]}});return u.disposeIntermediateTensorInfo(W),B}},{kernelName:iQ,backendName:"webgl",kernelFunc:function x3(e){let{inputs:t,backend:u}=e,{x:y}=t;if("string"===y.dtype)throw Error("onesLike is not supported under string dtype");if("complex64"!==y.dtype)return Ci({attrs:{shape:y.shape,dtype:y.dtype,value:1},backend:u});{let e=bi({inputs:{input:y},backend:u}),t=x3({inputs:{x:e},backend:u}),w=Ip({inputs:{input:y},backend:u}),T=sm({inputs:{x:w},backend:u}),$=Or({inputs:{real:t,imag:T},backend:u});return u.disposeIntermediateTensorInfo(e),u.disposeIntermediateTensorInfo(t),u.disposeIntermediateTensorInfo(w),u.disposeIntermediateTensorInfo(T),$}}},{kernelName:i2,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{axis:w}=y;if(1===t.length)return eg({inputs:{input:t[0]},backend:u,attrs:{dim:w}});let T=t[0].shape,$=t[0].dtype;t.forEach(e=>{oc.assertShapesMatch(T,e.shape,"All tensors passed to stack must have matching shapes"),oc.assert($===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let M=[],O=vv({inputs:t.map(e=>{let t=eg({inputs:{input:e},backend:u,attrs:{dim:w}});return M.push(t),t}),backend:u,attrs:{axis:w}});return M.forEach(e=>u.disposeIntermediateTensorInfo(e)),O}},{kernelName:i0,backendName:"webgl",kernelFunc:Dv},{kernelName:i7,backendName:"webgl",kernelFunc:bG},{kernelName:i6,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u}=e,{x:y,alpha:w}=t,T=nG.getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ak(AT,y.shape,w.shape):new Ax(AC,y.shape,w.shape);return u.runWebGLProgram(T,[y,w],"float32")}},{kernelName:i8,backendName:"webgl",kernelFunc:function(e){let t,{inputs:u,backend:y,attrs:w}=e,{x:T}=u,{axis:$,keepDims:M}=w,O=T.shape.length,P=[],z=oc.parseAxisParam($,T.shape),L=z,W=hh.getAxesPermutation(L,O),B=T;if(null!=W&&(B=bt({inputs:{x:T},backend:y,attrs:{perm:W}}),L=hh.getInnerMostAxes(L.length,O),P.push(B)),hh.assertAxesAreInnerMostDims("prod",L,O),y.shouldExecuteOnCPU([B])){let e=y.texData.get(B.dataId).values,{outVals:u,outShape:w,outDtype:T}=yw(B.shape,B.dtype,e,L);t=y.makeTensorInfo(w,T,u)}else{let[e,u]=hh.computeOutAndReduceShapes(B.shape,L),w=te({inputs:{x:B},backend:y,attrs:{shape:[-1,oc.sizeFromShape(u)]}}),$=Yr(w,oi(T.dtype),"prod",y);t=te({inputs:{x:$},backend:y,attrs:{shape:e}}),P.push(w),P.push($)}if(M){P.push(t);let e=hh.expandShapeToKeepDim(t.shape,z);t=te({inputs:{x:t},backend:y,attrs:{shape:e}})}return P.forEach(e=>y.disposeIntermediateTensorInfo(e)),t}},{kernelName:i9,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{paramsNestedSplits:w,paramsDenseValues:T,indices:$}=t,{outputRaggedRank:M}=y,O=w.map(e=>u.readSync(e.dataId)),P=w.map(e=>e.shape),z=u.readSync(T.dataId),L=u.readSync($.dataId),[W,B,j]=yI(O,P,z,T.shape,T.dtype,L,$.shape,M),q=W.map(e=>u.makeTensorInfo([e.length],"int32",e)),Z=u.makeTensorInfo(j,T.dtype,B);return q.concat([Z])}},{kernelName:se,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u}=e,{starts:y,limits:w,deltas:T}=t,$=u.readSync(y.dataId),M=u.readSync(w.dataId),O=u.readSync(T.dataId),[P,z]=yS($,y.shape,y.dtype,M,w.shape,O,T.shape);return[u.makeTensorInfo([P.length],"int32",P),u.makeTensorInfo([z.length],y.dtype,z)]}},{kernelName:st,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{shape:w,values:T,defaultValue:$,rowPartitionTensors:M}=t,{rowPartitionTypes:O}=y,P=u.readSync(w.dataId),z=u.readSync(T.dataId),L=u.readSync($.dataId),W=M.map(e=>u.readSync(e.dataId)),B=M.map(e=>e.shape),[j,q]=yC(P,w.shape,z,T.shape,T.dtype,L,$.shape,W,B,O);return u.makeTensorInfo(j,T.dtype,q)}},{kernelName:sa,backendName:"webgl",kernelFunc:Av},{kernelName:sn,backendName:"webgl",kernelFunc:bi},{kernelName:rW,backendName:"webgl",kernelFunc:bM},{kernelName:si,backendName:"webgl",kernelFunc:bH},{kernelName:ss,backendName:"webgl",kernelFunc:bj},{kernelName:sg,backendName:"webgl",kernelFunc:bq},{kernelName:so,backendName:"webgl",kernelFunc:te},{kernelName:sc,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{images:w}=t,{alignCorners:T,halfPixelCenters:$,size:M}=y,[O,P]=M,z=nG.getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new bK(w.shape,O,P,T,$):new bX(w.shape,O,P,T,$);return u.runWebGLProgram(z,[w],"float32")}},{kernelName:sf,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{images:w,dy:T}=t,{alignCorners:$}=y,M=new bZ(T.shape,w.shape,$);return u.runWebGLProgram(M,[T],T.dtype)}},{kernelName:su,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{images:w}=t,{alignCorners:T,halfPixelCenters:$,size:M}=y,[O,P]=M,z=nG.getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new bJ(w.shape,O,P,T,$):new bY(w.shape,O,P,T,$);return u.runWebGLProgram(z,[w],w.dtype)}},{kernelName:sp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{images:w,dy:T}=t,{alignCorners:$}=y,M=new bQ(T.shape,w.shape,$);return u.runWebGLProgram(M,[T],T.dtype)}},{kernelName:sy,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{dims:T}=y,$=w.shape.length,M=oc.parseAxisParam(T,w.shape);if(0===$)return Dt({inputs:{x:w},backend:u});let O=nG.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new b0(w.shape,M):new b2(w.shape,M);return u.runWebGLProgram(O,[w],w.dtype)}},{kernelName:or,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:u})=>{let{image:y}=e,{radians:w,fillValue:T,center:$}=t,M=new b5(y.shape,T),[O,P]=hh.getImageCenter($,y.shape[1],y.shape[2]),z=[[O,P,Math.sin(w),Math.cos(w)]];return u.runWebGLProgram(M,[y],y.dtype,z)}},{kernelName:sA,backendName:"webgl",kernelFunc:b3},{kernelName:sx,backendName:"webgl",kernelFunc:b7},{kernelName:sb,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{indices:w,updates:T}=t,{shape:$}=y,{sliceRank:M,numUpdates:O,sliceSize:P,strides:z,outputSize:L}=hh.calculateShapes(T,w,$),W=[L/P,P];if(0===L)return u.makeTensorInfo($,w.dtype);let B=te({inputs:{x:w},backend:u,attrs:{shape:[O,M]}}),j=te({inputs:{x:T},backend:u,attrs:{shape:[O,P]}}),q=u.makeTensorInfo([],"float32",new Float32Array([0])),Z;Z=nG.getBool("WEBGL_PACK")?new b6(O,M,B.shape.length,j.shape.length,z,W):new b4(O,M,B.shape.length,j.shape.length,z,W);let Y=u.runWebGLProgram(Z,[j,B,q],j.dtype),J=te({inputs:{x:Y},backend:u,attrs:{shape:$}});return u.disposeIntermediateTensorInfo(B),u.disposeIntermediateTensorInfo(j),u.disposeIntermediateTensorInfo(Y),u.disposeIntermediateTensorInfo(q),J}},{kernelName:sI,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{sortedSequence:w,values:T}=t,{side:$}=y,M=new b8(w.shape[0],w.shape[1],T.shape[1],$),O=[[w.shape[1]]];return u.runWebGLProgram(M,[w,T],"int32",O)}},{kernelName:sN,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u}=e,{condition:y,t:w,e:T}=t,$=new b9(y.shape.length,w.shape,w.shape.length);return u.runWebGLProgram($,[y,w,T],dt(w.dtype,T.dtype))}},{kernelName:sC,backendName:"webgl",kernelFunc:vn},{kernelName:s_,backendName:"webgl",kernelFunc:vr},{kernelName:s$,backendName:"webgl",kernelFunc:vs},{kernelName:sE,backendName:"webgl",kernelFunc:vo},{kernelName:sR,backendName:"webgl",kernelFunc:vd},{kernelName:sT,backendName:"webgl",kernelFunc:Gs},{kernelName:sL,backendName:"webgl",kernelFunc:Rv},{kernelName:sM,backendName:"webgl",kernelFunc:vp},{kernelName:sP,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{blockShape:T,paddings:$}=y;oc.assert(w.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let M=T.reduce((e,t)=>e*t),O=[[0,0]];O.push(...$);for(let e=1+T.length;e<w.shape.length;++e)O.push([0,0]);let P=[],z=Dv({inputs:{x:w},backend:u,attrs:{paddings:O,constantValue:0}}),L=hh.getReshaped(z.shape,T,M,!1),W=hh.getPermuted(L.length,T.length,!1),B=hh.getReshapedPermuted(z.shape,T,M,!1),j=te({inputs:{x:z},backend:u,attrs:{shape:L}}),q=bt({inputs:{x:j},backend:u,attrs:{perm:W}}),Z=te({inputs:{x:q},backend:u,attrs:{shape:B}});return P.push(z),P.push(j),P.push(q),P.forEach(e=>u.disposeIntermediateTensorInfo(e)),Z}},{kernelName:sW,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u}=e,{indices:y,values:w,denseShape:T,defaultValue:$}=t;if(1!==T.shape.length)throw Error(`Dense shape must be a vector, saw:
         ${T.shape}`);if(2!==y.shape.length)throw Error(`Indices must be a matrix, saw:
         ${y.shape}`);if(1!==w.shape.length)throw Error(`Values must be a vector, saw:
         ${w.shape}`);if(0!==$.shape.length)throw Error(`Default value must be a scalar, saw:
        ${$.shape}`);let M=u.readSync(y.dataId),O=u.readSync(w.dataId),P=u.readSync(T.dataId),z=u.readSync($.dataId)[0],[L,W,B,j,q]=yP(M,y.shape,y.dtype,O,w.dtype,P,z);return[u.makeTensorInfo(W,y.dtype,L),u.makeTensorInfo([W[0]],w.dtype,B),u.makeTensorInfo([j.length],"bool",new Uint8Array(j.map(e=>Number(e)))),u.makeTensorInfo([q.length],y.dtype,new Int32Array(q))]}},{kernelName:sB,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u}=e,{inputIndices:y,inputShape:w,newShape:T}=t;if(2!==y.shape.length)throw Error(`Input indices should be a matrix but received shape ${y.shape}`);if(1!==w.shape.length)throw Error(`Input shape should be a vector but received shape ${w.shape}`);if(1!==T.shape.length)throw Error(`Target shape should be a vector but received shape ${T.shape}`);let $=Array.from(u.readSync(w.dataId)),M=u.readSync(y.dataId),O=Array.from(u.readSync(T.dataId)),[P,z,L]=yD(M,y.shape,y.dtype,$,O);return[u.makeTensorInfo(z,y.dtype,P),u.makeTensorInfo([L.length],T.dtype,new Int32Array(L))]}},{kernelName:sV,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u}=e,{data:y,indices:w,segmentIds:T}=t;if(y.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==w.shape.length)throw Error(`Indices should be a vector but received shape
              ${w.shape}`);if(1!==T.shape.length)throw Error(`Segment ids should be a vector but received shape
              ${T.shape}`);let $=u.readSync(y.dataId),M=u.readSync(w.dataId),O=u.readSync(T.dataId),[P,z]=yz($,y.shape,y.dtype,M,O,!0);return u.makeTensorInfo(z,y.dtype,P)}},{kernelName:sU,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u}=e,{data:y,indices:w,segmentIds:T}=t;if(y.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==w.shape.length)throw Error(`Indices should be a vector but received shape
             ${w.shape}`);if(1!==T.shape.length)throw Error(`Segment ids should be a vector but received shape
             ${T.shape}`);let $=u.readSync(y.dataId),M=u.readSync(w.dataId),O=u.readSync(T.dataId),[P,z]=yz($,y.shape,y.dtype,M,O);return u.makeTensorInfo(z,y.dtype,P)}},{kernelName:sG,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{sparseIndices:w,sparseValues:T,defaultValue:$}=t,{outputShape:M}=y,{sliceRank:O,numUpdates:P,sliceSize:z,strides:L,outputSize:W}=hh.calculateShapes(T,w,M);if("string"===T.dtype){let e=y_(u.bufferSync(w),u.bufferSync(T),M,W,z,P,O,L,oc.decodeString(u.readSync($.dataId)[0]),!1);return u.makeTensorInfo(M,e.dtype,e.values)}let B=new b4(P,O,w.shape.length,T.shape.length,L,[W,1],!1),j=u.runWebGLProgram(B,[T,w,$],T.dtype),q=te({inputs:{x:j},backend:u,attrs:{shape:M}});return u.disposeIntermediateTensorInfo(j),q}},{kernelName:sD,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{numOrSizeSplits:T,axis:$}=y,M=oc.parseAxisParam($,w.shape)[0],O=hh.prepareSplitSize(w,T,M),P=Array(w.shape.length).fill(0),z=w.shape.slice();return O.map(e=>{let t=[...z];t[M]=e;let y=Gs({inputs:{x:w},backend:u,attrs:{begin:P,size:t}});return P[M]+=e,y})}},{kernelName:sF,backendName:"webgl",kernelFunc:vm},{kernelName:sj,backendName:"webgl",kernelFunc:vg},{kernelName:sH,backendName:"webgl",kernelFunc:vA},{kernelName:sq,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t;if("string"!==w.dtype)throw Error("Input must be of datatype string");let T=u.readSync(w.dataId),$=yW(hh.fromUint8ToStringArray(T),"string",y);return u.makeTensorInfo(w.shape,"string",$)}},{kernelName:oa,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:u}){let{x:y}=e,w=y1+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,T=new yQ(y.shape,w);return u.runWebGLProgram(T,[y],y.dtype)}},{kernelName:sX,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{begin:T,end:$,strides:M,beginMask:O,endMask:P,ellipsisMask:z,newAxisMask:L,shrinkAxisMask:W}=y,{finalShapeSparse:B,finalShape:j,isIdentity:q,sliceDim0:Z,isSimpleSlice:Y,begin:J,end:ee,strides:ea}=hs.sliceInfo(w.shape,T,$,M,O,P,z,L,W),en;if(q)en=te({inputs:{x:w},backend:u,attrs:{shape:j}});else if(Z||Y){oc.assert(w.shape.length>=1,()=>`Input must have rank at least 1, got: ${w.shape.length}`);let e=hs.computeOutShape(J,ee,ea),t=Gs({inputs:{x:w},backend:u,attrs:{begin:J,size:e}});en=te({inputs:{x:t},backend:u,attrs:{shape:j}}),u.disposeIntermediateTensorInfo(t)}else if(u.shouldExecuteOnCPU([w])){let e=u.readSync(w.dataId),t=yB(B,me(w.shape,w.dtype,e),ea,J);en=u.makeTensorInfo(j,w.dtype,t.values)}else{let e=new vx(J,ea,B);en=u.runWebGLProgram(e,[w],w.dtype)}let er=te({inputs:{x:en},backend:u,attrs:{shape:j}});return u.disposeIntermediateTensorInfo(en),er}},{kernelName:sK,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{separator:w,nGramWidths:T,leftPad:$,rightPad:M,padWidth:O,preserveShortSequences:P}=y,{data:z,dataSplits:L}=t,[W,B]=yV(u.readSync(z.dataId),u.readSync(L.dataId),w,T,$,M,O,P);return[u.makeTensorInfo([W.length],"string",W),u.makeTensorInfo(L.shape,"int32",B)]}},{kernelName:sZ,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{skipEmpty:w}=y,{input:T,delimiter:$}=t;if("string"!==T.dtype)throw Error("Input must be of datatype string");if(1!==T.shape.length)throw Error(`Input must be a vector, got shape: ${T.shape}`);if(0!==$.shape.length)throw Error(`Delimiter must be a scalar, got shape: ${$.shape}`);let[M,O,P]=yU(u.readSync(T.dataId),u.readSync($.dataId)[0],w),z=O.length;return[u.makeTensorInfo([z,2],"int32",M),u.makeTensorInfo([z],"string",O),u.makeTensorInfo([2],"int32",new Int32Array(P))]}},{kernelName:sY,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{numBuckets:w}=y,{input:T}=t;if("string"!==T.dtype)throw Error("Input must be of datatype string");if(w<=0)throw Error("Number of buckets must be at least 1");let $=yG(u.readSync(T.dataId),w);return u.makeTensorInfo(T.shape,"int32",$)}},{kernelName:sJ,backendName:"webgl",kernelFunc:bO},{kernelName:sO,backendName:"webgl",kernelFunc:wp},{kernelName:sQ,backendName:"webgl",kernelFunc:vb},{kernelName:s1,backendName:"webgl",kernelFunc:vw},{kernelName:sw,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{tensor:w,indices:T,updates:$}=t,{}=y,{sliceRank:M,numUpdates:O,sliceSize:P,strides:z,outputSize:L}=hh.calculateShapes($,T,w.shape),W=[L/P,P];if(0===L)return u.makeTensorInfo(w.shape,T.dtype);let B=te({inputs:{x:T},backend:u,attrs:{shape:[O,M]}}),j=te({inputs:{x:$},backend:u,attrs:{shape:[O,P]}}),q=te({inputs:{x:w},backend:u,attrs:{shape:W}}),Z=new b4(O,M,B.shape.length,j.shape.length,z,W,!1,!0),Y=u.runWebGLProgram(Z,[j,B,q],q.dtype),J=te({inputs:{x:Y},backend:u,attrs:{shape:w.shape}});return u.disposeIntermediateTensorInfo(B),u.disposeIntermediateTensorInfo(j),u.disposeIntermediateTensorInfo(q),u.disposeIntermediateTensorInfo(Y),J}},{kernelName:s2,backendName:"webgl",kernelFunc:Fv},{kernelName:s3,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{k:T,sorted:$}=y,M=nG.getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),O=nG.getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),P=w.shape,z=P[P.length-1];if(u.shouldExecuteOnCPU([w])||z<M||T>O){let[e,t]=yq(u.readSync(w.dataId),P,w.dtype,T,$);return[u.makeTensorInfo(e.shape,e.dtype,e.values),u.makeTensorInfo(t.shape,t.dtype,t.values)]}if(0===T)return P[P.length-1]=0,[u.makeTensorInfo(P,w.dtype,[]),u.makeTensorInfo(P,"int32",[])];if(1===z)return[w,Ci({attrs:{shape:P,dtype:"int32",value:0},backend:u})];let L=u.texData.get(w.dataId),W=null!==L&&L.isPacked,B=W?u.unpackTensor(w):w,j=oc.sizeFromShape(P)/z,q=te({inputs:{x:B},attrs:{shape:[j,z]},backend:u});W&&kp(u,B);let Z=hP(T),Y=hP(z),J=null,S=()=>null===J?[q,q]:[q,J],k=(e,t,y)=>{let w=S(),T=new vN(y),$=[[z],[null===J?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],M=J;J=u.runWebGLProgram(T,w,"int32",$),kp(u,M)};for(let e=1;e<Z;e*=2){let t=2*e;for(let u=e;u>=1;u/=2)k(t,u,[j,Y])}for(let e=Y;e>Z;e/=2){let t=S(),y=new vC([j,e/2]),w=[[z],[null===J?1:0],[Z]],T=J;J=u.runWebGLProgram(y,t,"int32",w),kp(u,T);let $=Z/2,M=2*$;for(let e=$;e>=1;e/=2)k(M,e,J.shape)}let ee=J;J=Gs({inputs:{x:J},backend:u,attrs:{begin:0,size:[j,T]}}),kp(u,ee);let ea=Tv({inputs:{x:q,indices:J},backend:u,attrs:{axis:1,batchDims:1}});kp(u,q);let en=P.slice(0,-1);en.push(T),ee=J,J=te({inputs:{x:J},attrs:{shape:en},backend:u}),kp(u,ee);let er=ea;return ea=te({inputs:{x:ea},attrs:{shape:en},backend:u}),kp(u,er),[ea,J]}},{kernelName:s7,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{image:w,transforms:T}=t,{interpolation:$,fillMode:M,fillValue:O,outputShape:P}=y,[z,L,W,B]=w.shape,[j,q]=null!=P?P:[L,W],Z=new vE(L,W,$,M,O,[z,j,q,B]);return u.runWebGLProgram(Z,[w,T],"float32")}},{kernelName:s4,backendName:"webgl",kernelFunc:bt},{kernelName:s6,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:u,backend:y}=e,{axis:w}=u,{x:T}=t;Vs(T,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let{outputValues:$,outputShape:M,indices:O}=yK(y.readSync(T.dataId),w,T.shape,T.dtype);return[y.makeTensorInfo(M,T.dtype,$),y.makeTensorInfo([O.length],"int32",O)]}},{kernelName:s8,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{value:w}=t,{axis:T}=y;T<0&&(T+=w.shape.length);let $=w.shape.length,M=w.shape[T],O=Array($-1),P=0;for(let e=0;e<$;e++)e!==T&&(O[P++]=w.shape[e]);let z=[],L=Array($).fill(0),W=w.shape.slice();W[T]=1;let B=Array(M);for(let e=0;e<B.length;e++){L[T]=e;let t=Gs({inputs:{x:w},backend:u,attrs:{begin:L,size:W}}),y=te({inputs:{x:t},backend:u,attrs:{shape:O}});B[e]=y,z.push(t)}return z.forEach(e=>u.disposeIntermediateTensorInfo(e)),B}},{kernelName:s9,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,segmentIds:T}=t,{numSegments:$}=y,M=w.shape.length,O=[],P=0,z=hh.getAxesPermutation([P],M),L=w;null!=z&&(L=bt({inputs:{x:w},backend:u,attrs:{perm:z}}),O.push(L),P=hh.getInnerMostAxes(1,M)[0]);let W=hh.segment_util.computeOutShape(L.shape,P,$),B=oc.sizeFromShape([L.shape[P]]),j=te({inputs:{x:L},backend:u,attrs:{shape:[-1,B]}});O.push(j);let q=oi(w.dtype),g=(e,t,y,w,T)=>{let $=e.shape[0],M=e.shape[1],P=hh.segment_util.segOpComputeOptimalWindowSize(M,T),z=new vR({windowSize:P,inSize:M,batchSize:$,numSegments:T},t),L=u.compileAndRun(z,[e,y],w);if(O.push(L),L.shape[1]===T)return L;let W=Av({backend:u,attrs:{start:0,stop:T,step:1,dtype:"float32"}}),B=Fv({inputs:{x:W},backend:u,attrs:{reps:[M/P]}});return O.push(W),O.push(B),g(L,t,B,w,T)},Z=te({inputs:{x:g(j,"unsortedSegmentSum",T,q,$)},backend:u,attrs:{shape:W}}),Y=Z;return null!=z&&(O.push(Z),Y=bt({inputs:{x:Y},backend:u,attrs:{perm:hh.getUndoAxesPermutation(z)}})),O.forEach(e=>u.disposeIntermediateTensorInfo(e)),Y}},{kernelName:ot,backendName:"webgl",kernelFunc:sm}])ti(e);function he(e,t){let u;return{kernelName:e,backendName:"wasm",setupFunc:function(t){u=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){let{backend:y,inputs:{x:w}}=e,T=y.dataIdMap.get(w.dataId).id,$=y.makeOutput(w.shape,t||w.dtype),M=y.dataIdMap.get($.dataId).id;return 0===oc.sizeFromShape($.shape)||u(T,eP[w.dtype],M),$}}}(Y=eP||(eP={}))[Y.float32=0]="float32",Y[Y.int32=1]="int32",Y[Y.bool=2]="bool",Y[Y.string=3]="string",Y[Y.complex64=4]="complex64",(J=eD||(eD={}))[J.linear=0]="linear",J[J.relu=1]="relu",J[J.relu6=2]="relu6",J[J.prelu=3]="prelu",J[J.leakyrelu=4]="leakyrelu",J[J.sigmoid=5]="sigmoid",J[J.elu=6]="elu";var v$=he(nH),v_=he(nj),vM=he(nq);function Ge(e,t,u){let y;return{kernelName:e,backendName:"wasm",setupFunc:function(t){y=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:w}=e,{a:T,b:$}=w,M=t.dataIdMap.get(T.dataId).id,O=t.dataIdMap.get($.dataId).id,P=null!=u?u:T.dtype,z=hh.assertAndGetBroadcastShape(T.shape,$.shape),L=t.makeOutput(z,P);if(0===oc.sizeFromShape(z))return L;let W=new Uint8Array(new Int32Array(T.shape).buffer),B=new Uint8Array(new Int32Array($.shape).buffer),j=t.dataIdMap.get(L.dataId).id;return y(M,W,T.shape.length,O,B,$.shape.length,eP[T.dtype],j),L}}}var vF=Ge(nX,!0);function Np(e){let{inputs:{x:t},backend:u}=e;if("string"===t.dtype)return ar(u.readSync(t.dataId),t.shape,t.dtype);let y=u.makeOutput(t.shape,t.dtype),w=u.typedArrayFromHeap(t);return u.typedArrayFromHeap(y).set(w),y}function ho(e){let{inputs:t,backend:u,attrs:y}=e,[w,T]=function(e,t){let u=[],y=[];for(let w=0;w<e.length;++w)1!==e[w]&&u.push(e[w]),1!==e[t[w]]&&y.push(t[w]);for(let e=0;e<y.length;++e){let t=-1;for(let u=0;u<y.length;++u)y[u]>=e&&(-1===t||y[t]>y[u])&&(t=u);y[t]=e}return[u,y]}(t.x.shape,y.perm),$=!0;for(let e=0;e<T.length;e++)T[e]!==e&&($=!1);let M=function(e,t){let u=Array(e.length);for(let y=0;y<u.length;y++)u[y]=e[t[y]];return u}(t.x.shape,y.perm),O={dataId:t.x.dataId,shape:w,dtype:t.x.dtype};if($){let e=Np({inputs:t,backend:u});return e.shape=M,e}let P=u.makeOutput(M,O.dtype),z=u.dataIdMap.get(O.dataId).id,L=u.dataIdMap.get(P.dataId).id,W=new Uint8Array(new Int32Array(T).buffer),B=new Uint8Array(new Int32Array(O.shape).buffer);return eB(z,B,O.shape.length,eP[O.dtype],L,W,T.length),P}function Tr(e,t,u){let y=e.shape,w=e.shape.length,T=oc.parseAxisParam(t,y),$=T,M=hh.getAxesPermutation($,w),O=null,P=!1;if(null!=M){let t=Array(w);for(let e=0;e<t.length;e++)t[e]=y[M[e]];$=hh.getInnerMostAxes($.length,w),O=ho({inputs:{x:e},attrs:{perm:M},backend:u});let T=u.dataIdMap.get(e.dataId).id;u.dataIdMap.get(O.dataId).id!==T&&(P=!0)}return{transposed:O,originalAxes:T,axes:$,inputWasTransposed:P}}function Mg(e){let t;return{kernelName:e,backendName:"wasm",setupFunc:function(u){t=u.wasm.cwrap(e,null,["number","number","number","number","number"])},kernelFunc:function(e){let{backend:u,inputs:y,attrs:w}=e,{axis:T}=w,{x:$}=y,M=u.dataIdMap.get($.dataId).id,O=M,P=$,{transposed:z,axes:L,inputWasTransposed:W}=Tr($,T,u);if(W){let e=u.dataIdMap.get(z.dataId).id;e!==M&&(P=z,O=e)}let B=P.shape.slice(0,-1),j=u.makeOutput(B,"int32"),q=u.dataIdMap.get(j.dataId).id,Z=oc.sizeFromShape(j.shape),Y=P.shape[L[0]];return t(O,eP[P.dtype],Z,Y,q),W&&u.disposeData(z.dataId),j}}}var vO=Mg(nJ),vP=Mg(nQ),vD=he(n1),vz=he(n2),vL=he(n0),vW=Ge(n3,!1),vB=he(n5);function zt(e){let{inputs:t,attrs:u}=e,{x:y}=t,{shape:w}=u,T=oc.sizeFromShape(y.shape),$=oc.inferFromImplicitShape(w,T);return oc.assert(T===oc.sizeFromShape($),()=>`new shape: ${$}, old shape: ${y.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(y.dataId),{dataId:y.dataId,shape:$,dtype:y.dtype}}function Po(e){let{inputs:{x:t},attrs:{begin:u,size:y},backend:w}=e,[T,$]=hs.parseSliceParams(t,u,y),M=hs.isSliceContinous(t.shape,T,$),O=w.readSync(t.dataId),P=w.makeOutput($,t.dtype),z=oc.computeStrides(t.shape),L=w.dataIdMap.get(P.dataId);if(M){let e=hs.computeFlatOffset(T,z);return"string"===t.dtype?L.stringBytes=O.slice(e,e+oc.sizeFromShape($)):w.typedArrayFromHeap(P).set(O.subarray(e,e+oc.sizeFromShape($))),P}if("string"===t.dtype){let e=pp(O,T,$,t.shape,t.dtype);return L.stringBytes=e,P}let W=w.typedArrayFromHeap(P),B=t.shape.length;if(2===B)!function(e,t,u,y,w){let T=0,$=y[0],M=y[1],O=$+w[0];for(let y=$;y<O;y++){let $=y*t+M;u.set(e.subarray($,$+w[1]),T),T+=w[1]}}(O,z[0],W,T,$);else if(3===B)!function(e,t,u,y,w,T){let $=0,M=w[0],O=w[1],P=w[2],z=M+T[0],L=O+T[1];for(let w=M;w<z;w++)for(let M=O;M<L;M++){let O=w*t+M*u+P;y.set(e.subarray(O,O+T[2]),$),$+=T[2]}}(O,z[0],z[1],W,T,$);else if(4===B)!function(e,t,u,y,w,T,$){let M=0,O=T[0],P=T[1],z=T[2],L=O+$[0],W=P+$[1],B=z+$[2],j=T[3];for(let T=O;T<L;T++)for(let O=P;O<W;O++)for(let P=z;P<B;P++){let z=T*t+O*u+P*y+j;w.set(e.subarray(z,z+$[3]),M),M+=$[3]}}(O,z[0],z[1],z[2],W,T,$);else{let e=pp(O,T,$,t.shape,t.dtype);W.set(e)}return P}var vU=Ge(rn,!0);function Mr(e){let{inputs:{x:t},attrs:{dtype:u},backend:y}=e,w=y.makeOutput(t.shape,u),T=y.typedArrayFromHeap(t);return y.typedArrayFromHeap(w).set(T),w}var vG=he(ro);function Pv(e){let{inputs:t,backend:u}=e,y=oc.parseAxisParam(e.attrs.axis,t[0].shape)[0],w=t.map(e=>e.shape);hh.assertParamsConsistent(w,y);let T=hh.computeOutShape(t.map(e=>e.shape),y),$=t.filter(e=>oc.sizeFromShape(e.shape)>0);if(1===$.length)return Np({inputs:{x:$[0]},backend:u});let M=u.makeOutput(T,t[0].dtype);if(0===oc.sizeFromShape(T))return M;if("string"===$[0].dtype){let e=$.map(e=>{let t=[-1,oc.sizeFromShape(e.shape.slice(y))];return zt({inputs:{x:e},backend:u,attrs:{shape:t}})}),w=e.map(e=>({vals:u.readSync(e.dataId),shape:e.shape}));T=hh.computeOutShape(e.map(e=>e.shape),1);let O=1===e[0].shape[0],P=ap(w,T,t[0].dtype,O),z=hh.computeOutShape($.map(e=>e.shape),y);return M.shape=z,u.dataIdMap.get(M.dataId).stringBytes=hh.fromStringArrayToUint8(P),e.forEach(e=>u.disposeData(e.dataId)),M}let O=oc.sizeFromShape($[0].shape.slice(0,y)),P=0,z=$.map(e=>{let t=oc.sizeFromShape(e.shape.slice(y));return P+=t,t}),L=$.map(e=>u.typedArrayFromHeap(e)),W=u.typedArrayFromHeap(M);for(let e=0;e<O;e++){let t=e*P;for(let u=0;u<L.length;u++){let y=z[u],w=e*y,T=L[u].subarray(w,w+y);W.set(T,t),t+=y}}return M}var vH=he(rb),vq=he(rk);(ee=e5||(e5={}))[ee.bilinear=0]="bilinear",ee[ee.nearest=1]="nearest";var vK=he(rV),vZ=Ge(rH,!1,"bool"),vY=he(rG),vJ=he(rj,"float32");function Lg(e){let{inputs:t,attrs:u,backend:y}=e,{input:w}=t,{dim:T}=u,$=w.shape.length,M=w.shape.slice(),O=T;return T<0&&(oc.assert(-($+1)<=T,()=>`Axis must be in the interval [${-($+1)}, ${$}]`),O=$+T+1),M.splice(O,0,1),zt({inputs:{x:w},backend:y,attrs:{shape:M}})}var vQ=he(rX,"float32");function Mv(e){let{attrs:{shape:t,value:u},backend:y}=e,{attrs:{dtype:w}}=e;w=w||oc.inferDtype(u);let T=y.makeOutput(t,w);return y.typedArrayFromHeap(T).fill(u),T}var v1=he(rJ),v0=Ge(rQ,!1),v3=Ge(ie,!1,"bool"),v7=Ge(it,!1,"bool"),v4=he(iu,"bool"),v6=he(ip,"bool"),v8=he(ic,"bool"),v9=Ge(ig,!1,"bool"),ka=Ge(iy,!1,"bool"),kn=he(ix),kr=he(ib),ki=Ge(iI,!1,"bool"),ks=he(iS),ko=Ge(iN,!1,"bool"),kl=Ge(iC,!1,"bool"),kd=Ge(iF,!1),kh=Ge(iV,!1);function Bv(e){let{backend:t,inputs:{logits:u},attrs:{dim:y}}=e,w=t.dataIdMap.get(u.dataId).id,T=t.makeOutput(u.shape,u.dtype),$=t.dataIdMap.get(T.dataId).id,M=u.shape[y],O=oc.sizeFromShape(u.shape)/M;return 0===oc.sizeFromShape(T.shape)||tD(w,$,M,O),T}(ea=tO||(tO={}))[ea.reflect=0]="reflect",ea[ea.symmetric=1]="symmetric";var kf=Ge(iG,!0),km=Ge(iq,!0),kg=he(iX);function qc(e,t){let u=new Int32Array(e.wasm.HEAPU8.buffer,t,4),y=u[0],w=u[1],T=u[2],$=u[3];return e.wasm._free(t),{pSelectedIndices:y,selectedSize:w,pSelectedScores:T,pValidOutputs:$}}var ky=Ge(iK,!1,"bool"),kA={kernelName:i0,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:u,attrs:{paddings:y,constantValue:w}}=e,T=y.map((e,u)=>e[0]+t.shape[u]+e[1]);if(0===oc.sizeFromShape(t.shape))return Mv({backend:u,attrs:{shape:T,value:w,dtype:t.dtype}});let $=u.dataIdMap.get(t.dataId).id,M=u.makeOutput(T,t.dtype),O=u.dataIdMap.get(M.dataId).id,P=new Uint8Array(new Int32Array(t.shape).buffer),z=y.map(e=>e[0]),L=y.map(e=>e[1]),W=new Uint8Array(new Int32Array(z).buffer),B=new Uint8Array(new Int32Array(L).buffer);return tU($,P,t.shape.length,eP[t.dtype],W,B,w,O),M},setupFunc:function(e){tU=e.wasm.cwrap(i0,null,["number","array","number","number","array","array","number","number"])}};function zg(e){t7=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function Vg(e,t){let{backend:u,inputs:y}=e,{data:w,indices:T,segmentIds:$}=y,M=T.shape[0],O=u.readSync($.dataId,M-1,M)[0],P=M>0?O+1:0;if(P<0)throw Error(hh.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let z=w.shape.slice();z[0]=P;let L=u.dataIdMap.get(w.dataId).id,W=u.dataIdMap.get(T.dataId).id,B=u.dataIdMap.get($.dataId).id,j=u.makeOutput(z,w.dtype),q=u.dataIdMap.get(j.dataId).id,Z=u.makeOutput([4],"int32"),Y=u.dataIdMap.get(Z.dataId).id;t7(L,eP[w.dtype],w.shape[0],W,B,q,Y,t,0);let J=u.readSync(Z.dataId),ee;switch(J[0]){case 0:ee=hh.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break;case 1:ee=hh.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break;case 2:ee=hh.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(J[1],J[2]);break;case 3:ee=hh.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(J[1],J[2],J[3]);break;default:ee=""}if(u.disposeData(Z.dataId),ee)throw u.disposeData(j.dataId),Error(ee);return j}for(let e of[{kernelName:os,backendName:"wasm",setupFunc:function(e){eL=e.wasm.cwrap(os,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{a:w,b:T,bias:$,preluActivationWeights:M}=t;if("float32"!==w.dtype||"float32"!==T.dtype)throw Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:O,transposeB:P,activation:z,leakyreluAlpha:L}=y,W=u.dataIdMap.get(w.dataId).id,B=u.dataIdMap.get(T.dataId).id,j=0;if(null!=$){let e=u.dataIdMap.get($.dataId);if(1!==e.shape.length)throw Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);j=e.id}let q=null==M?0:u.dataIdMap.get(M.dataId).id,Z=eD[z];if(null==Z)throw Error(`${z} activation not yet supported for FusedConv2D in the wasm backend.`);let Y=O?w.shape[2]:w.shape[1],J=P?T.shape[1]:T.shape[2],ee=un.assertAndGetBroadcastShape(w.shape.slice(0,-2),T.shape.slice(0,-2)),ea=u.makeOutput([...ee,Y,J],w.dtype),en=u.dataIdMap.get(ea.dataId).id,er=new Uint8Array(new Int32Array(w.shape).buffer),ei=new Uint8Array(new Int32Array(T.shape).buffer);return eL(W,er,w.shape.length,B,ei,T.shape.length,O,P,Z,j,q,L||0,en),ea}},v$,v_,vM,vF,{kernelName:nK,backendName:"wasm",setupFunc:function(e){eW=e.wasm.cwrap(nK,null,["array","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:u}=e,y=u.makeOutput(t[0].shape,t[0].dtype);if(0===oc.sizeFromShape(y.shape))return y;let w=t.map(e=>u.dataIdMap.get(e.dataId).id),T=new Uint8Array(new Int32Array(w).buffer),$=u.dataIdMap.get(y.dataId).id;return eW(T,w.length,eP[y.dtype],$),y}},{kernelName:nZ,backendName:"wasm",setupFunc:function(e){eV=e.wasm.cwrap(nZ,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{axis:w,keepDims:T}=y,{x:$}=u,M=t.dataIdMap.get($.dataId).id,O=$,{transposed:P,axes:z,originalAxes:L,inputWasTransposed:W}=Tr($,w,t);if(W){let e=t.dataIdMap.get(P.dataId).id;O=P,M=e}let B=O.shape.length;hh.assertAxesAreInnerMostDims("all",z,B);let[j,q]=hh.computeOutAndReduceShapes(O.shape,z),Z=oc.sizeFromShape(q),Y=t.makeOutput(j,$.dtype);if(0!==oc.sizeFromShape(O.shape)){let e=t.dataIdMap.get(Y.dataId).id;eV(M,Z,e)}if(W&&t.disposeData(P.dataId),T){let e=hh.expandShapeToKeepDim(Y.shape,L);Y.shape=e}return Y}},{kernelName:nY,backendName:"wasm",setupFunc:function(e){eU=e.wasm.cwrap(nY,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{axis:w,keepDims:T}=y,{x:$}=u,M=t.dataIdMap.get($.dataId).id,O=$,{transposed:P,axes:z,originalAxes:L,inputWasTransposed:W}=Tr($,w,t);if(W){let e=t.dataIdMap.get(P.dataId).id;O=P,M=e}let B=O.shape.length;hh.assertAxesAreInnerMostDims("any",z,B);let[j,q]=hh.computeOutAndReduceShapes(O.shape,z),Z=oc.sizeFromShape(q),Y=t.makeOutput(j,$.dtype);if(0!==oc.sizeFromShape(O.shape)){let e=t.dataIdMap.get(Y.dataId).id;eU(M,Z,e)}if(W&&t.disposeData(P.dataId),T){let e=hh.expandShapeToKeepDim(Y.shape,L);Y.shape=e}return Y}},vO,vP,vD,vz,vL,vW,vB,{kernelName:n7,backendName:"wasm",setupFunc:function(e){eG=e.wasm.cwrap(n7,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:u,backend:y}=e,w=t.x,T=y.dataIdMap.get(w.dataId).id,{filterSize:$,strides:M,pad:O,dimRoundingMode:P}=u,z=hh.computePool2DInfo(w.shape,$,M,1,O,P),L=z.filterHeight,W=z.filterWidth,B=z.padInfo.top,j=z.padInfo.right,q=z.padInfo.bottom,Z=z.padInfo.left,Y=z.strideHeight,J=z.strideWidth,ee=z.inChannels;if("channelsLast"!==z.dataFormat)throw Error(`wasm backend does not support dataFormat:'${z.dataFormat}'. Please use 'channelsLast'.`);if(1!==z.dilationWidth||1!==z.dilationHeight)throw Error(`was backend only supports average pooling with dilation = [1, 1], got [${z.dilationHeight}, ${z.dilationWidth}].`);let ea=y.makeOutput(z.outShape,"float32"),en=y.dataIdMap.get(ea.dataId).id;return eG(T,w.shape[0],w.shape[1],w.shape[2],L,W,B,j,q,Z,Y,J,ee,en),ea}},{kernelName:n4,backendName:"wasm",setupFunc:function(e){eq=e.wasm.cwrap("AvgPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{dy:w,input:T}=t,{filterSize:$,strides:M,pad:O}=y,P=hh.computePool2DInfo(T.shape,$,M,1,O),z=u.makeOutput(T.shape,T.dtype);return eq(u.dataIdMap.get(w.dataId).id,u.dataIdMap.get(z.dataId).id,P.batchSize,P.inChannels,P.inHeight,P.inWidth,P.outHeight,P.outWidth,P.strideHeight,P.strideWidth,P.dilationHeight,P.dilationWidth,P.effectiveFilterHeight,P.effectiveFilterWidth,P.padInfo.top,P.padInfo.left,P.filterHeight,P.filterWidth),z}},{kernelName:n6,backendName:"wasm",setupFunc:function(e){eH=e.wasm.cwrap("AvgPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{filterSize:T,strides:$,pad:M,dimRoundingMode:O,dataFormat:P}=y,z=hh.computePool3DInfo(w.shape,T,$,1,M,O,P),L=u.makeOutput(z.outShape,w.dtype);return eH(u.dataIdMap.get(w.dataId).id,u.dataIdMap.get(L.dataId).id,z.batchSize,z.inChannels,z.inDepth,z.inHeight,z.inWidth,z.outDepth,z.outHeight,z.outWidth,z.strideDepth,z.strideHeight,z.strideWidth,z.dilationDepth,z.dilationHeight,z.dilationWidth,z.effectiveFilterDepth,z.effectiveFilterHeight,z.effectiveFilterWidth,z.padInfo.front,z.padInfo.top,z.padInfo.left),L}},{kernelName:n8,backendName:"wasm",setupFunc:function(e){ej=e.wasm.cwrap("AvgPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{dy:w,input:T}=t,{filterSize:$,strides:M,pad:O,dimRoundingMode:P}=y,z=hh.computePool3DInfo(T.shape,$,M,1,O,P),L=u.makeOutput(T.shape,T.dtype);return ej(u.dataIdMap.get(w.dataId).id,u.dataIdMap.get(L.dataId).id,z.batchSize,z.inChannels,z.inDepth,z.inHeight,z.inWidth,z.outDepth,z.outHeight,z.outWidth,z.strideDepth,z.strideHeight,z.strideWidth,z.dilationDepth,z.dilationHeight,z.dilationWidth,z.effectiveFilterDepth,z.effectiveFilterHeight,z.effectiveFilterWidth,z.padInfo.front,z.padInfo.top,z.padInfo.left,z.filterDepth,z.filterHeight,z.filterWidth),L}},{kernelName:n9,backendName:"wasm",setupFunc:function(e){eX=e.wasm.cwrap(n9,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{a:w,b:T}=t,{transposeA:$,transposeB:M}=y;if("float32"!==w.dtype||"float32"!==T.dtype)throw Error("BatchMatMul for non non-float32 tensors not yet supported.");let O=w.shape.length,P=T.shape.length,z=$?w.shape[O-2]:w.shape[O-1],L=M?T.shape[P-1]:T.shape[P-2],W=$?w.shape[O-1]:w.shape[O-2],B=M?T.shape[P-2]:T.shape[P-1],j=w.shape.slice(0,-2),q=T.shape.slice(0,-2),Z=oc.sizeFromShape(j),Y=oc.sizeFromShape(q),J=un.assertAndGetBroadcastShape(w.shape.slice(0,-2),T.shape.slice(0,-2)).concat([W,B]);oc.assert(z===L,()=>`Error in matMul: inner shapes (${z}) and (${L}) of Tensors with shapes ${w.shape} and ${T.shape} and transposeA=${$} and transposeB=${M} must match.`);let ee=M?[Y,B,L]:[Y,L,B],ea=zt({inputs:{x:w},backend:u,attrs:{shape:$?[Z,z,W]:[Z,W,z]}}),en=zt({inputs:{x:T},backend:u,attrs:{shape:ee}}),er=u.dataIdMap.get(ea.dataId).id,ei=u.dataIdMap.get(en.dataId).id,es=$?ea.shape[2]:ea.shape[1],el=M?en.shape[1]:en.shape[2],eu=Math.max(Z,Y),ed=u.makeOutput([eu,es,el],ea.dtype),ep=u.dataIdMap.get(ed.dataId).id,ec=new Uint8Array(new Int32Array(ea.shape).buffer),eh=new Uint8Array(new Int32Array(en.shape).buffer);return eX(er,ec,ea.shape.length,ei,eh,en.shape.length,$,M,ep),u.disposeData(ea.dataId),u.disposeData(en.dataId),ed.shape=J,ed}},{kernelName:re,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{blockShape:T,crops:$}=y,M=T.reduce((e,t)=>e*t),O=hh.getReshaped(w.shape,T,M),P=hh.getPermuted(O.length,T.length),z=hh.getReshapedPermuted(w.shape,T,M),L=hh.getSliceBeginCoords($,T.length),W=hh.getSliceSize(z,$,T.length),B=zt({inputs:{x:w},backend:u,attrs:{shape:O}}),j=ho({inputs:{x:B},backend:u,attrs:{perm:P}}),q=zt({inputs:{x:j},backend:u,attrs:{shape:z}}),Z=Po({inputs:{x:q},backend:u,attrs:{begin:L,size:W}});return u.disposeData(B.dataId),u.disposeData(j.dataId),u.disposeData(q.dataId),Z}},{kernelName:ra,backendName:"wasm",setupFunc:function(e){eK=e.wasm.cwrap(ra,null,["number","number","boolean","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{x:w,weights:T}=u,{size:$}=y,M=0!==T.shape.reduce((e,t)=>e*t,1),O=1===w.shape.length?[$]:[w.shape[0],$],P=t.makeOutput(O,T.dtype);function c(e){return t.dataIdMap.get(e.dataId).id}return eK(c(w),$,M,c(T),eP[T.dtype],c(P)),P}},vU,{kernelName:ri,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:u}=e,{s0:y,s1:w}=t,T=u.typedArrayFromHeap(y),$=u.typedArrayFromHeap(w),M=hh.assertAndGetBroadcastShape(Array.from(T),Array.from($));return u.makeOutput([M.length],"int32",void 0,new Int32Array(M))}},{kernelName:rs,backendName:"wasm",kernelFunc:Mr},vG,{kernelName:ru,backendName:"wasm",setupFunc:function(e){eZ=e.wasm.cwrap(ru,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{clipValueMin:T,clipValueMax:$}=y,M=u.dataIdMap.get(w.dataId).id,O=u.makeOutput(w.shape,w.dtype),P=u.dataIdMap.get(O.dataId).id;return eZ(M,T,$,P),O}},{kernelName:rh,backendName:"wasm",kernelFunc:Pv},{kernelName:rf,backendName:"wasm",setupFunc:function(e){eY=e.wasm.cwrap(rf,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:u,backend:y}=e,{x:w,filter:T}=t,$=y.dataIdMap.get(w.dataId).id,M=y.dataIdMap.get(T.dataId).id,{strides:O,dilations:P,pad:z,dimRoundingMode:L,dataFormat:W}=u,B=hh.convertConv2DDataFormat(W),j=hh.computeConv2DInfo(w.shape,T.shape,O,P,z,L,!1,B),q=j.filterHeight,Z=j.filterWidth,Y=j.padInfo.top,J=j.padInfo.right,ee=j.padInfo.bottom,ea=j.padInfo.left,en=j.dilationHeight,er=j.dilationWidth,ei=j.strideHeight,es=j.strideWidth,el=j.inChannels,eu=j.outChannels,ed="SAME"===j.padInfo.type?1:0;if("channelsLast"!==j.dataFormat)throw Error(`wasm backend Conv2D does not support dataFormat:'${j.dataFormat}'. Please use 'channelsLast'.`);let ep=y.makeOutput(j.outShape,"float32"),ec=y.dataIdMap.get(ep.dataId).id;return eY($,w.shape[0],w.shape[1],w.shape[2],M,q,Z,Y,J,ee,ea,ed,en,er,ei,es,el,eu,ec),ep}},{kernelName:rg,backendName:"wasm",setupFunc:function(e){eJ=e.wasm.cwrap(rg,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{dy:w,filter:T}=u,{strides:$,pad:M,dataFormat:O,dimRoundingMode:P,inputShape:z}=y,L=hh.convertConv2DDataFormat(O),W=hh.computeConv2DInfo(z,T.shape,$,1,M,P,!1,L),{batchSize:B,filterHeight:j,filterWidth:q,inChannels:Z,inHeight:Y,inWidth:J,outChannels:ee,outHeight:ea,outWidth:en,strideHeight:er,strideWidth:ei}=W,es=j-1-W.padInfo.top,el=q-1-W.padInfo.left,eu="channelsLast"===W.dataFormat,ed=oc.computeStrides(W.inShape),ep=oc.computeStrides(w.shape),[ec,eh,em]=oc.computeStrides(T.shape),ey=ed[0],eA=eu?ed[1]:ed[2],ex=eu?ed[2]:1,eb=eu?1:ed[1],ek=ep[0],eI=eu?ep[1]:ep[2],eC=eu?ep[2]:1,eE=eu?1:ep[1],eR=t.makeOutput(W.inShape,"float32"),e$=t.dataIdMap.get(eR.dataId).id,e_=t.dataIdMap.get(w.dataId).id,eM=t.dataIdMap.get(T.dataId).id;return eJ(e_,eM,B,j,q,Y,J,Z,ea,en,ee,er,ei,es,el,ec,eh,em,ey,eA,ex,eb,ek,eI,eC,eE,e$),eR}},{kernelName:ry,backendName:"wasm",setupFunc:function(e){eQ=e.wasm.cwrap(ry,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,filter:T}=t,{strides:$,pad:M,dilations:O}=y;if("float32"!==w.dtype)throw Error(`Tensor x must have dtype float32, got ${w.dtype}`);if("float32"!==T.dtype)throw Error(`Tensor filter must have dtype float32, got ${T.dtype}`);let P=hh.computeConv3DInfo(w.shape,T.shape,$,O,M),z=u.makeOutput(P.outShape,w.dtype);return eQ(u.dataIdMap.get(w.dataId).id,u.dataIdMap.get(T.dataId).id,u.dataIdMap.get(z.dataId).id,P.batchSize,P.inDepth,P.inHeight,P.inWidth,P.inChannels,P.outDepth,P.outHeight,P.outWidth,P.outChannels,P.strideDepth,P.strideHeight,P.strideWidth,P.dilationDepth,P.dilationHeight,P.dilationWidth,P.filterDepth,P.filterHeight,P.filterWidth,P.padInfo.front,P.padInfo.top,P.padInfo.left),z}},{kernelName:rA,backendName:"wasm",setupFunc:function(e){e1=e.wasm.cwrap(rA,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,dy:T}=t,{strides:$,pad:M,filterShape:O}=y;if("float32"!==w.dtype)throw Error(`Tensor dy must have dtype float32, got ${w.dtype}`);if("float32"!==T.dtype)throw Error(`Tensor filter must have dtype float32, got ${T.dtype}`);let P=hh.computeConv3DInfo(w.shape,O,$,1,M),z=u.makeOutput(P.filterShape,T.dtype);return e1(u.dataIdMap.get(w.dataId).id,u.dataIdMap.get(T.dataId).id,u.dataIdMap.get(z.dataId).id,P.batchSize,P.inDepth,P.inHeight,P.inWidth,P.inChannels,P.outDepth,P.outHeight,P.outWidth,P.outChannels,P.strideDepth,P.strideHeight,P.strideWidth,P.dilationDepth,P.dilationHeight,P.dilationWidth,P.filterDepth,P.filterHeight,P.filterWidth,P.padInfo.front,P.padInfo.top,P.padInfo.left),z}},{kernelName:rx,backendName:"wasm",setupFunc:function(e){e2=e.wasm.cwrap(rx,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{dy:w,filter:T}=t,{pad:$,strides:M,inputShape:O}=y;if("float32"!==w.dtype)throw Error(`Tensor dy must have dtype float32, got ${w.dtype}`);if("float32"!==T.dtype)throw Error(`Tensor filter must have dtype float32, got ${T.dtype}`);let P=hh.computeConv3DInfo(O,T.shape,M,1,$),z=u.makeOutput(P.inShape,w.dtype);return e2(u.dataIdMap.get(T.dataId).id,u.dataIdMap.get(w.dataId).id,u.dataIdMap.get(z.dataId).id,P.batchSize,P.inDepth,P.inHeight,P.inWidth,P.inChannels,P.outDepth,P.outHeight,P.outWidth,P.outChannels,P.strideDepth,P.strideHeight,P.strideWidth,P.dilationDepth,P.dilationHeight,P.dilationWidth,P.filterDepth,P.filterHeight,P.filterWidth,P.padInfo.front,P.padInfo.top,P.padInfo.left),z}},vH,vq,{kernelName:rC,backendName:"wasm",setupFunc:function(e){e3=e.wasm.cwrap(rC,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{method:w,extrapolationValue:T,cropSize:$}=y,{image:M,boxes:O,boxInd:P}=u,z=O.shape[0],[L,W]=$,B=[z,L,W,M.shape[3]],j=t.dataIdMap.get(M.dataId),q;"float32"!==M.dtype&&(q=Mr({backend:t,inputs:{x:M},attrs:{dtype:"float32"}}),j=t.dataIdMap.get(q.dataId));let Z=j.id,Y=t.dataIdMap.get(O.dataId).id,J=t.dataIdMap.get(P.dataId).id,ee=t.makeOutput(B,"float32"),ea=t.dataIdMap.get(ee.dataId).id,en=new Uint8Array(new Int32Array(M.shape).buffer);return e3(Z,Y,J,z,en,L,W,e5[w],T,ea),null!=q&&t.disposeData(q.dataId),ee}},{kernelName:rI,backendName:"wasm",setupFunc:function(e){e7=e.wasm.cwrap(rI,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{axis:T,exclusive:$,reverse:M}=y,O=w.shape.length;oc.assert("float32"===w.dtype||"int32"===w.dtype,()=>`cumprod does not support ${w.dtype} tensors in the WASM backend`);let P=hh.getAxesPermutation([T],O),z=w;null!==P&&(z=ho({inputs:{x:w},attrs:{perm:P},backend:u}));let L=hh.getInnerMostAxes(1,O)[0];hh.assertAxesAreInnerMostDims("cumprod",[L],O);let W=u.makeOutput(z.shape,z.dtype),B=z.shape[L],j=u.dataIdMap.get(z.dataId).id,q=u.dataIdMap.get(W.dataId).id;e7(j,$?1:0,M?1:0,B,q,eP[w.dtype]);let Z=W;return null!==P&&(Z=ho({inputs:{x:W},attrs:{perm:hh.getUndoAxesPermutation(P)},backend:u}),u.disposeData(z.dataId),u.disposeData(W.dataId)),Z}},{kernelName:rN,backendName:"wasm",setupFunc:function(e){e4=e.wasm.cwrap(rN,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{axis:T,exclusive:$,reverse:M}=y,O=w.shape.length;oc.assert("float32"===w.dtype||"int32"===w.dtype,()=>`cumsum does not support ${w.dtype} tensors in the WASM backend`);let P=hh.getAxesPermutation([T],O),z=w;null!==P&&(z=ho({inputs:{x:w},attrs:{perm:P},backend:u}));let L=hh.getInnerMostAxes(1,O)[0];hh.assertAxesAreInnerMostDims("cumsum",[L],O);let W=u.makeOutput(z.shape,z.dtype),B=z.shape[L],j=u.dataIdMap.get(z.dataId).id,q=u.dataIdMap.get(W.dataId).id;e4(j,$?1:0,M?1:0,B,q,eP[w.dtype]);let Z=W;return null!==P&&(Z=ho({inputs:{x:W},attrs:{perm:hh.getUndoAxesPermutation(P)},backend:u}),u.disposeData(z.dataId),u.disposeData(W.dataId)),Z}},{kernelName:rE,backendName:"wasm",setupFunc:function(e){e6=e.wasm.cwrap("DenseBincount",null,["number","array","number","number","boolean","number","number","boolean","number"])},kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{x:w,weights:T}=u,{size:$,binaryOutput:M}=y,O=0!==T.shape.reduce((e,t)=>e*t,1),P=1===w.shape.length?[$]:[w.shape[0],$],z=t.makeOutput(P,T.dtype);function l(e){return t.dataIdMap.get(e.dataId).id}return e6(l(w),new Uint8Array(new Int32Array(w.shape).buffer),w.shape.length,$,O,l(T),eP[T.dtype],M,l(z)),z}},{kernelName:rR,backendName:"wasm",setupFunc:function(e){e8=e.wasm.cwrap(rR,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{x:w}=u,{blockSize:T,dataFormat:$}=y,M=w.shape[0],O="NHWC"===$?w.shape[1]:w.shape[2],P="NHWC"===$?w.shape[2]:w.shape[3],z="NHWC"===$?w.shape[3]:w.shape[1],L=O*T,W=P*T,B=z/(T*T),j="NHWC"===$?[M,L,W,B]:[M,B,L,W],q=t.makeOutput(j,"float32"),Z=t.dataIdMap.get(w.dataId).id,Y=new Uint8Array(new Int32Array(oc.computeStrides(w.shape)).buffer),J=new Uint8Array(new Int32Array(j).buffer),ee=new Uint8Array(new Int32Array(oc.computeStrides(j)).buffer),ea=t.dataIdMap.get(q.dataId).id;return e8(Z,T,"NHWC"===$?1:0,Y,w.shape.length-1,J,ee,j.length,ea),q}},{kernelName:r$,backendName:"wasm",setupFunc:function(e){e9=e.wasm.cwrap(r$,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:u,backend:y}=e,{x:w,filter:T}=t,$=y.dataIdMap.get(w.dataId).id,M=y.dataIdMap.get(T.dataId).id,{strides:O,dilations:P,pad:z,dimRoundingMode:L}=u,W=hh.computeConv2DInfo(w.shape,T.shape,O,null==P?[1,1]:P,z,L,!0),B=W.filterHeight,j=W.filterWidth,q=W.padInfo.top,Z=W.padInfo.right,Y=W.padInfo.bottom,J=W.padInfo.left,ee=W.dilationHeight,ea=W.dilationWidth,en=W.strideHeight,er=W.strideWidth,ei=W.inChannels,es=W.outChannels,el="SAME"===W.padInfo.type?1:0;if("channelsLast"!==W.dataFormat)throw Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${W.dataFormat}'. Please use 'channelsLast'.`);let eu=y.makeOutput(W.outShape,"float32"),ed=y.dataIdMap.get(eu.dataId).id;return e9($,w.shape[0],w.shape[1],w.shape[2],M,B,j,q,Z,Y,J,el,ee,ea,en,er,ei,es,ed),eu}},{kernelName:rF,backendName:"wasm",setupFunc:function(e){tt=e.wasm.cwrap("Diag",null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:u}=e,{x:y}=t,w=oc.sizeFromShape(y.shape),T=u.makeOutput([...y.shape,...y.shape],y.dtype);return tt(u.dataIdMap.get(y.dataId).id,eP[y.dtype],w,u.dataIdMap.get(T.dataId).id),T}},{kernelName:rO,backendName:"wasm",setupFunc:function(e){ta=e.wasm.cwrap(rO,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,filter:T}=t,{strides:$,pad:M,dilations:O}=y;if(w.dtype!==T.dtype)throw Error(`Dilation2D error: x must have the same dtype as filter. Got ${w.dtype} and ${T.dtype}`);let P=hh.computeDilation2DInfo(w.shape,T.shape,$,M,"NHWC",O),z=u.makeOutput(P.outShape,w.dtype);return ta(u.dataIdMap.get(w.dataId).id,u.dataIdMap.get(T.dataId).id,u.dataIdMap.get(z.dataId).id,eP[w.dtype],P.batchSize,P.inChannels,P.inHeight,P.inWidth,P.outHeight,P.outWidth,P.strideHeight,P.strideWidth,P.dilationHeight,P.dilationWidth,P.filterHeight,P.filterWidth,P.padInfo.top,P.padInfo.left),z}},{kernelName:rD,backendName:"wasm",setupFunc:function(e){tn=e.wasm.cwrap(rD,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,filter:T,dy:$}=t,{strides:M,pad:O,dilations:P}=y;if(w.dtype!==T.dtype||w.dtype!==$.dtype)throw Error(`Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ${w.dtype}, ${T.dtype}, and ${$.dtype}`);let z=hh.computeDilation2DInfo(w.shape,T.shape,M,O,"NHWC",P),L=u.makeOutput(T.shape,T.dtype);return tn(u.dataIdMap.get(w.dataId).id,u.dataIdMap.get(T.dataId).id,u.dataIdMap.get($.dataId).id,u.dataIdMap.get(L.dataId).id,eP[w.dtype],z.batchSize,z.inChannels,z.inHeight,z.inWidth,z.outHeight,z.outWidth,z.strideHeight,z.strideWidth,z.dilationHeight,z.dilationWidth,z.filterHeight,z.filterWidth,z.padInfo.top,z.padInfo.left),L}},{kernelName:rP,backendName:"wasm",setupFunc:function(e){tr=e.wasm.cwrap(rP,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,filter:T,dy:$}=t,{strides:M,pad:O,dilations:P}=y;if(w.dtype!==T.dtype||w.dtype!==$.dtype)throw Error(`Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ${w.dtype}, ${T.dtype}, and ${$.dtype}`);let z=hh.computeDilation2DInfo(w.shape,T.shape,M,O,"NHWC",P),L=u.makeOutput(w.shape,w.dtype);return tr(u.dataIdMap.get(w.dataId).id,u.dataIdMap.get(T.dataId).id,u.dataIdMap.get($.dataId).id,u.dataIdMap.get(L.dataId).id,eP[w.dtype],z.batchSize,z.inChannels,z.inHeight,z.inWidth,z.outHeight,z.outWidth,z.strideHeight,z.strideWidth,z.dilationHeight,z.dilationWidth,z.filterHeight,z.filterWidth,z.padInfo.top,z.padInfo.left),L}},vK,{kernelName:rU,backendName:"wasm",setupFunc:function(e){ts=e.wasm.cwrap(rU,null,["number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:u}=e,{dy:y,y:w}=t,T=u.makeOutput(w.shape,"float32"),a=e=>u.dataIdMap.get(e.dataId).id;return ts(a(w),a(y),a(T)),T}},vZ,vY,vJ,{kernelName:rq,backendName:"wasm",kernelFunc:Lg},vQ,{kernelName:rZ,backendName:"wasm",kernelFunc:Mv},{kernelName:rY,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:u}=e,{image:y}=t,w=u.makeOutput(y.shape,y.dtype),T=u.dataIdMap.get(y.dataId).id,$=u.dataIdMap.get(w.dataId).id,[M,O,P,z]=y.shape;return to(T,M,O,P,z,$),w},setupFunc:function(e){to=e.wasm.cwrap(rY,null,["number","number","number","number","number","number"])}},v1,v0,{kernelName:r1,backendName:"wasm",setupFunc:function(e){tl=e.wasm.cwrap(r1,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{varianceEpsilon:w}=y,{x:T,mean:$,variance:M,offset:O,scale:P}=u,z=t.dataIdMap.get(T.dataId).id,L=t.dataIdMap.get($.dataId).id,W=t.dataIdMap.get(M.dataId).id,B=null!=O?t.dataIdMap.get(O.dataId).id:0,j=null!=P?t.dataIdMap.get(P.dataId).id:0,q=t.makeOutput(T.shape,T.dtype);if(0===oc.sizeFromShape(T.shape))return q;let Z=t.dataIdMap.get(q.dataId).id;return tl(z,L,W,B,j,w,Z),q}},{kernelName:oo,backendName:"wasm",setupFunc:function(e){tp=e.wasm.cwrap(oo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:u,backend:y}=e,{x:w,filter:T,bias:$,preluActivationWeights:M}=t,{strides:O,pad:P,dilations:z,dataFormat:L,dimRoundingMode:W,activation:B,leakyreluAlpha:j}=u,q=hh.computeConv2DInfo(w.shape,T.shape,O,z,P,W),Z=eD[B];if(null==Z)throw Error(`${B} activation not yet supported for FusedConv2D in the wasm backend.`);let Y=y.dataIdMap.get(w.dataId).id,J=y.dataIdMap.get(T.dataId).id,ee=q.outChannels,ea=0;if(null!=$){let e=y.dataIdMap.get($.dataId);if(1!==e.shape.length)throw Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==ee)throw Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${ee})`);ea=e.id}let en=q.filterHeight,er=q.filterWidth,ei=q.padInfo.top,es=q.padInfo.right,el=q.padInfo.bottom,eu=q.padInfo.left,ed=q.dilationHeight,ep=q.dilationWidth,ec=q.strideHeight,eh=q.strideWidth,em=q.inChannels,ey="SAME"===q.padInfo.type?1:0,eA=q.batchSize,ex=q.inHeight,eb=q.inWidth;if("NHWC"!==L)throw Error(`wasm backend FusedConv2D does not support dataFormat:'${L}'. Please use 'NHWC'.`);let ek=y.makeOutput(q.outShape,"float32"),eI=y.dataIdMap.get(ek.dataId).id,eC=null==M?0:y.dataIdMap.get(M.dataId).id;return tp(Y,eA,ex,eb,J,en,er,ea,ei,es,el,eu,ey,ed,ep,ec,eh,em,ee,Z,eC,j||0,eI),ek}},{kernelName:ol,backendName:"wasm",setupFunc:function(e){th=e.wasm.cwrap(ol,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:u,backend:y}=e,{x:w,filter:T,bias:$,preluActivationWeights:M}=t,{strides:O,pad:P,dilations:z,dataFormat:L,dimRoundingMode:W,activation:B,leakyreluAlpha:j}=u,q=hh.computeConv2DInfo(w.shape,T.shape,O,z,P,W,!0),Z=eD[B];if(null==Z)throw Error(`${B} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let Y=y.dataIdMap.get(w.dataId).id,J=y.dataIdMap.get(T.dataId).id,ee=q.outChannels,ea=0;if(null!=$){let e=y.dataIdMap.get($.dataId);if(1!==e.shape.length)throw Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==ee)throw Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${ee})`);ea=e.id}let en=q.filterHeight,er=q.filterWidth,ei=q.padInfo.top,es=q.padInfo.right,el=q.padInfo.bottom,eu=q.padInfo.left,ed=q.dilationHeight,ep=q.dilationWidth,ec=q.strideHeight,eh=q.strideWidth,em=q.inChannels,ey="SAME"===q.padInfo.type?1:0,eA=q.batchSize,ex=q.inHeight,eb=q.inWidth;if("NHWC"!==L)throw Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${L}'. Please use 'NHWC'.`);let ek=y.makeOutput(q.outShape,"float32"),eI=y.dataIdMap.get(ek.dataId).id,eC=null==M?0:y.dataIdMap.get(M.dataId).id;return th(Y,eA,ex,eb,J,en,er,ea,ei,es,el,eu,ey,ed,ep,ec,eh,em,ee,Z,eC,j||0,eI),ek}},{kernelName:r8,backendName:"wasm",setupFunc:function(e){ty=e.wasm.cwrap(r8,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:u}=e,{params:y,indices:w}=u,[T,$,M,O]=hr.prepareAndValidate(y,w),P=t.makeOutput(T,y.dtype);if(0===$)return P;let z=w.shape,L=z[z.length-1],W=t.dataIdMap.get(y.dataId).id,B=t.dataIdMap.get(w.dataId).id,j=new Uint8Array(new Int32Array(O).buffer),q=t.dataIdMap.get(P.dataId).id;return ty(W,eP[y.dtype],B,$,L,M,j,q),P}},{kernelName:r6,backendName:"wasm",setupFunc:function(e){tA=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{x:w,indices:T}=u,{axis:$,batchDims:M}=y,O=oc.parseAxisParam($,w.shape)[0],P=t.readSync(T.dataId),z=w.shape[O];for(let e=0;e<P.length;++e){let t=P[e];oc.assert(t<=z-1&&t>=0,()=>`GatherV2: the index value ${t} is not in [0, ${z-1}]`)}let L=hh.segment_util.collectGatherOpShapeInfo(w,T,O,M),W=zt({inputs:{x:w},attrs:{shape:[L.batchSize,L.outerSize,L.dimSize,L.sliceSize]},backend:t}),B=oc.sizeFromShape(T.shape),j=zt({inputs:{x:T},attrs:{shape:[L.batchSize,B/L.batchSize]},backend:t}),q=[L.batchSize,L.outerSize,B/L.batchSize,L.sliceSize],Z=t.makeOutput(q,w.dtype);if(0===oc.sizeFromShape(w.shape))return Z;let Y=W.shape.length-1,J=t.dataIdMap.get(W.dataId).id,ee=t.dataIdMap.get(j.dataId).id,ea=t.dataIdMap.get(Z.dataId).id,en=new Uint8Array(new Int32Array(oc.computeStrides(W.shape)).buffer),er=new Uint8Array(new Int32Array(oc.computeStrides(q)).buffer);return tA(J,eP[w.dtype],en,Y,ee,L.batchSize,er,ea),t.disposeData(W.dataId),t.disposeData(j.dataId),Z.shape=L.outputShape,Z}},v3,v7,{kernelName:ia,backendName:"wasm",kernelFunc:Np},v4,v6,v8,{kernelName:im,backendName:"wasm",setupFunc:function(e){tx=e.wasm.cwrap(im,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:{x:t},attrs:{alpha:u},backend:y}=e,w=y.dataIdMap.get(t.dataId).id,T=y.makeOutput(t.shape,"float32");if(0!==oc.sizeFromShape(t.shape)){let e=y.dataIdMap.get(T.dataId).id;tx(w,eP[t.dtype],u,e)}return T}},v9,ka,{kernelName:iA,backendName:"wasm",setupFunc:function(e){tb=e.wasm.cwrap(iA,null,["number","number","number","number"])},kernelFunc:function(e){let{attrs:t,backend:u}=e,{start:y,stop:w,num:T}=t,$=Math.floor(T),M=u.makeOutput([$],"float32");return tb(u.dataIdMap.get(M.dataId).id,y,w,$),M}},kr,kn,ki,ks,ko,kl,{kernelName:iR,backendName:"wasm",setupFunc:function(e){tI=e.wasm.cwrap(iR,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{depthRadius:T,bias:$,alpha:M,beta:O}=y;if("float32"!==w.dtype)throw Error("LRN error: x must have dtype float32");let P=u.makeOutput(w.shape,w.dtype);return tI(u.dataIdMap.get(w.dataId).id,u.dataIdMap.get(P.dataId).id,w.shape[3],T,$,M,O),P}},{kernelName:i$,backendName:"wasm",setupFunc:function(e){tS=e.wasm.cwrap(i$,null,["number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,y:T,dy:$}=t,{depthRadius:M,bias:O,alpha:P,beta:z}=y;if("float32"!==w.dtype||"float32"!==T.dtype||"float32"!==$.dtype)throw Error("LRNGrad error: x, y, and dy must have dtype float32");let L=u.makeOutput(w.shape,w.dtype);return tS(u.dataIdMap.get(w.dataId).id,u.dataIdMap.get(T.dataId).id,u.dataIdMap.get($.dataId).id,u.dataIdMap.get(L.dataId).id,$.shape[3],M,O,P,z),L}},{kernelName:iM,backendName:"wasm",setupFunc:function(e){tN=e.wasm.cwrap(iM,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{reductionIndices:w,keepDims:T}=y,{x:$}=u,M=t.dataIdMap.get($.dataId).id,O=$,{transposed:P,axes:z,originalAxes:L,inputWasTransposed:W}=Tr($,w,t);if(W){let e=t.dataIdMap.get(P.dataId).id;O=P,M=e}let B=O.shape.length;hh.assertAxesAreInnerMostDims("max",z,B);let[j,q]=hh.computeOutAndReduceShapes(O.shape,z),Z=oc.sizeFromShape(q),Y=t.makeOutput(j,$.dtype);if(0!==oc.sizeFromShape(O.shape)){let e=t.dataIdMap.get(Y.dataId).id;tN(M,eP[$.dtype],Z,e)}if(W&&t.disposeData(P.dataId),T){let e=hh.expandShapeToKeepDim(Y.shape,L);Y.shape=e}return Y}},kd,{kernelName:iO,backendName:"wasm",setupFunc:function(e){tC=e.wasm.cwrap(iO,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:u,backend:y}=e,w=t.x,T=y.dataIdMap.get(w.dataId).id;oc.assert("float32"===w.dtype,()=>`Error in MaxPool: only float32 input is supported. Got ${w.dtype}.`);let{filterSize:$,strides:M,pad:O,dimRoundingMode:P}=u,z=hh.computePool2DInfo(w.shape,$,M,1,O,P),L=z.filterHeight,W=z.filterWidth,B=z.padInfo.top,j=z.padInfo.right,q=z.padInfo.bottom,Z=z.padInfo.left,Y=z.dilationHeight,J=z.dilationWidth,ee=z.strideHeight,ea=z.strideWidth,en=z.inChannels,er=z.outChannels;if("channelsLast"!==z.dataFormat)throw Error(`wasm backend does not support dataFormat:'${z.dataFormat}'. Please use 'channelsLast'.`);let ei=y.makeOutput(z.outShape,"float32"),es=y.dataIdMap.get(ei.dataId).id;return tC(T,w.shape[0],w.shape[1],w.shape[2],L,W,B,j,q,Z,Y,J,ee,ea,en,er,es),ei}},{kernelName:iD,backendName:"wasm",setupFunc:function(e){tE=e.wasm.cwrap("MaxPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{filterSize:T,strides:$,pad:M,dimRoundingMode:O,dataFormat:P}=y,z=hh.computePool3DInfo(w.shape,T,$,1,M,O,P),L=u.makeOutput(z.outShape,w.dtype);return tE(u.dataIdMap.get(w.dataId).id,u.dataIdMap.get(L.dataId).id,z.batchSize,z.inChannels,z.inDepth,z.inHeight,z.inWidth,z.outDepth,z.outHeight,z.outWidth,z.strideDepth,z.strideHeight,z.strideWidth,z.dilationDepth,z.dilationHeight,z.dilationWidth,z.effectiveFilterDepth,z.effectiveFilterHeight,z.effectiveFilterWidth,z.padInfo.front,z.padInfo.top,z.padInfo.left),L}},{kernelName:iz,backendName:"wasm",setupFunc:function(e){tR=e.wasm.cwrap("MaxPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{dy:w,input:T}=t,{filterSize:$,strides:M,pad:O,dimRoundingMode:P}=y,z=hh.computePool3DInfo(T.shape,$,M,1,O,P),L=u.makeOutput(T.shape,T.dtype);return tR(u.dataIdMap.get(T.dataId).id,u.dataIdMap.get(w.dataId).id,u.dataIdMap.get(L.dataId).id,z.batchSize,z.inChannels,z.inDepth,z.inHeight,z.inWidth,z.outDepth,z.outHeight,z.outWidth,z.strideDepth,z.strideHeight,z.strideWidth,z.dilationDepth,z.dilationHeight,z.dilationWidth,z.effectiveFilterDepth,z.effectiveFilterHeight,z.effectiveFilterWidth,z.padInfo.front,z.padInfo.top,z.padInfo.left),L}},{kernelName:iP,backendName:"wasm",setupFunc:function(e){t$=e.wasm.cwrap("MaxPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{dy:w,input:T}=t,{filterSize:$,strides:M,pad:O,dimRoundingMode:P}=y,z=hh.computePool2DInfo(T.shape,$,M,1,O,P),L=u.makeOutput(T.shape,T.dtype);return t$(u.dataIdMap.get(T.dataId).id,u.dataIdMap.get(w.dataId).id,u.dataIdMap.get(L.dataId).id,z.batchSize,z.inChannels,z.inHeight,z.inWidth,z.outHeight,z.outWidth,z.strideHeight,z.strideWidth,z.dilationHeight,z.dilationWidth,z.effectiveFilterHeight,z.effectiveFilterWidth,z.padInfo.top,z.padInfo.left),L}},{kernelName:iL,backendName:"wasm",setupFunc:function(e){t_=e.wasm.cwrap("MaxPoolWithArgmax",null,["number","number","number","number","boolean","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{filterSize:T,strides:$,pad:M,includeBatchInIndex:O}=y;oc.assert(4===w.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${w.shape.length}.`);let P=[1,1];oc.assert(hh.eitherStridesOrDilationsAreOne($,P),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${$} and dilations '${P}'`);let z=hh.computePool2DInfo(w.shape,T,$,[1,1],M),L=u.makeOutput(z.outShape,w.dtype),W=u.makeOutput(z.outShape,"int32");return t_(u.dataIdMap.get(w.dataId).id,u.dataIdMap.get(L.dataId).id,u.dataIdMap.get(W.dataId).id,eP[w.dtype],O,z.batchSize,z.inChannels,z.inHeight,z.inWidth,z.outHeight,z.outWidth,z.strideHeight,z.strideWidth,z.dilationHeight,z.dilationWidth,z.effectiveFilterHeight,z.effectiveFilterWidth,z.padInfo.top,z.padInfo.left),[L,W]}},{kernelName:iW,backendName:"wasm",setupFunc:function(e){tM=e.wasm.cwrap(iW,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{axis:w,keepDims:T}=y,{x:$}=u,M=t.dataIdMap.get($.dataId).id,O=M,P=$,{transposed:z,axes:L,originalAxes:W,inputWasTransposed:B}=Tr($,w,t),j=L;if(B){let e=t.dataIdMap.get(z.dataId).id;e!==M&&(P=z,O=e,j=hh.getInnerMostAxes(j.length,P.shape.length))}hh.assertAxesAreInnerMostDims("mean",j,P.shape.length);let[q,Z]=hh.computeOutAndReduceShapes(P.shape,j),Y=oc.sizeFromShape(Z),J=P;"float32"!==P.dtype&&(J=Mr({backend:t,inputs:{x:P},attrs:{dtype:"float32"}}),O=t.dataIdMap.get(J.dataId).id);let ee=t.makeOutput(q,"float32");if(0!==oc.sizeFromShape(P.shape)){let e=t.dataIdMap.get(ee.dataId).id;tM(O,Y,e)}if(B&&t.disposeData(z.dataId),T){let e=hh.expandShapeToKeepDim(ee.shape,W);ee.shape=e}return"float32"!==P.dtype&&t.disposeData(J.dataId),ee}},{kernelName:iB,backendName:"wasm",setupFunc:function(e){tF=e.wasm.cwrap(iB,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{axis:w,keepDims:T}=y,{x:$}=u,M=t.dataIdMap.get($.dataId).id,O=M,P=$,{transposed:z,axes:L,originalAxes:W,inputWasTransposed:B}=Tr($,w,t);if(B){let e=t.dataIdMap.get(z.dataId).id;e!==M&&(P=z,O=e)}let j=P.shape.length;hh.assertAxesAreInnerMostDims("min",L,j);let[q,Z]=hh.computeOutAndReduceShapes(P.shape,L),Y=oc.sizeFromShape(Z),J=t.makeOutput(q,P.dtype);if(0!==oc.sizeFromShape(P.shape)){let e=t.dataIdMap.get(J.dataId).id;tF(O,eP[$.dtype],Y,e)}if(B&&t.disposeData(z.dataId),T){let e=hh.expandShapeToKeepDim(J.shape,W);J.shape=e}return J}},kh,{kernelName:iU,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:u,attrs:{paddings:y,mode:w}}=e,T=y.map((e,u)=>e[0]+t.shape[u]+e[1]),$=u.dataIdMap.get(t.dataId).id,M=u.makeOutput(T,t.dtype),O=u.dataIdMap.get(M.dataId).id,P=new Uint8Array(new Int32Array(t.shape).buffer),z=y.map(e=>e[0]),L=y.map(e=>e[1]),W=new Uint8Array(new Int32Array(z).buffer),B=new Uint8Array(new Int32Array(L).buffer);return tP($,P,t.shape.length,eP[t.dtype],W,B,tO[w],O),M},setupFunc:function(e){tP=e.wasm.cwrap(iU,null,["number","array","number","number","array","array","number","number"])}},{kernelName:ij,backendName:"wasm",setupFunc:function(e){tz=e.wasm.cwrap(ij,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{logits:w}=t,{numSamples:T,seed:$,normalized:M}=y;if("float32"!==w.dtype)throw Error(`Tensor logits must have dtype float32, got ${w.dtype}`);let O=M?w:Bv({inputs:{logits:w},backend:u,attrs:{dim:w.shape.length-1}}),[P,z]=O.shape,L=u.makeOutput([P,T],"int32");return tz(u.dataIdMap.get(O.dataId).id,P,z,T,$,u.dataIdMap.get(L.dataId).id),M||u.disposeData(O.dataId),L}},kf,km,kg,{kernelName:iZ,backendName:"wasm",setupFunc:function(e){tL=e.wasm.cwrap(iZ,"number",["number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{iouThreshold:w,maxOutputSize:T,scoreThreshold:$}=y,{boxes:M,scores:O}=u,P=t.dataIdMap.get(M.dataId).id,z=t.dataIdMap.get(O.dataId).id,{pSelectedIndices:L,selectedSize:W,pSelectedScores:B,pValidOutputs:j}=qc(t,tL(P,z,T,w,$));return t.wasm._free(B),t.wasm._free(j),t.makeOutput([W],"int32",L)}},{kernelName:iY,backendName:"wasm",setupFunc:function(e){tW=e.wasm.cwrap(iY,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{iouThreshold:w,maxOutputSize:T,scoreThreshold:$,padToMaxOutputSize:M}=y,{boxes:O,scores:P}=u,z=t.dataIdMap.get(O.dataId).id,L=t.dataIdMap.get(P.dataId).id,{pSelectedIndices:W,selectedSize:B,pSelectedScores:j,pValidOutputs:q}=qc(t,tW(z,L,T,w,$,M));return t.wasm._free(j),[t.makeOutput([B],"int32",W),t.makeOutput([],"int32",q)]}},{kernelName:iJ,backendName:"wasm",setupFunc:function(e){tB=e.wasm.cwrap(iJ,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{iouThreshold:w,maxOutputSize:T,scoreThreshold:$,softNmsSigma:M}=y,{boxes:O,scores:P}=u,z=t.dataIdMap.get(O.dataId).id,L=t.dataIdMap.get(P.dataId).id,{pSelectedIndices:W,selectedSize:B,pSelectedScores:j,pValidOutputs:q}=qc(t,tB(z,L,T,w,$,M));return t.wasm._free(q),[t.makeOutput([B],"int32",W),t.makeOutput([B],"float32",j)]}},ky,{kernelName:i1,backendName:"wasm",setupFunc:function(e){tV=e.wasm.cwrap(i1,null,["number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{indices:w}=t,{dtype:T,depth:$,onValue:M,offValue:O}=y,P=u.makeOutput([...w.shape,$],T),z=u.dataIdMap.get(P.dataId).id,L=u.dataIdMap.get(w.dataId).id;return tV(L,$,M,O,z),P}},{kernelName:iQ,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:u}=e,y=u.makeOutput(t.shape,t.dtype);return u.typedArrayFromHeap(y).fill(1),y}},{kernelName:i2,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{axis:w}=y;if(1===t.length)return Lg({inputs:{input:t[0]},backend:u,attrs:{dim:w}});let T=t[0].shape,$=t[0].dtype;t.forEach(e=>{oc.assertShapesMatch(T,e.shape,"All tensors passed to stack must have matching shapes"),oc.assert($===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let M=[],O=Pv({inputs:t.map(e=>{let t=Lg({inputs:{input:e},backend:u,attrs:{dim:w}});return M.push(t),t}),backend:u,attrs:{axis:w}});return M.forEach(e=>u.disposeData(e.dataId)),O}},kA,Ge(i7,!1),{kernelName:i6,backendName:"wasm",setupFunc:function(e){tG=e.wasm.cwrap(i6,null,["number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:u}=e,{x:y,alpha:w}=t,T=u.dataIdMap.get(y.dataId).id,$=u.dataIdMap.get(w.dataId).id,M=T,O=y;"float32"!==y.dtype&&(O=Mr({backend:u,inputs:{x:y},attrs:{dtype:"float32"}}),M=u.dataIdMap.get(O.dataId).id);let P=u.makeOutput(y.shape,"float32"),z=u.dataIdMap.get(P.dataId).id;return tG(M,$,z),"float32"!==y.dtype&&u.disposeData(O.dataId),P}},{kernelName:i8,backendName:"wasm",setupFunc:function(e){tH=e.wasm.cwrap(i8,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{axis:w,keepDims:T}=y,{x:$}=u,M=t.dataIdMap.get($.dataId).id,O=M,P=$,{transposed:z,axes:L,originalAxes:W,inputWasTransposed:B}=Tr($,w,t),j=L;if(B){let e=t.dataIdMap.get(z.dataId).id;e!==M&&(P=z,O=e,j=hh.getInnerMostAxes(j.length,P.shape.length))}hh.assertAxesAreInnerMostDims("prod",j,P.shape.length);let[q,Z]=hh.computeOutAndReduceShapes(P.shape,j),Y=oc.sizeFromShape(Z),J=t.makeOutput(q,P.dtype);if(0!==oc.sizeFromShape(P.shape)){let e=t.dataIdMap.get(J.dataId).id;tH(O,Y,eP[J.dtype],e)}if(B&&t.disposeData(z.dataId),T){let e=hh.expandShapeToKeepDim(J.shape,W);J.shape=e}return J}},{kernelName:sa,backendName:"wasm",kernelFunc:e=>{let{backend:t,attrs:u}=e,{start:y,stop:w,step:T,dtype:$}=u,M=up(y,w,T,$),O=t.makeOutput([M.length],$);return t.typedArrayFromHeap(O).set(M),O}},Ge(rW,!0),he(si),he(ss),he(sg),{kernelName:so,backendName:"wasm",kernelFunc:zt},{kernelName:sc,backendName:"wasm",setupFunc:function(e){tj=e.wasm.cwrap(sc,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{images:w}=u,{alignCorners:T,halfPixelCenters:$,size:M}=y,[O,P]=M,[z,L,W,B]=w.shape,j=[z,O,P,B],q=t.dataIdMap.get(w.dataId),Z;"float32"!==q.dtype&&(Z=Mr({backend:t,inputs:{x:w},attrs:{dtype:"float32"}}),q=t.dataIdMap.get(Z.dataId));let Y=q.id,J=t.makeOutput(j,"float32");if(0===oc.sizeFromShape(w.shape))return J;let ee=t.dataIdMap.get(J.dataId).id;return tj(Y,z,L,W,B,O,P,T?1:0,$?1:0,ee),null!=Z&&t.disposeData(Z.dataId),J}},{kernelName:sf,backendName:"wasm",setupFunc:function(e){tq=e.wasm.cwrap(sf,null,["number","number","number","array","array","boolean"])},kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{images:w,dy:T}=t,{alignCorners:$}=y,M=u.makeOutput(w.shape,"float32"),O=u.dataIdMap.get(w.dataId),P;return"float32"!==O.dtype&&(P=Mr({backend:u,inputs:{x:w},attrs:{dtype:"float32"}}),O=u.dataIdMap.get(P.dataId)),tq(u.dataIdMap.get(w.dataId).id,u.dataIdMap.get(T.dataId).id,u.dataIdMap.get(M.dataId).id,new Uint8Array(new Int32Array(w.shape).buffer),new Uint8Array(new Int32Array(T.shape).buffer),$),null!=P&&u.disposeData(P.dataId),M}},{kernelName:su,backendName:"wasm",setupFunc:function(e){tX=e.wasm.cwrap(su,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{images:w}=u,{alignCorners:T,halfPixelCenters:$,size:M}=y,[O,P]=M,[z,L,W,B]=w.shape,j=[z,O,P,B],q=t.makeOutput(j,"float32");if(0===oc.sizeFromShape(w.shape))return q;let Z=t.dataIdMap.get(w.dataId),Y;"float32"!==Z.dtype&&(Y=Mr({backend:t,inputs:{x:w},attrs:{dtype:"float32"}}),Z=t.dataIdMap.get(Y.dataId));let J=Z.id,ee=t.dataIdMap.get(q.dataId).id;return tX(J,z,L,W,B,O,P,T?1:0,$?1:0,ee),null!=Y&&t.disposeData(Y.dataId),q}},{kernelName:sp,backendName:"wasm",setupFunc:function(e){tK=e.wasm.cwrap(sp,null,["number","number","number","array","array","boolean"])},kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{images:w,dy:T}=t,{alignCorners:$}=y,M=u.makeOutput(w.shape,"float32"),O=u.dataIdMap.get(w.dataId),P;return"float32"!==O.dtype&&(P=Mr({backend:u,inputs:{x:w},attrs:{dtype:"float32"}}),O=u.dataIdMap.get(P.dataId)),tK(u.dataIdMap.get(w.dataId).id,u.dataIdMap.get(T.dataId).id,u.dataIdMap.get(M.dataId).id,new Uint8Array(new Int32Array(w.shape).buffer),new Uint8Array(new Int32Array(T.shape).buffer),$),null!=P&&u.disposeData(P.dataId),M}},{kernelName:sy,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{dims:T}=y,$=oc.parseAxisParam(T,w.shape);if(0===w.shape.length)return Np({inputs:{x:w},backend:u});let M=u.makeOutput(w.shape,w.dtype),O=u.dataIdMap.get(w.dataId).id,P=u.dataIdMap.get(M.dataId).id,z=new Uint8Array(new Int32Array($).buffer),L=new Uint8Array(new Int32Array(w.shape).buffer);tZ(O,z,$.length,L,w.shape.length,P);let W=zt({inputs:{x:M},attrs:{shape:w.shape},backend:u});return u.disposeData(M.dataId),W},setupFunc:function(e){tZ=e.wasm.cwrap(sy,null,["number","array","number","array","number","number"])}},{kernelName:or,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{image:w}=t,{radians:T,fillValue:$,center:M}=y,O=u.makeOutput(w.shape,w.dtype),P=u.dataIdMap.get(w.dataId).id,z=u.dataIdMap.get(O.dataId).id,[L,W,B,j]=w.shape,[q,Z]=hh.getImageCenter(M,W,B),Y="number"==typeof $?[$,$,$,0===$?0:255]:[...$,255],J=new Uint8Array(new Int32Array(Y).buffer);return tY(P,L,W,B,j,T,q,Z,J,Y.length,z),O},setupFunc:function(e){tY=e.wasm.cwrap(or,null,["number","number","number","number","number","number","number","number","array","number","number"])}},he(sA),he(sx),{kernelName:sb,backendName:"wasm",setupFunc:function(e){tJ=e.wasm.cwrap(sb,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{indices:w,updates:T}=u,{shape:$}=y,M=t.makeOutput($,T.dtype);if(0===oc.sizeFromShape($))return M;let{sliceRank:O,numUpdates:P,sliceSize:z,strides:L,outputSize:W}=pw.calculateShapes(T,w,$),B=t.dataIdMap.get(w.dataId).id,j=t.dataIdMap.get(T.dataId).id,q=new Uint8Array(new Int32Array(L).buffer),Z=t.dataIdMap.get(M.dataId).id;return tJ(B,j,eP[T.dtype],O,P,z,q,W,Z),M}},{kernelName:sI,backendName:"wasm",setupFunc:function(e){tQ=e.wasm.cwrap(sI,null,["number","number","number","number","number","number","bool","number"])},kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{sortedSequence:w,values:T}=t,{side:$}=y;if(w.dtype!==T.dtype)throw Error(`SearchSorted error: sorted_sequence must have the same dtype as values. Got ${w.dtype} and ${T.dtype}`);let M=u.makeOutput(T.shape,"int32");function p(e){return u.dataIdMap.get(e.dataId).id}return tQ(p(w),p(T),w.shape[0],w.shape[1],T.shape[1],eP[w.dtype],"left"===$,p(M)),M}},{kernelName:sN,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:u}=e,{condition:y,t:w,e:T}=t,$=u.dataIdMap.get(y.dataId).id,M=u.dataIdMap.get(w.dataId).id,O=u.dataIdMap.get(T.dataId).id,P=u.makeOutput(w.shape,w.dtype),z=u.dataIdMap.get(P.dataId).id,L=y.shape.length,W=w.shape.length,B=0===L||L>1||1===W?1:oc.sizeFromShape(w.shape.slice(1));return t1($,M,O,B,z),P},setupFunc:function(e){t1=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}},he(sC),{kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){t2=e.wasm.cwrap(s_,null,["number","number"])},kernelFunc:function(e){let{backend:t,inputs:{x:u}}=e,y=t.dataIdMap.get(u.dataId).id,w=t.makeOutput(u.shape,u.dtype),T=t.dataIdMap.get(w.dataId).id;return 0===oc.sizeFromShape(w.shape)||t2(y,T),w}},he(s$),he(sE),he(sR),{kernelName:sT,backendName:"wasm",kernelFunc:Po},{kernelName:sL,backendName:"wasm",setupFunc:function(e){tD=e.wasm.cwrap(sL,null,["number","number","number","number"])},kernelFunc:Bv},he(sM),{kernelName:sP,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{blockShape:T,paddings:$}=y,M=oc.sizeFromShape(T),O=[[0,0]];O.push(...$);for(let e=1+T.length;e<w.shape.length;++e)O.push([0,0]);let P=kA.kernelFunc({inputs:{x:w},backend:u,attrs:{paddings:O,constantValue:0}}),z=hh.getReshaped(P.shape,T,M,!1),L=hh.getPermuted(z.length,T.length,!1),W=hh.getReshapedPermuted(P.shape,T,M,!1),B=zt({inputs:{x:P},backend:u,attrs:{shape:z}}),j=ho({inputs:{x:B},backend:u,attrs:{perm:L}}),q=zt({inputs:{x:j},backend:u,attrs:{shape:W}});return u.disposeData(P.dataId),u.disposeData(B.dataId),u.disposeData(j.dataId),q}},{kernelName:sW,backendName:"wasm",setupFunc:function(e){t5=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:u}=e,{indices:y,values:w,denseShape:T,defaultValue:$}=u,M=y.shape[0],O=y.shape[1],P=t.readSync(T.dataId)[0],z=[M+P,O],L=t.dataIdMap.get(y.dataId).id,W=t.dataIdMap.get(w.dataId).id,B=t.dataIdMap.get($.dataId).id,j=t.makeOutput(z,y.dtype),q=t.dataIdMap.get(j.dataId).id,Z=t.makeOutput(z.slice(0,1),w.dtype),Y=t.dataIdMap.get(Z.dataId).id,J=t.makeOutput([P],"bool"),ee=t.dataIdMap.get(J.dataId).id,ea=t.makeOutput([M],y.dtype),en=t.dataIdMap.get(ea.dataId).id,er=t.makeOutput([4],"int32"),ei=t.dataIdMap.get(er.dataId).id,es=t5(L,W,eP[w.dtype],M,P,O,B,q,Y,ee,en,ei),el=t.readSync(er.dataId),eu;switch(el[0]){case 1:eu=hh.getSparseFillEmptyRowsIndicesDenseShapeMismatch(el[1]);break;case 2:eu=hh.getSparseFillEmptyRowsNegativeIndexErrorMessage(el[1],el[2]);break;case 3:eu=hh.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(el[1],el[2],el[3]);break;default:eu=""}if(t.disposeData(er.dataId),eu)throw t.disposeData(j.dataId),t.disposeData(Z.dataId),t.disposeData(J.dataId),t.disposeData(ea.dataId),Error(eu);let ed=j,ep=Z;return es!==z[0]&&(ed=Po({inputs:{x:j},attrs:{begin:0,size:[es,O]},backend:t}),ep=Po({inputs:{x:Z},attrs:{begin:0,size:es},backend:t}),t.disposeData(j.dataId),t.disposeData(Z.dataId)),[ed,ep,J,ea]}},{kernelName:sB,backendName:"wasm",setupFunc:function(e){t3=e.wasm.cwrap(sB,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:u}=e,{inputIndices:y,inputShape:w,newShape:T}=u;if(2!==y.shape.length)throw Error(`Input indices should be a matrix but received shape
        ${y.shape}`);if(1!==w.shape.length)throw Error(`Input shape should be a vector but received shape
        ${w.shape}`);if(1!==T.shape.length)throw Error(`Target shape should be a vector but received shape ${T.shape}`);let $=t.dataIdMap.get(y.dataId).id,M=t.dataIdMap.get(w.dataId).id,O=t.dataIdMap.get(T.dataId).id,P=y.shape[0],z=oc.sizeFromShape(T.shape),L=t.makeOutput([P,z],y.dtype),W=t.dataIdMap.get(L.dataId).id,B=t.makeOutput([z],T.dtype),j=t.dataIdMap.get(B.dataId).id,q=t.makeOutput([3],"int32"),Z=t.dataIdMap.get(q.dataId).id;t3($,M,O,P,W,j,Z);let Y=t.readSync(q.dataId),J;switch(Y[0]){case 0:J=hh.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(Y[1],Y[2]);break;case 1:J=hh.getSparseReshapeNegativeOutputDimErrorMessage(Y[1],Y[2]);break;case 2:J=hh.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let e=Array.from(t.readSync(w.dataId)),u=Array.from(t.readSync(B.dataId));J=hh.getSparseReshapeInputOutputMultipleErrorMessage(e,u);break}case 4:{let e=Array.from(t.readSync(w.dataId)),u=Array.from(t.readSync(B.dataId));J=hh.getSparseReshapeInputOutputMismatchErrorMessage(e,u);break}default:J=""}if(t.disposeData(q.dataId),J)throw t.disposeData(L.dataId),t.disposeData(B.dataId),Error(J);return[L,B]}},{kernelName:sV,backendName:"wasm",setupFunc:zg,kernelFunc:function(e){return Vg(e,!0)}},{kernelName:sU,backendName:"wasm",setupFunc:zg,kernelFunc:function(e){return Vg(e,!1)}},{kernelName:sG,backendName:"wasm",setupFunc:function(e){t6=e.wasm.cwrap(sG,null,["number","number","number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{sparseIndices:w,sparseValues:T,defaultValue:$}=u,{outputShape:M}=y,O=t.makeOutput(M,$.dtype);if(0===oc.sizeFromShape(M))return O;let{sliceRank:P,numUpdates:z,sliceSize:L,strides:W,outputSize:B}=hh.calculateShapes(T,w,M),j=t.dataIdMap.get(w.dataId).id,q=t.dataIdMap.get(T.dataId).id,Z=t.dataIdMap.get($.dataId).id,Y=new Uint8Array(new Int32Array(W).buffer),J=t.dataIdMap.get(O.dataId).id;return t6(j,q,T.shape.length,Z,eP[$.dtype],P,z,L,Y,B,J),O}},{kernelName:sD,backendName:"wasm",kernelFunc:function(e){let{inputs:t,attrs:u,backend:y}=e,{x:w}=t,{numOrSizeSplits:T,axis:$}=u,M=oc.parseAxisParam($,w.shape)[0],O=hh.prepareSplitSize(w,T,M),P=Array(w.shape.length).fill(0),z=w.shape.slice();return O.map(e=>{let t=[...z];t[M]=e;let u=Po({inputs:{x:w},attrs:{begin:P,size:t},backend:y});return P[M]+=e,u})}},he(sF),he(sj),Ge(sH,!0),{kernelName:oa,backendName:"wasm",setupFunc:function(e){t8=e.wasm.cwrap(oa,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{alpha:w}=y,{x:T}=u,$=t.dataIdMap.get(T.dataId).id,M=t.makeOutput(T.shape,T.dtype),O=t.dataIdMap.get(M.dataId).id;return t8($,w,eP[T.dtype],O),M}},{kernelName:sX,backendName:"wasm",setupFunc:function(e){t9=e.wasm.cwrap(sX,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{x:w}=u,{begin:T,end:$,strides:M,beginMask:O,endMask:P,ellipsisMask:z,newAxisMask:L,shrinkAxisMask:W}=y,{finalShapeSparse:B,finalShape:j,isIdentity:q,sliceDim0:Z,isSimpleSlice:Y,begin:J,end:ee,strides:ea}=hs.sliceInfo(w.shape,T,$,M,O,P,z,L,W),en;if(q)en=zt({inputs:{x:w},backend:t,attrs:{shape:j}});else if(Z||Y){oc.assert(w.shape.length>=1,()=>`Input must have rank at least 1, got: ${w.shape.length}`);let e=hs.computeOutShape(J,ee,ea),u=Po({inputs:{x:w},backend:t,attrs:{begin:J,size:e}});en=zt({inputs:{x:u},backend:t,attrs:{shape:j}}),t.disposeData(u.dataId)}else{let e=t.makeOutput(B,"float32"),u=t.dataIdMap.get(w.dataId).id,y=new Uint8Array(new Int32Array(oc.computeStrides(w.shape)).buffer),T=new Uint8Array(new Int32Array(J).buffer),$=new Uint8Array(new Int32Array(ee).buffer),M=new Uint8Array(new Int32Array(ea).buffer),O=new Uint8Array(new Int32Array(B).buffer),P=new Uint8Array(new Int32Array(oc.computeStrides(B)).buffer),z=t.dataIdMap.get(e.dataId).id;t9(u,y,w.shape.length,T,$,M,O,P,B.length,z),en=zt({inputs:{x:e},backend:t,attrs:{shape:j}}),t.disposeData(e.dataId)}return en}},{kernelName:sK,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{data:w,dataSplits:T}=u,{separator:$,nGramWidths:M,leftPad:O,rightPad:P,padWidth:z,preserveShortSequences:L}=y,[W,B]=cp(t.readSync(w.dataId),t.readSync(T.dataId),$,M,O,P,z,L),j=t.makeOutput([W.length],"string");t.dataIdMap.get(j.dataId).stringBytes=W;let q=t.makeOutput(T.shape,"int32");return t.typedArrayFromHeap(q).set(B),[j,q]}},{kernelName:sZ,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{input:w,delimiter:T}=u,{skipEmpty:$}=y,[M,O,P]=lp(t.readSync(w.dataId),t.readSync(T.dataId)[0],$),z=O.length,L=t.makeOutput([z,2],"int32");t.typedArrayFromHeap(L).set(M);let W=t.makeOutput([z],"string");t.dataIdMap.get(W.dataId).stringBytes=O;let B=t.makeOutput([2],"int32");return t.typedArrayFromHeap(B).set(P),[L,W,B]}},{kernelName:sY,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{input:w}=u,{numBuckets:T}=y,$=mp(t.readSync(w.dataId),T),M=t.makeOutput(w.shape,"int32");return t.typedArrayFromHeap(M).set($),M}},Ge(sJ,!0),{kernelName:sO,backendName:"wasm",setupFunc:function(e){aa=e.wasm.cwrap(sO,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{axis:w,keepDims:T}=y,{x:$}=u,M=t.dataIdMap.get($.dataId).id,O=M,P=$,{transposed:z,axes:L,originalAxes:W,inputWasTransposed:B}=Tr($,w,t),j=L;if(B){let e=t.dataIdMap.get(z.dataId).id;e!==M&&(P=z,O=e,j=hh.getInnerMostAxes(j.length,P.shape.length))}hh.assertAxesAreInnerMostDims("sum",j,P.shape.length);let[q,Z]=hh.computeOutAndReduceShapes(P.shape,j),Y=oc.sizeFromShape(Z),J=t.makeOutput(q,P.dtype);if(0!==oc.sizeFromShape(P.shape)){let e=t.dataIdMap.get(J.dataId).id;aa(O,Y,eP[J.dtype],e)}if(B&&t.disposeData(z.dataId),T){let e=hh.expandShapeToKeepDim(J.shape,W);J.shape=e}return J}},he(sQ),he(s1),{kernelName:sw,backendName:"wasm",setupFunc:function(e){an=e.wasm.cwrap(sw,null,["number","number","number","number","number","number","array","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{tensor:w,indices:T,updates:$}=u,{}=y,M=t.makeOutput(w.shape,w.dtype);if(0===oc.sizeFromShape(w.shape))return M;let{sliceRank:O,numUpdates:P,sliceSize:z,strides:L,outputSize:W}=pw.calculateShapes($,T,w.shape),B=t.dataIdMap.get(T.dataId).id,j=t.dataIdMap.get($.dataId).id,q=t.dataIdMap.get(w.dataId).id,Z=new Uint8Array(new Int32Array(L).buffer),Y=t.dataIdMap.get(M.dataId).id;return an(B,j,eP[$.dtype],O,P,z,Z,W,Y,q),M}},{kernelName:s2,backendName:"wasm",setupFunc:function(e){ai=e.wasm.cwrap(s2,null,["number","array","number","array","number","number"])},kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,T=u.dataIdMap.get(w.dataId).id,{reps:$}=y,M=Array(w.shape.length);for(let e=0;e<M.length;e++)M[e]=w.shape[e]*$[e];let O=new Uint8Array(new Int32Array(w.shape).buffer),P=new Uint8Array(new Int32Array(M).buffer),z=u.makeOutput(M,w.dtype),L=u.dataIdMap.get(z.dataId).id;return ai(T,O,w.shape.length,P,M.length,eP[z.dtype],L),z}},{kernelName:s3,backendName:"wasm",setupFunc:function(e){as=e.wasm.cwrap(s3,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:u})=>{let{x:y}=e,{k:w,sorted:T}=u,$=t.dataIdMap.get(y.dataId).id,M=new Uint8Array(new Int32Array(y.shape).buffer),O=y.shape.slice();O[O.length-1]=w;let P=t.makeOutput(O,y.dtype),z=t.dataIdMap.get(P.dataId).id,L=t.makeOutput(O,"int32"),W=t.dataIdMap.get(L.dataId).id;return as($,M,y.shape.length,eP[y.dtype],w,T,z,W),[P,L]}},{kernelName:s7,backendName:"wasm",setupFunc:function(e){ao=e.wasm.cwrap(s7,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:u,attrs:y}=e,{image:w,transforms:T}=u,{interpolation:$,fillMode:M,fillValue:O,outputShape:P}=y,[z,L,W,B]=w.shape,[j,q]=null!=P?P:[L,W],Z=[z,j,q,B],Y=new Uint8Array(new Int32Array(oc.computeStrides(w.shape)).buffer),J=new Uint8Array(new Int32Array(oc.computeStrides(Z)).buffer),ee=t.makeOutput(Z,w.dtype),ea=t.dataIdMap.get(ee.dataId).id,en=t.dataIdMap.get(w.dataId).id,er=t.dataIdMap.get(T.dataId).id,ei;switch(M){case"constant":default:ei=1;break;case"reflect":ei=2;break;case"wrap":ei=3;break;case"nearest":ei=4}return ao(en,er,T.shape[0]>1,z,j,q,B,W,L,Y,w.shape.length-1,J,Z.length-1,"nearest"===$?1:2,ei,O,ea),ee}},{kernelName:s4,backendName:"wasm",kernelFunc:ho,setupFunc:function(e){eB=e.wasm.cwrap(s4,null,["number","array","number","number","number","array","number"])}},{kernelName:s6,backendName:"wasm",kernelFunc:function(e){let{inputs:t,attrs:u,backend:y}=e,{axis:w}=u,{x:T}=t,{outputValues:$,outputShape:M,indices:O}=dp(y.readSync(T.dataId),w,T.shape,T.dtype);return[y.makeOutput(M,T.dtype,void 0,$),y.makeOutput([O.length],"int32",void 0,O)]}},{kernelName:s8,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{value:w}=t,{axis:T}=y;T<0&&(T+=w.shape.length);let $=w.shape[T],M=w.shape.length,O=Array(M-1),P=0;for(let e=0;e<M;e++)e!==T&&(O[P++]=w.shape[e]);let z=Array($),L=Array(M).fill(0),W=w.shape.slice();W[T]=1;for(let e=0;e<z.length;e++)L[T]=e,z[e]=Po({inputs:{x:w},attrs:{begin:L,size:W},backend:u});return z.map(({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:O}))}},{kernelName:ot,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:u}=e,y=u.makeOutput(t.shape,t.dtype);return u.typedArrayFromHeap(y).fill(0),y}}])ti(e);var kx=nG;kx.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch(e){return!1}}),kx.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(kx.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}});var kb=zp(nD()),kv=zp(nz()),kS=zp(nL()),kN=kb.default||kb,kC=kS.default||kS,kE=class extends nB{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(kD),kz=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new nW(this,oF)}write(e,t,u){let y={id:this.dataIdNextNumber++};return this.move(y,e,t,u,1),y}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=oc.now();return e(),{kernelMs:oc.now()-t}}move(e,t,u,y,w){let T=this.dataIdNextNumber++;if("string"===y){this.dataIdMap.set(e,{id:T,stringBytes:t,shape:u,dtype:y,memoryOffset:null,refCount:w});return}let $=oc.sizeFromShape(u),M=$*oc.bytesPerElement(y),O=this.wasm._malloc(M)>>>0;this.dataIdMap.set(e,{id:T,memoryOffset:O,shape:u,dtype:y,refCount:w}),this.wasm.tfjs.registerTensor(T,$,O),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,M),O)}async read(e){return this.readSync(e)}readSync(e,t,u){let{memoryOffset:y,dtype:w,shape:T,stringBytes:$}=this.dataIdMap.get(e);if("string"===w)return(null==t||0===t)&&(null==u||u>=$.length)?$:$.slice(t,u);t=t||0,u=u||oc.sizeFromShape(T);let M=oc.bytesPerElement(w);return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(y+t*M,y+u*M).buffer,w)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let u=this.dataIdMap.get(e);if(u.refCount--,!t&&u.refCount>0)return!1;this.wasm._free(u.memoryOffset),this.wasm.tfjs.disposeData(u.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,u,y){let w;if(null==u)w=this.write(null!=y?y:null,e,t);else{let y=this.dataIdNextNumber++;w={id:y},this.dataIdMap.set(w,{id:y,memoryOffset:u,shape:e,dtype:t,refCount:1});let T=oc.sizeFromShape(e);this.wasm.tfjs.registerTensor(y,T,u)}return{dataId:w,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:u}){let y=this.wasm.HEAPU8.buffer,{memoryOffset:w}=this.dataIdMap.get(u),T=oc.sizeFromShape(e);switch(t){case"float32":return new Float32Array(y,w,T);case"int32":return new Int32Array(y,w,T);case"bool":return new Uint8Array(y,w,T);default:throw Error(`Unknown dtype ${t}`)}}};function KB(e,t,u){if(null!=k_)return k_;let y="tfjs-backend-wasm.wasm";return e&&t?y="tfjs-backend-wasm-threaded-simd.wasm":e&&(y="tfjs-backend-wasm-simd.wasm"),null!=kF&&null!=kF[y]?kF[y]:u+y}async function jB(){let[e,t]=await Promise.all([nG.getAsync("WASM_HAS_SIMD_SUPPORT"),nG.getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((u,y)=>{var w;let T,$={};$.locateFile=(u,y)=>{if(u.endsWith(".worker.js")){let e=kv.wasmWorkerContents.replace(/\n/g,"\\n"),t=new Blob([e],{type:"application/javascript"});return URL.createObjectURL(t)}return u.endsWith(".wasm")?KB(e,t,null!=kM?kM:y):y+u},kP&&($.instantiateWasm=(w=KB(e,t,null!=kM?kM:""),(e,t)=>(oc.fetch(w,{credentials:"same-origin"}).then(u=>{u.ok||e.env.a(`failed to load wasm binary file at '${w}'`),u.arrayBuffer().then(u=>{WebAssembly.instantiate(u,e).then(e=>{t(e.instance,e.module)})})}),{})));let M=!1;$.onAbort=()=>{M||kO||(kO=!0,y({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==k_?($.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+kN.toString()],{type:"text/javascript"}),T=kN($)):T=kC($),T.then(e=>{M=!0,kO=!1,e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},u({wasm:e})}).catch(y)})}var k$=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],k_=null,kM=null,kF={},kO=!1,kP=!1;function oae(e,t=!1){if(Tw("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),kO)throw Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");k_=e,kP=t}function nae(e,t=!1){if(kO)throw Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)kM=e;else{kF=e;let t=k$.filter(e=>null==kF[e]);if(t.length>0)throw Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}kP=t}var kD=-1,kz=-1;function sae(e){kD=e}function aae(){if(-1===kz)throw Error("WASM backend not initialized.");return kz}var kL="4.21.0";tu("wasm",async()=>{let{wasm:e}=await jB();return new kE(e)},2);var kW=nG;kW.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15),kW.registerFlag("WEBGPU_CPU_FORWARD",()=>!0),kW.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1),kW.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!0),kW.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1),kW.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3),kW.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1),kW.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0),kW.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",()=>!1),kW.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",()=>-1),kW.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1),kW.registerFlag("WEBGPU_PRINT_SHADER",()=>""),kW.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",()=>!1);var kB=class{constructor(e){e&&(this.vendor=e.vendor,this.architecture=e.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return"intel"===this.vendor}},kV=class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,t,u=!1,y=!0){let w,T=`${e}_${t}`;return y?(this.freeBuffers.has(T)||this.freeBuffers.set(T,[]),this.freeBuffers.get(T).length>0?(w=this.freeBuffers.get(T).pop(),this.numFreeBuffers--):(w=this.device.createBuffer({size:e,usage:t,mappedAtCreation:u}),this.numBytesAllocated+=e)):(w=this.device.createBuffer({size:e,usage:t,mappedAtCreation:u}),this.numBytesAllocated+=e),this.usedBuffers.has(T)||this.usedBuffers.set(T,[]),this.usedBuffers.get(T).push(w),this.numUsedBuffers++,this.numBytesUsed+=e,w}releaseBuffer(e,t=!0){var u;if(0===this.freeBuffers.size)return;let y=e.size,w=(u=e.usage,`${y}_${u}`),T=this.usedBuffers.get(w),$=T.indexOf(e);if($<0)throw Error("Cannot find the buffer in buffer manager");T[$]=T[T.length-1],T.pop(),this.numUsedBuffers--,this.numBytesUsed-=y,t?(this.freeBuffers.get(w).push(e),this.numFreeBuffers++):(e.destroy(),this.numBytesAllocated-=y)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(e=>{e.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(e=>{e.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}},kU=class{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,u,y){let w=e*t*ZB(u),T=QB(e,t,u,y);if(this.freeTextures.has(T)||this.freeTextures.set(T,[]),this.usedTextures.has(T)||this.usedTextures.set(T,[]),this.numBytesUsed+=w,this.numUsedTextures++,this.freeTextures.get(T).length>0){this.numFreeTextures--;let e=this.freeTextures.get(T).shift();return this.usedTextures.get(T).push(e),e}this.numBytesAllocated+=w;let $=this.device.createTexture({size:[e,t],format:u,usage:y});return this.usedTextures.get(T).push($),$}releaseTexture(e){if(0===this.freeTextures.size)return;let t=e.width,u=e.height,y=e.format,w=QB(t,u,y,e.usage);this.freeTextures.has(w)||this.freeTextures.set(w,[]),this.freeTextures.get(w).push(e),this.numFreeTextures++,this.numUsedTextures--;let T=this.usedTextures.get(w),$=T.indexOf(e);if($<0)throw Error("Cannot release a texture that was never provided by this texture manager");T.splice($,1);let M=t*u*ZB(y);this.numBytesUsed-=M}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,t)=>{e.forEach(e=>{e.destroy()})}),this.usedTextures.forEach((e,t)=>{e.forEach(e=>{e.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function QB(e,t,u,y){return`${e}_${t}_${u}_${y}`}function ZB(e){if("rgba8unorm"===e)return 16;throw Error(`${e} is not supported!`)}var Qr=(e,t,u)=>"int32"===u?`atomicAdd(${e}, bitcast<i32>(${t}));`:`
          {
            var oldValue = 0;
            loop {
              let newValueF32 = bitcast<f32>(oldValue) + (${t});
              let newValue = bitcast<i32>(newValueF32);
              let res = atomicCompareExchangeWeak(${e}, oldValue, newValue);
              if res.exchanged {
                break;
              }
              oldValue = res.old_value;
            }
          }`;(en=au||(au={}))[en.FROM_PIXELS=0]="FROM_PIXELS",en[en.DRAW=1]="DRAW";var oz=(e,t,u,y,w)=>{let T=function(e,t,u){var y;let w=[],T=u.workgroupSize[0]*u.workgroupSize[1]*u.workgroupSize[2];if(u.outputComponent=u.outputComponent?u.outputComponent:1,w.push(`

      var<private> localId: vec3<u32>;
      var<private> localIndex: u32;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;
      var<private> workgroupId: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${sz(u)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +
                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${T}u +
                localIndex);
        `}
      }
    `),null!=u.pixelsOpType){let y=u.pixelsOpType===au.FROM_PIXELS?`@group(0) @binding(0) var<storage, read_write> result: array<${Su(t.dtype,u.outputComponent)}>;`:`@group(0) @binding(1) var<storage, read> inBuf : array<${Su(e[0].dtype,u.outputComponent)}>;`,T=3===t.shape.length?"vec2<i32>":"i32";w.push(`
        struct Uniform {
          outShapeStrides : ${T},
          size            : i32,
          numChannels     : i32,
          alpha           : f32,
        };

        ${y}
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `);let $=rz(u);return[kG,w.join(`
`),cm(t.shape),u.getUserCode(),ez($,u)].join(`
`)}let $,M="struct Uniforms { NAN : f32, INFINITY : f32, ";u.variableNames.forEach((t,u)=>{let y=ft(e[u].shape.length);M+=`${t.charAt(0).toLowerCase()+t.slice(1)}Shape : ${y}, `,$=ft(e[u].shape.length-1),M+=`${t.charAt(0).toLowerCase()+t.slice(1)}ShapeStrides: ${$}, `});let O=ft(t.shape.length);M+=`outShape : ${O}, `,$=ft(t.shape.length-1),M+=`
         outShapeStrides: ${$}, `,u.size&&(M+="size : i32, "),u.uniforms&&(M+=u.uniforms),M+="};",M=M.replace(/(\w+)\s*:\s*vec(5|6)/g,e=>"@align(16) "+e).replace(/vec(5|6)\s*,\s*(\w+)/g,(e,t,u)=>`vec${t}, @align(16) ${u}`),w.push(M),u.atomic?w.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):w.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${Su(t.dtype,u.outputComponent)}>;
    `),u.variableNames.forEach((t,y)=>{w.push(`
      @group(0) @binding(${1+y}) var<storage, read> ${t}: array<${u.variableComponents?Su(e[y].dtype,u.variableComponents[y]):Su(e[y].dtype,u.outputComponent)}>;
        `)}),""!==M&&w.push(`
      @group(0) @binding(${1+u.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);let P=function(e,t){let{x:u,y:y=[],z:w=[]}=t,T=e.length,$=u.length+y.length+w.length;if($!==T)return"";if(u.length===T)return`fn getOutputCoords() -> ${ft(T)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let M="",O=[u,y,w];for(let e=0;e<O.length;e++){let t=O[e];if(0!==t.length){if(1===t.length)M+=`let d${t[0]} = i32(globalId[${e}]);`;else{let u=function(e,t){if(Math.max(...e)>5)throw Error("Cannot symbolically compute strides for rank > 6 tensor.");let u=e.length,y=e.map(e=>`${t}.${"xyzwuv"[e]}`),w=Array(u-1);w[u-2]=y[u-1];for(let e=u-3;e>=0;--e)w[e]=`(${w[e+1]} * ${y[e+1]})`;return w}(t,"uniforms.outShape");M+=`var index${e} = i32(globalId[${e}]);`;for(let y=0;y<u.length;y++)M+=`let d${t[y]} = index${e} / ${u[y]};`,y===u.length-1?M+=`let d${t[y+1]} = index${e} - d${t[y]} * ${u[y]};`:M+=`index${e} = index${e} - d${t[y]} * ${u[y]};`}}}let P=[];for(let e=0;e<$;e++)P.push(`d${e}`);let z=ft($),L=`fn getOutputCoords() -> ${z} {
  ${M}
`;return 0===P.length?L+=`return ${z}(0); }`:L+=`return ${z}(${P.join(",")}); }`,L}(t.shape,u.dispatchLayout),z=[kG,w.join(`
`)+kH,cm(t.shape),P,function(e){let t="";switch(e){case 0:case 1:t+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:t+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:t+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:oc.assert(!1,()=>`Unsupported ${e}D shape`)}return t}(t.shape.length)];u.atomic||z.push(function(e,t,u){let y=e.length,w=Su(t,u),T=`fn setOutputAtIndex(flatIndex : i32, value : ${Ae(u)}) {
      result[flatIndex] = ${w}(value);
    }

    fn setOutputAtIndexI32(flatIndex : i32, value : ${Ae(u,"i32")}) {
      result[flatIndex] = ${w}(value);
    }
    `;if(y>=2){let e=["d0","d1","d2","d3","d4","d5"].slice(0,y),t=ft(y);T+=`
      fn setOutputAtCoords(${e.map(e=>`${e} : i32`).join(", ")}, value : ${Ae(u)}) {
        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));
        setOutputAtIndex(flatIndex${1===u?"":` / ${u}`}, value);
      }
      fn setOutputAtCoordsI32(${e.map(e=>`${e} : i32`).join(", ")}, value : ${Ae(u,"i32")}) {
        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));
        setOutputAtIndexI32(flatIndex${1===u?"":` / ${u}`}, value);
      }
    `}return T}(t.shape,t.dtype,u.outputComponent)),u.variableNames.forEach((t,u)=>{z.push(`${cm(e[u].shape,t)}`)});let L=e.map((e,y)=>{var w,T,$;let M;return w=t.shape,T=u.variableComponents?u.variableComponents[y]:u.outputComponent,$=u.dispatchLayout.x.length===t.shape.length,M=function(e,t){let u=e.name,y=e.shape.length,w=ft(y),T="get"+u.charAt(0).toUpperCase()+u.slice(1),$=["d0","d1","d2","d3","d4","d5"].slice(0,y),M=$.map(e=>`${e} : i32`).join(", ");if(y<1)return`
      fn ${T}() -> ${Ae(t)} {
        return ${Ae(t)}(${u}[0]);
      }
    `;let O=`uniforms.${u.charAt(0).toLowerCase()+u.slice(1)}Shape`,P=`${y}D`;return 0===y&&(P="1D"),`
    fn ${T}(${M}) -> ${Ae(t)} {
      return ${Ae(t)}(${u}[getIndexFromCoords${P}(${w}(${$.join(",")}),
        ${O})${1===t?"":` / ${t}`}]);
    }
   `}(e,T),e.shape.length<=w.length&&(M+=function(e,t,u,y){let w=e.name,T=w.charAt(0).toUpperCase()+w.slice(1),$="get"+T+"ByOutput",M=e.shape.length,O=t.length,P=ft(O);if(oc.arraysEqual(e.shape,t)&&y)return`
    fn ${$}Index(globalIndex : i32) -> ${Ae(u)} {
      return ${Ae(u)}(${w}[globalIndex]);
    }

    fn ${$}Coords(coords : ${P}) -> ${Ae(u)} {
      return ${Ae(u)}(${w}[${O>1?"getOutputIndexFromCoords(coords)":"coords"}${1===u?"":` / ${u}`}]);
    }
    `;let z=hh.getBroadcastDims(e.shape,t),L=O-M,W="";if(0===M)return`
    fn ${$}Index(globalIndex : i32) -> ${Ae(u)}{
      return get${T}();
    }

    fn ${$}Coords(coords : ${P}) -> ${Ae(u)}{
      return get${T}();
    }
  `;W=O<2&&z.length>=1?"coords = 0;":z.map(e=>`coords.${Oo(e+L)} = 0;`).join(`
`);let B="";if(O<2&&M>0)B="coords";else if(O>1){let t=ft(M),u=e.shape.map((e,t)=>`coords.${Oo(t+L)}`).join(", ");B=`${t}(${u})`}else B="coords";let j=`uniforms.${w.charAt(0).toLowerCase()+w.slice(1)}Shape`,q=`${M}D`;return`
  fn ${$}Index(globalIndex : i32) -> ${Ae(u)} {
    var coords = getCoordsFromIndex(globalIndex);
    ${W}
    return ${Ae(u)}(${w}[getIndexFromCoords${q}(${B}, ${j})${1===u?"":` / ${u}`}]);
  }

  fn ${$}Coords(coordsIn : ${P}) -> ${Ae(u)} {
    var coords = coordsIn;
    ${W}
    return ${Ae(u)}(${w}[getIndexFromCoords${q}(${B}, ${j})${1===u?"":` / ${u}`}]);
  }
`}(e,w,T,$)),M}).join(`
`);z.push(L),z.push(u.getUserCode());let W=rz(u);return z.push(ez(W,u)),z.join(`
`)}(u,{dtype:y.dtype,shape:y.shape},t),$=e.createShaderModule({code:T,label:t.constructor.name}),M=nG.get("WEBGPU_PRINT_SHADER");if(""!==M){let e=(M=M.toLowerCase()).split(",");("all"===M||e.some(e=>t.shaderKey.toLowerCase().includes(e)))&&(console.group(t.shaderKey),console.debug(T),console.groupEnd())}return w?e.createComputePipelineAsync({compute:{module:$,entryPoint:"_start"},label:t.constructor.name,layout:"auto"}):e.createComputePipeline({compute:{module:$,entryPoint:"_start"},label:t.constructor.name,layout:"auto"})},Ae=(e,t="f32")=>{switch(e){case 1:return`${t}`;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw Error(`${e}-component ${t} is not supported.`)}};function ft(e){if(e<=1)return"i32";if(2===e)return"vec2<i32>";if(3===e)return"vec3<i32>";if(4===e)return"vec4<i32>";if(5===e)return"vec5";if(6===e)return"vec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Oo(e){if(0===e)return"x";if(1===e)return"y";if(2===e)return"z";if(3===e)return"w";if(4===e)return"u";if(5===e)return"v";throw Error(`Index ${e} is not yet supported`)}function G(...e){let t;switch(e.length){case 0:t=`
        fn main()
      `;break;case 1:t=`
        fn main(${e[0]} : i32)
      `;break;default:throw Error("Unreachable")}return t}function ez(e,t){return`
     
  @compute @workgroup_size(${t.workgroupSize[0]}, ${t.workgroupSize[1]}, ${t.workgroupSize[2]})

      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(workgroup_id) WorkgroupId : vec3<u32>,
                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
        localId = LocalId;
        localIndex = LocalIndex;
        globalId = GlobalId;
        numWorkgroups = NumWorkgroups;
        workgroupId = WorkgroupId;
        ${e?"main(getGlobalIndex());":"main();"};
      }
    `}var kG=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);
    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);
  }
`,kH=`
  fn isinf(val: f32) -> bool {
    return abs(val) == uniforms.INFINITY;
  }
`;function cm(e,t=""){let u,y=e.length,w=""!==t?`get${t.charAt(0).toUpperCase()+t.slice(1)}CoordsFromIndex`:"getCoordsFromIndex",T=""!==t?`${t.charAt(0).toLowerCase()+t.slice(1)}ShapeStrides`:"outShapeStrides";if(y<=1)return`fn ${w}(index : i32) -> i32 { return index; }`;let $=oc.computeStrides(e),M=ft(y),O=[];for(let e=0;e<y;e++)O.push(`d${e}`);return 1===$.length?`    fn ${w}(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.${T}; let d1 = index - d0 * uniforms.${T};
      return vec2<i32>(d0, d1);
    }`:(u="var index2 = index;"+$.map((e,t)=>{let u=`let ${O[t]} = index2 / uniforms.${T}.${Oo(t)}`,y=t===$.length-1?`let ${O[t+1]} = index2 - ${O[t]} * uniforms.${T}.${Oo(t)}`:`index2 = index2 - ${O[t]} * uniforms.${T}.${Oo(t)}`;return`${u}; ${y};`}).join(""),`
    fn ${w}(index : i32) -> ${M} {
      ${u}
      return ${M}(${O.join(",")});
    }
  `)}function sz(e){return 1===e.dispatch[1]&&1===e.dispatch[2]}function Su(e,t=1){if("float32"===e)return Ae(t,"f32");if("int32"===e||"bool"===e)return Ae(t,"i32");throw Error(`type ${e} is not supported.`)}function rz(e){return!(e.dispatchLayout.hasOwnProperty("y")&&0!==e.dispatchLayout.y.length||e.dispatchLayout.hasOwnProperty("z")&&0!==e.dispatchLayout.z.length)}var kj={};qe(kj,{GPUBytesPerElement:()=>jg,MatMulProgramType:()=>ac,assertNotComplex:()=>fm,computeDispatch:()=>H,computeWorkPerThreadForConv2d:()=>mm,computeWorkgroupInfoForMatMul:()=>Qv,computeWorkgroupSizeForConv2d:()=>lm,flatDispatchLayout:()=>X,isWebGPUSupported:()=>dm,tilesFitEvenlyIntoShape:()=>Cae});var Tp=e=>{let t=1;for(let u=0;u<e.length;u++)t*=e[u];return t};function Cae(e,t){if(e.length!==t.length)throw Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((t,u)=>t%e[u]==0)}function H(e,t,u=[1,1,1],y=[1,1,1]){let[w,T,$]=[Math.ceil(Tp(e.x.map(e=>t[e]))/(u[0]*y[0])),e.y?Math.ceil(Tp(e.y.map(e=>t[e]))/(u[1]*y[1])):1,e.z?Math.ceil(Tp(e.z.map(e=>t[e]))/(u[2]*y[2])):1];return[w,T,$]}function Qv(e,t,u,y=!1){let w=[8,8,1],T=[4,4,1];return y||(e<=8&&(T[1]=1),t<=16&&u<=16&&(w[0]=4)),{workgroupSize:w,elementsPerThread:T}}function lm(e,t,u=!1){if(u)return[8,8,1];let y=Tp(e.x.map(e=>t[e])),w=Tp(e.y.map(e=>t[e]));return y<=4?[4,16,1]:w<=4?[16,4,1]:[16,16,1]}function mm(e,t,u=!1){if(u)return[4,4,1];let y=Tp(e.x.map(e=>t[e])),w=Tp(e.y.map(e=>t[e]));return y<=4?[1,2,1]:w<=4?[2,1,1]:[2,2,1]}function X(e){return{x:e.map((e,t)=>t)}}function jg(e){if("float32"===e||"int32"===e||"bool"===e||"string"===e)return 4;if("complex64"===e)return 8;throw Error(`Unknown dtype ${e}`)}function dm(){return!!("undefined"!=typeof globalThis&&globalThis.navigator&&globalThis.navigator.gpu)}function fm(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&oc.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGPU backend.`)})}(er=ac||(ac={}))[er.MatMulReduceProgram=0]="MatMulReduceProgram",er[er.MatMulSplitKProgram=1]="MatMulSplitKProgram",er[er.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",er[er.MatMulPackedProgram=3]="MatMulPackedProgram",er[er.MatMulMax=4]="MatMulMax";var kq=nG.getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),Sae=(e,t)=>{let u=e.limits.maxComputeWorkgroupsPerDimension,y=t.dispatchLayout,w=t.dispatch;if(w.every(e=>e<=u))return w;oc.assert(w[0]>u&&void 0===y.y&&void 0===y.z,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let T=Math.ceil(Math.sqrt(w[0]));return T>u?(T=Math.ceil(Math.cbrt(w[0])),oc.assert(T<=u,()=>"Total dispatch size exceeds WebGPU maximum."),[T,T,T]):[T,T,1]},kX=class r14 extends nB{nextDataId(){return r14.nextDataId++}constructor(e,t){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!dm())throw Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new kB(t),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new kV(this.device),this.textureManager=new kU(this.device),this.tensorMap=new nW(this,oF),nG.getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(e,t=!1){if(!this.tensorMap.has(e))return!0;let u=this.tensorMap.get(e);return t?u.refCount=0:u.refCount--,!(u.refCount>0)&&(null!=u.complexTensorInfos&&(this.disposeData(u.complexTensorInfos.real.dataId),this.disposeData(u.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e)?this.tensorDataPendingDisposal.push(e):(this.releaseResource(e),this.tensorMap.delete(e)),!0)}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){let t=this.tensorMap.get(e);if(!(!t||!t.resource)){if(t.external){t.resource=null;return}t.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(t.resource):t.resource instanceof GPUTexture&&this.textureManager.releaseTexture(t.resource),t.resource=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,u){if("complex64"===u&&null!=e)throw Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let y={id:this.nextDataId()};return this.tensorMap.set(y,{dtype:u,shape:t,values:e,refCount:1}),y}move(e,t,u,y,w){if("complex64"===y)throw Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:y,shape:u,values:t,refCount:w})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e,!1)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}async checkCompileCompletionAsync(){let e;try{e=await Promise.all(Object.values(this.pipelineCache))}catch(e){throw Error(e.message)}Object.keys(this.pipelineCache).map((t,u)=>{this.pipelineCache[t]=e[u]})}async getBufferData(e){if(nG.getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return console.warn("The data may be invalid since WEBGPU_ENGINE_COMPILE_ONLY is true, this can only be called when WEBGPU_ENGINE_COMPILE_ONLY is false"),null;let t=e.size,u=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,u,0,t),this.submitQueue(),await u.mapAsync(GPUMapMode.READ);let y=u.getMappedRange().slice(0);return u.unmap(),null!=u&&this.bufferManager.releaseBuffer(u),nG.getBool("WEBGPU_USE_PROFILE_TOOL")&&(oc.assert(void 0!==this.dummyContext,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),y}convertAndCacheOnCPU(e,t){let u=this.tensorMap.get(e);return u.values=t,u.values}readSync(e){let t=this.tensorMap.get(e),{values:u,complexTensorInfos:y}=t;if(null!=u||"string"===t.dtype)return u;if("complex64"===t.dtype){let t=this.readSync(y.real.dataId),u=this.readSync(y.imag.dataId),w=oc.convertBackendValuesAndArrayBuffer(hh.mergeRealAndImagArrays(t,u).buffer,"float32");return this.convertAndCacheOnCPU(e,w),w}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0,console.warn("The performance of synchronously reading data from GPU to CPU is poor on the webgpu backend, please use asynchronous APIs instead."));let w=["opaque","premultiplied"],T=t.resource,$=T.size;oc.assert($%4==0,()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4.");let M=$/4,O=new ArrayBuffer($),P=w.map(e=>new OffscreenCanvas(256,256)),z=new OffscreenCanvas(256,256);this.endComputePassEncoder(),P.map((e,t)=>{let u=e.getContext("webgpu");return u.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:w[t]}),u.getCurrentTexture()}).map((e,t)=>{let b=(u,y,$)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:T,bytesPerRow:1024,offset:$},{texture:e},{width:u,height:y}),this.submitQueue();let M=z.getContext("2d",{willReadFrequently:!0});M.clearRect(0,0,u,y),M.drawImage(P[t],0,0);let L=M.getImageData(0,0,u,y).data,W=w[t],B=new Uint8ClampedArray(O,$,u*y*4);for(let e=0;e<B.length;e+=4)if("premultiplied"===W)B[e+3]=L[e+3];else{let t=L[e];B[e]=L[e+2],B[e+1]=L[e+1],B[e+2]=t}},u=Math.floor(M/65536),y=256,$=256,L=0;for(let e=0;e<u;e++)b(y,$,L),L+=262144;let W=M%65536;($=Math.floor(W/256))>0&&(b(y,$,L),L+=1024*$),(y=W%256)>0&&b(y,1,L)});let L=oc.convertBackendValuesAndArrayBuffer(O,t.dtype);return this.convertAndCacheOnCPU(e,L),L}async read(e){let t;if(!this.tensorMap.has(e))throw Error(`Tensor ${e} was not registered!`);let u=this.tensorMap.get(e),{values:y}=u;if(null!=y)return y;if("complex64"===u.dtype){let e=await Promise.all([this.read(u.complexTensorInfos.real.dataId),this.read(u.complexTensorInfos.imag.dataId)]),y=e[0],w=e[1];t=hh.mergeRealAndImagArrays(y,w)}else{let e=await this.getBufferData(u.resource);t=oc.convertBackendValuesAndArrayBuffer(e,u.dtype)}return this.convertAndCacheOnCPU(e,t),t}copyBuffer(e){let t=e.size,u=e.usage,y=this.bufferManager.acquireBuffer(t,u);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,y,0,t),this.submitQueue(),y}createTensorFromGPUData(e,t,u){let y=e.buffer;if("complex64"===u)throw Error("Cannot write to a complex64 dtype. ");let w={id:this.nextDataId()};this.tensorMap.set(w,{dtype:u,shape:t,values:null,refCount:1,external:e.zeroCopy});let T=this.tensorMap.get(w),$=jg(T.dtype)*oc.sizeFromShape(T.shape);if(e.buffer.size<$)throw Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${$})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!=(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return!0!==e.zeroCopy&&(y=this.copyBuffer(y)),T.resource=y,oF.makeTensorFromDataId(w,t,u,this)}readToGPU(e){let{values:t,dtype:u,shape:y,resource:w}=this.tensorMap.get(e);if("complex64"===u)throw Error("Does not support reading buffer for complex64 dtype.");if(null==w)throw null!=t?Error("Data is not on GPU but on CPU."):Error("There is no data on GPU or CPU.");let T=w.size,$=w.usage,M=this.bufferManager.acquireBuffer(T,$);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(w,0,M,0,T),this.submitQueue();let O=this.makeTensorInfo(y,u),P=oF.makeTensorFromTensorInfo(O);return this.tensorMap.get(O.dataId).resource=M,{tensorRef:P,buffer:M}}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let u=t.map(e=>oc.decodeString(e));return me(e.shape,e.dtype,u)}catch(e){throw Error("Failed to decode encoded string bytes into utf-8")}return me(e.shape,e.dtype,t)}async time(e){this.supportTimestampQuery||this.hasTimestampQueryWarned||(console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --enable-dawn-features=allow_unsafe_apis to try it again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled."),this.hasTimestampQueryWarned=!0);let t=this.activeTimers,u=[],y=!1;null==this.programTimersStack?(this.programTimersStack=u,y=!0):this.activeTimers.push(u),this.activeTimers=u,e();let w=oc.flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),T=oc.flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,y&&(this.programTimersStack=null);let $={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},M=await Promise.all(w);return $.kernelMs=oc.sum(M),$.getExtraProfileInfo=()=>M.map((e,t)=>({name:T[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,$}makeTensorInfo(e,t,u){return"string"===t&&null!=u&&u.length>0&&oc.isString(u[0])&&(u=u.map(e=>oc.encodeString(e))),{dataId:this.write(u,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId).resource;return t instanceof GPUBuffer?{buffer:t}:t instanceof GPUTexture?t.createView():t}uploadToGPU(e){let t=this.tensorMap.get(e);if(null!=t.resource)return;let u=jg(t.dtype)*oc.sizeFromShape(t.shape),y,w=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(t.values){if("unmapped"===(y=this.bufferManager.acquireBuffer(u,w,!0)).mapState){let e=this.bufferManager.acquireBuffer(u,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),w=e.getMappedRange();"int32"===t.dtype||"bool"===t.dtype?new Int32Array(w).set(t.values):new Float32Array(w).set(t.values),e.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,y,0,u),this.stagingPendingDisposal.push(e)}else{let e=y.getMappedRange();"int32"===t.dtype||"bool"===t.dtype?new Int32Array(e).set(t.values):new Float32Array(e).set(t.values),y.unmap()}t.values=null}else y=this.bufferManager.acquireBuffer(u,w);t.resource=y}makeUniforms(e){let t=0,u=0,y=[],w=1;e.forEach(e=>{let T;switch(0===e.data.length&&(e.data=[1]),e.data.length){case 1:T=4;break;case 2:T=8;break;case 3:case 4:case 5:case 6:T=16;break;default:oc.assert(!1,()=>`Unsupported ${e.data.length}D shape`)}(5===u||6===u)&&(T=16),T>w&&(w=T),t=Math.ceil(t/T)*T,u=e.data.length,y.push(t),t+=4*e.data.length}),t=Math.ceil(t/w)*w;let T=new ArrayBuffer(t);e.forEach((e,t)=>{let u=y[t];"int32"===e.type?new Int32Array(T,u,e.data.length).set(e.data):"uint32"===e.type?new Uint32Array(T,u,e.data.length).set(e.data):new Float32Array(T,u,e.data.length).set(e.data)});let $=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer($,0,T,0,t),this.uniformPendingDisposal.push($),{offset:0,size:t,buffer:$}}runWebGPUProgram(e,t,u,y,w){if(w||(w=this.makeTensorInfo(e.outputShape,u)),0===oc.sizeFromShape(w.shape))return this.tensorMap.get(w.dataId).values=oc.getTypedArrayFromDType(w.dtype,0),w;this.uploadToGPU(w.dataId),e.dispatch=Sae(this.device,e);let T=t.map((t,u)=>{if("complex64"===t.dtype)throw Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(t.dataId),{dtype:this.tensorMap.get(t.dataId).dtype,shape:t.shape,name:e.variableNames[u]}});e.shaderKey=function(e,t,u){let y=e.shaderKey;if(null!=e.pixelsOpType)return y;let w=[],T=[];t.forEach(e=>{w.push(e.shape),T.push(e.dtype)}),w.push(u.shape),T.push(u.dtype);let $=t.map(e=>hh.getBroadcastDims(e.shape,u.shape)),M=t.map(e=>oc.arraysEqual(e.shape,u.shape)).join("_"),O=$.map(e=>e.join("_")).join(";"),P=sz(e)?"flatDispatch":"";return y+("_"+(e.workgroupSize?e.workgroupSize.join(","):"")+w.map(e=>e.length).join(",")+T.join(",")+e.variableNames.join(",")+O)+M+P}(e,T,w);let $=nG.getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=oz(this.device,e,T,w,$)),e.pipeline=this.pipelineCache[e.shaderKey],$||this.recordAndSubmit(e,w,t,y),w}recordAndSubmit(e,t,u,y){if(e.pipeline instanceof Promise)throw Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let w=[],T="int32";if(null==e.pixelsOpType){w.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]});let e="int32";u.concat(t).map(e=>e.shape).map(t=>{w.push({type:e,data:t});let u=oc.computeStrides(t);w.push({type:e,data:u})})}else{let e=oc.computeStrides(t.shape);w.push({type:T,data:e})}if(e.size){let t=oc.sizeFromShape(e.outputShape);w.push({type:T,data:[e.outputComponent?t/e.outputComponent:t]})}y&&(w=[...w,...y]);let $=[this.tensorToBinding(t),...u.map(e=>this.tensorToBinding(e)),this.makeUniforms(w)];u.forEach(e=>{this.commandQueueOwnedIds.add(e.dataId)}),this.commandQueueOwnedIds.add(t.dataId);let M=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:$.map((e,t)=>({binding:t,resource:e}))}),O=null!=this.activeTimers;this.ensureCommandEncoderReady();let P={};O&&this.supportTimestampQuery?(this.endComputePassEncoder(),null==this.querySet&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),P.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},this.computePassEncoder=this.commandEncoder.beginComputePass(P)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(P)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,M),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(O||nG.get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass||e.pixelsOpType===au.DRAW)&&(this.endComputePassEncoder(),O?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}async getQueryTime(){if(!this.supportTimestampQuery)return 0;null==this.queryResolveBuffer&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(8*this.querySetCount,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);let e=this.bufferManager.acquireBuffer(8*this.querySetCount,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,8*this.querySetCount),this.submitQueue(),await e.mapAsync(GPUMapMode.READ);let t=new BigUint64Array(e.getMappedRange()),u=Number(t[1]-t[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),u}shouldExecuteOnCPU(e,t=kq){return nG.getBool("WEBGPU_CPU_FORWARD")&&e.every(e=>null==this.tensorMap.get(e.dataId).resource&&oc.sizeFromShape(e.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(null!=this.querySet&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}};kX.nextDataId=0,dm()&&tu("webgpu",async()=>{let e={powerPreference:nG.get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),u={},y=[];t.features.has("timestamp-query")&&y.push("timestamp-query"),t.features.has("bgra8unorm-storage")&&y.push(["bgra8unorm-storage"]),u.requiredFeatures=y;let w=t.limits;u.requiredLimits={maxComputeWorkgroupStorageSize:w.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:w.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:w.maxStorageBufferBindingSize,maxBufferSize:w.maxBufferSize,maxComputeWorkgroupSizeX:w.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:w.maxComputeInvocationsPerWorkgroup};let T=await t.requestDevice(u),$=await t.requestAdapterInfo();return new kX(T,$)},3),(ei=af||(af={}))[ei.ADD=0]="ADD",ei[ei.ATAN2=1]="ATAN2",ei[ei.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",ei[ei.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",ei[ei.DIV=4]="DIV",ei[ei.ELU_DER=5]="ELU_DER",ei[ei.EQUAL=6]="EQUAL",ei[ei.FLOOR_DIV=7]="FLOOR_DIV",ei[ei.GREATER=8]="GREATER",ei[ei.GREATER_EQUAL=9]="GREATER_EQUAL",ei[ei.LESS=10]="LESS",ei[ei.LESS_EQUAL=11]="LESS_EQUAL",ei[ei.LOGICAL_AND=12]="LOGICAL_AND",ei[ei.LOGICAL_OR=13]="LOGICAL_OR",ei[ei.MAX=14]="MAX",ei[ei.MIN=15]="MIN",ei[ei.MOD=16]="MOD",ei[ei.MUL=17]="MUL",ei[ei.NOT_EQUAL=18]="NOT_EQUAL",ei[ei.POW=19]="POW",ei[ei.PRELU=20]="PRELU",ei[ei.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",ei[ei.SUB=22]="SUB";var kK=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a == b);
`,kZ=`
  let remainder =
      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));
  let quotient = (a - remainder) / b;
  let resultTemp =
      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));
`,kY=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a > b);
`,kJ=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a >= b);
`,kQ=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a < b);
`,k1=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a <= b);
`,k2=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,k3=`return min(vec4<f32>(a >= vec4<f32>(1.0)) +
  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));`,k7=`
  let isNaN = b == 0.;
  var resultTemp = a % b;
  resultTemp = select((resultTemp + b) % b, resultTemp,
      (a < 0. && b < 0.) || (a >= 0. && b > 0.));
`,k6=`
  let isNaN = !vec4<bool>(b);
  var resultTemp = vec4<f32>(a % b);
  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {
    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];
  }
  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {
    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];
  }
  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {
    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];
  }
  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {
    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];
  }
`,k8=`
  var resultTemp = f32(a != b);
  let valueForNaN = 1.0;
`,k9=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
`,we=`
  let isNaN = a < 0.0 && floor(b) < b;
  if (b == 0.0) {
    return 1.0;
  }
  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),
      round(abs(b) % 2.0) != 1.0);
`,wa=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);
`,wn=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`;function Xc(e,t){let u;do{let y,w,T;switch(e){case af.ATAN2:u="let resultTemp = atan2(a, b);";break;case af.MAX:u="let resultTemp = max(a, b);";break;case af.MIN:u="let resultTemp = min(a, b);";break;case af.MOD:u=t?k6:k7;break;case af.NOT_EQUAL:u=t?k9:k8;break;case af.POW:u=t?wa:we;break;default:continue}return t?(y="isnanVec4",w="vec4<f32>",T="vec4<bool>"):(y="isnan",w="f32",T="bool"),`
      let aIsNaN = ${y}(a);
      let aPostLegalization = select(a, ${w}(42), aIsNaN);
      let bIsNaN = ${y}(b);
      let bPostLegalization = select(b, ${w}(42), bIsNaN);
      let isNaN = false;
      let valueForNaN = uniforms.NAN;
      {
        let a = aPostLegalization;
        let b = bPostLegalization;
        ${u}
        return select(
            resultTemp, ${w}(valueForNaN),
            ${T}(isNaN) | aIsNaN | bIsNaN);
      }
    `}while(!1);switch(e){case af.ADD:u="let resultTemp = a + b;";break;case af.COMPLEX_MULTIPLY_IMAG:u="let resultTemp = areal * bimag + aimag * breal;";break;case af.COMPLEX_MULTIPLY_REAL:u="let resultTemp = areal * breal - aimag * bimag;";break;case af.DIV:u="let resultTemp = a / b;";break;case af.ELU_DER:u="let resultTemp = select(a * (b + 1.0), a, b >= b - b);";break;case af.EQUAL:u=kK;break;case af.FLOOR_DIV:u=kZ;break;case af.GREATER:u=kY;break;case af.GREATER_EQUAL:u=kJ;break;case af.LESS:u=kQ;break;case af.LESS_EQUAL:u=k1;break;case af.LOGICAL_AND:return t?k2:"return f32(a >= 1.0 && b >= 1.0);";case af.LOGICAL_OR:return t?k3:"return f32(a >= 1.0 || b >= 1.0);";case af.MUL:u="let resultTemp = a * b;";break;case af.PRELU:return t?wn:"if (a < 0.0) { return b * a; }  return a;";case af.SQUARED_DIFFERENCE:u="let resultTemp = (a - b) * (a - b);";break;case af.SUB:u="let resultTemp = a - b;"}return`
    ${u}
    return resultTemp;
  `}(es=am||(am={}))[es.ABS=0]="ABS",es[es.ACOS=1]="ACOS",es[es.ACOSH=2]="ACOSH",es[es.ASIN=3]="ASIN",es[es.ASINH=4]="ASINH",es[es.ATAN=5]="ATAN",es[es.ATANH=6]="ATANH",es[es.CEIL=7]="CEIL",es[es.COS=8]="COS",es[es.COSH=9]="COSH",es[es.ELU=10]="ELU",es[es.ERF=11]="ERF",es[es.EXP=12]="EXP",es[es.EXPM1=13]="EXPM1",es[es.FLOOR=14]="FLOOR",es[es.IS_FINITE=15]="IS_FINITE",es[es.IS_INF=16]="IS_INF",es[es.IS_NAN=17]="IS_NAN",es[es.LINEAR=18]="LINEAR",es[es.LOG=19]="LOG",es[es.LOG1P=20]="LOG1P",es[es.LOGICAL_NOT=21]="LOGICAL_NOT",es[es.NEG=22]="NEG",es[es.RELU=23]="RELU",es[es.RELU6=24]="RELU6",es[es.LEAKYRELU=25]="LEAKYRELU",es[es.RECIPROCAL=26]="RECIPROCAL",es[es.ROUND=27]="ROUND",es[es.RSQRT=28]="RSQRT",es[es.SELU=29]="SELU",es[es.SIGMOID=30]="SIGMOID",es[es.SIGN=31]="SIGN",es[es.SIN=32]="SIN",es[es.SINH=33]="SINH",es[es.SOFTPLUS=34]="SOFTPLUS",es[es.SQRT=35]="SQRT",es[es.SQUARE=36]="SQUARE",es[es.STEP=37]="STEP",es[es.TAN=38]="TAN",es[es.TANH=39]="TANH",es[es.TO_INT=40]="TO_INT";var wi=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return acos(a);
`,ws=`
  if (a < 1.) {
    return uniforms.NAN;
  }
  return acosh(a);
`,wo=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return asin(a);
`,wl=`
  if (isnan(a)) {
    return uniforms.NAN;
  }
  return atan(a);
`,wu=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  if (a == 1.) {
    return uniforms.INFINITY;
  }
  if (a == -1.) {
    return -uniforms.INFINITY;
  }
  return atanh(a);
`,wd=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,wf=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,wg=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  let p = ${hh.ERF_P};
  let a1 = ${hh.ERF_A1};
  let a2 = ${hh.ERF_A2};
  let a3 = ${hh.ERF_A3};
  let a4 = ${hh.ERF_A4};
  let a5 = ${hh.ERF_A5};

  let sign = sign(a);
  let absA = abs(a);
  let t = 1.0 / (1.0 + p * absA);
  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));
`,wy=`if (a < 0.0) { return uniforms.NAN; }
  return log(a);`,wA=`
  if (isnan(a)) { return a; }
  return log(1.0 + a);
`,wx=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,wb=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,wv=`
  if (a >= 0.0) {
    return ${hh.SELU_SCALE} * a;
  } else {
    return ${hh.SELU_SCALEALPHA} * (exp(a) - 1.0);
  }
`,wS=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,wN=`
  let epsilon = 1.1920928955078125e-7;
  let threshold = log(epsilon) + 2.0;

  let too_large = a > -threshold;
  let too_small = a < threshold;
  let exp_a = exp(a);

  if (too_large) {
    return a;
  } else if (too_small) {
    return exp_a;
  } else {
    return log(exp_a + 1.0);
  }
`,wC=`
  if (isnan(a)) {
    return a;
  }

  return select(uniforms.stepAlpha, 1.0, a > 0.0);
`,wT=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`;function Si(e,t){switch(e){case am.ABS:return"return abs(a);";case am.ACOS:return wi;case am.ACOSH:return ws;case am.ASIN:return wo;case am.ASINH:return"return asinh(a);";case am.ATAN:return wl;case am.ATANH:return wu;case am.COS:return"return cos(a);";case am.COSH:return wd;case am.CEIL:return"return ceil(a);";case am.ELU:return t?wf:"if (a >= 0.0) { return a; }  return (exp(a) - 1.0);";case am.ERF:return wg;case am.EXP:return"return exp(a);";case am.EXPM1:return"return exp(a) - 1.0;";case am.FLOOR:return"return floor(a);";case am.IS_FINITE:return"return f32(!isnan(a) && !isinf(a));";case am.IS_INF:return"return f32(isinf(a));";case am.IS_NAN:return"return f32(isnan(a));";case am.LINEAR:return"return a;";case am.LOG:return wy;case am.LOG1P:return wA;case am.LOGICAL_NOT:return"return f32(!(a >= 1.0));";case am.NEG:return"return -a;";case am.LEAKYRELU:return t?wx:"if (a < 0.0) { return uniforms.alpha * a; } return a;";case am.RECIPROCAL:return"return 1.0 / a;";case am.RELU:return t?wb:"return select(a, 0.0, a < 0.0);";case am.RELU6:return t?"return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));":"return clamp(a, 0.0, 6.0);";case am.ROUND:return"return round(a);";case am.RSQRT:return"return inverseSqrt(a);";case am.SELU:return wv;case am.SIGMOID:return"return 1.0 / (1.0 + exp(-1.0 * a));";case am.SIGN:return"return sign(a);";case am.SIN:return"return sin(a);";case am.SINH:return wS;case am.SOFTPLUS:return wN;case am.SQRT:return"return sqrt(a);";case am.SQUARE:return"return a * a;";case am.STEP:return wC;case am.TAN:return"return tan(a);";case am.TANH:return wT;case am.TO_INT:return"return f32(i32((a)));";default:throw Error(`BinaryType ${e} is not implemented!`)}}function dr(e,t=!1,u=!1,y=3){if(null===e)return"";let w="";if("linear"===e)w=Si(am.LINEAR);else if("relu"===e)w=Si(am.RELU,u);else if("elu"===e)w=Si(am.ELU,u);else if("relu6"===e)w=Si(am.RELU6,u);else if("prelu"===e)w=Xc(af.PRELU,u);else if("sigmoid"===e)w=Si(am.SIGMOID,u);else if("leakyrelu"===e)w=Si(am.LEAKYRELU,u);else throw Error(`Activation ${e} has not been implemented for the WebGPU backend.`);let T=Ae(u?4:1);return t?`
      fn activation(a : ${T}, coords : vec${y}<i32>) -> ${T} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${w}
      }`:`
      fn activation(a : ${T}, coords : vec${y}<i32>) -> ${T} {
        ${w}
      }`}function Zr(e,t){return`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      ${t?"value = activation(value, coords);":""}
      `}function Jv(e,t,u=!1,y=!1,w=!1,T=1){oc.assert(e&&1===T||!e,()=>`transposeA ${e} is not compatible with component size ${T}`);let $=`
      ${e?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}

    `;return`
  fn mm_readA(batch: i32, row: i32, col: i32) -> ${Ae(T)} {
    var value = ${Ae(T)}(0.0);
    ${u&&w?$:`
    ${e?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${$}
    }
    `}
    return value;
  }

  fn mm_readB(batch: i32, row: i32, col: i32) -> ${Ae(T)} {
    var value = ${Ae(T)}(0.0);
    ${t?"value = getB(batch, col, row);":"value = getB(batch, row, col);"}
    return value;
  }
  `}function hm(e,t,u,y,w=!1,T=!1,$=!1,M=1){return`
  ${Jv(u,y,w,T,$,M)}
  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ${Ae(M)}) {
    ${w&&T?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${Zr(e,t)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}var Uie=(e,t)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol * ${t});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRow + innerRow,
          kStart + inputCol * ${t});
        `,Gie=(e,t,u,y)=>{if(e)return`
      for (var k = 0; k < ${y}; k++) {
        let BCached0 = mm_Bsub[k][tileCol];
        let ACached0 = mm_Asub[k][localRow];
        for (var i = 0; i < ${u}; i++) {
          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);
        }
      }`;{let e="",w="";for(let u=0;u<t;u++)e+=`let BCached${u} = mm_Bsub[k * ${t} + ${u}][tileCol];`,w+=`acc[i] = fma(BCached${u}, vec4<f32>(ACached[${u}]), acc[i]);`;return`
      for (var k = 0; k < ${y/t}; k++) {
        ${e}
        for (var i = 0; i < ${u}; i++) {
          let ACached = mm_Asub[tileRow + i][k];
          ${w}
        }
      }`}};function _p(e,t,u=!1,y=32,w=!1,T=32,$=!1){let M=t[1]*e[1],O=t[0]*e[0],P=u?M:y,z=u?y:M,L=P/t[0],W=y/t[1],B=e[1],j=e[0];return oc.assert((u&&4===L&&4===e[1]||!u&&(3===L||4===L))&&P%t[0]==0&&y%t[1]==0&&4===e[0],()=>`If transposeA ${u} is true, innerElementSize ${L} and workPerThread[1] ${e[1]} must be 4.
          Otherwise, innerElementSize ${L} must be 3 or 4.
      tileAWidth ${P} must be divisible by workgroupSize[0]${t[0]}. tileInner ${y} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${L}<f32>, ${P/L}>, ${z}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${O/e[0]}>, ${y}>;

  ${G()} {
    let localRow = i32(localId.y);
    let tileRow = localRow * ${B};
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * ${B};
    let globalCol = i32(globalId.x) * ${j};
    let batch = ${w?"0":"i32(globalId.z)"};
    let batchA = ${w||!$?"batch":"batch % uniforms.aShape[0]"};
    let batchB = ${w||!$?"batch":"batch % uniforms.bShape[0]"};
    let globalRowStart = i32(workgroupId.y) * ${M};

    let numTiles = ${w?`${Math.ceil(T/y)}`:`(uniforms.dimInner - 1) / ${y} + 1`};
    var kStart = ${w?`i32(globalId.z) * ${T}`:"0"};

    var acc: array<vec4<f32>, ${B}>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${W};
    for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${B}; innerRow++) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${Uie(u,L)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${W}; innerRow++) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);
        }
        kStart = kStart + ${y};
        workgroupBarrier();

        // Compute acc values for a single thread.
        ${Gie(u,L,B,y)}
        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < ${B}; innerRow++) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}var az=e=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,Hie=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function Ep(e,t,u=!1,y=32,w=!1,T=32,$=!1,M=!1){let O=e[1]*t[1],P=e[0]*t[0],z=u?O:y,L=u?y:O;oc.assert(L%t[1]==0&&z%t[0]==0&&y%t[1]==0,()=>`tileAHight ${L} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${z} must be divisible by workgroupSize[0]${t[0]}, tileInner ${y} must be divisible by workgroupSize[1]${t[1]}`);let W=L/t[1],B=z/t[0],j=y/t[1],q=e[1],Z=e[0],Y=$?`
      let localRow = i32(localId.y);
      let localCol = i32(localId.x);
      let globalRowStart = i32(workgroupId.y) * ${O};
      let globalColStart = i32(workgroupId.x) * ${P};

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var inputRow = localRow; inputRow < ${L}; inputRow = inputRow + ${t[1]}) {
          for (var inputCol = localCol; inputCol < ${z}; inputCol = inputCol + ${t[0]}) {
            ${az(u)}
          }
        }
        // Load one tile of B into local memory.
        for (var inputRow = localRow; inputRow < ${y}; inputRow = inputRow + ${t[1]}) {
              for (var inputCol = localCol; inputCol < ${P}; inputCol = inputCol + ${t[0]}) {
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
              kStart + inputRow,
              globalColStart + inputCol);
          }
        }
        kStart = kStart + ${y};
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ${Z}>;
        for (var k = 0; k < ${y}; k++) {
          for (var inner = 0; inner < ${Z}; inner++) {
            BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];
          }
          for (var innerRow = 0; innerRow < ${q}; innerRow++) {
            let ACached = ${u?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}
            for (var innerCol = 0; innerCol < ${Z}; innerCol++) {
              acc[innerRow][innerCol] =
                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
            }
          }
        }
        workgroupBarrier();
      }
      for (var innerRow = 0; innerRow < ${q}; innerRow++) {
        let gRow = globalRowStart + localRow + innerRow * ${t[1]};
        for (var innerCol = 0; innerCol < ${Z}; innerCol++) {
          let gCol = globalColStart + localCol + innerCol * ${t[0]};
          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
        }
      }
      `:`
  let tileRow = i32(localId.y) * ${q};
  let tileCol = i32(localId.x) * ${Z};

  let globalRow = i32(globalId.y) * ${q};
  let globalCol = i32(globalId.x) * ${Z};
  let globalRowStart = i32(workgroupId.y) * ${O};

  let tileRowA = i32(localId.y) * ${W};
  let tileColA = i32(localId.x) * ${B};
  let tileRowB = i32(localId.y) * ${j};
  // Loop over shared dimension.
  for (var t = 0; t < numTiles; t++) {
    // Load one tile of A into local memory.
    for (var innerRow = 0; innerRow < ${W}; innerRow++) {
      for (var innerCol = 0; innerCol < ${B}; innerCol++) {
        let inputRow = tileRowA + innerRow;
        let inputCol = tileColA + innerCol;
        ${az(u)}
      }
    }

    // Load one tile of B into local memory.
    for (var innerRow = 0; innerRow < ${j}; innerRow++) {
      for (var innerCol = 0; innerCol < ${Z}; innerCol++) {
        let inputRow = tileRowB + innerRow;
        let inputCol = tileCol + innerCol;
        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
          kStart + inputRow,
          globalCol + innerCol);
      }
    }
    kStart = kStart + ${y};
    workgroupBarrier();

    // Compute acc values for a single thread.
    var BCached : array<f32, ${Z}>;
    for (var k = 0; k < ${y}; k++) {
      for (var inner = 0; inner < ${Z}; inner++) {
        BCached[inner] = mm_Bsub[k][tileCol + inner];
      }

      for (var innerRow = 0; innerRow < ${q}; innerRow++) {
        ${Hie(u)}
        for (var innerCol = 0; innerCol < ${Z}; innerCol++) {
          acc[innerRow][innerCol] =
              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
        }
      }
    }

    workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < ${q}; innerRow++) {
    for (var innerCol = 0; innerCol < ${Z}; innerCol++) {
      mm_write(batch, globalRow + innerRow, globalCol + innerCol,
          acc[innerRow][innerCol]);
    }
  }
  `;return`
    var<workgroup> mm_Asub : array<array<f32, ${z}>, ${L}>;
    var<workgroup> mm_Bsub : array<array<f32, ${P}>, ${y}>;

    ${G()} {
      let batch = ${w?"0":"i32(globalId.z)"};
      let batchA = ${w||!M?"batch":"batch % uniforms.aShape[0]"};
      let batchB = ${w||!M?"batch":"batch % uniforms.bShape[0]"};
      let numTiles = ${w?`${Math.ceil(T/y)}`:`(uniforms.dimInner - 1) / ${y} + 1`};
      var kStart = ${w?`i32(globalId.z) * ${T}`:"0"};

      var acc : array<array<f32, ${Z}>, ${q}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${q}; innerRow++) {
        for (var innerCol = 0; innerCol < ${Z}; innerCol++) {
          acc[innerRow][innerCol] = 0.0;
        }
      }
      ${Y}
    }
  `}var Kie=e=>e?`
      mm_readA(batchA, colA, globalRow),
      mm_readA(batchA, colA + 1, globalRow),
      mm_readA(batchA, colA + 2, globalRow),
      mm_readA(batchA, colA + 3, globalRow)
  `:`
      mm_readA(batchA, globalRow, colA),
      mm_readA(batchA, globalRow, colA + 1),
      mm_readA(batchA, globalRow, colA + 2),
      mm_readA(batchA, globalRow, colA + 3)
  `,wE=class{constructor(e,t,u=!1,y=!1,w=null,T=null,$=null,M=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let O=u?e[1]:e[2];if(this.isVec4=(O%4==0&&!u||t[1]%4==0&&u)&&t[2]%4==0&&!y,this.outputComponent=this.isVec4?4:1,this.isVectorA=1===t[1]&&!u,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{let e=Qv(t[1],O,t[2],u);this.workgroupSize=e.workgroupSize,this.elementsPerThread=e.elementsPerThread}this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);let P=null!=w,z=null!=$;P&&this.variableNames.push("bias"),z&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=M,this.transposeA=u,this.transposeB=y,this.addBias=P,this.activation=T,this.hasPreluActivationWeights=z,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],O),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${u}_${y}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(e,t,u){let y=this.workgroupSize[1]*this.elementsPerThread[1],w=this.workgroupSize[0]*this.elementsPerThread[0];return!this.isVec4&&this.isVectorA?this.tileInner=4*this.workgroupSize[0]:this.tileInner=w,[e%y==0,t%w==0,u%this.tileInner==0]}getUserCode(){return`
      ${dr(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${hm(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?_p(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?function(e,t=!1){oc.assert(1===e[1]&&1===e[2],()=>`A linear work group size is required. But got ${e}.`);let u=4*e[0];return`
    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;

    ${G()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / ${u} + 1;
      let batch = i32(globalId.z);
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        let colA = t * ${u} + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${Kie(t)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${u/4}; k++) {
          let rowB = t * ${u} + k * 4;
          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),
                              mm_readB(batchB, rowB + 1, globalCol),
                              mm_readB(batchB, rowB + 2, globalCol),
                              mm_readB(batchB, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}(this.workgroupSize,this.transposeA):Ep(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}
    `}},wR=class{constructor(e,t=!1,u=!1,y=null,w=null,T=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize);let $=null!=y,M=null!=T;$&&this.variableNames.push("bias"),M&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=u,this.addBias=$,this.activation=w,this.hasPreluActivationWeights=M,this.shaderKey=`matMulReduce_${this.activation}_${t}_${u}`}getUserCode(){var e;return`
      ${dr(this.activation,this.hasPreluActivationWeights)}
      ${hm(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${e=this.workgroupSize[0],`
    var<workgroup> sumValues : array<f32, ${e}>;
    ${G()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + ${e}) {
        let dataA = mm_readA(batchA, row, k);
        let dataB = mm_readB(batchB, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = ${e/2}u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}
    `}},w$=class{constructor(e,t,u,y=!1,w=!1,T=null,$=null,M=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=u,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(u[2]/this.workgroupSize[0]),Math.ceil(u[1]/this.workgroupSize[1]),u[0]];let O=null!=T;O&&this.variableNames.push("bias");let P=null!=M;P&&this.variableNames.push("preluActivationWeights"),this.transposeA=y,this.transposeB=w,this.addBias=O,this.activation=$,this.hasPreluActivationWeights=P,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${y}_${w}`}getUserCode(){var e;let t,u,y;return`
      ${dr(this.activation,this.hasPreluActivationWeights)}
      ${hm(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${y=(t=(e=this.workgroupSize)[1])>(u=e[0])?t:u,`
  var<workgroup> mm_Asub : array<array<f32, ${y}>, ${t}>;
  var<workgroup> mm_Bsub : array<array<f32, ${u}>, ${y}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${G()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);
    let batchA = batch % uniforms.aShape[0];
    let batchB = batch % uniforms.bShape[0];

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${y} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batchA, globalRow, globalColA);
    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${y};
    globalRowB = globalRowB + ${y};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batchA, globalRow, globalColA);
      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${y};
      globalRowB = globalRowB + ${y};

      for (var k = 0; k < ${y}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}
    `}},w_=class{constructor(e,t,u=!1,y=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,oc.assert(1===e[0],()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]};let w=(u&&this.outputShape[1]%4==0||!u&&t%4==0)&&this.outputShape[2]%4==0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=w?4:1,w||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=H(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workgroupSize,this.elementsPerThread),this.transposeA=u,this.transposeB=y,this.shaderKey=`matMulSplitK_${u}_${y}_${this.elementsPerThread}_${this.outputComponent}`}getUserCode(){let e=this.outputComponent;return`
      ${Jv(!1,this.transposeB,!1,!1,!1,e)}
      fn mm_write(batch: i32, row : i32, col : i32, value : ${Ae(e)}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          for (var i = 0; i < ${e}; i = i + 1) {
            ${Qr("&result[flatIndex + i]",`${e>1?"value[i]":"value"}`,"float32")}
          }
        }
      }
      ${4===e?_p(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):Ep(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}},wM=class{constructor(e,t=null,u=null,y=null){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=null!=t,this.hasPreluActivationWeights=null!=y,this.activation=u,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${u}`}getUserCode(){return`
    ${dr(this.activation,this.hasPreluActivationWeights)}
    ${G("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${Zr(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}},wF=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${G("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function vt(e){let{backend:t,attrs:u}=e,{shape:y,value:w}=u,{dtype:T}=u;if("string"===(T=T||oc.inferDtype(w))){let e=oc.getArrayFromDType(T,oc.sizeFromShape(y));return e.fill(w),t.makeTensorInfo(y,T,e)}{let e=new wF(y),u=[{type:"float32",data:[w]}];return t.runWebGPUProgram(e,[],T,u)}}function pe(e){let{inputs:t,attrs:u}=e,{x:y}=t,{shape:w}=u,T=oc.sizeFromShape(y.shape),$=oc.inferFromImplicitShape(w,T),M=oc.sizeFromShape($);return oc.assert(T===M,()=>`The new shape (${$}) has ${M} elements and the old shape (${y.shape}) has ${T} elements. The new shape and old shape must have the same number of elements.`),e.backend.incRef(y.dataId),{dataId:y.dataId,shape:$,dtype:y.dtype}}function $p({a:e,b:t,transposeA:u,transposeB:y,backend:w,bias:T=null,preluActivationWeights:$=null,leakyreluAlpha:M=0,activation:O=null}){let P=e.shape.length,z=t.shape.length,L=u?e.shape[P-2]:e.shape[P-1],W=y?t.shape[z-1]:t.shape[z-2],B=u?e.shape[P-1]:e.shape[P-2],j=y?t.shape[z-2]:t.shape[z-1],q=e.shape.slice(0,-2),Z=t.shape.slice(0,-2),Y=oc.sizeFromShape(q),J=oc.sizeFromShape(Z),ee=un.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([B,j]);oc.assert(L===W,()=>`Error in matMul: inner shapes (${L}) and (${W}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${u} and transposeB=${y} must match.`);let ea=u?[Y,L,B]:[Y,B,L],en=y?[J,j,W]:[J,W,j],er=pe({inputs:{x:e},backend:w,attrs:{shape:ea}}),ei=pe({inputs:{x:t},backend:w,attrs:{shape:en}}),es=[er,ei],el=Math.max(Y,J),eu=[er,ei],ed=[{type:"int32",data:[B]},{type:"int32",data:[j]},{type:"int32",data:[L]}],ep,ec,eh=[el,B,j],em=nG.get("WEBGPU_MATMUL_PROGRAM_TYPE");if(em<0){let e=nG.getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),t=e>0?e:w.thresholdToIncreaseWorkgroups,u=el*Math.ceil(B/32)*Math.ceil(j/32);em=u<=t||B<=8&&u<=2*t?el*B*j<=128?ac.MatMulReduceProgram:1===el&&W>=2e3?ac.MatMulSplitKProgram:ac.MatMulSmallOutputSizeProgram:ac.MatMulPackedProgram}switch(em){case ac.MatMulReduceProgram:ep=new wR(eh,u,y,T,O,$);break;case ac.MatMulSplitKProgram:if(ec=vt({backend:w,attrs:{shape:eh,value:0,dtype:e.dtype}}),ep=new w_(eh,W,u,y),T||O){ec=w.runWebGPUProgram(ep,eu,e.dtype,ed,ec);let t=new wM(ec.shape,T,O,$),u=null,y=[ec];T&&y.push(T),$&&y.push($),"leakyrelu"===O&&(u=[{type:"float32",data:[M]}],t.uniforms+=" alpha : f32,");let P=w.runWebGPUProgram(t,y,ec.dtype,u);es.push(ec);let z=pe({inputs:{x:P},backend:w,attrs:{shape:ee}});for(let e of(es.push(P),es))w.disposeData(e.dataId);return z}break;case ac.MatMulSmallOutputSizeProgram:ep=new w$(ea,en,eh,u,y,T,O,$);break;case ac.MatMulPackedProgram:let ey=w.adapterInfo.isIntel();ep=new wE(ea,eh,u,y,T,O,$,ey);break;default:throw Error(`Unsupported MatMulProgramType ${em}.`)}T&&eu.push(T),$&&eu.push($),"leakyrelu"===O&&(ed.push({type:"float32",data:[M]}),ep.uniforms+=" alpha : f32,");let eA=pe({inputs:{x:ec=w.runWebGPUProgram(ep,eu,e.dtype,ed,ec)},backend:w,attrs:{shape:ee}});for(let e of(es.push(ec),es))w.disposeData(e.dataId);return eA}var wO=class{constructor(e,t,u){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=hh.assertAndGetBroadcastShape(t,u),this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${Xc(this.op,!1)}
      }

      ${G("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}},wP=class{constructor(e,t,u){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=hh.assertAndGetBroadcastShape(t,u),this.dispatchLayout=X(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length<=1&&u.length>1&&t[0]<128,this.useSharedMemoryWithB=u.length<=1&&t.length>1&&u[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?u[0]:t[0],this.shaderKey=`binary_${e}_${this.lastDimensionSize}`,this.type="shared",this.workgroupSize=[256,1,1];else{let y=t.length>0&&t[t.length-1]%4==0,w=u.length>0&&u[u.length-1]%4==0;y&&w?(this.outputComponent=4,this.variableComponents=[4,4]):y&&(oc.isScalarShape(u)||1===u[u.length-1])||w&&(oc.isScalarShape(t)||1===t[t.length-1])?(this.outputComponent=4,this.variableComponents=y?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey=`binary_${e}_${this.variableComponents}`,this.workgroupSize=[128,1,1]}this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let e,t=4===this.outputComponent?"vec4<f32>":"f32",u=`
    fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {
      ${Xc(this.op,4===this.outputComponent)}
    };
    `;if("shared"===this.type){let t=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",y=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);
          let b = sharedBuf[${t}];`:`let a = sharedBuf[${t}];
          let b = getBByOutputIndex(index);`;e=`
        ${u}
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${G("index")} {
          // Fill in the shared memory buffer.
          let localIndex = i32(localId.x);
          if(localIndex < ${this.lastDimensionSize}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          if(index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            ${y}
            setOutputAtIndex(index, binaryOperation(a, b));
          }
        }
        `}else e=`
       ${u}
       ${G("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index * ${this.outputComponent});
           let a = ${t}(getAByOutputCoords(coords));
           let b = ${t}(getBByOutputCoords(coords));
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `;return e}};function At(e){let{inputs:t}=e,{x:u}=t;return e.backend.incRef(u.dataId),{dataId:u.dataId,shape:u.shape,dtype:u.dtype}}function xo(e){let{inputs:t,backend:u}=e,{real:y,imag:w}=t,T=u.makeTensorInfo(y.shape,"complex64"),$=u.tensorMap.get(T.dataId),M=At({inputs:{x:y},backend:u}),O=At({inputs:{x:w},backend:u});return $.complexTensorInfos={real:M,imag:O},T}var wD=class{constructor(e,t,u=""){this.variableNames=["A"],this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=t,""!==u&&(this.uniforms=u),this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${Si(this.op,!1)}
      }
      ${G("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function ye({opType:e,cpuKernelImpl:t,dtype:u}){return({inputs:y,backend:w})=>{let{x:T}=y,$=u||T.dtype;if(w.shouldExecuteOnCPU([T])&&null!=t){let e=t(w.tensorMap.get(T.dataId).values,$);return w.makeTensorInfo(T.shape,$,e)}let M=new wD(T.shape,e);return w.runWebGPUProgram(M,[T],$)}}function et({opType:e,cpuKernelImpl:t,supportsComplex:u=!1,dtype:y}){return({inputs:w,backend:T})=>{let{a:$,b:M}=w;if(u&&"complex64"===$.dtype){let t=T.tensorMap.get($.dataId),u=T.tensorMap.get(M.dataId),y,w;if(e!==af.MUL)[y,w]=[[t.complexTensorInfos.real,u.complexTensorInfos.real],[t.complexTensorInfos.imag,u.complexTensorInfos.imag]].map(t=>{let[u,y]=t,w={dataId:u.dataId,dtype:u.dtype,shape:$.shape},O={dataId:y.dataId,dtype:y.dtype,shape:M.shape},P=new wP(e,$.shape,M.shape);return T.runWebGPUProgram(P,[w,O],dt(u.dtype,y.dtype))});else{let e=new wO(af.COMPLEX_MULTIPLY_REAL,$.shape,M.shape),O=new wO(af.COMPLEX_MULTIPLY_IMAG,$.shape,M.shape),P=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:$.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:$.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:M.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:M.shape}];y=T.runWebGPUProgram(e,P,"float32"),w=T.runWebGPUProgram(O,P,"float32")}let O=xo({inputs:{real:y,imag:w},backend:T});return T.disposeData(y.dataId),T.disposeData(w.dataId),O}let O=y||dt($.dtype,M.dtype);if(("string"===$.dtype||"string"===M.dtype||T.shouldExecuteOnCPU([$,M]))&&null!=t){let e=T.tensorMap.get($.dataId).values,u=T.tensorMap.get(M.dataId).values,y="string"===$.dtype?hh.fromUint8ToStringArray(e):e,w="string"===$.dtype?hh.fromUint8ToStringArray(u):u,[P,z]=t($.shape,M.shape,y,w,O);return T.makeTensorInfo(z,O,P)}let P=new wP(e,$.shape,M.shape);return T.runWebGPUProgram(P,[$,M],O)}}var{addImpl:wz,castImpl:wL,ceilImpl:wW,concatImpl:wB,equalImpl:wV,expImpl:wU,expm1Impl:wG,floorImpl:wH,floorDivImpl:wj,gatherNdImpl:wq,gatherV2Impl:wK,greaterEqualImpl:wZ,greaterImpl:wY,lessEqualImpl:wJ,lessImpl:wQ,logImpl:w1,maxImpl:w2,maximumImpl:w0,minimumImpl:w3,multiplyImpl:w7,negImpl:w6,notEqualImpl:w8,prodImpl:w9,rangeImpl:In,rsqrtImpl:Ii,scatterImpl:Is,simpleAbsImpl:Io,sliceImpl:Iu,stridedSliceImpl:Id,stringNGramsImpl:Ic,subImpl:Ih,tileImpl:If,topKImpl:Ig,transposeImpl:Iy,uniqueImpl:IA}=fz,Ix=ye({opType:am.ABS,cpuKernelImpl:Io}),Ib=ye({opType:am.ACOS}),IS=ye({opType:am.ACOSH}),IN=et({opType:af.ADD,cpuKernelImpl:wz,supportsComplex:!0}),IC=class{constructor(e){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((e,t)=>`T${t}`),this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(t=>{e.push(`let v${t} = get${t}ByOutputCoords(coords);`)});let t=this.variableNames.map(e=>`v${e}`).join(" + ");return`
      ${G("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}},IT=class{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[16,16,1];let u=Array(e.length);for(let y=0;y<u.length;y++)u[y]=e[t[y]];this.outputShape=u,this.dispatchLayout={x:[0],y:[1]},this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){oc.assert(this.workgroupSize[0]===this.workgroupSize[1],()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`);let e=this.workgroupSize[0];return`
      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;
      ${G()} {
        var x = i32(workgroupId.x) * ${e} + i32(localId.x);
        var y = i32(workgroupId.y) * ${e} + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = f32(A[y * width + x]);
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * ${e} + i32(localId.x);
        y = i32(workgroupId.x) * ${e} + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}},IE=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;let u=Array(e.length);for(let y=0;y<u.length;y++)u[y]=e[t[y]];this.outputShape=u,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=ft(this.outputShape.length),t=e0(this.newDim);return`
      ${G("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function e0(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let u=Array(t);for(let t=0;t<e.length;t++)u[e[t]]=`coords.${Oo(t)}`;return u.join()}function xr(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{perm:T}=y,$=Array(w.shape.length);for(let e=0;e<$.length;e++)$[e]=w.shape[T[e]];if(u.shouldExecuteOnCPU([w])){let e=Iy(u.tensorMap.get(w.dataId).values,w.shape,w.dtype,T,$);return u.makeTensorInfo($,w.dtype,e)}if(2===w.shape.length&&oc.arraysEqual(T,[1,0])){let e=new IT(w.shape,T);return u.runWebGPUProgram(e,[w],w.dtype)}let M=new IE(w.shape,T);return u.runWebGPUProgram(M,[w],w.dtype)}var IR=class{constructor(e,t,u){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];let[y]=hh.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=0===y.length?[1]:y,e.inSize>=32768&&u>=512?this.workgroupSize=[512,1,1]:e.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0",u=this.workgroupSize[0];"min"===this.reduceType||"max"===this.reduceType?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${"min"===this.reduceType?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):"sum"===this.reduceType||"mean"===this.reduceType?e=" bestValue = bestValue + candidate; ":"prod"===this.reduceType?(e=" bestValue = bestValue * candidate; ",t="1.0"):"all"===this.reduceType?(e=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",t="1.0"):"any"===this.reduceType&&(e=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",t="0.0");let y="mean"===this.reduceType?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       
         var<workgroup> xBestValues : array<f32, ${u}>;
       
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${1===this.outputShape.length?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${G("index")} {
         let outputIndex = index / ${u};
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), ${u}u);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + ${u}) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), ${u}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${y}
        }
       }
     `}},I$={mean:"float32",all:"bool",any:"bool"};function eo(e,t,u,y,w){let T,$=e.shape.length,M=[],O=oc.parseAxisParam(t,e.shape),P=O,z=hh.getAxesPermutation(P,$),L=e;null!=z&&(L=xr({inputs:{x:e},attrs:{perm:z},backend:w}),P=hh.getInnerMostAxes(P.length,$),M.push(L)),hh.assertAxesAreInnerMostDims(y,P,$);let[W,B]=hh.computeOutAndReduceShapes(L.shape,P),j=W;if(u&&(j=hh.expandShapeToKeepDim(W,O)),("max"===y||"prod"===y)&&w.shouldExecuteOnCPU([L])){let t=w.tensorMap.get(L.dataId).values;switch(y){case"max":let u=w2(t,oc.sizeFromShape(B),j,e.dtype);T=w.makeTensorInfo(j,e.dtype,u);break;case"prod":let{outVals:$,outShape:M,outDtype:O}=w9(L.shape,L.dtype,t,P);T=w.makeTensorInfo(M,O,$);break;default:throw Error(`${y} CPU implementation is not yet supported.`)}}else{let t=oc.sizeFromShape(B),u=oc.sizeFromShape(L.shape)/t,$=I$[y]||oi(e.dtype),O=new IR({windowSize:t,inSize:t,batchSize:u,outSize:1},y,w.device.limits.maxComputeWorkgroupSizeX),P=w.runWebGPUProgram(O,[L],$,[{type:"int32",data:[t]}]);M.push(P),T=pe({inputs:{x:P},attrs:{shape:j},backend:w})}return M.forEach(e=>w.disposeData(e.dataId)),T}var I_=class{constructor(e,t,u){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;let y=[t];this.op="min"===u?"<":">";let[w,T]=hh.computeOutAndReduceShapes(e,y);this.outputShape=0===w.length?[1]:w,this.dispatchLayout=X(this.outputShape),32>oc.sizeFromShape(T)?(this.type="plain",this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=H(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){let e=this.workgroupSize[0],t10=()=>1===this.inputShape.length?"uniforms.xShape":`uniforms.xShape.${Oo(this.inputShape.length-1)}`,o=()=>{let e="";if(1===this.outputShape.length)1!==this.inputShape.length&&(e+="outputCoords,");else for(let t=0;t<this.outputShape.length;t++)e+=`outputCoords.${Oo(t)},`;return e};return"shared"===this.type?`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      
      var<workgroup> xBestIndices : array<i32, ${e}>;
      var<workgroup> xBestValues : array<f32, ${e}>;
    

      ${G("index")} {
        let outputIndex = index / ${e};
        let reduceLength = ${t10()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + ${e}) {
          let candidate = getX(${o()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), ${e}u);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `:`
      ${G("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${o()} 0);
          let reduceLength = ${t10()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${o()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `}},IM=ye({opType:am.ASIN}),IF=ye({opType:am.ASINH}),IO=ye({opType:am.ATAN}),IP=et({opType:af.ATAN2}),ID=ye({opType:am.ATANH}),Iz=class{constructor(e){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${G("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.strides;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}},IL=class{constructor(e,t,u=!1,y=!1,w=!1){if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,"avg"===t&&u)throw Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=u,this.flattenPositions=y,this.includeBatchIndex=w,this.shaderKey=`pool2D_${t}_${u}_${y}_${w}`}getUserCode(){let e;e="avg"===this.poolType?"resultValue = resultValue + value; count = count + 1.0;":this.computePositions?`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC"};
      }`:"resultValue = max(value, resultValue);";let t="resultValue";return"avg"===this.poolType&&(t="resultValue / max(count, 1.0)"),`
      ${G("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${"avg"===this.poolType?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, d);
              ${e}
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}
        }
      }
    `}},IW=class{constructor(e,t,u=!1,y=!1,w=!1){if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,"avg"===t&&u)throw Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=u,this.flattenPositions=y,this.includeBatchIndex=w,this.shaderKey=`pool3D_${t}_${u}_${y}_${w}`}getUserCode(){let e;e="avg"===this.poolType?"resultValue += value; count += 1.0;":this.computePositions?`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC"};
      }`:"resultValue = max(value, resultValue);";let t="resultValue";return"avg"===this.poolType&&(t="resultValue / max(count, 1.0)"),`
      ${G("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords.x;
          let ch = coords.u;

          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
          let xDCorner = xCorner.x;
          let xRCorner = xCorner.y;
          let xCCorner = xCorner.z;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${"avg"===this.poolType?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {
            let xD = xDCorner + wD;
            if (xD < 0 || xD >= uniforms.convDims.x) {
              continue;
            }

            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {
              let xR = xRCorner + wR;
              if (xR < 0 || xR >= uniforms.convDims.y) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {
                let xC = xCCorner + wC;
                if (xC < 0 || xC >= uniforms.convDims.z) {
                  continue;
                }

                let value = getX(batch, xD, xR, xC, ch);
                ${e}
              }
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}
        }
      }
    `}};function t0(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{reductionIndices:T,keepDims:$}=y;return eo(w,T,$,"max",u)}function r0(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{keepDims:T,axis:$}=y;return eo(w,$,T,"mean",u)}function ax(e,t,u,y){if(1===t.filterWidth&&1===t.filterHeight&&oc.arraysEqual(t.inShape,t.outShape))return At({inputs:{x:e},backend:y});if(t.filterWidth===t.inWidth&&t.filterHeight===t.inHeight&&1===t.batchSize&&"VALID"===t.padInfo.type){let w=e.shape.length,T=pe({inputs:{x:e},backend:y,attrs:{shape:[e.shape[w-3]*e.shape[w-2],e.shape[w-1]]}}),$;"avg"===u?$=r0({inputs:{x:T},backend:y,attrs:{axis:0,keepDims:!1}}):(oc.assert("max"===u,()=>`Invalid pool type ${u}`),$=t0({inputs:{x:T},backend:y,attrs:{reductionIndices:0,keepDims:!1}}));let M=pe({inputs:{x:$},backend:y,attrs:{shape:t.outShape}});return y.disposeData(T.dataId),y.disposeData($.dataId),M}let w,T=[{type:"int32",data:[t.strideHeight,t.strideWidth]}];return 1===t.filterHeight&&1===t.filterWidth?w=new Iz(t):("avg"===u?w=new IL(t,"avg"):(oc.assert("max"===u,()=>`Invalid pool type ${u}`),w=new IL(t,"max")),T.push({type:"int32",data:[t.padInfo.top,t.padInfo.left]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]},{type:"int32",data:[t.inHeight,t.inWidth]},{type:"int32",data:[t.effectiveFilterHeight,t.effectiveFilterWidth]})),y.runWebGPUProgram(w,[e],e.dtype,T)}var IB=class{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return`
      ${G("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);

            dotProd = dotProd + dyValue * uniforms.avgMultiplier;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},IV=class{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return`
      ${G("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              dotProd += dyValue * uniforms.avgMultiplier;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},IU=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${ft(e.length)}, `,this.shaderKey="slice"}getUserCode(){let e=ft(this.rank),t=function(e){if(1===e)return"sourceLoc";if(e<=6)return IG.slice(0,e).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank),u;return u=1===this.start.length?this.outputShape.map((e,t)=>"sourceLoc = uniforms.start + coords;"):this.outputShape.map((e,t)=>`sourceLoc.${IG[t]} = uniforms.start.${Oo(t)} + coords.${IG[t]};`),`
      ${G("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${u.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}},IG=["x","y","z","w","u","v"];function Hs(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{begin:T,size:$}=y,[M,O]=hs.parseSliceParams(w,T,$);if(hs.assertParamsValid(w,M,O),u.shouldExecuteOnCPU([w])||"string"===w.dtype){let e=Iu(u.tensorMap.get(w.dataId).values,M,O,w.shape,w.dtype);return u.makeTensorInfo(O,w.dtype,e)}if(0===oc.sizeFromShape(O))return u.makeTensorInfo(O,w.dtype,[]);let P=new IU(M,O),z=[{type:"int32",data:M}];return u.runWebGPUProgram(P,[w],w.dtype,z)}var IH=`
  fn bincount_write(index: i32, value: f32) {
    ${Qr("&result[index]","value","float32")}
  }
`,Ij=`
  fn bincount_write(index: i32, value: f32) {
    atomicStore(&result[index], bitcast<i32>(value));
  }
`,Iq=class{constructor(e,t,u=!1){this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=e,this.rank=e.length,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=u,u&&(this.atomic=!1),this.hasWeights=t,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`
    ${this.binaryOutput?Ij:IH}
  ${G("index")} {
    ${1===this.rank?`if (index < uniforms.xShape) {
      let indexVal = i32(getX(index));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};
        bincount_write(indexVal, value);
      }
    }`:`let coord = getCoordsFromIndex(index);
    if (coordsInBounds2D(coord, uniforms.xShape)) {
      let indexVal = i32(getX(coord[0], coord[1]));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};
        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);
      }
    }`}
  }
  `}},IK=class{constructor(e){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return`
  ${G("index")} {
    if (index < uniforms.size) {
      var s0 = 1.0;
      var s1 = 1.0;
      let indexS0 = index - uniforms.size + uniforms.s0Size;
      let indexS1 = index - uniforms.size + uniforms.s1Size;
      if (indexS0 >= 0) {
        s0 = getS0(indexS0);
      }
      if (indexS1 >= 0) {
        s1 = getS1(indexS1);
      }

      if (s0 == 1.0) {
        setOutputAtIndex(index, s1);
      } else if (s1 == 1.0) {
        setOutputAtIndex(index, s0);
      } else if (s0 != s1) {
        setOutputAtIndex(index, uniforms.NAN);
      } else {
        setOutputAtIndex(index, s0);
      }
    }
  }
  `}},IZ=et({opType:af.NOT_EQUAL,dtype:"bool",cpuKernelImpl:w8});function vi(e){let{inputs:t,backend:u}=e,{input:y}=t;return At({inputs:{x:u.tensorMap.get(y.dataId).complexTensorInfos.real},backend:u})}var IY=ye({opType:am.CEIL,cpuKernelImpl:wW}),IJ=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=e,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${G("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue = clamp(
              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));
          clampedValue = select(clampedValue, value, isnanVec4(value));
          setOutputAtIndex(index, clampedValue);
        }
      }
    `}},IQ=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${G("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}},I1=class{constructor(e){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return`
    ${G("index")} {
      if (index < uniforms.size) {
        let re = abs(getRealByOutputIndex(index));
        let im = abs(getImagByOutputIndex(index));
        let mx = max(re, im);

        // The length function in wgsl may be not underflow-safe on some GPUs.
        // So the safe solution is to ensure underflow-safety in all cases.
        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));
      }
    }
  `}};function vV(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var I0=class{constructor(e){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=hh.computeOutShape(e,1),this.variableNames=e.map((e,t)=>`T${t}`),this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let e=0;e<this.offsetLength;e++)this.uniforms+=`offset${e} : i32,`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let t=1;t<this.offsetLength;t++)e.push(`else if (yC < uniforms.offset${[t]}){ setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${t-1})); }`);let t=this.offsetLength,u=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${u})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${G("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};function Rp(e){let{inputs:t,backend:u}=e,{input:y}=t;return At({inputs:{x:u.tensorMap.get(y.dataId).complexTensorInfos.imag},backend:u})}function a0(e){let{inputs:t,backend:u,attrs:y}=e,{axis:w}=y,T=oc.parseAxisParam(w,t[0].shape)[0],$=t.map(e=>e.shape);hh.assertParamsConsistent($,T);let M=hh.computeOutShape(t.map(e=>e.shape),T);if(0===oc.sizeFromShape(M))return u.makeTensorInfo(M,t[0].dtype,[]);let O=t.filter(e=>oc.sizeFromShape(e.shape)>0);return 1===O.length?At({inputs:{x:O[0]},backend:u}):function Zc(e,t,u){let y,w=e[0].dtype;if("complex64"===w){let y=e.map(e=>vi({inputs:{input:e},backend:u})),w=e.map(e=>Rp({inputs:{input:e},backend:u})),T=Zc(y,t,u),$=Zc(w,t,u),M=xo({inputs:{real:T,imag:$},backend:u});return y.forEach(e=>u.disposeData(e.dataId)),w.forEach(e=>u.disposeData(e.dataId)),u.disposeData(T.dataId),u.disposeData($.dataId),M}let T=u.shouldExecuteOnCPU(e);if("string"===w&&(T=!0),T){let y=e.map(e=>{let y=[-1,oc.sizeFromShape(e.shape.slice(t))];return pe({inputs:{x:e},backend:u,attrs:{shape:y}})}),T=wB(y.map(e=>({vals:u.readSync(e.dataId),shape:e.shape})),hh.computeOutShape(y.map(e=>e.shape),1),w,1===y[0].shape[0]),$=hh.computeOutShape(e.map(e=>e.shape),t),M=u.makeTensorInfo($,w,T);return y.forEach(e=>u.disposeData(e.dataId)),M}let $=u.device.limits.maxStorageBuffersPerShaderStage-1;if(e.length>$){let y=[];for(let w=0;w<e.length;w+=$){let T=e.slice(w,w+$);y.push(Zc(T,t,u))}let w=Zc(y,t,u);for(let e of y)u.disposeData(e.dataId);return w}let{tensors2D:M,outShape:O}=(y=hh.computeOutShape(e.map(e=>e.shape),t),{tensors2D:e.map(e=>pe({inputs:{x:e},backend:u,attrs:{shape:[oc.sizeFromShape(e.shape.slice(0,t)),oc.sizeFromShape(e.shape.slice(t))]}})),outShape:y}),P=M.map(e=>e.shape),z=new I0(P),L=[],W=Array(P.length-1);if(W.length>0){W[0]=P[0][1],L.push({type:"int32",data:[W[0]]});for(let e=1;e<W.length;e++)W[e]=W[e-1]+P[e][1],L.push({type:"int32",data:[W[e]]})}let B=u.runWebGPUProgram(z,M,M[0].dtype,L);M.forEach(e=>u.disposeData(e.dataId));let j=pe({inputs:{x:B},backend:u,attrs:{shape:O}});return u.disposeData(B.dataId),j}(O,T,u)}var I3=class{constructor(e,t,u,y,w=!1,T=null,$=!1,M=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.isVec4=((e.inChannels%4==0||e.inChannels%3==0)&&this.isChannelsLast||e.outWidth%4==0&&!this.isChannelsLast)&&e.outChannels%4==0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=lm(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=mm(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&e.inChannels%4!=0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),w&&(this.variableNames.push("bias"),this.variableComponents.push(4)),$&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],w&&this.variableNames.push("bias"),$&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=M,this.addBias=w,this.activation=T,this.hasPreluActivationWeights=$,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=t%this.tileAOuter==0,this.fitBOuter=u%this.tileBOuter==0,this.fitInner=y%this.tileInner==0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){let e=this.isVec4?_p(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):Ep(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),t=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${function(e,t,u,y,w=!1,T=null,$=!1,M=4,O=4,P=4){let z=e?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,L=e?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,W=e?"row":"col",B=e?"col":"row",j=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${W} / outWidth;
      let outCol = ${W} % outWidth;

      let WRow = ${B} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${B} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];
      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];
      let xCh = ${B} % inChannels;
      var resData = ${Ae(M)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${e?"uniforms.xShape[1]":"uniforms.xShape[2]"} && xCol >= 0 && xCol < ${e?"uniforms.xShape[2]":"uniforms.xShape[3]"}) {
        ${z}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${(e=>{switch(e){case 1:return"resData = f32(x[xIndex]);";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = vec4<f32>(x[xIndex / 4]);";default:throw Error(`innerElementSize ${e} is not supported.`)}})(M)}
      }
      return resData;`,q=e?t&&y?`
      ${j}`:`
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${j}
      }
      return ${Ae(M)}(0.0);`:y&&u?`
      ${j}`:`
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${j}
      }
      return ${Ae(M)}(0.0);`,Z=`${(e=>{switch(e){case 1:return"return f32(W[row * uniforms.wShape[3] + col]);";case 4:return"return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);";default:throw Error(`innerElementSize ${e} is not supported.`)}})(O)}`,Y=Ae(P),J=e?Ae(M):Ae(O),ee=e?Ae(O):Ae(M);return`
      ${dr(T,$,4===P,4)}
      fn mm_readA(batch: i32, row : i32, col : i32) -> ${J} {
        ${e?q:Z}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> ${ee} {
        ${e?Z:q}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ${Y}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${L}
        ${Zr(w,T)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}
    ${e}
  `}},I7=class{constructor(e,t=!1,u=null,y=!1){this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=e.outShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t,this.activation=u,this.hasPreluActivationWeights=y,t&&this.variableNames.push("bias"),y&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`
       ${dr(this.activation,this.hasPreluActivationWeights,!1,4)}
       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{
         let coords = vec4<i32>(batch, row, col, chan);
         if (coordsInBounds4D(coords, uniforms.xShape)) {
           return  getX(batch, row, col, chan);
         } else {
          return 0.0;
         }
       }
       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
         let coords = vec4<i32>(row, col, xChannel, outChannel);
         if(coordsInBounds4D(coords, uniforms.wShape)) {
           return getW(row, col, xChannel, outChannel);
          } else {
            return 0.0;
          }
       }
       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {
         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}
         if (coordsInBounds4D(coords, uniforms.outShape)) {
           var value = valueIn;
           ${Zr(this.addBias,this.activation)}
           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);
         }
       }
       ${G("index")} {
         let coords = getOutputCoords();
         let batch = coords[0];
         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}
         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}
         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}
         var acc : f32 = 0.0;
         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];
             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];
             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {
               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}
               let f = readFilt(row, col, xChannel, outChannel);
               acc = acc + v * f;
             }
           }
         }
         writeResult(batch, outRow, outCol, outChannel, acc);
       }
     `}},I4=class{constructor(e,t){this.variableNames=["x"],this.uniforms=`pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,
       inChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,u=this.isChannelsLast?"coords[1]":"coords[2]",y=this.isChannelsLast?"coords[2]":"coords[1]",w=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`
    ${G("index")} {
      let coords = getCoordsFromIndex(index);
      if(index < uniforms.size) {
        let batch = coords[0];
        let row = ${u};
        let col = ${y};
        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];
        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);
        var value = 0.0;
        if(xRow < uniforms.xShape[${e}] && xRow >= 0) {
          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -
              uniforms.pads[1];
          let xCol = offsetX + uniforms.dilations[1] * ((col %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
          let ch = col % uniforms.inChannels;
          if(xCol < uniforms.xShape[${t}] && xCol >= 0) {
            value = ${w};
          }
        }
        setOutputAtIndex(index, value);
      }
    }
   `}};function yx(e,t){let u=e.length;return u>=3?t?[...e.slice(0,-3),e[u-3]*e[u-2],e[u-1]]:[...e.slice(0,-3),e[u-3],e[u-2]*e[u-1]]:!t&&1===u&&e[0]>1?[e[0],1]:null}function bx({x:e,filter:t,convInfo:u,backend:y,bias:w=null,preluActivationWeights:T=null,leakyreluAlpha:$=0,activation:M=null}){let O=null!=w,P=null!=T,z="channelsLast"===u.dataFormat,L=z&&u.filterHeight===u.inHeight&&u.filterWidth===u.inWidth&&"VALID"===u.padInfo.type,W=nG.getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!W&&(L||1===u.filterHeight&&1===u.filterWidth&&1===u.dilationHeight&&1===u.dilationWidth&&1===u.strideHeight&&1===u.strideWidth&&("SAME"===u.padInfo.type||"VALID"===u.padInfo.type)))return function({x:e,filter:t,convInfo:u,backend:y,bias:w=null,preluActivationWeights:T=null,leakyreluAlpha:$=0,activation:M=null}){let O="channelsLast"===u.dataFormat,P=!O,z=O&&u.filterHeight===u.inHeight&&u.filterWidth===u.inWidth&&"VALID"===u.padInfo.type,L=[],W,B;if(z){let w=u.inHeight*u.inWidth*u.inChannels;W=pe({inputs:{x:e},backend:y,attrs:{shape:[1,u.batchSize,w]}}),B=pe({inputs:{x:t},backend:y,attrs:{shape:[1,w,u.outChannels]}})}else W=pe({inputs:{x:e},backend:y,attrs:{shape:O?[u.batchSize,u.inHeight*u.inWidth,u.inChannels]:[u.batchSize,u.inChannels,u.inHeight*u.inWidth]}}),B=pe({inputs:{x:t},backend:y,attrs:{shape:[1,u.inChannels,u.outChannels]}});if(L.push(W),L.push(B),null!=T){let e=yx(T.shape,O);null!=e&&(T=pe({inputs:{x:T},backend:y,attrs:{shape:e}}),L.push(T))}if(null!=w){let e=yx(w.shape,O);null!=e&&(w=pe({inputs:{x:w},backend:y,attrs:{shape:e}}),L.push(w))}let j=$p({a:O?W:B,b:O?B:W,transposeA:P,transposeB:!1,backend:y,bias:w,activation:M,preluActivationWeights:T,leakyreluAlpha:$}),q=pe({inputs:{x:j},backend:y,attrs:{shape:u.outShape}});for(let e of(L.push(j),L))y.disposeData(e.dataId);return q}({x:e,filter:t,convInfo:u,backend:y,bias:w,activation:M,preluActivationWeights:T,leakyreluAlpha:$});let B=nG.getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),j=B>-1?B:y.thresholdToIncreaseWorkgroups,q=u.batchSize*Math.ceil(u.outHeight*u.outWidth/32)*Math.ceil(u.outChannels/32);if(nG.getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||q<=j)return function({x:e,filter:t,convInfo:u,backend:y,bias:w=null,preluActivationWeights:T=null,leakyreluAlpha:$=0,activation:M=null}){let{filterWidth:O,filterHeight:P,inChannels:z,strideWidth:L,strideHeight:W,padInfo:B,outWidth:j,outHeight:q,dilationWidth:Z,dilationHeight:Y,dataFormat:J}=u,ee="channelsLast"===J,ea=O*P*z,en=q*j,er=ee?[u.batchSize,en,ea]:[u.batchSize,ea,en],ei=new I4(er,ee),es=[{type:"int32",data:[B.top,B.left]},{type:"int32",data:[W,L]},{type:"int32",data:[Y,Z]},{type:"int32",data:[j]},{type:"int32",data:[z*O]},{type:"int32",data:[z]}],el=y.runWebGPUProgram(ei,[e],e.dtype,es),eu=[];eu.push(el);let ed=pe({inputs:{x:t},backend:y,attrs:{shape:[1,ea,-1]}});if(eu.push(ed),null!=T){let e=yx(T.shape,ee);null!=e&&(T=pe({inputs:{x:T},backend:y,attrs:{shape:e}}),eu.push(T))}if(null!=w){let e=yx(w.shape,ee);null!=e&&(w=pe({inputs:{x:w},backend:y,attrs:{shape:e}}),eu.push(w))}let ep=$p({a:ee?el:ed,b:ee?ed:el,transposeA:!ee,transposeB:!1,backend:y,bias:w,activation:M,preluActivationWeights:T,leakyreluAlpha:$}),ec=pe({inputs:{x:ep},backend:y,attrs:{shape:u.outShape}});for(let e of(eu.push(ep),eu))y.disposeData(e.dataId);return ec}({x:e,filter:t,convInfo:u,backend:y,bias:w,preluActivationWeights:T,leakyreluAlpha:$,activation:M});let Z,Y=[u.padInfo.top,u.padInfo.left],J=[{type:"int32",data:[u.filterHeight,u.filterWidth]},{type:"int32",data:[...Y]},{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]}];if(W)Z=new I7(u,O,M,P);else{let e=z?u.outHeight*u.outWidth:u.outChannels,t=z?u.outChannels:u.outHeight*u.outWidth,w=u.filterHeight*u.filterWidth*u.inChannels;J.push({type:"int32",data:[e]},{type:"int32",data:[t]},{type:"int32",data:[w]});let T=y.adapterInfo.isIntel();Z=new I3(u,e,t,w,O,M,P,T)}let ee=[],ea=[e,t];O&&(z||1!==w.shape.length||ee.push(w=pe({inputs:{x:w},backend:y,attrs:{shape:[w.shape[0],1,1]}})),ea.push(w)),P&&(z||1!==T.shape.length||ee.push(T=pe({inputs:{x:T},backend:y,attrs:{shape:[T.shape[0],1,1]}})),ea.push(T)),"leakyrelu"===M&&(J.push({type:"float32",data:[$]}),Z.uniforms+=" alpha : f32,");let en=y.runWebGPUProgram(Z,ea,e.dtype,J);for(let e of ee)y.disposeData(e.dataId);return en}var I6=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=e.inShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.isVec4=this.isChannelsLast&&e.outChannels%4==0&&e.inChannels%4==0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey=`conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,u=this.isChannelsLast?3:1,y=`
    ${G()} {
      let batch = i32(globalId.z) / uniforms.outShape[1];
      let r = i32(globalId.z) % uniforms.outShape[1];
      let c = i32(globalId.y) * ${this.workPerThread};
      let d1 = i32(globalId.x) * 4;

      let dyCorner = vec2<i32>(r, c) - uniforms.pads;

      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
      // ? = to be determined. : = across all values in that axis.
      var dotProd: array<vec4<f32>, ${this.workPerThread}>;
      for (var i = 0; i < ${this.workPerThread}; i++) {
        dotProd[i] = vec4<f32>(0.0);
      }
      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);
        let wRPerm = uniforms.filterDims.x - 1 - wR;
        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||
            fract(dyR) > 0.0) {
          continue;
        }
        let idyR = i32(dyR);

        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);
          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);
          let wCPerm = uniforms.filterDims.y - 1 - wC;
          var bDyCVal = true;
          var bDyCVal2 = true;
          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
              fract(dyC) > 0.0) {
            bDyCVal = false;
          }
          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||
              fract(dyC2) > 0.0) {
            bDyCVal2 = false;
          }

          let idyC = i32(dyC);
          let idyC2 = i32(dyC2);
          if (bDyCVal && bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
              xValue = getDy(batch, idyR, idyC2, d2);
              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),
                                                  dot(xValue, wValue1),
                                                  dot(xValue, wValue2),
                                                  dot(xValue, wValue3));
            }
          } else if (bDyCVal) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
            }
          } else if (bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC2, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[1] = dotProd[1] + tmpval;
            }
          }
        }
      }

      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
        let coords = vec4<i32>(batch, r, c + i, d1);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
        }
      }
    }
    `;return this.isVec4?`
    ${y}
    `:`
    ${G("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${u}];

        let dyCorner = vec2<i32>(coords[${e}], coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = i32(dyC);

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              let xValue = ${this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)"};
              let wValue = getW(wRPerm, wCPerm, d1, d2);
              dotProd = dotProd + xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},I8=class{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,this.shaderKey=`conv2DDerFilter_${this.isChannelsLast}`}getUserCode(){return`
    ${G("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let d2 = coords[3];

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b = b + 1) {
          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];
            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              if (${this.isChannelsLast}) {
                let dyValue = getDy(b, yR, yC, d2);
                let xValue = getX(b, xR, xC, d1);
                dotProd = dotProd + xValue * dyValue;
              } else {
                let dyValue = getDy(b, d2, yR, yC);
                let xValue = getX(b, d1, xR, xC);
                dotProd = dotProd + xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},I9=class{constructor(e){this.variableNames=["x","dy"],this.uniforms=`pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,
       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return`
    ${G("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wF = coords.x;
        let wR = coords.y;
        let wC = coords.z;
        let d1 = coords.w;
        let d2 = coords.u;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yF = 0; yF < uniforms.outDepth; yF++) {
            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];
            if (xF < 0 || xF >= uniforms.inDepth) {
              continue;
            }

            for (var yR = 0; yR < uniforms.outHeight; yR++) {
              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];
              if (xR < 0 || xR >= uniforms.inHeight) {
                continue;
              }

              for (var yC = 0; yC < uniforms.outWidth; yC++) {
                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];
                if (xC < 0 || xC >= uniforms.inWidth) {
                  continue;
                }

                let dyValue = getDy(b, yF, yR, yC, d2);
                let xValue = getX(b, xF, xR, xC, d1);
                dotProd += xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},Se=class{constructor(e){this.variableNames=["dy","W"],this.uniforms=`filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return`
    ${G("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let d1 = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyFCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);
          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {
            continue;
          }
          let idyF = i32(dyF);

          let wFPerm = uniforms.filterDims[0] - 1 - wF;

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            let wRPerm = uniforms.filterDims[1] - 1 - wR;

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let wCPerm = uniforms.filterDims[2] - 1 - wC;

              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {
                let xValue = getDy(batch, idyF, idyR, idyC, d2);
                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},Sa=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,oc.assert("channelsLast"===e.dataFormat,()=>"TODO: NCHW is unimplemented"),this.isVec4=e.inChannels%4==0&&e.outChannels%4==0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=lm(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=mm(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){let e=this.isVec4?_p(this.elementsPerThread,this.workgroupSize):Ep(this.elementsPerThread,this.workgroupSize);return`
    ${function(e=4){let t=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${Ae(e)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${Ae(e)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${e}];
      }
      return ${Ae(e)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, col : i32) -> ${Ae(e)} {
    ${t}
  }

  fn mm_readB(batch: i32, row : i32, col : i32) -> ${Ae(e)} {
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${(e=>{switch(e){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw Error(`innerElementSize ${e} is not supported.`)}})(e)}
    }
    return ${Ae(e)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ${Ae(e)}) {
    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${e}] = value;
    }
  }`}(this.isVec4?4:1)}
    ${e}
    `}},Sn=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return`
    ${G("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords.x;
        let d2 = coords.u;

        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
        let xFCorner = xFRCCorner.x;
        let xRCorner = xFRCCorner.y;
        let xCCorner = xFRCCorner.z;

        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;
        let inputDepthVec4Remainder = uniforms.xShape.u % 4;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let xF = xFCorner + wF * uniforms.dilations[0];
          if (xF < 0 || xF >= uniforms.xShape.y) {
            continue;
          }

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let xR = xRCorner + wR * uniforms.dilations[1];
            if (xR < 0 || xR >= uniforms.xShape.z) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let xC = xCCorner + wC * uniforms.dilations[2];
              if (xC < 0 || xC >= uniforms.xShape.w) {
                continue;
              }

              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {
                let xValues = vec4<f32>(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                let wValues = vec4<f32>(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (inputDepthVec4Remainder == 1) {
                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *
                  getW(wF, wR, wC, inputDepthNearestVec4, d2);
              } else if (inputDepthVec4Remainder == 2) {
                let xValues = vec2<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)
                );
                let wValues = vec2<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (inputDepthVec4Remainder == 3) {
                let xValues = vec3<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)
                );
                let wValues = vec3<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }`}},Sr=ye({opType:am.COS}),Ss=ye({opType:am.COSH}),So=class{constructor(e,t,u,y){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;let[w]=t;this.outputShape=[w,u[0],u[1],e],this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId="bilinear"===y?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[u,y,w]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[T,$,M]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
    ${G("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${u});
        let width_ratio = f32(${T});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${y};
        let width_scale = ${$};
        let in_y = ${w};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${M};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}};(el=ag||(ag={})).Prod="*",el.Sum="+";var Sd=class{constructor(e,t,u,y){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=u,this.reverse=y,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let e=this.outputShape.length,t=this.op===ag.Prod?"1.0":"0.0",u=this.exclusive?t:`getX(${MV(e,"coords",this.op)})`,y=this.outputShape[this.outputShape.length-1],w="",T="";return this.exclusive?(w=this.reverse?`end != ${y-1}`:"end != 0",T=this.reverse?"end + 1":"end - 1"):(w=this.reverse?`end + pow2 < ${y}`:"end >= pow2",T=this.reverse?"end + pow2":"end - pow2"),`
      ${G("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${LV(e,"coords",this.op)};
         var val = ${u};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${w}) {
           let idx = ${T};
           ${LV(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${MV(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function MV(e,t,u){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${u} for rank ${e} is not yet supported`)}function LV(e,t,u){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative ${u} for rank ${e} is not yet supported`)}function Tx(e,t,u,y,w,T){let $=t.shape.length,M=hh.getAxesPermutation([y],$),O=t;null!=M&&(O=xr({inputs:{x:t},backend:u,attrs:{perm:M}}));let P=hh.getInnerMostAxes(1,$)[0];if(P!==$-1)throw Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${y}`);let z=O.shape[P],L=At({inputs:{x:O},backend:u});for(let t=0;t<=Math.ceil(Math.log2(z))-1;t++){let y=new Sd(e,O.shape,!1,T),w=L,$=[{type:"float32",data:[t]}];L=u.runWebGPUProgram(y,[L],L.dtype,$),u.disposeData(w.dataId)}if(w){let t=new Sd(e,O.shape,w,T),y=L;L=u.runWebGPUProgram(t,[L],L.dtype,[{type:"float32",data:[0]}]),u.disposeData(y.dataId)}if(null!=M){let e=xr({inputs:{x:L},backend:u,attrs:{perm:hh.getUndoAxesPermutation(M)}});return u.disposeData(L.dataId),u.disposeData(O.dataId),e}return L}var Sh=class{constructor(e,t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${G("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}},Sg=class{constructor(e,t,u,y=!1,w=null,T=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),y&&this.variableNames.push("bias"),T&&this.variableNames.push("preluActivationWeights"),this.addBias=y,this.activation=w,this.hasPreluActivation=T,this.filterHeight=t,this.filterWidth=u,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){let e=this.filterWidth*this.filterHeight,t=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],u=this.workgroupSize[1]+this.filterHeight-1,y=this.workgroupSize[0]+this.filterWidth-1;return`
      ${dr(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${y}>, ${u}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${G()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${u}; inputRow = inputRow + ${this.workgroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${y}; inputCol = inputCol + ${this.workgroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = i32(localIndex);
        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${Zr(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}},Sy=class{constructor(e,t=!1,u=null,y=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=e.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;let w=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=X(w),this.dispatch=H(this.dispatchLayout,w,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),oc.assert("channelsLast"===e.dataFormat,()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),y&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=u,this.hasPreluActivation=y,this.shaderKey=`depthwiseVec4_${u}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){let e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,t=this.convInfo.strideHeight,u=this.convInfo.strideWidth;return`
      ${dr(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (col >=0 && col < uniforms.inDims[1]) {
          value = getX(batch, row, col, channel);
        }
        return value;
      }

      ${G("index")} {
        let width0 = uniforms.outShape[3] / ${this.outputComponent};
        let d1 = (index % width0) * ${this.outputComponent};
        var index1 = index / width0;
        let width1 = uniforms.virtualWidth / ${this.workPerThread};
        let c = (index1 % width1) * ${this.workPerThread};
        index1 = index1 / width1;
        let r = index1 % uniforms.outShape[1];
        let batch = index1 / uniforms.outShape[1];

        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${t}, ${u}) - uniforms.pads;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${e}>;
        var dotProd : array<vec4<f32>, ${this.workPerThread}>;
        for (var i = 0; i < ${this.workPerThread}; i++) {
          dotProd[i] = vec4<f32>(0.0);
        }

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          if (xR >=0 && xR < uniforms.inDims[0]) {
            for (var i = 0; i < ${e}; i++) {
              xVals[i] = readX(batch, xR, xCCorner + i, d1);
            }
            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
              let wValue = getW(wR, wC, d1, 0);
              for (var i = 0; i < ${this.workPerThread}; i++) {
                dotProd[i] = fma(xVals[i * ${u} + wC], wValue, dotProd[i]);
              }
            }
          }
        }

        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${Zr(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}},SA=class{constructor(e,t=!1,u=null,y=!1){this.variableNames=["x","W"],this.uniforms=`pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,`,this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,t&&this.variableNames.push("bias"),y&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=u,this.hasPreluActivation=y,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${dr(this.activation,this.hasPreluActivation,!1,4)}

      ${G("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.strides - uniforms.pads;
          let d2 = coords[${this.isChannelsLast?3:1}];
          let channelMul = uniforms.wShape[3];
          let d1 = d2 / channelMul;
          let q = d2 % channelMul;

          let inputRowStart = xRCCorner.x;
          let inputColStart = xRCCorner.y;
          let inputRowEnd = inputRowStart + uniforms.filterHeight *
              uniforms.dilations[0];
          let inputColEnd = inputColStart + uniforms.filterWidth *
              uniforms.dilations[1];

          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
          var value = 0.0;

          // Extract if checking out of for loop for performance.
          if (inputRowStart >= 0 && inputColStart >= 0 &&
            inputRowEnd < uniforms.inDims[0] &&
                inputColEnd < uniforms.inDims[1]) {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            } else {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                if (xR < 0 || xR >= uniforms.inDims[0]) {
                  continue;
                }

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  if (xC < 0 || xC >= uniforms.inDims[1]) {
                    continue;
                  }

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            }
            ${Zr(this.addBias,this.activation)}
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}},Sx=class{constructor(e){this.variableNames=["x","dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,
      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return`
      ${G("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let dm = coords[3];
        let d2 = d1 * uniforms.channelMul + dm;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yR = 0; yR < uniforms.outHeight; yR++) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];

            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC++) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              let dyValue = getDy(b, yR, yC, d2);
              let xValue = getX(b, xR, xC, d1);
              dotProd += xValue * dyValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},Sb=class{constructor(e){this.variableNames=["dy","W"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return`
      ${G("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[3];
        let dyCorner = coords.yz - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }

          let idyR = i32(dyR);
          let wRPerm = uniforms.filterDims[0] - 1 - wR;

          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }

            let idyC = i32(dyC);
            let wCPerm = uniforms.filterDims[1] - 1 - wC;

            for (var dm = 0; dm < uniforms.channelMul; dm++) {
              let d2 = d1 * uniforms.channelMul + dm;
              let xValue = getDy(batch, idyR, idyC, d2);
              let wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},Sv=class{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,e],this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`
      ${G("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);
          setOutputAtIndex(index, value);
        }
      }
    `}},SS=class{constructor(e){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`
       ${G("index")} {
         if (index < uniforms.size) {
           let neg_infinity = -3.4e38;
           let coords = getOutputCoords();
           let batch = coords.x;
           let d1 = coords.w;
           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;
           let hBeg = outTopLeftCorner.x;
           let wBeg = outTopLeftCorner.y;

           var curVal = neg_infinity;
           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {
             let hIn = hBeg + h * uniforms.dilations[0];

             if (hIn >= 0 && hIn < uniforms.xShape[1]) {
               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {
                 let wIn = wBeg + w * uniforms.dilations[1];

                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {
                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);
                   if (val > curVal) {
                     curVal = val;
                   }
                 }
               }
             }
           }

           setOutputAtIndex(index, curVal);
         }
       }
     `}},SN=class{constructor(e,t){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.inShape,this.dispatchLayout=X(e.outShape),this.dispatch=H(this.dispatchLayout,e.outShape,this.workgroupSize),"float32"!==t&&"int32"!==t)throw Error(`Dilation2DBackpropInput only supports float32 and int32
          types, does not support ${t} type.`);this.type=t,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return`
       ${G("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var xRMax = 0;
           var xCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     xRMax = xR;
                     xCMax = xC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.xShape[3] *
               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));
           let value = getDy(b, r, c, d);
           ${Qr("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}},SC=class{constructor(e,t,u){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.filterShape,this.dispatchLayout=X(e.outShape),this.dispatch=H(this.dispatchLayout,e.outShape,this.workgroupSize),"float32"!==u&&"int32"!==u)throw Error(`Dilation2DBackpropFilter only supports float32 and int32
          types, does not support ${u} type.`);this.type=u,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return`
       ${G("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var wRMax = 0;
           var wCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     wRMax = wR;
                     wCMax = wC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);
           let value = getDy(b, r, c, d);
           ${Qr("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}},ST=class{constructor(e,t,u){this.variableNames=["Image"],this.uniforms="alpha: f32,",this.workgroupSize=[64,1,1],this.pixelsOpType=au.DRAW,this.size=!0,this.outputShape=e,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.type=t,this.textureFormat=u,this.shaderKey=`draw_${t}_${u}`}getUserCode(){let e,t="float32"===this.type?"value":"value / 255.0";return e=`
      if (uniforms.numChannels == 1) {
        rgba[0] = ${t};
        rgba[1] = ${t};
        rgba[2] = ${t};
      } else {
        rgba[d] = ${t};
      }`,`
       @group(0) @binding(0) var outImage : texture_storage_2d<${this.textureFormat}, write>;
       ${G("index")} {
         if (index < uniforms.size) {
           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);
           for (var d = 0; d < uniforms.numChannels; d = d + 1) {
             let value = f32(inBuf[index * uniforms.numChannels + d]);
             ${e}
           }
           rgba.x = rgba.x * rgba.w;
           rgba.y = rgba.y * rgba.w;
           rgba.z = rgba.z * rgba.w;
           let coords = getCoordsFromIndex(index);
           textureStore(outImage, vec2<i32>(coords.yx), rgba);
         }
       }
      `}},SE=et({opType:af.MUL,cpuKernelImpl:w7,supportsComplex:!0});function u0(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{axis:T,keepDims:$}=y;return eo(w,T,$,"sum",u)}var SR=ye({opType:am.ELU}),S$=et({opType:af.EQUAL,dtype:"bool",cpuKernelImpl:wV}),S_=ye({opType:am.ERF}),SM=ye({opType:am.EXP,cpuKernelImpl:wU,dtype:"float32"});function Mx(e){let{inputs:t,attrs:u,backend:y}=e,{dim:w}=u,{input:T}=t,$=T.shape.length,M=T.shape.slice(),O=w;return w<0&&(oc.assert(-($+1)<=w,()=>`Axis must be in the interval [${-($+1)}, ${$}]`),O=$+w+1),M.splice(O,0,1),pe({inputs:{x:T},backend:y,attrs:{shape:M}})}var SF=ye({opType:am.EXPM1,cpuKernelImpl:wG}),SO=class{constructor(e,t){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=e,this.shaderKey=`fft_${e}`}getUserCode(){return`
    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {
      ${"real"===this.component?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}
    }

    fn mulMatDFT(batch: i32, index: i32) -> f32 {
      let indexRatio = f32(index) / f32(uniforms.realShape[1]);
      let exponentMultiplierTimesIndexRatio =
          uniforms.exponentMultiplier * indexRatio;

      var result = 0.0;

      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {
        // x = (-2|2 * PI / N) * index * i;
        let x = exponentMultiplierTimesIndexRatio * f32(i);
        let expR = cos(x);
        let expI = sin(x);
        let real = getReal(batch, i);
        let imag = getImag(batch, i);

        result = result +
            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;
      }

      return result;
    }

    ${G("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));
      }
    }
  `}};function Lx(e,t,u){let y=u.tensorMap.get(e.dataId),w=oc.sizeFromShape(e.shape),T=e.shape[e.shape.length-1],$=[],M=pe({inputs:{x:e},backend:u,attrs:{shape:[w/T,T]}});$.push(M);let O=M.shape,P=new SO("real",O),z=new SO("imag",O),L=[{dataId:y.complexTensorInfos.real.dataId,dtype:y.complexTensorInfos.real.dtype,shape:O},{dataId:y.complexTensorInfos.imag.dataId,dtype:y.complexTensorInfos.imag.dtype,shape:O}],W=[{type:"float32",data:[t?2*Math.PI:-2*Math.PI]},{type:"float32",data:[t?O[1]:1]}],B=u.runWebGPUProgram(P,L,"float32",W);$.push(B);let j=u.runWebGPUProgram(z,L,"float32",W);$.push(j);let q=xo({inputs:{real:B,imag:j},backend:u});$.push(q);let Z=pe({inputs:{x:q},backend:u,attrs:{shape:e.shape}});return $.forEach(e=>u.disposeData(e.dataId)),Z}var SP=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${G("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}},SD=ye({opType:am.FLOOR,cpuKernelImpl:wH}),Sz=et({opType:af.FLOOR_DIV,cpuKernelImpl:wj,dtype:"int32"}),SL=class{constructor(e,t,u=!1){this.pixelsOpType=au.FROM_PIXELS,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize,[t,1,1]),this.importVideo=u,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){let e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${G("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${e};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}},SW=nG.getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU"),SB=class{constructor(e,t,u,y,w){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],hh.assertAndGetBroadcastShape(e,t),hh.assertAndGetBroadcastShape(e,u),this.outputShape=e,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),null!=y&&(hh.assertAndGetBroadcastShape(e,y),this.variableNames.push("offset")),null!=w&&(hh.assertAndGetBroadcastShape(e,w),this.variableNames.push("scale")),this.offsetShape=y,this.scaleShape=w,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";null!=this.offsetShape&&(e="getOffsetByOutputIndex(index)");let t="1.0";return null!=this.scaleShape&&(t="getScaleByOutputIndex(index)"),`
      ${G("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}},SV=class{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${ft(e)},`}getUserCode(){let e;return e=this.sliceDim>1?"uniforms.strides[j]":"uniforms.strides",`
      ${G("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}},SU=class{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){let e=function(e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[];for(let y=0;y<e.length;y++)2===y?u.push("indexZ"):u.push(`${t[y]}`);return u.join()}(this.aShape);return`
      ${G("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}};function c0(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,indices:T}=t,{axis:$,batchDims:M}=y,O=oc.parseAxisParam($,w.shape)[0],P=hh.segment_util.collectGatherOpShapeInfo(w,T,O,M),z=oc.sizeFromShape(T.shape),L=[],W=pe({inputs:{x:w},backend:u,attrs:{shape:[P.batchSize,P.outerSize,P.dimSize,P.sliceSize]}}),B=pe({inputs:{x:T},backend:u,attrs:{shape:[P.batchSize,z/P.batchSize]}});L.push(W),L.push(B);let j=[P.batchSize,P.outerSize,z/P.batchSize,P.sliceSize];if(u.shouldExecuteOnCPU([w,T])){let e=u.tensorMap.get(B.dataId).values,t=me(B.shape,B.dtype,e),y=u.tensorMap.get(W.dataId).values,w=wK(me(W.shape,W.dtype,y),t,j);return L.forEach(e=>u.disposeData(e.dataId)),u.makeTensorInfo(P.outputShape,w.dtype,w.values)}let q=new SU(W.shape,j),Z=u.runWebGPUProgram(q,[W,B],W.dtype);L.push(Z);let Y=pe({inputs:{x:Z},backend:u,attrs:{shape:P.outputShape}});return L.forEach(e=>u.disposeData(e.dataId)),Y}var SG=et({opType:af.GREATER,cpuKernelImpl:wY,dtype:"bool"}),SH=et({opType:af.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:wZ}),Sq=ye({opType:am.IS_FINITE,dtype:"bool"}),SX=ye({opType:am.IS_INF,dtype:"bool"}),SK=ye({opType:am.IS_NAN,dtype:"bool"}),SZ=et({opType:af.LESS,dtype:"bool",cpuKernelImpl:wQ}),SY=et({opType:af.LESS_EQUAL,dtype:"bool",cpuKernelImpl:wJ}),SJ=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`
      ${G("index")} {
        if (index < uniforms.size) {
          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);
        }
      }
    `}},SQ=ye({opType:am.LOG,cpuKernelImpl:w1}),S1=ye({opType:am.LOG1P}),S2=et({opType:af.LOGICAL_AND,dtype:"bool"}),S3=ye({opType:am.LOGICAL_NOT}),S7=et({opType:af.LOGICAL_OR}),S4=`
  var powValue = 0.0;
  let basis = uniforms.bias + uniforms.alpha * sum;
  if (uniforms.beta == 0.5) {
    powValue = inverseSqrt(basis);
  } else if (uniforms.beta == 1.0) {
    powValue = 1.0 / basis;
  } else {
    powValue = exp(log(basis) * (-uniforms.beta));
  }
`,S6=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`
    ${G("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];
        let d = coords[3];

        let x = getX(b, r, c, d);
        var sum = 0.0;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let idx = d + i;
          if (idx >= 0 && idx < uniforms.xShape[3]) {
            let z = getX(b, r, c, idx);
            sum = sum + z * z;
          }
        }
        ${S4}

        setOutputAtIndex(index, x * powValue);
      }
    }
  `}},S8=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,oc.assert(t<=this.maxAllowRadius,()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${t}`),this.outputShape=e,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=H(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`
    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;
    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};
    const maxAllowRadius = ${this.maxAllowRadius};

    ${G()} {
      let localDepth = i32(localId.x);
      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;
      let xDepth = workgroupDepth + localDepth - maxAllowRadius;
      let b = i32(globalId.z) / uniforms.xShape[1];
      let r = i32(globalId.z) - b * uniforms.xShape[1];
      let c = i32(globalId.y);
      let d = workgroupDepth + localDepth;

      var x = 0.0;
      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {
        x = getX(b, r, c, xDepth);
      }
      lrnSub[localDepth] = x;
      workgroupBarrier();

      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {
        var sum = 0.0;
        let index = localDepth + maxAllowRadius;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let z = lrnSub[index + i];
          sum = sum + z * z;
        }
        ${S4}

        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);
      }
    } `}},S9=class{constructor(e){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return`
    ${G("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];

        let MIN_DEPTH_BEGIN = 0;
        let MAX_DEPTH_END = uniforms.outShape[3];
        var result = 0.0;
        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {
          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);
          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);

          var norm = 0.0;
          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            } else {
              break;
            }
          }

          norm = uniforms.alpha * norm + uniforms.bias;

          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              var dyi = -2.0 * uniforms.alpha * uniforms.beta
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * uniforms.beta);
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            } else {
              break;
            }
          }
        }

        setOutputAtIndex(index, result);
      }
    }
  `}},Ne=et({opType:af.MAX,cpuKernelImpl:w0}),Na=class{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return`
      ${G("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);
            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            let curPosValue = wR * uniforms.filterDims[1] + wC;
            let mask = select(0.0, 1.0, maxPosValue == curPosValue);
            dotProd += dyValue * mask;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},Nn=class{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return`
      ${G("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;

        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;
              let mask = select(0.0, 1.0, maxPosValue == curPosValue);
              dotProd += dyValue * mask;
            }
          }
        }

        setOutputAtIndex(index, dotProd);
      }
    }
    `}},Ns=et({opType:af.MIN,cpuKernelImpl:w3}),Nl=class{constructor(e,t,u){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((t,u)=>t[0]+e[u]+t[1]),this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,t.map((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`}),this.offset="reflect"===u?0:1,this.shaderKey=`mirrorPad_${u}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((e,t)=>`uniforms.pad${t}[0]`).join(","),u=this.xShape.map((t,u)=>`uniforms.pad${u}[0] + uniforms.xShape${e>1?`[${u}]`:""}`).join(","),y=1===e?"start":"start[i]",w=1===e?"end":"end[i]",T=1===e?"outC":"outC[i]",$=ft(e),M=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${G("index")} {
        if (index < uniforms.size) {
          let start = ${$}(${t});
          let end = ${$}(${u});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${T} < ${y}) {
              ${T} = ${y} * 2 - ${T} - ${this.offset};
            } else if(${T} >= ${w}) {
              ${T} = (${w} - 1) * 2 - ${T} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${M}));
        }
      }
    `}},Nh=et({opType:af.MOD}),Ng=class{constructor(e,t){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return`
    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {
      let HASHSCALE1 = 443.8975;
      let p = resultUV * seed;
      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);
      p3 = p3 + dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${G("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords[0];

        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),
            f32(coords[0]) / f32(uniforms.outShape[0]));
        let r = random(uniforms.seed, resUV);
        var cdf = 0.0;
        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {
          cdf = cdf + getProbs(batch, i);

          if (r < cdf) {
            setOutputAtIndexI32(index, i);
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);
      }
    }
  `}},NA=class{constructor(e){this.variableNames=["logits"],this.outputShape=e,this.dispatchLayout=X(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return`
    var<workgroup> buf : array<f32, ${this.workgroupSize[0]}>;
    var<workgroup> rowMaxShared : f32;
    var<workgroup> rowSumShared : f32;
    const blockSize = ${this.workgroupSize[0]};
    ${G("index")} {
      let row = index / blockSize;
      let tid = i32(localId.x);
      let cols = uniforms.outShape[1];

      var threadMax = -3.402823e+38f;
      for (var col = tid; col < cols; col += blockSize) {
        let value = getLogits(row, col);
        threadMax = max(threadMax, value);
      }
      if (tid < cols) {
        buf[tid] = threadMax;
      }
      workgroupBarrier();

      var reduceSize = min(cols, blockSize);
      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
        reduceSize = currSize + (reduceSize & 1);
        if (tid < currSize) {
          buf[tid] = max(buf[tid], buf[tid + reduceSize]);
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowMaxShared = buf[0];
      }
      workgroupBarrier();

      var threadSum = 0.0;
      for (var col = tid; col < cols; col += blockSize) {
        let subExp = exp(getLogits(row, col) - rowMaxShared);
        threadSum += subExp;
      }
      buf[tid] = threadSum;
      workgroupBarrier();

      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {
        if (tid < currSize) {
          buf[tid] = buf[tid] + buf[tid + currSize];
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowSumShared = buf[0];
      }
      workgroupBarrier();

      for (var col = tid; col < cols; col += blockSize) {
        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;
        setOutputAtCoords(row, col, value);
      }
  }
    `}};function l0(e){let{inputs:t,backend:u,attrs:y}=e,{logits:w}=t,{dim:T}=y,$=pe({inputs:{x:w},backend:u,attrs:{shape:[oc.sizeFromShape(w.shape)/w.shape[T],w.shape[T]]}}),M=new NA($.shape),O=u.runWebGPUProgram(M,[$],w.dtype),P=pe({inputs:{x:O},backend:u,attrs:{shape:w.shape}});return u.disposeData($.dataId),u.disposeData(O.dataId),P}var Nx=class{constructor(e,t){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`
      ${G("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,
                                      f32(i32(round(getX(coords.x))) == coords.y)));
        }
      }
    `}};function bm(e){let{inputs:t,backend:u}=e,{x:y}=t;if("complex64"!==y.dtype)return vt({attrs:{shape:y.shape,dtype:y.dtype,value:"string"===y.dtype?"":0},backend:u});{let e=vi({inputs:{input:y},backend:u}),t=bm({inputs:{x:e},backend:u}),w=Rp({inputs:{input:y},backend:u}),T=bm({inputs:{x:w},backend:u}),$=xo({inputs:{real:t,imag:T},backend:u});return u.disposeData(e.dataId),u.disposeData(t.dataId),u.disposeData(w.dataId),u.disposeData(T.dataId),$}}function m0(e,t=!1){let u=e.length,y=ft(u),w=e.map((e,t)=>`uniforms.pad${t}[0]`).join(","),T=e.map((e,t)=>`uniforms.pad${t}[0] + uniforms.xShape${u>1?`[${t}]`:""}`).join(","),$=u>1?`${y}(${w})`:`${w}`,M=u>1?`${y}(${T})`:`${T}`,O=u>1?"any(paddedCoords < start)":"paddedCoords < start",P=u>1?"any(paddedCoords >= end)":"paddedCoords >= end",z=u>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,u):"coords";return`
        let start = ${$};
        let end = ${M};
        if (${O} || ${P}) {
          setOutputAtIndex(index, ${t?0:"uniforms.constantValue"});
        } else {
          let coords = paddedCoords - start;
          setOutputAtIndex(index, getX(${z}));
        }
  `}var Nb=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((t,u)=>t[0]+e[u]+t[1]),this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),t.map((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){return`
      ${G("index")} {
        if (index < uniforms.size) {
          let paddedCoords = getCoordsFromIndex(index);
          ${m0(this.xShape)}
        }
      }
    `}},Nv=et({opType:af.POW}),Nw=et({opType:af.DIV}),NS=ye({opType:am.RECIPROCAL}),NN=ye({opType:am.RELU}),NC=ye({opType:am.RELU6}),NE=class{constructor(e,t,u){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,u,e[3]],this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${G("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}},N$=class{constructor(e,t){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,
       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeBilinearBackprop_${t}`}getUserCode(){return`
      ${G("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let dxR = f32(dyR) * uniforms.heightScale;
              let topDxRIndex = i32(floor(dxR));
              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));
              let dxRLerp = dxR - f32(topDxRIndex);
              let inverseDxRLerp = 1.0 - dxRLerp;

              let dxC = f32(dyC) * uniforms.widthScale;
              let leftDxCIndex = i32(floor(dxC));
              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));
              let dxCLerp = dxC - f32(leftDxCIndex);
              let inverseDxCLerp = 1.0 - dxCLerp;

              if (r == topDxRIndex && c == leftDxCIndex) {
                // topLeft
                accumulator +=
                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
              }

              if (r == topDxRIndex && c == rightDxCIndex) {
                // topRight
                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
              }

              if (r == bottomDxRIndex && c == leftDxCIndex) {
                // bottomLeft
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
              }

              if (r == bottomDxRIndex && c == rightDxCIndex) {
                // bottomRight
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}},NM=class{constructor(e,t,u,y){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,u,e[3]],this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=y,this.shaderKey=`resizeNearest_${y}`}getUserCode(){let e;return e=this.halfPixelCenters?"max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":"vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${G("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}},NF=class{constructor(e,t){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,
       winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeNearestNeigborBackprop_${t}`}getUserCode(){return`
      ${G("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *
                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));

              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *
                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));

              let sourceNearestRow =
                  i32(min(f32(uniforms.outShape[1] - 1),
                  ${this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)"}));

              let sourceNearestCol =
                  i32(min(f32(uniforms.outShape[2] - 1),
                  ${this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)"}));

              if (r == sourceNearestRow && c == sourceNearestCol) {
                accumulator += getDy(b, dyR, dyC, d);
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}},NO=class{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`
      
      // Using uniform variables as judging conditions, so the function has
      // coherent execution within all threads.
      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {
        var reverseCoords = coords;
        if (uniforms.axis[0] == 1) {
          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;
        }
        if (uniforms.axis[1] == 1) {
          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;
        }
        if (uniforms.axis[2] == 1) {
          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;
        }
        if (uniforms.axis[3] == 1) {
          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;
        }

        return reverseCoords;
      }
    
      ${G("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let reverseCoords = getReverseCoords(coords);
          setOutputAtIndex(index, getX(reverseCoords[0],
              reverseCoords[1], reverseCoords[2], reverseCoords[3]));
        }
      }
    `}},NP=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,"number"==typeof t?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${G("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}},ND=ye({opType:am.ROUND}),Nz=ye({opType:am.RSQRT,cpuKernelImpl:Ii}),NL=class{constructor(e,t,u,y,w,T,$,M=!0){this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=T,this.type=$,this.sumDupeIndices=M,this.dispatchLayout=X(e),this.dispatch=H(this.dispatchLayout,e,this.workgroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${u}_${y}_${this.sliceDimGreaterThanOne}_${$}_${M}_${w.length}`;let O=ft(w.length);this.uniforms=`sliceDim : i32, strides: ${O}, updatesSize: i32,`,this.updatesRank=y,this.indicesRank=u}getUserCode(){let e="";1===this.indicesRank?e="coords[0]":2===this.indicesRank&&(e="coords[0], j");let t=`getIndices(${e})`,u=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",y="",w="";1===this.dispatchLayout.x.length?(y="flattenedIndex",w=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):2===this.dispatchLayout.x.length&&(y="vec2<i32>(flattenedIndex, coords[1])",w=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);let T=`getUpdates(${Array.from({length:this.updatesRank},(e,t)=>`coords[${t}]`).join(", ")})`;return`
    ${w}
      ${G("index")} {
        if (index < uniforms.updatesSize) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${u};
          }
          let updateValue =
              ${Su(this.type)}(${T});
          let flatIndex = getOutputIndexFromCoords(${y});

          ${this.sumDupeIndices?Qr("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}
        }
      }`}},NW=class{constructor(e,t){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=t,this.shaderKey=`search_sorted_${t}`}getUserCode(){return`
      fn findBound(batch: i32, value: f32) -> i32 {
        var left = i32(0);
        var right = uniforms.numInputs;
        while (left < right) {
          var mid = (left + right) / 2;
          if (getSortedSequence(batch, mid) ${"left"===this.side?"<":"<="} value) {
            left = mid + 1;
          } else {
            right = mid;
          }
        }
        return right;
      }

      ${G("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let value = getValuesByOutputIndex(index);
          setOutputAtIndexI32(index, findBound(coords[0], value));
        }
      }
    `}},NB=class{constructor(e,t,u){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=e,this.rank=u,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(1===this.rank)t="resRC",e="resRC";else{let u=["resRC.x","resRC.y","resRC.z","resRC.w"],y=[],w=[];for(let e=0;e<this.outputShape.length;e++)w.push(`${u[e]}`),e<this.cRank&&y.push(`${u[e]}`);e=y.join(),t=w.join()}return`
      ${G("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}},NV=ye({opType:am.SELU}),NU=ye({opType:am.SIGMOID}),NG=ye({opType:am.SIGN}),NH=ye({opType:am.SIN}),Nj=ye({opType:am.SINH}),Nq=ye({opType:am.SOFTPLUS}),NX=class{constructor(e,t,u,y,w,T){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;let $=Array(y.length);for(let e=0;e<$.length;e++)$[e]=y[w[e]];this.outputShape=$,this.newDim=w,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,this.paddedXShape=t,this.uniforms+=`reshapedPaddedXShape : ${ft(y.length)}, paddedXShapeStrides : ${ft(T)}, `,u.map((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`}),this.shaderKey=`spaceToBatchND_${w}`}getUserCode(){let e=ft(this.outputShape.length),t=e0(this.newDim);return`
      ${cm(this.paddedXShape,"PaddedX")}
      ${G("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let switchedIndex = getIndexFromCoords${this.outputShape.length}D(${e}(${t}), uniforms.reshapedPaddedXShape);
          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);
          ${m0(this.xShape,!0)}
        }
      }
    `}},NK=class{constructor(e,t,u){this.variableNames=["input","indices","segmentIds"],this.outputShape=[],this.uniforms="segmentSize : i32, sparseSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e,this.type=u,this.dispatchLayout=X([t]),this.dispatch=H(this.dispatchLayout,[t],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return`
    ${G("index")} {
      if (index < uniforms.sparseSize) {
        let indexInSegmentIds = index / uniforms.segmentSize;
        let indexInSegment = index % uniforms.segmentSize;
        let indexInInput = indices[indexInSegmentIds];
        let segmentId = segmentIds[indexInSegmentIds];

        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];
        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;
        ${Qr("&result[outIndex]","value",this.type)}
      }
    }
  `}},NZ=class{constructor(e,t){this.variableNames=["segmentIds"],this.outputShape=[],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=[e],this.dispatchLayout=X(t),this.dispatch=H(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return`
    ${G("index")} {
      if (index < uniforms.segmentIdsShape) {
        let segmentId = segmentIds[index];
        ${Qr("&result[segmentId]","1","int32")}
      }
    }
  `}},NY=class{constructor(e,t){this.variableNames=["segmentSum","sameSegmentIdCount"],this.outputShape=[],this.uniforms="segmentSize : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.type=t,this.dispatchLayout=X(e),this.dispatch=H(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return`
    ${G("index")} {
      if (index < uniforms.size) {
        let segmentId = index / uniforms.segmentSize;
        let count = sameSegmentIdCount[segmentId];
        if (count != 0) {
          ${"float32"===this.type?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);"}
        }
      }
    }
  `}};function dy(e,t,u,y=!1,w){let T=oc.sizeFromShape(e.shape)/e.shape[0],$=e.dtype,M=oc.sizeFromShape(t.shape),O=w.readSync(u.dataId),P=M>0?O[M-1]+1:0,z,L=e.shape.slice();L[0]=P;let W=M*T,B=vt({backend:w,attrs:{shape:L,value:0,dtype:$}});z=new NK(L,W,$);let j=[{type:"int32",data:[T]},{type:"int32",data:[W]}],q=w.runWebGPUProgram(z,[e,t,u],$,j,B);if(y)return q;let Z=vt({backend:w,attrs:{shape:[P],value:0,dtype:"int32"}});z=new NZ(P,u.shape);let Y=w.runWebGPUProgram(z,[u],"int32",null,Z),J=vt({backend:w,attrs:{shape:L,value:0,dtype:$}});z=new NY(L,$),j=[{type:"int32",data:[T]}];let ee=w.runWebGPUProgram(z,[q,Y],$,j,J);return w.disposeData(q.dataId),w.disposeData(Y.dataId),ee}var NJ=class{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;let u=Array(e.length);for(let y=0;y<u.length;y++)u[y]=e[y]*t[y];this.outputShape=u,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=function(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`(resRC % ${t}aShape)`;let u=["resRC.x","resRC.y","resRC.z","resRC.w"],y=[];for(let w=0;w<e;w++)y.push(`(${u[w]} % ${t}aShape[${w}])`);return y.join()}(this.rank,"uniforms.");return`
      ${G("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function Cm(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{reps:T}=y;if(u.shouldExecuteOnCPU([w])||"string"===w.dtype||w.shape.length>=5){let e=u.readSync(w.dataId),t="string"===w.dtype?e.map(e=>oc.decodeString(e)):e,y=If(me(w.shape,w.dtype,t),T);return u.makeTensorInfo(y.shape,y.dtype,y.values)}let $=new NJ(w.shape,T);return u.runWebGPUProgram($,[w],w.dtype)}var NQ=ye({opType:am.SQRT}),N1=et({opType:af.SQUARED_DIFFERENCE}),N2=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);let t=ft(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(1===e)t="coords * uniforms.strides + uniforms.begin";else{let e=0;t=this.outputShape.map((t,u)=>(e++,1===this.outputShape.length?`coords * uniforms.strides[${u}] + uniforms.begin[${u}]`:`coords[${e-1}] * uniforms.strides[${u}] + uniforms.begin[${u}]`)).join(",")}return`
       ${G("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}},N3=et({opType:af.SUB,cpuKernelImpl:Ih,supportsComplex:!0}),N7=ye({opType:am.TAN}),N4=ye({opType:am.TANH}),N6=class{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${G("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},N8=class{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${G("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function rl(e,t){null!==t&&e.disposeData(t.dataId)}function UU(e){let t=1;for(;t<e;)t*=2;return t}var N9=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=X(this.outputShape),this.dispatch=H(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${G("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}},Ce=class{constructor(e,t,u){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t,this.dispatchLayout=X(e),this.dispatch=H(this.dispatchLayout,e,this.workgroupSize),"float32"!==u&&"int32"!==u)throw Error(`UnsortedSegmentSum only supports float32 and int32
              types, does not support ${u} type.`);this.type=u,this.shaderKey="unsortedSegmentSum"}getUserCode(){return`
    ${G("index")} {
      if (index < uniforms.xSize) {
        let coords = getXCoordsFromIndex(index);
        let b = coords[0];
        let inCol = coords[1];

        let segmentId = i32(getSegmentIds(inCol));
        if (segmentId >= 0) {
          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;
          let value = getX(b, inCol);

          ${Qr("&result[flatIndex]","value",this.type)}
        }
      }
    }
  `}};for(let e of[{kernelName:os,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{a:w,b:T,bias:$,preluActivationWeights:M}=t,{transposeA:O,transposeB:P,activation:z,leakyreluAlpha:L}=y;return $p({a:w,b:T,transposeA:O,transposeB:P,backend:u,bias:$,preluActivationWeights:M,leakyreluAlpha:L,activation:z})}},{kernelName:nH,backendName:"webgpu",kernelFunc:Ix},{kernelName:nj,backendName:"webgpu",kernelFunc:Ib},{kernelName:nq,backendName:"webgpu",kernelFunc:IS},{kernelName:nX,backendName:"webgpu",kernelFunc:IN},{kernelName:nK,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u}=e;if(1===t.length)return At({inputs:{x:t[0]},backend:u});let y=t.map(e=>e.dtype).reduce((e,t)=>dt(e,t)),w=t.map(e=>e.shape),T=new IC(w);return u.runWebGPUProgram(T,t,y)}},{kernelName:nZ,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{keepDims:T,axis:$}=y;return eo(w,$,T,"all",u)}},{kernelName:nY,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{keepDims:T,axis:$}=y;return eo(w,$,T,"any",u)}},{kernelName:nJ,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{axis:T}=y,$=oc.parseAxisParam(T,w.shape),M=hh.getAxesPermutation($,w.shape.length),O=w,P=[];null!=M&&(P.push(O=xr({inputs:{x:w},backend:u,attrs:{perm:M}})),$=hh.getInnerMostAxes($.length,O.shape.length)),hh.assertAxesAreInnerMostDims("argMax",[$[0]],O.shape.length);let z=new I_(O.shape,$[0],"max"),L=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],W=u.runWebGPUProgram(z,[O],"int32",L);return P.forEach(e=>u.disposeData(e.dataId)),W}},{kernelName:nQ,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{axis:T}=y,$=oc.parseAxisParam(T,w.shape),M=hh.getAxesPermutation($,w.shape.length),O=w,P=[];null!=M&&(P.push(O=xr({inputs:{x:w},backend:u,attrs:{perm:M}})),$=hh.getInnerMostAxes($.length,O.shape.length)),hh.assertAxesAreInnerMostDims("argMin",[$[0]],O.shape.length);let z=new I_(O.shape,$[0],"min"),L=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],W=u.runWebGPUProgram(z,[O],"int32",L);return P.forEach(e=>u.disposeData(e.dataId)),W}},{kernelName:n1,backendName:"webgpu",kernelFunc:IM},{kernelName:n2,backendName:"webgpu",kernelFunc:IF},{kernelName:n0,backendName:"webgpu",kernelFunc:IO},{kernelName:n3,backendName:"webgpu",kernelFunc:IP},{kernelName:n5,backendName:"webgpu",kernelFunc:ID},{kernelName:n7,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{filterSize:T,strides:$,pad:M,dimRoundingMode:O}=y,P=hh.computePool2DInfo(w.shape,T,$,1,M,O);return ax(w,P,"avg",u)}},{kernelName:n6,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{filterSize:T,strides:$,pad:M,dataFormat:O,dimRoundingMode:P}=y,z=hh.computePool3DInfo(w.shape,T,$,[1,1,1],M,P,O),L=new IW(z,"avg"),W=[{type:"int32",data:[z.strideDepth,z.strideHeight,z.strideWidth]},{type:"int32",data:[z.padInfo.front,z.padInfo.top,z.padInfo.left]},{type:"int32",data:[z.inDepth,z.inHeight,z.inWidth]},{type:"int32",data:[z.effectiveFilterDepth,z.effectiveFilterHeight,z.effectiveFilterWidth]}];return u.runWebGPUProgram(L,[w],w.dtype,W)}},{kernelName:n8,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{dy:w,input:T}=t,{filterSize:$,strides:M,pad:O,dimRoundingMode:P}=y,z=hh.computePool3DInfo(T.shape,$,M,1,O,P),L=new IV(z),W=1/(z.filterDepth*z.filterHeight*z.filterWidth),B=[{type:"int32",data:[z.strideDepth,z.strideHeight,z.strideWidth]},{type:"int32",data:[z.effectiveFilterDepth-1-z.padInfo.front,z.effectiveFilterHeight-1-z.padInfo.top,z.effectiveFilterWidth-1-z.padInfo.left]},{type:"int32",data:[z.effectiveFilterDepth,z.effectiveFilterHeight,z.effectiveFilterWidth]},{type:"int32",data:[z.outDepth]},{type:"int32",data:[z.outHeight]},{type:"int32",data:[z.outWidth]},{type:"float32",data:[W]}];return u.runWebGPUProgram(L,[w],T.dtype,B)}},{kernelName:n4,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{dy:w,input:T}=t;fm([w,T],"avgPoolGrad");let{filterSize:$,strides:M,pad:O}=y,P=hh.computePool2DInfo(T.shape,$,M,1,O),z=new IB(P),L=1/(P.filterHeight*P.filterWidth),W=[{type:"int32",data:[P.strideHeight,P.strideWidth]},{type:"int32",data:[P.effectiveFilterHeight-1-P.padInfo.top,P.effectiveFilterWidth-1-P.padInfo.left]},{type:"int32",data:[P.dilationHeight,P.dilationWidth]},{type:"int32",data:[P.effectiveFilterHeight,P.effectiveFilterWidth]},{type:"int32",data:[P.outHeight]},{type:"int32",data:[P.outWidth]},{type:"float32",data:[L]}];return u.runWebGPUProgram(z,[w],T.dtype,W)}},{kernelName:n9,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{a:w,b:T}=t,{transposeA:$,transposeB:M}=y;return $p({a:w,b:T,transposeA:$,transposeB:M,backend:u})}},{kernelName:re,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{blockShape:T,crops:$}=y;oc.assert(w.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let M=T.reduce((e,t)=>e*t),O=hh.getReshaped(w.shape,T,M),P=hh.getPermuted(O.length,T.length),z=hh.getReshapedPermuted(w.shape,T,M),L=hh.getSliceBeginCoords($,T.length),W=hh.getSliceSize(z,$,T.length),B=[],j=pe({inputs:{x:w},backend:u,attrs:{shape:O}}),q=xr({inputs:{x:j},backend:u,attrs:{perm:P}}),Z=pe({inputs:{x:q},backend:u,attrs:{shape:z}}),Y=Hs({inputs:{x:Z},backend:u,attrs:{begin:L,size:W}});return B.push(j),B.push(q),B.push(Z),B.forEach(e=>u.disposeData(e.dataId)),Y}},{kernelName:ra,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,weights:T}=t,{size:$}=y,M=oc.sizeFromShape(w.shape),O=oc.sizeFromShape(T.shape)>0,P=[$],z=T.dtype,L=vt({backend:u,attrs:{shape:P,value:0,dtype:z}}),W=new Iq([M],O),B=[{type:"int32",data:[$]}],j=O?[w,T]:[w];return u.runWebGPUProgram(W,j,z,B,L)}},{kernelName:ri,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u}=e,{s0:y,s1:w}=t;if(u.shouldExecuteOnCPU([y,w])){let e=u.tensorMap.get(y.dataId),t=u.tensorMap.get(w.dataId),T=e.values,$=t.values,M=hh.assertAndGetBroadcastShape(Array.from(T),Array.from($));return u.makeTensorInfo([M.length],"int32",Int32Array.from(M))}let T=oc.sizeFromShape(y.shape),$=oc.sizeFromShape(w.shape),M=Math.max(T,$),O=new IK(M),P=[{type:"int32",data:[T]},{type:"int32",data:[$]}];return u.runWebGPUProgram(O,[y,w],"int32",P)}},{kernelName:rs,backendName:"webgpu",kernelFunc:function s0(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{dtype:T}=y;if("complex64"===T){if("complex64"===w.dtype)return At({inputs:{x:w},backend:u});let e=Gr(w.shape),t=s0({inputs:{x:w},backend:u,attrs:{dtype:"float32"}}),y=xo({inputs:{real:t,imag:e},backend:u});return e.dispose(),u.disposeData(t.dataId),y}if("complex64"===w.dtype){let e=vi({inputs:{input:w},backend:u}),t=s0({inputs:{x:e},backend:u,attrs:{dtype:T}});return u.disposeData(e.dataId),t}if(!oc.hasEncodingLoss(w.dtype,T)){let e=At({inputs:{x:w},backend:u});return{dataId:e.dataId,shape:e.shape,dtype:T}}if(u.shouldExecuteOnCPU([w])){let[e,t,y]=wL(u.tensorMap.get(w.dataId).values,w.shape,w.dtype,T);return u.makeTensorInfo(e,t,y)}if("int32"===T){let e,t;return e=new wD(w.shape,am.TO_INT),{dataId:(t=u.runWebGPUProgram(e,[w],"int32")).dataId,shape:t.shape,dtype:t.dtype}}if("bool"===T){let e=u.makeTensorInfo([],"bool",oc.getTypedArrayFromDType("bool",1)),t=IZ({inputs:{a:w,b:e},backend:u});return u.disposeData(e.dataId),t}throw Error(`Error in Cast: failed to cast ${w.dtype} to ${T}`)}},{kernelName:ro,backendName:"webgpu",kernelFunc:IY},{kernelName:ru,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{clipValueMin:T,clipValueMax:$}=y,M,O=[{type:"float32",data:[T]},{type:"float32",data:[$]}];return M=oc.sizeFromShape(w.shape)%4==0?new IJ(w.shape):new IQ(w.shape),u.runWebGPUProgram(M,[w],w.dtype,O)}},{kernelName:rp,backendName:"webgpu",kernelFunc:xo},{kernelName:rc,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u}=e,{x:y}=t,w=u.tensorMap.get(y.dataId),T=new I1(y.shape),$=[vV(y,w.complexTensorInfos.real),vV(y,w.complexTensorInfos.imag)];return u.runWebGPUProgram(T,$,$[0].dtype)}},{kernelName:rh,backendName:"webgpu",kernelFunc:a0},{kernelName:rf,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,attrs:u,backend:y}=e,{x:w,filter:T}=t,{strides:$,pad:M,dataFormat:O,dilations:P,dimRoundingMode:z}=u,L=hh.convertConv2DDataFormat(O),W=hh.computeConv2DInfo(w.shape,T.shape,$,P,M,z,!1,L);return bx({x:w,filter:T,convInfo:W,backend:y})}},{kernelName:rm,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,dy:T}=t,{strides:$,pad:M,dataFormat:O,dimRoundingMode:P,filterShape:z}=y,L=hh.convertConv2DDataFormat(O),W=hh.computeConv2DInfo(w.shape,z,$,1,M,P,!1,L),B=new I8(W),j=[{type:"int32",data:[W.padInfo.top,W.padInfo.left]},{type:"int32",data:[W.strideHeight,W.strideWidth]},{type:"int32",data:[W.batchSize]},{type:"int32",data:[W.outHeight]},{type:"int32",data:[W.outWidth]},{type:"int32",data:[W.inHeight]},{type:"int32",data:[W.inWidth]}];return u.runWebGPUProgram(B,[w,T],w.dtype,j)}},{kernelName:rg,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{dy:w,filter:T}=t,{inputShape:$,strides:M,pad:O,dataFormat:P,dimRoundingMode:z}=y,L=hh.convertConv2DDataFormat(P),W=hh.computeConv2DInfo($,T.shape,M,1,O,z,!1,L),B=[{type:"int32",data:[W.filterHeight,W.filterWidth]},{type:"int32",data:[W.filterHeight-1-W.padInfo.top,W.filterWidth-1-W.padInfo.left]},{type:"int32",data:[W.strideHeight,W.strideWidth]},{type:"int32",data:[W.batchSize,W.outHeight,W.outWidth,W.outChannels]}],j;if(nG.getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||"channelsLast"!==W.dataFormat)j=new I6(W);else{j=new Sa(W);let e=W.inHeight*W.inWidth,t=W.inChannels,u=W.filterHeight*W.filterWidth*W.outChannels;B.push({type:"uint32",data:[e]},{type:"uint32",data:[t]},{type:"uint32",data:[u]})}return u.runWebGPUProgram(j,[w,T],"float32",B)}},{kernelName:ry,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,filter:T}=t,{strides:$,pad:M,dilations:O}=y,P=hh.computeConv3DInfo(w.shape,T.shape,$,O,M),z=[P.padInfo.front,P.padInfo.top,P.padInfo.left],L=[{type:"int32",data:[P.filterDepth,P.filterHeight,P.filterWidth]},{type:"int32",data:[...z]},{type:"int32",data:[P.strideDepth,P.strideHeight,P.strideWidth]},{type:"int32",data:[P.dilationDepth,P.dilationHeight,P.dilationWidth]}],W=new Sn(P),B=dt(w.dtype,T.dtype);return u.runWebGPUProgram(W,[w,T],B,L)}},{kernelName:rA,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,dy:T}=t,{strides:$,pad:M,filterShape:O}=y,P=hh.computeConv3DInfo(w.shape,O,$,1,M),z=new I9(P),L=[{type:"int32",data:[P.padInfo.front,P.padInfo.top,P.padInfo.left]},{type:"int32",data:[P.strideDepth,P.strideHeight,P.strideWidth]},{type:"int32",data:[P.batchSize]},{type:"int32",data:[P.outDepth]},{type:"int32",data:[P.outHeight]},{type:"int32",data:[P.outWidth]},{type:"int32",data:[P.inDepth]},{type:"int32",data:[P.inHeight]},{type:"int32",data:[P.inWidth]}];return u.runWebGPUProgram(z,[w,T],T.dtype,L)}},{kernelName:rx,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{dy:w,filter:T}=t,{strides:$,pad:M,inputShape:O}=y,P=hh.computeConv3DInfo(O,T.shape,$,1,M),z=new Se(P),L=[{type:"int32",data:[P.filterDepth,P.filterHeight,P.filterWidth]},{type:"int32",data:[P.filterDepth-1-P.padInfo.front,P.filterHeight-1-P.padInfo.top,P.filterWidth-1-P.padInfo.left]},{type:"int32",data:[P.strideDepth,P.strideHeight,P.strideWidth]},{type:"int32",data:[P.outDepth]},{type:"int32",data:[P.outHeight]},{type:"int32",data:[P.outWidth]},{type:"int32",data:[P.outChannels]}];return u.runWebGPUProgram(z,[w,T],w.dtype,L)}},{kernelName:rb,backendName:"webgpu",kernelFunc:Sr},{kernelName:rk,backendName:"webgpu",kernelFunc:Ss},{kernelName:rC,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:u,attrs:y}=e,{image:w,boxes:T,boxInd:$}=t,{cropSize:M,method:O,extrapolationValue:P}=y,z=new So(w.shape[3],T.shape,M,O),L=[{type:"float32",data:[P]}];return u.runWebGPUProgram(z,[w,T,$],"float32",L)}},{kernelName:rI,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{axis:T,exclusive:$,reverse:M}=y;return Tx(ag.Prod,w,u,T,$,M)}},{kernelName:rN,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{axis:T,exclusive:$,reverse:M}=y;return Tx(ag.Sum,w,u,T,$,M)}},{kernelName:rE,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,weights:T}=t,{size:$,binaryOutput:M}=y,O=1===w.shape.length,P=oc.sizeFromShape(T.shape)>0,z=T.dtype,L=O?[w.shape[0]]:[w.shape[0],w.shape[1]],W=vt({backend:u,attrs:{shape:O?[$]:[w.shape[0],$],value:0,dtype:z}}),B=new Iq(L,P,M),j=[{type:"int32",data:[$]}],q=P?[w,T]:[w];return u.runWebGPUProgram(B,q,z,j,W)}},{kernelName:rR,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{blockSize:T,dataFormat:$}=y,M=w.shape[0],O="NHWC"===$?w.shape[1]:w.shape[2],P="NHWC"===$?w.shape[2]:w.shape[3],z="NHWC"===$?w.shape[3]:w.shape[1],L=O*T,W=P*T,B=z/(T*T),j="NHWC"===$?[M,L,W,B]:[M,B,L,W],q=[{type:"int32",data:[T]}],Z=new Sh(j,$);return u.runWebGPUProgram(Z,[w],w.dtype,q)}},{kernelName:r_,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,dy:T}=t,{strides:$,dilations:M,pad:O,dimRoundingMode:P,filterShape:z}=y,L=hh.computeConv2DInfo(w.shape,z,$,M,O,P,!0),W=new Sx(L),B=[{type:"int32",data:[L.strideHeight,L.strideWidth]},{type:"int32",data:[L.padInfo.top,L.padInfo.left]},{type:"int32",data:[L.filterHeight,L.filterWidth]},{type:"int32",data:[L.outHeight]},{type:"int32",data:[L.outWidth]},{type:"int32",data:[L.inHeight]},{type:"int32",data:[L.inWidth]},{type:"int32",data:[L.batchSize]},{type:"int32",data:[L.outChannels/L.inChannels]}];return u.runWebGPUProgram(W,[w,T],"float32",B)}},{kernelName:rM,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{dy:w,filter:T}=t,{strides:$,dilations:M,pad:O,dimRoundingMode:P,inputShape:z}=y,L=hh.computeConv2DInfo(z,T.shape,$,M,O,P,!0),W=new Sb(L),B=[{type:"int32",data:[L.strideHeight,L.strideWidth]},{type:"int32",data:[L.filterHeight-1-L.padInfo.top,L.filterWidth-1-L.padInfo.left]},{type:"int32",data:[L.filterHeight,L.filterWidth]},{type:"int32",data:[L.outHeight]},{type:"int32",data:[L.outWidth]},{type:"int32",data:[L.outChannels/L.inChannels]}];return u.runWebGPUProgram(W,[w,T],w.dtype,B)}},{kernelName:r$,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,filter:T}=t,{strides:$,pad:M,dataFormat:O,dilations:P,dimRoundingMode:z}=y,L=hh.convertConv2DDataFormat(O),W=P;null==W&&(W=[1,1]);let B=hh.computeConv2DInfo(w.shape,T.shape,$,W,M,z,!0,L),j=[{type:"int32",data:[B.padInfo.top,B.padInfo.left]},{type:"int32",data:[B.inHeight,B.inWidth]}],q="channelsLast"===B.dataFormat,Z;return!q&&B.inHeight>16&&B.inWidth>16&&1===B.strideHeight&&1===B.strideWidth&&1===B.dilationWidth&&1===B.dilationHeight&&B.inChannels===B.outChannels?Z=new Sg(B.outShape,B.filterHeight,B.filterWidth):q&&B.outHeight>4&&B.outWidth>4&&B.strideWidth<=2&&B.inChannels===B.outChannels&&1===B.dilationHeight&&1===B.dilationWidth&&B.inChannels%4==0?(Z=new Sy(B),j.push({type:"int32",data:[Z.virtualWidth]})):(Z=new SA(B),j.push({type:"int32",data:[B.filterHeight]},{type:"int32",data:[B.filterWidth]},{type:"int32",data:[B.strideHeight,B.strideWidth]},{type:"int32",data:[B.dilationHeight,B.dilationWidth]})),u.runWebGPUProgram(Z,[w,T],w.dtype,j)}},{kernelName:rF,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u}=e,{x:y}=t,w=[...y.shape,...y.shape],T=oc.sizeFromShape(y.shape),$=pe({inputs:{x:y},backend:u,attrs:{shape:[T]}}),M=new Sv(T),O=u.runWebGPUProgram(M,[$],$.dtype),P=pe({inputs:{x:O},backend:u,attrs:{shape:w}});return u.disposeData($.dataId),u.disposeData(O.dataId),P}},{kernelName:rO,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,filter:T}=t,{strides:$,pad:M,dilations:O}=y,P=hh.computeDilation2DInfo(w.shape,T.shape,$,M,"NHWC",O),z=[P.padInfo.top,P.padInfo.left],L=[{type:"int32",data:[P.filterHeight,P.filterWidth]},{type:"int32",data:[...z]},{type:"int32",data:[P.strideHeight,P.strideWidth]},{type:"int32",data:[P.dilationHeight,P.dilationWidth]}],W=new SS(P);return u.runWebGPUProgram(W,[w,T],w.dtype,L)}},{kernelName:rD,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,filter:T,dy:$}=t,{strides:M,pad:O,dilations:P}=y,z=hh.computeDilation2DInfo(w.shape,T.shape,M,O,"NHWC",P),L=T.dtype,W=new SC(z,T.shape,L),B=[{type:"int32",data:[z.filterHeight,z.filterWidth]},{type:"int32",data:[z.padInfo.top,z.padInfo.left]},{type:"int32",data:[z.strideHeight,z.strideWidth]},{type:"int32",data:[z.dilationHeight,z.dilationWidth]},{type:"int32",data:[oc.sizeFromShape(z.outShape)]}],j=vt({backend:u,attrs:{shape:T.shape,value:0,dtype:L}});return u.runWebGPUProgram(W,[w,T,$],L,B,j)}},{kernelName:rP,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,filter:T,dy:$}=t,{strides:M,pad:O,dilations:P}=y,z=hh.computeDilation2DInfo(w.shape,T.shape,M,O,"NHWC",P),L=w.dtype,W=new SN(z,L),B=[{type:"int32",data:[z.filterHeight,z.filterWidth]},{type:"int32",data:[z.padInfo.top,z.padInfo.left]},{type:"int32",data:[z.strideHeight,z.strideWidth]},{type:"int32",data:[z.dilationHeight,z.dilationWidth]},{type:"int32",data:[oc.sizeFromShape(z.outShape)]}],j=vt({backend:u,attrs:{shape:z.inShape,value:0,dtype:L}});return u.runWebGPUProgram(W,[w,T,$],L,B,j)}},{kernelName:rL,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{image:w}=t,{canvas:T,options:$}=y,[M,O]=w.shape.slice(0,2),{imageOptions:P}=$||{},z=(null==P?void 0:P.alpha)||1,L=u.device.features.has("bgra8unorm-storage")?"bgra8unorm":"rgba8unorm",W=[M,O],B=new ST(W,w.dtype,L);T.width=O,T.height=M;let j="webgpu",q=T.getContext(j),Z;q||(q=(Z=new OffscreenCanvas(O,M)).getContext(j));let Y=3===w.shape.length?w.shape[2]:1;q.configure({device:u.device,format:L,usage:GPUTextureUsage.STORAGE_BINDING,alphaMode:"premultiplied"});let J="int32",ee=u.makeTensorInfo(W,J),ea=u.tensorMap.get(ee.dataId);ea.resource=q.getCurrentTexture(),ea.external=!0;let en=[{type:"uint32",data:[Y]},{type:"float32",data:[z]}];if(u.runWebGPUProgram(B,[w],J,en,ee),Z){let e=T.getContext("2d");if(!e)throw Error("Please make sure this canvas has only been used for 2d or webgpu context!");e.drawImage(Z,0,0)}return u.disposeData(ee.dataId),w}},{kernelName:rB,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{equation:w}=y,{allDims:T,summedDims:$,idDims:M}=hh.decodeEinsumEquation(w,t.length);hh.checkEinsumDimSizes(T.length,M,t);let{path:O,steps:P}=hh.getEinsumComputePath($,M),z=P.length,L=null,W=T.length,B=[];for(let e=0;e<z;++e){for(let y of P[e]){let{permutationIndices:e,expandDims:w}=hh.getEinsumPermutation(W,M[y]),T;hh.isIdentityPermutation(e)?T=t[y]:(T=xr({inputs:{x:t[y]},backend:u,attrs:{perm:e}}),B.push(T));let $=T.shape.slice();for(let e=0;e<w.length;++e)$.splice(w[e],0,1);oc.arraysEqual(T.shape,$)||(T=pe({inputs:{x:T},backend:u,attrs:{shape:$}}),B.push(T)),null===L?L=T:(L=SE({inputs:{a:T,b:L},backend:u}),B.push(L))}e<z-1&&(O[e]>=0&&(L=u0({inputs:{x:L},backend:u,attrs:{axis:O[e]-(T.length-W),keepDims:!1}}),B.push(L)),W--)}for(let e of B)e!==L&&u.disposeData(e.dataId);return L}},{kernelName:rV,backendName:"webgpu",kernelFunc:SR},{kernelName:rU,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:u}=e,{dy:y,y:w}=t,T=new wP(af.ELU_DER,y.shape,w.shape);return u.runWebGPUProgram(T,[y,w],y.dtype)}},{kernelName:rH,backendName:"webgpu",kernelFunc:S$},{kernelName:rG,backendName:"webgpu",kernelFunc:S_},{kernelName:rj,backendName:"webgpu",kernelFunc:SM},{kernelName:rq,backendName:"webgpu",kernelFunc:Mx},{kernelName:rX,backendName:"webgpu",kernelFunc:SF},{kernelName:rK,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u}=e,{input:y}=t;return Lx(y,!1,u)}},{kernelName:rZ,backendName:"webgpu",kernelFunc:vt},{kernelName:rY,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{image:u}=e,y=new SP(u.shape);return t.runWebGPUProgram(y,[u],u.dtype)}},{kernelName:on,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{pixels:w}=t,{numChannels:T}=y;if(null==w)throw Error("pixels passed to tf.browser.fromPixels() can not be null");let $="undefined"!=typeof HTMLVideoElement&&w instanceof HTMLVideoElement,M="undefined"!=typeof HTMLImageElement&&w instanceof HTMLImageElement,O="undefined"!=typeof HTMLCanvasElement&&w instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&w instanceof OffscreenCanvas,P="undefined"!=typeof ImageBitmap&&w instanceof ImageBitmap,[z,L]=$?[w.videoWidth,w.videoHeight]:[w.width,w.height],W=[L,z,T],B=nG.getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&$,j=$||M;if(P||O||j){let e;if(B)e=u.device.importExternalTexture({source:w});else{if(j){let e=nG.getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==ay||e!==SW)&&(SW=e,ay=document.createElement("canvas").getContext("2d",{willReadFrequently:SW})),ay.canvas.width=z,ay.canvas.height=L,ay.drawImage(w,0,0,z,L),w=ay.canvas}let t=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,y=u.textureManager.acquireTexture(W[1],W[0],"rgba8unorm",t);u.queue.copyExternalImageToTexture({source:w},{texture:y},[W[1],W[0]]),e=y}let t=oc.sizeFromShape(W),y=oc.computeStrides(W),$=new SL(W,T,B),M=[{type:"uint32",data:[t]},{type:"uint32",data:[T]},{type:"uint32",data:[...y]}],O=u.makeTensorInfo([L,z],"int32");u.tensorMap.get(O.dataId).resource=e;let P=u.runWebGPUProgram($,[O],"int32",M);return u.disposeData(O.dataId),P}let q=w.data,Z=q;if(null!=T&&4!==T){Z=new Uint8Array(w.width*w.height*T);let e=q.length,t=0;for(let u=0;u<e;u++)u%4<T&&(Z[t++]=q[u])}let Y=u.makeTensorInfo(W,"int32",new Int32Array(Z));return u.uploadToGPU(Y.dataId),Y}},{kernelName:rJ,backendName:"webgpu",kernelFunc:SD},{kernelName:rQ,backendName:"webgpu",kernelFunc:Sz},{kernelName:r1,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:u})=>{let{x:y,scale:w,offset:T,mean:$,variance:M}=e,{varianceEpsilon:O}=t,P=[y,$,M],z=null;null!=T&&(z=T.shape,P.push(T));let L=null;null!=w&&(L=w.shape,P.push(w));let W=new SB(y.shape,$.shape,M.shape,z,L),B=[{type:"float32",data:[O]}];return u.runWebGPUProgram(W,P,y.dtype,B)}},{kernelName:oo,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,filter:T,bias:$,preluActivationWeights:M}=t,{strides:O,pad:P,dataFormat:z,dilations:L,dimRoundingMode:W,activation:B,leakyreluAlpha:j}=y,q=hh.convertConv2DDataFormat(z),Z=hh.computeConv2DInfo(w.shape,T.shape,O,L,P,W,!1,q);return bx({x:w,filter:T,convInfo:Z,backend:u,bias:$,preluActivationWeights:M,leakyreluAlpha:j,activation:B})}},{kernelName:ol,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,filter:T,bias:$,preluActivationWeights:M}=t,{strides:O,pad:P,dilations:z,dimRoundingMode:L,activation:W,leakyreluAlpha:B}=y,j=z;null==j&&(j=[1,1]),oc.assert(hh.eitherStridesOrDilationsAreOne(O,j),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${O} and dilations '${j}'`);let q=hh.computeConv2DInfo(w.shape,T.shape,O,j,P,L,!0),Z=[w,T],Y=null!=$,J=null!=M;Y&&Z.push($),J&&Z.push(M);let ee=[{type:"int32",data:[q.padInfo.top,q.padInfo.left]},{type:"int32",data:[q.inHeight,q.inWidth]}],ea;return q.outHeight>4&&q.outWidth>4&&q.strideWidth<=2&&q.inChannels===q.outChannels&&1===q.dilationHeight&&1===q.dilationWidth&&q.inChannels%4==0?(ea=new Sy(q,Y,W,J),ee.push({type:"int32",data:[ea.virtualWidth]})):(ea=new SA(q,Y,W,J),ee.push({type:"int32",data:[q.filterHeight]},{type:"int32",data:[q.filterWidth]},{type:"int32",data:[q.strideHeight,q.strideWidth]},{type:"int32",data:[q.dilationHeight,q.dilationWidth]})),"leakyrelu"===W&&(ee.push({type:"float32",data:[B]}),ea.uniforms+=" alpha : f32,"),u.runWebGPUProgram(ea,Z,"float32",ee)}},{kernelName:r8,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u}=e,{params:y,indices:w}=t,T=w.shape,$=T[T.length-1],M=oc.sizeFromShape(y.shape),[O,P,z,L]=hh.prepareAndValidate(y,w),W=pe({inputs:{x:w},backend:u,attrs:{shape:[P,$]}}),B=pe({inputs:{x:y},backend:u,attrs:{shape:[oc.sizeFromShape(y.shape)/z,z]}});if(u.shouldExecuteOnCPU([y,w])||"string"===y.dtype){let e=wq(u.readSync(w.dataId),u.bufferSync(y),y.dtype,P,$,z,L,y.shape,M);return u.makeTensorInfo(O,y.dtype,e.values)}let j=new SV($,[P,z]),q=[{type:"int32",data:[$]},{type:"int32",data:L}],Z=u.runWebGPUProgram(j,[B,W],B.dtype,q),Y=pe({inputs:{x:Z},backend:u,attrs:{shape:O}});return u.disposeData(W.dataId),u.disposeData(B.dataId),u.disposeData(Z.dataId),Y}},{kernelName:r6,backendName:"webgpu",kernelFunc:c0},{kernelName:ie,backendName:"webgpu",kernelFunc:SG},{kernelName:it,backendName:"webgpu",kernelFunc:SH},{kernelName:ia,backendName:"webgpu",kernelFunc:At},{kernelName:ir,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u}=e,{input:y}=t;return Lx(y,!0,u)}},{kernelName:is,backendName:"webgpu",kernelFunc:Rp},{kernelName:iu,backendName:"webgpu",kernelFunc:Sq},{kernelName:ip,backendName:"webgpu",kernelFunc:SX},{kernelName:ic,backendName:"webgpu",kernelFunc:SK},{kernelName:im,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{alpha:T}=y,$=[{type:"float32",data:[T]}],M=new wD(w.shape,am.LEAKYRELU,"alpha : f32,");return u.runWebGPUProgram(M,[w],"float32",$)}},{kernelName:ig,backendName:"webgpu",kernelFunc:SZ},{kernelName:iy,backendName:"webgpu",kernelFunc:SY},{kernelName:iA,backendName:"webgpu",kernelFunc:function(e){let{backend:t,attrs:u}=e,{start:y,stop:w,num:T}=u,$=(w-y)/(T-1),M=new SJ(T),O=[{type:"float32",data:[y]},{type:"float32",data:[$]}];return t.runWebGPUProgram(M,[],"float32",O)}},{kernelName:ib,backendName:"webgpu",kernelFunc:S1},{kernelName:ix,backendName:"webgpu",kernelFunc:SQ},{kernelName:iI,backendName:"webgpu",kernelFunc:S2},{kernelName:iS,backendName:"webgpu",kernelFunc:S3},{kernelName:iN,backendName:"webgpu",kernelFunc:S7},{kernelName:iR,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{depthRadius:T,bias:$,alpha:M,beta:O}=y,P;P=T>16?new S6(w.shape):new S8(w.shape,T);let z=[{type:"int32",data:[T]},{type:"float32",data:[$]},{type:"float32",data:[M]},{type:"float32",data:[O]}];return u.runWebGPUProgram(P,[w],w.dtype,z)}},{kernelName:i$,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,y:T,dy:$}=t,{depthRadius:M,bias:O,alpha:P,beta:z}=y,L=new S9(w.shape),W=[{type:"int32",data:[M]},{type:"float32",data:[O]},{type:"float32",data:[P]},{type:"float32",data:[z]}];return u.runWebGPUProgram(L,[w,T,$],w.dtype,W)}},{kernelName:iM,backendName:"webgpu",kernelFunc:t0},{kernelName:iF,backendName:"webgpu",kernelFunc:Ne},{kernelName:iO,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{filterSize:T,strides:$,pad:M,dimRoundingMode:O}=y,P=hh.computePool2DInfo(w.shape,T,$,1,M,O);return ax(w,P,"max",u)}},{kernelName:iP,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{dy:w,input:T,output:$}=t;fm([T,$],"maxPoolGrad");let{filterSize:M,strides:O,pad:P,dimRoundingMode:z}=y,L=hh.computePool2DInfo(T.shape,M,O,1,P,z),W=new IL(L,"max",!0),B=[{type:"int32",data:[L.strideHeight,L.strideWidth]},{type:"int32",data:[L.padInfo.top,L.padInfo.left]},{type:"int32",data:[L.dilationHeight,L.dilationWidth]},{type:"int32",data:[L.inHeight,L.inWidth]},{type:"int32",data:[L.effectiveFilterHeight,L.effectiveFilterWidth]}],j=u.runWebGPUProgram(W,[T],"int32",B),q=new Na(L);B=[{type:"int32",data:[L.strideHeight,L.strideWidth]},{type:"int32",data:[L.effectiveFilterHeight-1-L.padInfo.top,L.effectiveFilterWidth-1-L.padInfo.left]},{type:"int32",data:[L.dilationHeight,L.dilationWidth]},{type:"int32",data:[L.effectiveFilterHeight,L.effectiveFilterWidth]},{type:"int32",data:[L.outHeight]},{type:"int32",data:[L.outWidth]}];let Z=u.runWebGPUProgram(q,[w,j],T.dtype,B);return u.disposeData(j.dataId),Z}},{kernelName:iD,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{filterSize:T,strides:$,pad:M,dataFormat:O,dimRoundingMode:P}=y,z=hh.computePool3DInfo(w.shape,T,$,[1,1,1],M,P,O),L=new IW(z,"max"),W=[{type:"int32",data:[z.strideDepth,z.strideHeight,z.strideWidth]},{type:"int32",data:[z.padInfo.front,z.padInfo.top,z.padInfo.left]},{type:"int32",data:[z.inDepth,z.inHeight,z.inWidth]},{type:"int32",data:[z.effectiveFilterDepth,z.effectiveFilterHeight,z.effectiveFilterWidth]}];return u.runWebGPUProgram(L,[w],w.dtype,W)}},{kernelName:iz,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{dy:w,input:T}=t,{filterSize:$,strides:M,pad:O,dimRoundingMode:P}=y,z=hh.computePool3DInfo(T.shape,$,M,[1,1,1],O,P),L=new IW(z,"max",!0),W=[{type:"int32",data:[z.strideDepth,z.strideHeight,z.strideWidth]},{type:"int32",data:[z.padInfo.front,z.padInfo.top,z.padInfo.left]},{type:"int32",data:[z.inDepth,z.inHeight,z.inWidth]},{type:"int32",data:[z.effectiveFilterDepth,z.effectiveFilterHeight,z.effectiveFilterWidth]}],B=u.runWebGPUProgram(L,[T],"int32",W),j=new Nn(z);W=[{type:"int32",data:[z.strideDepth,z.strideHeight,z.strideWidth]},{type:"int32",data:[z.effectiveFilterDepth-1-z.padInfo.front,z.effectiveFilterHeight-1-z.padInfo.top,z.effectiveFilterWidth-1-z.padInfo.left]},{type:"int32",data:[z.effectiveFilterDepth,z.effectiveFilterHeight,z.effectiveFilterWidth]},{type:"int32",data:[z.outDepth]},{type:"int32",data:[z.outHeight]},{type:"int32",data:[z.outWidth]}];let q=u.runWebGPUProgram(j,[w,B],T.dtype,W);return u.disposeData(B.dataId),q}},{kernelName:iL,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{filterSize:w,strides:T,pad:$,includeBatchInIndex:M}=y,{x:O}=t;oc.assert(4===O.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${O.shape.length}.`);let P=[1,1];oc.assert(hh.eitherStridesOrDilationsAreOne(T,P),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${T} and dilations '${P}'`);let z=hh.computePool2DInfo(O.shape,w,T,P,$),L=[{type:"int32",data:[z.strideHeight,z.strideWidth]},{type:"int32",data:[z.padInfo.top,z.padInfo.left]},{type:"int32",data:[z.dilationHeight,z.dilationWidth]},{type:"int32",data:[z.inHeight,z.inWidth]},{type:"int32",data:[z.effectiveFilterHeight,z.effectiveFilterWidth]}],W=new IL(z,"max",!1),B=u.runWebGPUProgram(W,[O],O.dtype,L);return W=new IL(z,"max",!0,!0,M),[B,u.runWebGPUProgram(W,[O],"int32",L)]}},{kernelName:iW,backendName:"webgpu",kernelFunc:r0},{kernelName:iB,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{axis:T,keepDims:$}=y;return eo(w,T,$,"min",u)}},{kernelName:iV,backendName:"webgpu",kernelFunc:Ns},{kernelName:iU,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:u})=>{let{x:y}=e,{paddings:w,mode:T}=t,$=w.map(e=>({type:"int32",data:[e[0],e[1]]})),M=new Nl(y.shape,w,T);return u.runWebGPUProgram(M,[y],y.dtype,$)}},{kernelName:iG,backendName:"webgpu",kernelFunc:Nh},{kernelName:ij,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{logits:w}=t,{numSamples:T,seed:$,normalized:M}=y,O=M?w:l0({inputs:{logits:w},backend:u,attrs:{dim:w.shape.length-1}}),P=O.shape[0],z=O.shape[1],L=new Ng(P,T),W=u.runWebGPUProgram(L,[O],"int32",[{type:"float32",data:[$]},{type:"int32",data:[z]}]);return M||u.disposeData(O.dataId),W}},{kernelName:iq,backendName:"webgpu",kernelFunc:SE},{kernelName:iX,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u}=e,{x:y}=t;if(u.shouldExecuteOnCPU([y])){let[e,t]=w6(u.tensorMap.get(y.dataId).values,y.shape,y.dtype);return u.makeTensorInfo(t,y.dtype,e)}let w=new wD(y.shape,am.NEG);return u.runWebGPUProgram(w,[y],y.dtype)}},{kernelName:iZ,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:u,attrs:y}=e,{boxes:w,scores:T}=t,{maxOutputSize:$,iouThreshold:M,scoreThreshold:O}=y,P=u.readSync(w.dataId),z=u.readSync(T.dataId),{selectedIndices:L}=h_.nonMaxSuppressionV3Impl(P,z,$,M,O);return u.makeTensorInfo([L.length],"int32",new Int32Array(L))}},{kernelName:iJ,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:u,attrs:y}=e,{boxes:w,scores:T}=t,{maxOutputSize:$,iouThreshold:M,scoreThreshold:O,softNmsSigma:P}=y,z=u.readSync(w.dataId),L=u.readSync(T.dataId),{selectedIndices:W,selectedScores:B}=h_.nonMaxSuppressionV5Impl(z,L,$,M,O,P);return[u.makeTensorInfo([W.length],"int32",new Int32Array(W)),u.makeTensorInfo([B.length],"float32",new Float32Array(B))]}},{kernelName:iK,backendName:"webgpu",kernelFunc:IZ},{kernelName:i1,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{indices:w}=t,{dtype:T,depth:$,onValue:M,offValue:O}=y,P=oc.sizeFromShape(w.shape),z=new Nx(P,$),L=pe({inputs:{x:w},backend:u,attrs:{shape:[P]}}),W=u.runWebGPUProgram(z,[L],T,[{type:"float32",data:[M]},{type:"float32",data:[O]}]);u.disposeData(L.dataId);let B=pe({inputs:{x:W},backend:u,attrs:{shape:[...w.shape,$]}});return u.disposeData(W.dataId),B}},{kernelName:iQ,backendName:"webgpu",kernelFunc:function ZW(e){let{inputs:t,backend:u}=e,{x:y}=t;if("string"===y.dtype)throw Error("onesLike is not supported under string dtype");if("complex64"!==y.dtype)return vt({attrs:{shape:y.shape,dtype:y.dtype,value:1},backend:u});{let e=vi({inputs:{input:y},backend:u}),t=ZW({inputs:{x:e},backend:u}),w=Rp({inputs:{input:y},backend:u}),T=bm({inputs:{x:w},backend:u}),$=xo({inputs:{real:t,imag:T},backend:u});return u.disposeData(e.dataId),u.disposeData(t.dataId),u.disposeData(w.dataId),u.disposeData(T.dataId),$}}},{kernelName:i2,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{axis:w}=y;if(1===t.length)return Mx({inputs:{input:t[0]},backend:u,attrs:{dim:w}});let T=t[0].shape,$=t[0].dtype;t.forEach(e=>{oc.assertShapesMatch(T,e.shape,"All tensors passed to stack must have matching shapes"),oc.assert($===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let M=[],O=a0({inputs:t.map(e=>{let t=Mx({inputs:{input:e},backend:u,attrs:{dim:w}});return M.push(t),t}),backend:u,attrs:{axis:w}});return M.forEach(e=>u.disposeData(e.dataId)),O}},{kernelName:i0,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{paddings:T,constantValue:$}=y;if(T.every(e=>oc.arraysEqual(e,[0,0])))return At({inputs:{x:w},backend:u});if(0===oc.sizeFromShape(w.shape))return vt({backend:u,attrs:{shape:T.map((e,t)=>e[0]+w.shape[t]+e[1]),value:$,dtype:w.dtype}});let M=[{type:"float32",data:[$]}];T.map(e=>M.push({type:"int32",data:[e[0],e[1]]}));let O=new Nb(w.shape,T);return u.runWebGPUProgram(O,[w],w.dtype,M)}},{kernelName:i7,backendName:"webgpu",kernelFunc:Nv},{kernelName:i6,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u}=e,{x:y,alpha:w}=t,T=new wP(af.PRELU,y.shape,w.shape);return u.runWebGPUProgram(T,[y,w],"float32")}},{kernelName:i8,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{axis:T,keepDims:$}=y;return eo(w,T,$,"prod",u)}},{kernelName:sa,backendName:"webgpu",kernelFunc:e=>{let{backend:t,attrs:u}=e,{start:y,stop:w,step:T,dtype:$}=u,M=In(y,w,T,$);return t.makeTensorInfo([M.length],$,M)}},{kernelName:sn,backendName:"webgpu",kernelFunc:vi},{kernelName:rW,backendName:"webgpu",kernelFunc:Nw},{kernelName:si,backendName:"webgpu",kernelFunc:NS},{kernelName:ss,backendName:"webgpu",kernelFunc:NN},{kernelName:sg,backendName:"webgpu",kernelFunc:NC},{kernelName:so,backendName:"webgpu",kernelFunc:pe},{kernelName:sc,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{images:w}=t,{alignCorners:T,size:$,halfPixelCenters:M}=y,[O,P]=$,z=[{type:"float32",data:[T&&O>1?1:0,T&&P>1?1:0]},{type:"float32",data:[M?.5:0]}],L=new NE(w.shape,O,P);return u.runWebGPUProgram(L,[w],"float32",z)}},{kernelName:sf,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{images:w,dy:T}=t,{alignCorners:$}=y,[,M,O]=w.shape,[,P,z]=T.shape,L=[$&&P>1?M-1:M,$&&z>1?O-1:O],W=[$&&P>1?P-1:P,$&&z>1?z-1:z],B=L[0]/W[0],j=L[1]/W[1],q=1/B,Z=1/j,Y=2*Math.ceil(q)+2,J=2*Math.ceil(Z)+2,ee=new N$(w.shape,$),ea=[{type:"int32",data:L},{type:"int32",data:W},{type:"float32",data:[B]},{type:"float32",data:[j]},{type:"float32",data:[q]},{type:"float32",data:[Z]},{type:"int32",data:[Y]},{type:"int32",data:[J]}];return u.runWebGPUProgram(ee,[T],T.dtype,ea)}},{kernelName:su,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{images:w}=t,{alignCorners:T,halfPixelCenters:$,size:M}=y,[O,P]=M,z=[{type:"float32",data:[T&&O>1?1:0,T&&P>1?1:0]},{type:"float32",data:[T?.5:0]}],L=new NM(w.shape,O,P,$);return u.runWebGPUProgram(L,[w],w.dtype,z)}},{kernelName:sp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{images:w,dy:T}=t,{alignCorners:$}=y,[,M,O]=w.shape,[,P,z]=T.shape,L=[$&&P>1?M-1:M,$&&z>1?O-1:O],W=[$&&P>1?P-1:P,$&&z>1?z-1:z],B=L[0]/W[0],j=L[1]/W[1],q=1/B,Z=1/j,Y=2*Math.ceil(q)+2,J=2*Math.ceil(Z)+2,ee=new NF(w.shape,$),ea=[{type:"int32",data:L},{type:"int32",data:W},{type:"float32",data:[q]},{type:"float32",data:[Z]},{type:"int32",data:[Y]},{type:"int32",data:[J]}];return u.runWebGPUProgram(ee,[T],T.dtype,ea)}},{kernelName:sy,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{dims:T}=y,$=w.shape.length;if(0===$)return At({inputs:{x:w},backend:u});let M=w.shape,O=[1,1,1,1];M.forEach((e,t)=>{O[t+4-$]=e});let P=oc.parseAxisParam(T,w.shape),z=[0,0,0,0];P.forEach(e=>{z[e+4-$]=1});let L=[{type:"int32",data:z}],W=pe({inputs:{x:w},backend:u,attrs:{shape:O}}),B=new NO(O),j=u.runWebGPUProgram(B,[W],W.dtype,L);u.disposeData(W.dataId);let q=pe({inputs:{x:j},backend:u,attrs:{shape:M}});return u.disposeData(j.dataId),q}},{kernelName:or,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:u})=>{let{image:y}=e,{radians:w,fillValue:T,center:$}=t,M=new NP(y.shape,T),[O,P]=hh.getImageCenter($,y.shape[1],y.shape[2]),z=[{type:"float32",data:[O]},{type:"float32",data:[P]},{type:"float32",data:[Math.sin(w)]},{type:"float32",data:[Math.cos(w)]}];return"number"==typeof T?z.push({type:"float32",data:[Number.parseFloat(T.toFixed(2))]}):z.push({type:"float32",data:T}),u.runWebGPUProgram(M,[y],y.dtype,z)}},{kernelName:sA,backendName:"webgpu",kernelFunc:ND},{kernelName:sx,backendName:"webgpu",kernelFunc:Nz},{kernelName:sb,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{indices:w,updates:T}=t,{shape:$}=y,{sliceRank:M,numUpdates:O,sliceSize:P,strides:z,outputSize:L}=hh.calculateShapes(T,w,$),W=[L/P,P];if(0===L)return u.makeTensorInfo($,w.dtype);let B=pe({inputs:{x:w},backend:u,attrs:{shape:[O,M]}}),j=pe({inputs:{x:T},backend:u,attrs:{shape:[O,P]}}),q=j.dtype,Z=vt({backend:u,attrs:{shape:W,value:0,dtype:q}}),Y=[{type:"int32",data:[M]},{type:"int32",data:z},{type:"int32",data:[oc.sizeFromShape(j.shape)]}],J=new NL(j.shape,M,B.shape.length,j.shape.length,z,W,q),ee=u.runWebGPUProgram(J,[j,B],q,Y,Z),ea=pe({inputs:{x:ee},backend:u,attrs:{shape:$}});return u.disposeData(B.dataId),u.disposeData(j.dataId),u.disposeData(ee.dataId),ea}},{kernelName:sI,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{sortedSequence:w,values:T}=t,{side:$}=y,M=new NW([T.shape[0],T.shape[1]],$),O=[{type:"int32",data:[w.shape[1]]}];return u.runWebGPUProgram(M,[w,T],"int32",O)}},{kernelName:sN,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u}=e,{condition:y,t:w,e:T}=t,$=new NB(y.shape.length,w.shape,w.shape.length);return u.runWebGPUProgram($,[y,w,T],dt(w.dtype,T.dtype))}},{kernelName:sC,backendName:"webgpu",kernelFunc:NV},{kernelName:s_,backendName:"webgpu",kernelFunc:NU},{kernelName:s$,backendName:"webgpu",kernelFunc:NG},{kernelName:sE,backendName:"webgpu",kernelFunc:NH},{kernelName:sR,backendName:"webgpu",kernelFunc:Nj},{kernelName:sT,backendName:"webgpu",kernelFunc:Hs},{kernelName:oa,backendName:"webgpu",kernelFunc:function({inputs:e,attrs:t,backend:u}){let{x:y}=e,w=new wD(y.shape,am.STEP,"stepAlpha : f32,"),T=[{type:"float32",data:[t.alpha]}];return u.runWebGPUProgram(w,[y],y.dtype,T)}},{kernelName:sX,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{begin:T,end:$,strides:M,beginMask:O,endMask:P,ellipsisMask:z,newAxisMask:L,shrinkAxisMask:W}=y,{finalShapeSparse:B,finalShape:j,isIdentity:q,sliceDim0:Z,isSimpleSlice:Y,begin:J,end:ee,strides:ea}=hs.sliceInfo(w.shape,T,$,M,O,P,z,L,W),en;if(q)en=pe({inputs:{x:w},backend:u,attrs:{shape:j}});else if(Z||Y){oc.assert(w.shape.length>=1,()=>`Input must have rank at least 1, got: ${w.shape.length}`);let e=hs.computeOutShape(J,ee,ea),t=Hs({inputs:{x:w},backend:u,attrs:{begin:J,size:e}});en=pe({inputs:{x:t},backend:u,attrs:{shape:j}}),u.disposeData(t.dataId)}else if(u.shouldExecuteOnCPU([w])){let e=u.readSync(w.dataId),t=Id(B,me(w.shape,w.dtype,e),ea,J);en=u.makeTensorInfo(j,w.dtype,t.values)}else{let e=new N2(B),t=[{type:"int32",data:J},{type:"int32",data:ea}],y=u.runWebGPUProgram(e,[w],w.dtype,t);en=pe({inputs:{x:y},backend:u,attrs:{shape:j}}),u.disposeData(y.dataId)}return en}},{kernelName:sK,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{separator:w,nGramWidths:T,leftPad:$,rightPad:M,padWidth:O,preserveShortSequences:P}=y,{data:z,dataSplits:L}=t,[W,B]=Ic(u.readSync(z.dataId),u.readSync(L.dataId),w,T,$,M,O,P);return[u.makeTensorInfo([W.length],"string",W),u.makeTensorInfo(L.shape,"int32",B)]}},{kernelName:sL,backendName:"webgpu",kernelFunc:l0},{kernelName:sM,backendName:"webgpu",kernelFunc:Nq},{kernelName:sP,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{blockShape:T,paddings:$}=y;oc.assert(w.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let M=T.reduce((e,t)=>e*t),O=[[0,0]];O.push(...$);for(let e=1+T.length;e<w.shape.length;++e)O.push([0,0]);let P=O.map((e,t)=>e[0]+w.shape[t]+e[1]),z=hh.getReshaped(P,T,M,!1),L=hh.getPermuted(z.length,T.length,!1),W=hh.getReshapedPermuted(P,T,M,!1),B=oc.computeStrides(P),j=new NX(w.shape,P,O,z,L,B.length),q=[{type:"int32",data:z},{type:"int32",data:B}];O.map(e=>q.push({type:"int32",data:[e[0],e[1]]}));let Z=u.runWebGPUProgram(j,[w],w.dtype,q),Y=pe({inputs:{x:Z},backend:u,attrs:{shape:W}});return u.disposeData(Z.dataId),Y}},{kernelName:sV,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u}=e,{data:y,indices:w,segmentIds:T}=t;return dy(y,w,T,!1,u)}},{kernelName:sU,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u}=e,{data:y,indices:w,segmentIds:T}=t;return dy(y,w,T,!0,u)}},{kernelName:sG,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{sparseIndices:w,sparseValues:T,defaultValue:$}=t,{outputShape:M}=y,{sliceRank:O,numUpdates:P,sliceSize:z,strides:L,outputSize:W}=hh.calculateShapes(T,w,M);if("string"===T.dtype){let e=Is(u.bufferSync(w),u.bufferSync(T),M,W,z,P,O,L,oc.decodeString(u.readSync($.dataId)[0]),!1);return u.makeTensorInfo(M,e.dtype,e.values)}let B=[W/z,z],j=pe({inputs:{x:w},backend:u,attrs:{shape:[P,O]}}),q=T.shape.length?pe({inputs:{x:T},backend:u,attrs:{shape:[P,z]}}):At({inputs:{x:T},backend:u}),Z=q.dtype,Y=u.makeTensorInfo([],Z,oc.makeZerosTypedArray(1,Z)),J=pe({inputs:{x:$},backend:u,attrs:{shape:Array(B.length).fill(1)}}),ee=Cm({inputs:{x:J},backend:u,attrs:{reps:B}}),ea=[{type:"int32",data:[O]},{type:"int32",data:L},{type:"int32",data:[oc.sizeFromShape([P,z])]}];switch(P){case 0:break;case 1:{let e=new NL([P,z],O,j.shape.length,q.shape.length,L,B,Z,!1);u.runWebGPUProgram(e,[q,j],Z,ea,ee)}break;default:{let e=new NL([P,z],O,j.shape.length,Y.shape.length,L,B,Z,!1);u.runWebGPUProgram(e,[Y,j],Z,ea,ee)}{let e=new NL([P,z],O,j.shape.length,q.shape.length,L,B,Z);u.runWebGPUProgram(e,[q,j],Z,ea,ee)}}let en=pe({inputs:{x:ee},backend:u,attrs:{shape:M}});return u.disposeData(j.dataId),u.disposeData(q.dataId),u.disposeData(J.dataId),u.disposeData(Y.dataId),u.disposeData(ee.dataId),en}},{kernelName:sD,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{numOrSizeSplits:T,axis:$}=y,M=oc.parseAxisParam($,w.shape)[0],O=hh.prepareSplitSize(w,T,M),P=Array(w.shape.length).fill(0),z=w.shape.slice();return O.map(e=>{let t=[...z];t[M]=e;let y=Hs({inputs:{x:w},backend:u,attrs:{begin:P,size:t}});return P[M]+=e,y})}},{kernelName:sF,backendName:"webgpu",kernelFunc:NQ},{kernelName:sj,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{x:u}=e,y=new wD(u.shape,am.SQUARE);return t.runWebGPUProgram(y,[u],u.dtype)}},{kernelName:sH,backendName:"webgpu",kernelFunc:N1},{kernelName:sJ,backendName:"webgpu",kernelFunc:N3},{kernelName:sO,backendName:"webgpu",kernelFunc:u0},{kernelName:sQ,backendName:"webgpu",kernelFunc:N7},{kernelName:s1,backendName:"webgpu",kernelFunc:N4},{kernelName:sw,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{tensor:w,indices:T,updates:$}=t,{}=y,{sliceRank:M,numUpdates:O,sliceSize:P,strides:z,outputSize:L}=hh.calculateShapes($,T,w.shape),W=[L/P,P];if(0===L)return u.makeTensorInfo(w.shape,T.dtype);let B=[],j=pe({inputs:{x:T},backend:u,attrs:{shape:[O,M]}});B.push(j);let q=pe({inputs:{x:$},backend:u,attrs:{shape:[O,P]}});B.push(q);let Z=pe({inputs:{x:w},backend:u,attrs:{shape:W}});B.push(Z);let Y=Cm({inputs:{x:Z},backend:u,attrs:{reps:Array(W.length).fill(1)}}),J=new NL([O,P],M,j.shape.length,q.shape.length,z,W,w.dtype,!1),ee=[{type:"int32",data:[M]},{type:"int32",data:z},{type:"int32",data:[oc.sizeFromShape([O,P])]}],ea=u.runWebGPUProgram(J,[q,j],Z.dtype,ee,Y);B.push(ea);let en=pe({inputs:{x:ea},backend:u,attrs:{shape:w.shape}});return B.forEach(e=>u.disposeData(e.dataId)),en}},{kernelName:s2,backendName:"webgpu",kernelFunc:Cm},{kernelName:s3,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w}=t,{k:T,sorted:$}=y,M=w.shape,O=M[M.length-1];if(u.shouldExecuteOnCPU([w])){let[e,t]=Ig(u.readSync(w.dataId),M,w.dtype,T,$);return[u.makeTensorInfo(e.shape,e.dtype,e.values),u.makeTensorInfo(t.shape,t.dtype,t.values)]}if(0===T)return M[M.length-1]=0,[u.makeTensorInfo(M,w.dtype,[]),u.makeTensorInfo(M,"int32",[])];if(1===O)return[w,vt({attrs:{shape:M,dtype:"int32",value:0},backend:u})];let P=oc.sizeFromShape(M)/O,z=pe({inputs:{x:w},attrs:{shape:[P,O]},backend:u}),L=UU(T),W=UU(O),B=null,h=()=>null===B?[z,z]:[z,B],g=(e,t,y)=>{let w=h(),T=new N6(y),$=[{type:"int32",data:[O]},{type:"int32",data:[null===B?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[e]},{type:"int32",data:[t]}],M=B;B=u.runWebGPUProgram(T,w,"int32",$),rl(u,M)};for(let e=1;e<L;e*=2){let t=2*e;for(let u=e;u>=1;u/=2)g(t,u,[P,W])}for(let e=W;e>L;e/=2){let t=h(),y=new N8([P,e/2]),w=[{type:"int32",data:[O]},{type:"int32",data:[null===B?1:0]},{type:"int32",data:[L]}],T=B;B=u.runWebGPUProgram(y,t,"int32",w),rl(u,T);let $=L/2,M=2*$;for(let e=$;e>=1;e/=2)g(M,e,B.shape)}let j=B;B=Hs({inputs:{x:B},backend:u,attrs:{begin:0,size:[P,T]}}),rl(u,j);let q=c0({inputs:{x:z,indices:B},backend:u,attrs:{axis:1,batchDims:1}});rl(u,z);let Z=M.slice(0,-1);Z.push(T),j=B,B=pe({inputs:{x:B},attrs:{shape:Z},backend:u}),rl(u,j);let Y=q;return q=pe({inputs:{x:q},attrs:{shape:Z},backend:u}),rl(u,Y),[q,B]}},{kernelName:s7,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{image:w,transforms:T}=t,{interpolation:$,fillMode:M,fillValue:O,outputShape:P}=y,[z,L,W,B]=w.shape,[j,q]=null!=P?P:[L,W],Z=new N9([z,j,q,B]),Y;switch(M){case"constant":default:Y=1;break;case"reflect":Y=2;break;case"wrap":Y=3;break;case"nearest":Y=4}let J=[{type:"int32",data:["nearest"===$?1:2]},{type:"int32",data:[Y]},{type:"float32",data:[O]}];return u.runWebGPUProgram(Z,[w,T],"float32",J)}},{kernelName:s4,backendName:"webgpu",kernelFunc:xr},{kernelName:s8,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{value:w}=t,{axis:T}=y;T<0&&(T+=w.shape.length);let $=w.shape.length,M=w.shape[T],O=Array($-1),P=0;for(let e=0;e<$;e++)e!==T&&(O[P++]=w.shape[e]);let z=[],L=Array($).fill(0),W=w.shape.slice();W[T]=1;let B=Array(M);for(let e=0;e<B.length;e++){L[T]=e;let t=Hs({inputs:{x:w},backend:u,attrs:{begin:L,size:W}}),y=pe({inputs:{x:t},backend:u,attrs:{shape:O}});B[e]=y,z.push(t)}return z.forEach(e=>u.disposeData(e.dataId)),B}},{kernelName:s9,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:u,attrs:y}=e,{x:w,segmentIds:T}=t,{numSegments:$}=y,M=w.shape.length,O=[],P=0,z=hh.getAxesPermutation([P],M),L=w;null!=z&&(O.push(L=xr({inputs:{x:w},backend:u,attrs:{perm:z}})),P=hh.getInnerMostAxes(1,M)[0]);let W=hh.segment_util.computeOutShape(L.shape,P,$),B=oc.sizeFromShape([L.shape[P]]),j=pe({inputs:{x:L},backend:u,attrs:{shape:[-1,B]}});O.push(j);let q=w.dtype,Z=[j.shape[0],$],Y=vt({backend:u,attrs:{shape:Z,value:0,dtype:q}}),J=new Ce(j.shape,Z,q),ee=[{type:"int32",data:[$]},{type:"int32",data:[oc.sizeFromShape(j.shape)]}],ea=u.runWebGPUProgram(J,[j,T],q,ee,Y),en=pe({inputs:{x:ea},backend:u,attrs:{shape:W}});O.push(ea);let er=en;return null!=z&&(O.push(en),er=xr({inputs:{x:er},backend:u,attrs:{perm:hh.getUndoAxesPermutation(z)}})),O.forEach(e=>u.disposeData(e.dataId)),er}},{kernelName:ot,backendName:"webgpu",kernelFunc:bm}])ti(e);var Ca="4.21.0",Cn={tfjs:Ca,"tfjs-core":Ca,"tfjs-converter":"4.21.0","tfjs-backend-cpu":"4.21.0","tfjs-backend-webgl":"4.21.0","tfjs-backend-wasm":"4.21.0","tfjs-backend-webgpu":"4.21.0"},Cr=void 0;function log(...e){let t=new Date,u=`${t.getHours().toString().padStart(2,"0")}:${t.getMinutes().toString().padStart(2,"0")}:${t.getSeconds().toString().padStart(2,"0")}.${t.getMilliseconds().toString().padStart(3,"0")}`;e&&console.log(u,"Human:",...e)}var now=()=>"undefined"!=typeof performance?performance.now():parseInt((Number(ne.hrtime.bigint())/1e3/1e3).toString());function mergeDeep(...e){let isObject=e=>e&&"object"==typeof e;return e.reduce((e,t)=>(Object.keys(t||{}).forEach(u=>{let y=e[u],w=t[u];Array.isArray(y)&&Array.isArray(w)?e[u]=y.concat(...w):isObject(y)&&isObject(w)?e[u]=mergeDeep(y,w):e[u]=w}),e),{})}var Cs={backend:"",modelBasePath:"",cacheModels:!0,validateModels:!0,wasmPath:"",wasmPlatformFetch:!1,debug:!1,async:!0,warmup:"full",cacheSensitivity:.7,skipAllowed:!1,deallocate:!1,flags:{},softwareKernels:!1,filter:{enabled:!0,equalization:!1,width:0,height:0,flip:!1,return:!0,autoBrightness:!0,brightness:0,contrast:0,sharpness:0,blur:0,saturation:0,hue:0,negative:!1,sepia:!1,vintage:!1,kodachrome:!1,technicolor:!1,polaroid:!1,pixelate:0},gesture:{enabled:!0},face:{enabled:!0,detector:{modelPath:"blazeface.json",rotation:!1,maxDetected:1,skipFrames:99,skipTime:2500,minConfidence:.2,minSize:0,iouThreshold:.1,scale:1.4,mask:!1,return:!1},mesh:{enabled:!0,modelPath:"facemesh.json",keepInvalid:!1},attention:{enabled:!1,modelPath:"facemesh-attention.json"},iris:{enabled:!0,scale:2.3,modelPath:"iris.json"},emotion:{enabled:!0,minConfidence:.1,skipFrames:99,skipTime:1500,modelPath:"emotion.json"},description:{enabled:!0,modelPath:"faceres.json",skipFrames:99,skipTime:3e3,minConfidence:.1},antispoof:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"antispoof.json"},liveness:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"liveness.json"}},body:{enabled:!0,modelPath:"movenet-lightning.json",maxDetected:-1,minConfidence:.3,skipFrames:1,skipTime:200},hand:{enabled:!0,rotation:!0,skipFrames:99,skipTime:1e3,minConfidence:.5,iouThreshold:.2,maxDetected:-1,landmarks:!0,detector:{modelPath:"handtrack.json"},skeleton:{modelPath:"handlandmark-lite.json"}},object:{enabled:!1,modelPath:"centernet.json",minConfidence:.2,iouThreshold:.4,maxDetected:10,skipFrames:99,skipTime:2e3},segmentation:{enabled:!1,modelPath:"rvm.json",ratio:.5,mode:"default"}},Co=`
  precision highp float;
  attribute vec2 pos;
  attribute vec2 uv;
  varying vec2 vUv;
  uniform float flipY;
  void main(void) {
    vUv = uv;
    gl_Position = vec4(pos.x, pos.y*flipY, 0.0, 1.);
  }
`,Cu=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14];
    gl_FragColor.a = m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19];
  }
`,Cd=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[14];
    gl_FragColor.a = c.a;
  }
`,Cp=`
  precision highp float;
  varying vec2 vUv;
  uniform vec2 size;
  uniform sampler2D texture;
  vec2 pixelate(vec2 coord, vec2 size) {
    return floor( coord / size ) * size;
  }
  void main(void) {
    gl_FragColor = vec4(0.0);
    vec2 coord = pixelate(vUv, size);
    gl_FragColor += texture2D(texture, coord);
  }
`,Ch=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  void main(void) {
    gl_FragColor = vec4(0.0);
    gl_FragColor += texture2D(texture, vUv + vec2(-7.0*px.x, -7.0*px.y))*0.0044299121055113265;
    gl_FragColor += texture2D(texture, vUv + vec2(-6.0*px.x, -6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2(-5.0*px.x, -5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2(-4.0*px.x, -4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2(-3.0*px.x, -3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2(-2.0*px.x, -2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2(-1.0*px.x, -1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv                             )*0.159576912161;
    gl_FragColor += texture2D(texture, vUv + vec2( 1.0*px.x,  1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv + vec2( 2.0*px.x,  2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2( 3.0*px.x,  3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2( 4.0*px.x,  4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2( 5.0*px.x,  5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2( 6.0*px.x,  6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2( 7.0*px.x,  7.0*px.y))*0.0044299121055113265;
  }
`,Cg=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  uniform float m[9];
  void main(void) {
    vec4 c11 = texture2D(texture, vUv - px); // top left
    vec4 c12 = texture2D(texture, vec2(vUv.x, vUv.y - px.y)); // top center
    vec4 c13 = texture2D(texture, vec2(vUv.x + px.x, vUv.y - px.y)); // top right
    vec4 c21 = texture2D(texture, vec2(vUv.x - px.x, vUv.y) ); // mid left
    vec4 c22 = texture2D(texture, vUv); // mid center
    vec4 c23 = texture2D(texture, vec2(vUv.x + px.x, vUv.y) ); // mid right
    vec4 c31 = texture2D(texture, vec2(vUv.x - px.x, vUv.y + px.y) ); // bottom left
    vec4 c32 = texture2D(texture, vec2(vUv.x, vUv.y + px.y) ); // bottom center
    vec4 c33 = texture2D(texture, vUv + px ); // bottom right
    gl_FragColor = 
    c11 * m[0] + c12 * m[1] + c22 * m[2] +
    c21 * m[3] + c22 * m[4] + c23 * m[5] +
    c31 * m[6] + c32 * m[7] + c33 * m[8];
    gl_FragColor.a = c22.a;
  }
`,collect=(e,t,u)=>{let y=RegExp("\\b"+t+" \\w+ (\\w+)","ig");e.replace(y,(e,t)=>(u[t]=0,e))},Cy=class{constructor(e,t,u){__publicField(this,"uniform",{}),__publicField(this,"attribute",{}),__publicField(this,"gl"),__publicField(this,"id"),__publicField(this,"compile",(e,t)=>{let u=this.gl.createShader(t);return u?(this.gl.shaderSource(u,e),this.gl.compileShader(u),this.gl.getShaderParameter(u,this.gl.COMPILE_STATUS))?u:(log(`filter: gl compile failed: ${this.gl.getShaderInfoLog(u)||"unknown"}`),null):(log("filter: could not create shader"),null)}),this.gl=e;let y=this.compile(t,this.gl.VERTEX_SHADER),w=this.compile(u,this.gl.FRAGMENT_SHADER);if(this.id=this.gl.createProgram(),!y||!w)return;if(!this.id){log("filter: could not create webgl program");return}if(this.gl.attachShader(this.id,y),this.gl.attachShader(this.id,w),this.gl.linkProgram(this.id),!this.gl.getProgramParameter(this.id,this.gl.LINK_STATUS)){log(`filter: gl link failed: ${this.gl.getProgramInfoLog(this.id)||"unknown"}`);return}for(let e in this.gl.useProgram(this.id),collect(t,"attribute",this.attribute),this.attribute)this.attribute[e]=this.gl.getAttribLocation(this.id,e);for(let e in collect(t,"uniform",this.uniform),collect(u,"uniform",this.uniform),this.uniform)this.uniform[e]=this.gl.getUniformLocation(this.id,e)}};function GLImageFilter(){let e=0,t=null,u=!1,y=-1,w=[null,null],T=[],$=null,M=null,O=canvas(100,100),P={},z={INTERMEDIATE:1},L=O.getContext("webgl");if(!L){log("filter: cannot get webgl context");return}function getTempFramebuffer(e){return w[e]=w[e]||function(e,t){let u=L.createFramebuffer();L.bindFramebuffer(L.FRAMEBUFFER,u);let y=L.createRenderbuffer();L.bindRenderbuffer(L.RENDERBUFFER,y);let w=L.createTexture();return L.bindTexture(L.TEXTURE_2D,w),L.texImage2D(L.TEXTURE_2D,0,L.RGBA,e,t,0,L.RGBA,L.UNSIGNED_BYTE,null),L.texParameteri(L.TEXTURE_2D,L.TEXTURE_MAG_FILTER,L.LINEAR),L.texParameteri(L.TEXTURE_2D,L.TEXTURE_MIN_FILTER,L.LINEAR),L.texParameteri(L.TEXTURE_2D,L.TEXTURE_WRAP_S,L.CLAMP_TO_EDGE),L.texParameteri(L.TEXTURE_2D,L.TEXTURE_WRAP_T,L.CLAMP_TO_EDGE),L.framebufferTexture2D(L.FRAMEBUFFER,L.COLOR_ATTACHMENT0,L.TEXTURE_2D,w,0),L.bindTexture(L.TEXTURE_2D,null),L.bindFramebuffer(L.FRAMEBUFFER,null),{fbo:u,texture:w}}(O.width,O.height),w[e]}function draw(w=0){if(!M)return;let T=null,$=null,O=!1;T=0===e?t:getTempFramebuffer(y).texture||null,e++,u&&!(w&z.INTERMEDIATE)?($=null,O=e%2==0):$=getTempFramebuffer(y=(y+1)%2).fbo||null,L.bindTexture(L.TEXTURE_2D,T),L.bindFramebuffer(L.FRAMEBUFFER,$),L.uniform1f(M.uniform.flipY,O?-1:1),L.drawArrays(L.TRIANGLES,0,6)}function compileShader(e){if(P[e])return M=P[e],L.useProgram((M?M.id:null)||null),M;M=new Cy(L,Co,e);let t=Float32Array.BYTES_PER_ELEMENT,u=4*t;return L.enableVertexAttribArray(M.attribute.pos),L.vertexAttribPointer(M.attribute.pos,2,L.FLOAT,!1,u,0*t),L.enableVertexAttribArray(M.attribute.uv),L.vertexAttribPointer(M.attribute.uv,2,L.FLOAT,!1,u,2*t),P[e]=M,M}this.gl=L;let W={colorMatrix:e=>{let t=new Float32Array(e);t[4]/=255,t[9]/=255,t[14]/=255,t[19]/=255;let u=1===t[18]&&0===t[3]&&0===t[8]&&0===t[13]&&0===t[15]&&0===t[16]&&0===t[17]&&0===t[19]?Cd:Cu,y=compileShader(u);y&&(L.uniform1fv(y.uniform.m,t),draw())},brightness:e=>{let t=(e||0)+1;W.colorMatrix([t,0,0,0,0,0,t,0,0,0,0,0,t,0,0,0,0,0,1,0])},saturation:e=>{let t=2*(e||0)/3+1,u=-((t-1)*.5);W.colorMatrix([t,u,u,0,0,u,t,u,0,0,u,u,t,0,0,0,0,0,1,0])},desaturate:()=>{W.saturation(-1)},contrast:e=>{let t=(e||0)+1,u=-128*(t-1);W.colorMatrix([t,0,0,0,u,0,t,0,0,u,0,0,t,0,u,0,0,0,1,0])},negative:()=>{W.contrast(-2)},hue:e=>{e=(e||0)/180*Math.PI;let t=Math.cos(e),u=Math.sin(e);W.colorMatrix([.213+.787*t+-(.213*u),.715+-(.715*t)+-(.715*u),.072+-(.072*t)+.928*u,0,0,.213+-(.213*t)+.143*u,.715+.28500000000000003*t+.14*u,.072+-(.072*t)+-.283*u,0,0,.213+-(.213*t)+-(.787*u),.715+-(.715*t)+.715*u,.072+.928*t+.072*u,0,0,0,0,0,1,0])},desaturateLuminance:()=>{W.colorMatrix([.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,0,0,0,1,0])},sepia:()=>{W.colorMatrix([.393,.7689999,.18899999,0,0,.349,.6859999,.16799999,0,0,.272,.5339999,.13099999,0,0,0,0,0,1,0])},brownie:()=>{W.colorMatrix([.5997023498159715,.34553243048391263,-.2708298674538042,0,47.43192855600873,-.037703249837783157,.8609577587992641,.15059552388459913,0,-36.96841498319127,.24113635128153335,-.07441037908422492,.44972182064877153,0,-7.562075277591283,0,0,0,1,0])},vintagePinhole:()=>{W.colorMatrix([.6279345635605994,.3202183420819367,-.03965408211312453,0,9.651285835294123,.02578397704808868,.6441188644374771,.03259127616149294,0,7.462829176470591,.0466055556782719,-.0851232987247891,.5241648018700465,0,5.159190588235296,0,0,0,1,0])},kodachrome:()=>{W.colorMatrix([1.1285582396593525,-.3967382283601348,-.03992559172921793,0,63.72958762196502,-.16404339962244616,1.0835251566291304,-.05498805115633132,0,24.732407896706203,-.16786010706155763,-.5603416277695248,1.6014850761964943,0,35.62982807460946,0,0,0,1,0])},technicolor:()=>{W.colorMatrix([1.9125277891456083,-.8545344976951645,-.09155508482755585,0,11.793603434377337,-.3087833385928097,1.7658908555458428,-.10601743074722245,0,-70.35205161461398,-.231103377548616,-.7501899197440212,1.847597816108189,0,30.950940869491138,0,0,0,1,0])},polaroid:()=>{W.colorMatrix([1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0])},shiftToBGR:()=>{W.colorMatrix([0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0])},convolution:e=>{let t=new Float32Array(e),u=1/O.width,y=1/O.height,w=compileShader(Cg);w&&(L.uniform1fv(w.uniform.m,t),L.uniform2f(w.uniform.px,u,y),draw())},detectEdges:()=>{W.convolution.call(this,[0,1,0,1,-4,1,0,1,0])},sobelX:()=>{W.convolution.call(this,[-1,0,1,-2,0,2,-1,0,1])},sobelY:()=>{W.convolution.call(this,[-1,-2,-1,0,0,0,1,2,1])},sharpen:e=>{let t=e||1;W.convolution.call(this,[0,-1*t,0,-1*t,1+4*t,-1*t,0,-1*t,0])},emboss:e=>{let t=e||1;W.convolution.call(this,[-2*t,-1*t,0,-1*t,1,1*t,0,1*t,2*t])},blur:e=>{let t=e/7/O.width,u=e/7/O.height,y=compileShader(Ch);y&&(L.uniform2f(y.uniform.px,0,u),draw(z.INTERMEDIATE),L.uniform2f(y.uniform.px,t,0),draw())},pixelate:e=>{let t=e/O.width,u=e/O.height,y=compileShader(Cp);y&&(L.uniform2f(y.uniform.size,t,u),draw())}};this.add=function(e){let t=Array.prototype.slice.call(arguments,1),u=W[e];T.push({func:u,args:t})},this.reset=function(){T=[]},this.get=function(){return T},this.apply=function(y){(function(e,t){if(e!==O.width||t!==O.height){if(O.width=e,O.height=t,!$){let e=new Float32Array([-1,-1,0,1,1,-1,1,1,-1,1,0,0,-1,1,0,0,1,-1,1,1,1,1,1,0]);$=L.createBuffer(),L.bindBuffer(L.ARRAY_BUFFER,$),L.bufferData(L.ARRAY_BUFFER,e,L.STATIC_DRAW),L.pixelStorei(L.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0)}L.viewport(0,0,O.width,O.height),w=[null,null]}})(y.width,y.height),e=0,t||(t=L.createTexture()),L.bindTexture(L.TEXTURE_2D,t),L.texParameteri(L.TEXTURE_2D,L.TEXTURE_WRAP_S,L.CLAMP_TO_EDGE),L.texParameteri(L.TEXTURE_2D,L.TEXTURE_WRAP_T,L.CLAMP_TO_EDGE),L.texParameteri(L.TEXTURE_2D,L.TEXTURE_MIN_FILTER,L.NEAREST),L.texParameteri(L.TEXTURE_2D,L.TEXTURE_MAG_FILTER,L.NEAREST),L.texImage2D(L.TEXTURE_2D,0,L.RGBA,L.RGBA,L.UNSIGNED_BYTE,y);for(let e=0;e<T.length;e++){u=e===T.length-1;let t=T[e];t.func.apply(this,t.args||[])}return O},this.draw=function(e){return this.add("brightness",0),this.apply(e)}}async function histogramEqualization(e){let t;let u=4===e.shape.length?pg(e):e,y=ph(u,3,2),w=[uy(y[0]),uy(y[1]),uy(y[2])],T=[ug(y[0]),ug(y[1]),ug(y[2])],$=await Promise.all(T.map(e=>e.data())),M=Math.max($[0][0],$[1][0],$[2][0]),O=(M>1?255:1)/M;if(O>1){let e=[u1(y[0],w[0]),u1(y[1],w[1]),u1(y[2],w[2])],$=[u1(T[0],w[0]),u1(T[1],w[1]),u1(T[2],w[2])],M=[o8(e[0],O),o8(e[1],O),o8(e[2],O)],P=py([M[0],M[1],M[2]],2);t=lA(P,[1,u.shape[0]||0,u.shape[1]||0,3]),Ot([...e,...$,...M,P])}else t=uR(u,0);return Ot([...y,...w,...T,y,u,e]),t}var CA=null,Cx=null,Cb=null,Cv={inputSum:0,cacheDiff:1,sumMethod:0,inputTensor:void 0};function reset(){Cv.inputSum=0,Cv.cacheDiff=1,Cv.sumMethod=0,Cv.inputTensor=void 0}function canvas(e,t){let u;if(Cw.browser){if(Cw.worker){if("undefined"==typeof OffscreenCanvas)throw Error("canvas error: attempted to run in web worker but OffscreenCanvas is not supported");u=new OffscreenCanvas(e,t)}else if("undefined"!=typeof document)(u=document.createElement("canvas")).width=e,u.height=t;else if("undefined"!=typeof navigator&&"ReactNative"===navigator.product){if(void 0!==Cw.Canvas)u=new Cw.Canvas(e,t);else if(void 0!==globalThis.Canvas)u=new globalThis.Canvas(e,t);else throw Error("canvas error: attempted to use canvas in react-native without canvas support installed")}else throw Error("canvas error: attempted to run in browser but DOM is not defined")}else void 0!==Cw.Canvas?u=new Cw.Canvas(e,t):void 0!==globalThis.Canvas&&(u=new globalThis.Canvas(e,t));return u}function copy(e,t){let u=t||canvas(e.width,e.height),y=u.getContext("2d");return y.drawImage(e,0,0),u}async function process2(e,t,u=!0){var y,w,T;let $;if(!e)return t.debug&&log("input error: input is missing"),{tensor:null,canvas:null};if(!(e instanceof oC)&&!("undefined"!=typeof Image&&e instanceof Image)&&!(void 0!==globalThis.Canvas&&e instanceof globalThis.Canvas)&&!("undefined"!=typeof ImageData&&e instanceof ImageData)&&!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap)&&!("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)&&!("undefined"!=typeof HTMLMediaElement&&e instanceof HTMLMediaElement)&&!("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)&&!("undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement)&&!("undefined"!=typeof OffscreenCanvas&&e instanceof OffscreenCanvas))throw Error("input error: type not recognized");if(e instanceof oC){let u=null;if(e.isDisposedInternal)throw Error("input error: attempted to use tensor but it is disposed");if(!e.shape)throw Error("input error: attempted to use tensor without a shape");if(3===e.shape.length){if(3===e.shape[2])u=uR(e,0);else if(4===e.shape[2]){let t=ps(e,[0,0,0],[-1,-1,3]);u=uR(t,0),Ot(t)}}else 4===e.shape.length&&(3===e.shape[3]?u=o3(e):4===e.shape[3]&&(u=po(e,[0,0,0,0],[-1,-1,-1,3])));if(null==u||4!==u.shape.length||1!==u.shape[0]||3!==u.shape[3])throw Error(`input error: attempted to use tensor with unrecognized shape: ${e.shape.toString()}`);if("int32"===u.dtype){let e=o5(u,"float32");Ot(u),u=e}return{tensor:u,canvas:t.filter.return?Cx:null}}if(void 0!==e.readyState&&e.readyState<=2)return t.debug&&log("input stream is not ready"),{tensor:null,canvas:CA};let M=e.naturalWidth||e.videoWidth||e.width||e.shape&&e.shape[1]>0,O=e.naturalHeight||e.videoHeight||e.height||e.shape&&e.shape[2]>0;if(!M||!O)return t.debug&&log("cannot determine input dimensions"),{tensor:null,canvas:CA};let P=M,z=O;if(P>3840&&(z=Math.trunc((P=3840)*O/M)),z>3840&&(P=Math.trunc((z=3840)*M/O)),((null==(y=t.filter)?void 0:y.width)||0)>0?P=t.filter.width:((null==(w=t.filter)?void 0:w.height)||0)>0&&(P=M*((t.filter.height||0)/O)),(t.filter.height||0)>0?z=t.filter.height:(t.filter.width||0)>0&&(z=O*((t.filter.width||0)/M)),!P||!z)throw Error("input error: cannot determine dimension");CA&&CA.width===P&&CA.height===z||(CA=canvas(P,z));let L=CA.getContext("2d");if("undefined"!=typeof ImageData&&e instanceof ImageData?L.putImageData(e,0,0):t.filter.flip&&void 0!==L.translate?(L.translate(M,0),L.scale(-1,1),L.drawImage(e,0,0,M,O,0,0,CA.width,CA.height),L.setTransform(1,0,0,1,0,0)):L.drawImage(e,0,0,M,O,0,0,CA.width,CA.height),Cx&&CA.width===Cx.width&&CA.height===Cx.height||(Cx=canvas(CA.width,CA.height)),t.filter.enabled&&Cw.webgl.supported?(aA||(aA=Cw.browser?new GLImageFilter:null),Cw.filter=!!aA,(null==aA?void 0:aA.add)?(aA.reset(),0!==t.filter.brightness&&aA.add("brightness",t.filter.brightness),0!==t.filter.contrast&&aA.add("contrast",t.filter.contrast),0!==t.filter.sharpness&&aA.add("sharpen",t.filter.sharpness),0!==t.filter.blur&&aA.add("blur",t.filter.blur),0!==t.filter.saturation&&aA.add("saturation",t.filter.saturation),0!==t.filter.hue&&aA.add("hue",t.filter.hue),t.filter.negative&&aA.add("negative"),t.filter.sepia&&aA.add("sepia"),t.filter.vintage&&aA.add("brownie"),t.filter.sepia&&aA.add("sepia"),t.filter.kodachrome&&aA.add("kodachrome"),t.filter.technicolor&&aA.add("technicolor"),t.filter.polaroid&&aA.add("polaroid"),0!==t.filter.pixelate&&aA.add("pixelate",t.filter.pixelate),Cx=(null==(T=aA.get())?void 0:T.length)>1?aA.apply(CA):aA.draw(CA)):(t.debug&&log("input process error: cannot initialize filters"),Cw.webgl.supported=!1,t.filter.enabled=!1,copy(CA,Cx))):(copy(CA,Cx),aA&&(aA=null),Cw.filter=!!aA),!u)return{tensor:null,canvas:Cx};if(!Cx)throw Error("canvas error: cannot create output");let W=3;if("undefined"!=typeof ImageData&&e instanceof ImageData||e.data&&e.width&&e.height){if(Cw.browser&&ht)$=ht?ht.fromPixels(e):null;else{W=e.data.length/e.height/e.width;let t=new Uint8Array(e.data.buffer);$=ar(t,[e.height,e.width,W],"int32")}}else if(Cb&&Cx.width===Cb.width&&Cx.height===Cb.height||(Cb=canvas(Cx.width,Cx.height)),ht&&Cw.browser)"webgl"===t.backend||"humangl"===t.backend||"webgpu"===t.backend?$=ht.fromPixels(Cx):(Cb=copy(Cx),$=ht.fromPixels(Cb));else{let e=copy(Cx),t=e.getContext("2d"),u=t.getImageData(0,0,P,z);W=u.data.length/P/z;let y=new Uint8Array(u.data.buffer);$=ar(y,[P,z,W])}if(4===W){let e=ps($,[0,0,0],[-1,-1,3]);Ot($),$=e}if(!$)throw Error("input error: cannot create tensor");let B=o5($,"float32"),j=t.filter.equalization?await histogramEqualization(B):uR(B,0);if(Ot([$,B]),t.filter.autoBrightness){let e=ug(j),u=await e.data();t.filter.brightness=u[0]>1?1-u[0]/255:1-u[0],Ot(e)}return{tensor:j,canvas:t.filter.return?Cx:null}}async function skip(e,t){let u=!1;if(0===e.cacheSensitivity||!t.shape||4!==t.shape.length||t.shape[1]>3840||t.shape[2]>2160)return u;if(Cv.inputTensor){if(Cv.inputTensor.shape[1]!==t.shape[1]||Cv.inputTensor.shape[2]!==t.shape[2])Ot(Cv.inputTensor),Cv.inputTensor=o3(t);else{let y={};y.diff=u1(t,Cv.inputTensor),y.squared=o8(y.diff,y.diff),y.sum=uI(y.squared);let w=await y.sum.data(),T=w[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;Ot([Cv.inputTensor,y.diff,y.squared,y.sum]),Cv.inputTensor=o3(t),u=T<=(e.cacheSensitivity||0)}}else Cv.inputTensor=o3(t);return u}async function compare(e,t,u){let y={};if(!t||!u||4!==t.shape.length||t.shape.length!==u.shape.length)return e.debug||log("invalid input tensor or tensor shapes do not match:",t.shape,u.shape),0;if(1!==t.shape[0]||1!==u.shape[0]||3!==t.shape[3]||3!==u.shape[3])return e.debug||log("input tensors must be of shape [1, height, width, 3]:",t.shape,u.shape),0;y.input1=o3(t),y.input2=t.shape[1]!==u.shape[1]||t.shape[2]!==u.shape[2]?c$.resizeBilinear(u,[t.shape[1],t.shape[2]]):o3(u),y.diff=u1(y.input1,y.input2),y.squared=o8(y.diff,y.diff),y.sum=uI(y.squared);let w=await y.sum.data(),T=w[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;return Ot([y.input1,y.input2,y.diff,y.squared,y.sum]),T}var Ck=class{constructor(){if(__publicField(this,"browser"),__publicField(this,"node"),__publicField(this,"worker"),__publicField(this,"platform",""),__publicField(this,"agent",""),__publicField(this,"backends",[]),__publicField(this,"initial"),__publicField(this,"filter"),__publicField(this,"tfjs"),__publicField(this,"offscreen"),__publicField(this,"perfadd",!1),__publicField(this,"tensorflow",{version:void 0,gpu:void 0}),__publicField(this,"wasm",{supported:void 0,backend:void 0,simd:void 0,multithread:void 0}),__publicField(this,"webgl",{supported:void 0,backend:void 0,version:void 0,renderer:void 0,shader:void 0,vendor:void 0}),__publicField(this,"webgpu",{supported:void 0,backend:void 0,adapter:void 0}),__publicField(this,"cpu",{model:void 0,flags:[]}),__publicField(this,"kernels",[]),__privateAdd(this,ab),__privateAdd(this,aN),__privateAdd(this,aC),this.browser="undefined"!=typeof navigator&&void 0!==navigator.appVersion,this.node=void 0!==ne&&void 0!==ne.versions&&void 0!==ne.versions.node,this.tfjs={version:Cn["tfjs-core"]},this.offscreen="undefined"!=typeof OffscreenCanvas,this.initial=!0,this.worker=this.browser&&this.offscreen?"undefined"!=typeof WorkerGlobalScope:void 0,"undefined"!=typeof navigator&&void 0!==navigator.userAgent){let e=navigator.userAgent||"",t=e.match(/\(([^()]+)\)/g);if(null==t?void 0:t[0]){let u=t[0].match(/\(([^()]+)\)/g);this.platform=(null==u?void 0:u[0])?u[0].replace(/\(|\)/g,""):"",this.agent=e.replace(t[0],""),this.platform[1]&&(this.agent=this.agent.replace(t[1],"")),this.agent=this.agent.replace(/  /g," ")}}else void 0!==ne&&(this.platform=`${ne.platform} ${ne.arch}`,this.agent=`NodeJS ${ne.version}`)}get Canvas(){return __privateGet(this,ab)}set Canvas(e){__privateSet(this,ab,e),globalThis.Canvas=e}get Image(){return __privateGet(this,aN)}set Image(e){__privateSet(this,aN,e),globalThis.Image=e}get ImageData(){return __privateGet(this,aC)}set ImageData(e){__privateSet(this,aC,e),globalThis.ImageData=e}async updateBackend(){this.backends=Object.keys(oF.registryFactory);try{this.tensorflow={version:ak().binding?ak().binding.TF_Version:void 0,gpu:ak().binding?ak().binding.isUsingGpuDevice():void 0}}catch(e){}this.wasm.supported="undefined"!=typeof WebAssembly,this.wasm.backend=this.backends.includes("wasm"),this.wasm.supported&&this.wasm.backend&&(this.wasm.simd=await nG.getAsync("WASM_HAS_SIMD_SUPPORT"),this.wasm.multithread=await nG.getAsync("WASM_HAS_MULTITHREAD_SUPPORT"));let e=canvas(100,100),t=e?e.getContext("webgl2"):void 0;this.webgl.supported=void 0!==t,this.webgl.backend=this.backends.includes("webgl"),this.webgl.supported&&this.webgl.backend&&t&&(this.webgl.version=t.getParameter(t.VERSION),this.webgl.vendor=t.getParameter(t.VENDOR),this.webgl.renderer=t.getParameter(t.RENDERER),this.webgl.shader=t.getParameter(t.SHADING_LANGUAGE_VERSION)),this.webgpu.supported=this.browser&&"undefined"!=typeof navigator&&void 0!==navigator.gpu,this.webgpu.backend=this.backends.includes("webgpu");try{if(this.webgpu.supported){let e=await navigator.gpu.requestAdapter();this.webgpu.adapter=await (null==e?void 0:e.requestAdapterInfo())}}catch(e){this.webgpu.supported=!1}try{this.kernels=Ym(sk()).map(e=>e.kernelName.toLowerCase())}catch(e){}}updateCPU(){let e={model:"",flags:[]};this.node&&this.platform.startsWith("linux"),this.cpu?this.cpu=e:Object.defineProperty(this,"cpu",{value:e})}};ab=new WeakMap,aN=new WeakMap,aC=new WeakMap;var Cw=new Ck,CS=class{constructor(){__publicField(this,"config"),__publicField(this,"element"),__publicField(this,"stream"),__publicField(this,"devices",[]),__publicField(this,"enumerate",async()=>{try{let e=await navigator.mediaDevices.enumerateDevices();this.devices=e.filter(e=>"videoinput"===e.kind)}catch(e){this.devices=[]}return this.devices}),__publicField(this,"start",async e=>{var t,u;if((null==e?void 0:e.debug)&&(this.config.debug=null==e?void 0:e.debug),(null==e?void 0:e.crop)&&(this.config.crop=null==e?void 0:e.crop),(null==e?void 0:e.mode)&&(this.config.mode=null==e?void 0:e.mode),(null==e?void 0:e.width)&&(this.config.width=null==e?void 0:e.width),(null==e?void 0:e.height)&&(this.config.height=null==e?void 0:e.height),(null==e?void 0:e.id)&&(this.config.id=null==e?void 0:e.id),null==e?void 0:e.element){if("string"==typeof e.element){let t=document.getElementById(e.element);if(!(t&&t instanceof HTMLVideoElement))return this.config.debug&&log("webcam","cannot get dom element",e.element),`webcam error: cannot get dom element: ${e.element}`;this.element=t}else{if(!(e.element instanceof HTMLVideoElement))return this.config.debug&&log("webcam","unknown dom element",e.element),`webcam error: unknown dom element: ${e.element}`;this.element=e.element}}else this.element=document.createElement("video");let y={audio:!1,video:{facingMode:"front"===this.config.mode?"user":"environment",resizeMode:this.config.crop?"crop-and-scale":"none"}};if((null==(t=this.config)?void 0:t.width)>0&&(y.video.width={ideal:this.config.width}),(null==(u=this.config)?void 0:u.height)>0&&(y.video.height={ideal:this.config.height}),this.config.id&&(y.video.deviceId=this.config.id),this.element.addEventListener("play",()=>{this.config.debug&&log("webcam","play")}),this.element.addEventListener("pause",()=>{this.config.debug&&log("webcam","pause")}),this.element.addEventListener("click",async()=>{this.element&&this.stream&&(this.element.paused?await this.element.play():this.element.pause())}),!(null==navigator?void 0:navigator.mediaDevices))return this.config.debug&&log("webcam error","no devices"),"webcam error: no devices";try{this.stream=await navigator.mediaDevices.getUserMedia(y)}catch(e){return log("webcam",e),`webcam error: ${e}`}if(!this.stream)return this.config.debug&&log("webcam error","no stream"),"webcam error no stream";this.element.srcObject=this.stream;let w=new Promise(e=>{this.element?this.element.onloadeddata=()=>e(!0):e(!1)});return await w,await this.element.play(),this.config.debug&&log("webcam",{width:this.width,height:this.height,label:this.label,stream:this.stream,track:this.track,settings:this.settings,constraints:this.constraints,capabilities:this.capabilities}),`webcam: ${this.label}`}),__publicField(this,"pause",()=>{this.element&&this.element.pause()}),__publicField(this,"play",async()=>{this.element&&await this.element.play()}),__publicField(this,"stop",()=>{this.config.debug&&log("webcam","stop"),this.track&&this.track.stop()}),this.config={element:void 0,debug:!0,mode:"front",crop:!1,width:0,height:0}}get track(){if(this.stream)return this.stream.getVideoTracks()[0]}get capabilities(){if(this.track)return this.track.getCapabilities?this.track.getCapabilities():void 0}get constraints(){if(this.track)return this.track.getConstraints?this.track.getConstraints():void 0}get settings(){if(!this.stream)return;let e=this.stream.getVideoTracks()[0];return e.getSettings?e.getSettings():void 0}get label(){return this.track?this.track.label:""}get paused(){var e;return(null==(e=this.element)?void 0:e.paused)||!1}get width(){var e;return(null==(e=this.element)?void 0:e.videoWidth)||0}get height(){var e;return(null==(e=this.element)?void 0:e.videoHeight)||0}},CN={};__export(CN,{"affectnet-mobilenet":()=>CW,age:()=>CB,"anti-spoofing":()=>TS,antispoof:()=>CC,blazeface:()=>CE,"blazeface-back":()=>CV,"blazeface-front":()=>CU,"blazepose-detector":()=>CG,"blazepose-full":()=>CH,"blazepose-heavy":()=>Cq,"blazepose-lite":()=>CX,centernet:()=>CR,default:()=>TW,efficientpose:()=>CK,"efficientpose-i-lite":()=>TN,"efficientpose-ii-lite":()=>TC,"efficientpose-iv":()=>TE,emotion:()=>C$,faceboxes:()=>CZ,facemesh:()=>C_,"facemesh-attention":()=>CJ,"facemesh-attention-pinto":()=>CY,"facemesh-detection-full":()=>CQ,"facemesh-detection-short":()=>C2,faceres:()=>CM,"faceres-deep":()=>C0,gear:()=>C6,"gear-e1":()=>C3,"gear-e2":()=>C7,gender:()=>C9,"gender-ssrnet-imdb":()=>C8,handdetect:()=>Te,"handlandmark-full":()=>Tn,"handlandmark-lite":()=>CF,"handlandmark-sparse":()=>Ti,handskeleton:()=>Ts,handtrack:()=>CO,"insightface-efficientnet-b0":()=>T$,"insightface-ghostnet-strides1":()=>T_,"insightface-ghostnet-strides2":()=>TM,"insightface-mobilenet-emore":()=>TF,"insightface-mobilenet-swish":()=>TO,iris:()=>CP,liveness:()=>CD,meet:()=>To,mobileface:()=>Tl,mobilefacenet:()=>Td,models:()=>Cz,"movenet-lightning":()=>CL,"movenet-multipose":()=>Th,"movenet-thunder":()=>Tg,nanodet:()=>Ty,"nanodet-e":()=>TP,"nanodet-g":()=>TD,"nanodet-m":()=>Tz,"nanodet-t":()=>TL,posenet:()=>TA,rvm:()=>Tb,selfie:()=>TI});var CC=853098,CE=538928,CR=4030290,C$=820516,C_=1477958,CM=6978814,CF=2023432,CO=2964837,CP=2599092,CD=592976,Cz=0,CL=4650216,CW=6920630,CB=161240,CV=538928,CU=402048,CG=5928856,CH=6339202,Cq=27502466,CX=2726402,CK=5651240,CZ=2013002,CY=2387598,CJ=2382414,CQ=1026192,C2=201268,C0=13957620,C3=112438,C7=112438,C6=1498916,C8=161236,C9=201808,Te=3515612,Tn=5431368,Ti=5286322,Ts=5502280,To=372228,Tl=2183192,Td=5171976,Th=9448838,Tg=12477112,Ty=7574558,TA=5032780,Tb=3739355,TI=212886,TS=853098,TN=2269064,TC=5651240,TE=25643252,T$=13013224,T_=8093408,TM=8049584,TF=6938536,TO=12168584,TP=12319156,TD=7574558,Tz=1887474,TL=5294216,TW={antispoof:853098,blazeface:538928,centernet:4030290,emotion:820516,facemesh:1477958,faceres:6978814,"handlandmark-lite":2023432,handtrack:2964837,iris:2599092,liveness:592976,models:0,"movenet-lightning":4650216,"affectnet-mobilenet":6920630,age:161240,"blazeface-back":538928,"blazeface-front":402048,"blazepose-detector":5928856,"blazepose-full":6339202,"blazepose-heavy":27502466,"blazepose-lite":2726402,efficientpose:5651240,faceboxes:2013002,"facemesh-attention-pinto":2387598,"facemesh-attention":2382414,"facemesh-detection-full":1026192,"facemesh-detection-short":201268,"faceres-deep":13957620,"gear-e1":112438,"gear-e2":112438,gear:1498916,"gender-ssrnet-imdb":161236,gender:201808,handdetect:3515612,"handlandmark-full":5431368,"handlandmark-sparse":5286322,handskeleton:5502280,meet:372228,mobileface:2183192,mobilefacenet:5171976,"movenet-multipose":9448838,"movenet-thunder":12477112,nanodet:7574558,posenet:5032780,rvm:3739355,selfie:212886,"anti-spoofing":853098,"efficientpose-i-lite":2269064,"efficientpose-ii-lite":5651240,"efficientpose-iv":25643252,"insightface-efficientnet-b0":13013224,"insightface-ghostnet-strides1":8093408,"insightface-ghostnet-strides2":8049584,"insightface-mobilenet-emore":6938536,"insightface-mobilenet-swish":12168584,"nanodet-e":12319156,"nanodet-g":7574558,"nanodet-m":1887474,"nanodet-t":5294216},TB={cacheModels:!0,cacheSupported:!0,verbose:!0,debug:!1,modelBasePath:""},TV={};async function httpHandler(e,t){return TB.debug&&log("load model fetch:",e,t),fetch(e,t)}async function loadModel(e){var t,u,y,w,T,$;let M=function(e,t){let u=e.endsWith("/")?"":"/",y=t.startsWith(".")||t.startsWith("/")||t.startsWith("http:")||t.startsWith("https:")||t.startsWith("file:"),w=y?`${t}`:`${e}${u}${t}`;if(!w.toLocaleLowerCase().includes(".json"))throw Error(`modelpath error: expecting json file: ${w}`);return w}(TB.modelBasePath,e||"");M.toLowerCase().endsWith(".json")||(M+=".json");let O=M.includes("/")?M.split("/"):M.split("\\"),P=O[O.length-1].replace(".json",""),z="indexeddb://"+P;TV[P]={name:P,loaded:!1,sizeFromManifest:0,sizeLoadedWeights:0,sizeDesired:CN[P],inCache:!1,url:""},TB.cacheSupported="undefined"!=typeof indexedDB;let L={};try{L=TB.cacheSupported&&TB.cacheModels?await cJ.listModels():{}}catch(e){TB.cacheSupported=!1}TV[P].inCache=TB.cacheSupported&&TB.cacheModels&&Object.keys(L).includes(z),TV[P].url=TV[P].inCache?z:M;let W="undefined"==typeof fetch?{}:{fetchFunc:(e,t)=>httpHandler(e,t)},B=new fF(TV[P].url,W);TV[P].loaded=!1;try{B.findIOHandler(),TB.debug&&log("model load handler:",B.handler)}catch(e){log("error finding model i/o handler:",M,e)}try{let e=await (null==(t=B.handler)?void 0:t.load())||null;TV[P].sizeFromManifest=(null==(u=null==e?void 0:e.weightData)?void 0:u.byteLength)||0,e?B.loadSync(e):B=await M8(TV[P].inCache?z:M,W),TV[P].sizeLoadedWeights=(null==(w=null==(y=B.artifacts)?void 0:y.weightData)?void 0:w.byteLength)||(null==($=null==(T=B.artifacts)?void 0:T.weightData)?void 0:$[0].byteLength)||0,TB.verbose&&log("load:",{model:P,url:B.modelUrl,bytes:TV[P].sizeLoadedWeights}),TV[P].loaded=!0}catch(e){log("error loading model:",M,e)}if(TV[P].loaded&&TB.cacheModels&&TB.cacheSupported&&!TV[P].inCache)try{let e=await B.save(z);TB.debug&&log("model saved:",z,e)}catch(e){log("error saving model:",M,e)}return B}var TU="3.3.4",TG={name:"humangl",priority:999,canvas:null,gl:null,extensions:[],webGLattr:{alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!1,desynchronized:!0}},TH={tf255:255,tf1:1,tf2:2,tf05:.5,tf127:127.5,rgb:[.2989,.587,.114]};async function getBestBackend(){var e;return(await Cw.updateBackend(),null==(e=Cw.tensorflow)?void 0:e.version)?"tensorflow":Cw.webgpu.supported&&Cw.webgpu.backend?"webgpu":Cw.webgl.supported&&Cw.webgl.backend?"webgl":Cw.wasm.supported&&Cw.wasm.backend?"wasm":"cpu"}var Tj={};async function check(e,t=!1){var u,y;if(e.state="backend",(null==(u=e.config.backend)?void 0:u.length)===0&&(e.config.backend=await getBestBackend()),t||Cw.initial||e.config.backend&&e.config.backend.length>0&&sk()!==e.config.backend){let t=now();if(e.config.backend&&e.config.backend.length>0){"undefined"==typeof window&&"undefined"!=typeof WorkerGlobalScope&&e.config.debug&&e.config.debug&&log("running inside web worker"),"undefined"!=typeof navigator&&(null==(y=null==navigator?void 0:navigator.userAgent)?void 0:y.toLowerCase().includes("electron"))&&e.config.debug&&log("running inside electron");let t=Object.keys(oF.registryFactory);if("humangl"!==e.config.backend||t.includes("humangl")||(function(e){var t,u;if("humangl"===e.config.backend&&(TG.name in oF.registry&&!(null==(t=null==TG?void 0:TG.gl)?void 0:t.getParameter(TG.gl.VERSION))&&(log("humangl error: backend invalid context"),e.models.reset()),!kme(TG.name))){try{TG.canvas=canvas(100,100)}catch(e){log("humangl error: cannot create canvas:",e);return}try{if(TG.gl=TG.canvas.getContext("webgl2",TG.webGLattr),!TG.gl){log("humangl error: cannot get webgl context");return}let t=TG.gl.getParameter(TG.gl.VERSION).includes("2.0");if(!t){log("backend override: using fallback webgl backend as webgl 2.0 is not detected"),e.config.backend="webgl";return}TG.canvas&&(TG.canvas.addEventListener("webglcontextlost",t=>{throw log("humangl error:",t.type),log("possible browser memory leak using webgl or conflict with multiple backend registrations"),e.emit("error"),Error("backend error: webgl context lost")}),TG.canvas.addEventListener("webglcontextrestored",e=>{log("humangl error: context restored:",e)}),TG.canvas.addEventListener("webglcontextcreationerror",e=>{log("humangl error: context create:",e)}))}catch(e){log("humangl error: cannot get webgl context:",e);return}try{u=TG.gl,g_[2]=u}catch(e){log("humangl error: cannot set webgl context:",e);return}try{let e=new gY(TG.gl);tu(TG.name,()=>new Ah(e),TG.priority)}catch(e){log("humangl error: cannot register webgl backend:",e);return}try{let e=Ym("webgl");e.forEach(e=>{let t={...e,backendName:TG.name};ti(t)})}catch(e){log("humangl error: cannot update webgl backend registration:",e);return}try{nG.flagRegistry.WEBGL_VERSION&&nG.set("WEBGL_VERSION",2)}catch(e){log("humangl error: cannot set WebGL backend flags:",e);return}!function(){let e=TG.gl;e&&(TG.extensions=e.getSupportedExtensions())}();let t=ak(),y=void 0!==t.gpgpu?t.getGPGPUContext().gl:null;y?e.config.debug&&log("humangl backend registered:",{webgl:y.getParameter(y.VERSION),renderer:y.getParameter(y.RENDERER)}):log("humangl error: no current gl context:",y,TG.gl)}}(e),t=Object.keys(oF.registryFactory)),e.config.debug&&log("available backends:",t),Cw.browser&&!Cw.node&&"tensorflow"===e.config.backend&&t.includes("webgl")&&(e.config.debug&&log("override: backend set to tensorflow while running in browser"),e.config.backend="webgl"),Cw.node&&!Cw.browser&&("webgl"===e.config.backend||"humangl"===e.config.backend)&&t.includes("tensorflow")&&(e.config.debug&&log(`override: backend set to ${e.config.backend} while running in nodejs`),e.config.backend="tensorflow"),Cw.browser&&"webgpu"===e.config.backend){if("undefined"==typeof navigator||void 0===navigator.gpu)log("override: backend set to webgpu but browser does not support webgpu"),e.config.backend="webgl";else{let t=await navigator.gpu.requestAdapter();if(e.config.debug&&log("enumerated webgpu adapter:",t),t){let e="requestAdapterInfo"in t?await t.requestAdapterInfo():void 0;log("webgpu adapter info:",e)}else log("override: backend set to webgpu but browser reports no available gpu"),e.config.backend="webgl"}}if(!t.includes(e.config.backend)&&(log(`error: backend ${e.config.backend} not found in registry`),e.config.backend=Cw.node?"tensorflow":"webgl",e.config.debug&&log(`override: setting backend ${e.config.backend}`)),e.config.debug&&log("setting backend:",[e.config.backend]),"wasm"===e.config.backend){nG.flagRegistry.CANVAS2D_WILL_READ_FREQUENTLY&&nG.set("CANVAS2D_WILL_READ_FREQUENTLY",!0),e.config.debug&&log("wasm path:",e.config.wasmPath),nae(e.config.wasmPath,e.config.wasmPlatformFetch);let t=!1,u=!1;try{t=await nG.getAsync("WASM_HAS_MULTITHREAD_SUPPORT"),u=await nG.getAsync("WASM_HAS_SIMD_SUPPORT"),e.config.debug&&log(`wasm execution: ${u?"simd":"no simd"} ${t?"multithreaded":"singlethreaded"}`),e.config.debug&&!u&&log("warning: wasm simd support is not enabled")}catch(e){log("wasm detection failed")}}try{await Sme(e.config.backend),await Ime()}catch(t){return log("error: cannot set backend:",e.config.backend,t),!1}e.config.debug&&(Tj=JSON.parse(JSON.stringify(nG.flags)))}if(("humangl"===sk()||"webgl"===sk())&&(nG.flagRegistry.WEBGL_USE_SHAPES_UNIFORMS&&nG.set("WEBGL_USE_SHAPES_UNIFORMS",!0),nG.flagRegistry.WEBGL_EXP_CONV&&nG.set("WEBGL_EXP_CONV",!0),e.config.debug&&void 0!==e.config.deallocate&&e.config.deallocate&&(log("changing webgl: WEBGL_DELETE_TEXTURE_THRESHOLD:",!0),nG.set("WEBGL_DELETE_TEXTURE_THRESHOLD",0))),sk(),e.config.debug){let t=nG.flags,u={};for(let e of Object.keys(t))Tj[e]!==t[e]&&(u[e]=t[e]);e.config.debug&&Object.keys(u).length>0&&log("backend:",sk(),"flags:",u)}if(e.config.flags&&Object.keys(e.config.flags).length>0)for(let[t,u]of(e.config.debug&&log("flags:",e.config.flags),Object.entries(e.config.flags)))nG.set(t,u);hme(),TH.tf255=ke(255,"float32"),TH.tf1=ke(1,"float32"),TH.tf2=ke(2,"float32"),TH.tf05=ke(.5,"float32"),TH.tf127=ke(127.5,"float32"),TH.rgb=Jt([.2989,.587,.114],"float32"),e.performance.initBackend=Math.trunc(now()-t),e.config.backend=sk(),await Cw.updateBackend(),function(e){let t=[];if(!Cw.kernels.includes("mod")){let e={kernelName:"Mod",backendName:sk(),kernelFunc:e=>De(()=>u1(e.inputs.a,o8(o6(e.inputs.a,e.inputs.b),e.inputs.b)))};ti(e),Cw.kernels.push("mod"),t.push("mod")}if(!Cw.kernels.includes("floormod")){let e={kernelName:"FloorMod",backendName:sk(),kernelFunc:e=>De(()=>o7(o8(o4(e.inputs.a,e.inputs.b),e.inputs.b),dc(e.inputs.a,e.inputs.b)))};ti(e),Cw.kernels.push("floormod"),t.push("floormod")}if(!Cw.kernels.includes("rotatewithoffset")&&e.softwareKernels){let e={kernelName:"RotateWithOffset",backendName:sk(),kernelFunc:e=>De(()=>{let t=sk();Sme("cpu");let u=c$.rotateWithOffset(e.inputs.image,e.attrs.radians,e.attrs.fillValue,e.attrs.center);return Sme(t),u})};ti(e),Cw.kernels.push("rotatewithoffset"),t.push("rotatewithoffset")}t.length>0&&e.debug&&log("registered kernels:",t)}(e.config)}return!0}function fakeOps(e,t){for(let u of e){let e={kernelName:u,backendName:t.backend,kernelFunc:e=>{var y;return t.debug&&log("kernelFunc",u,t.backend,e),null==(y=null==e?void 0:e.inputs)?void 0:y.info}};ti(e)}Cw.kernels=Ym(sk()).map(e=>e.kernelName.toLowerCase())}var Tq={};__export(Tq,{all:()=>all,body:()=>body,canvas:()=>canvas2,face:()=>face,gesture:()=>gesture,hand:()=>hand,init:()=>init2,object:()=>object,options:()=>TK,person:()=>person,tensor:()=>tensor});var getCanvasContext=e=>{if(e){if(e.getContext){let t=e.getContext("2d",{willReadFrequently:!0});if(t)return t;log("draw error: cannot get canvas context")}else log("draw error: canvas context not defined")}else log("draw error: invalid canvas");return null},rad2deg=e=>Math.round(180*e/Math.PI),replace=(e,t,u)=>e.replace(t,"number"==typeof u?u.toFixed(1):u),colorDepth=(e,t)=>{if(!t.useDepth||void 0===e)return t.color;let u=Uint8ClampedArray.from([127+2*e,127-2*e,255]);return`rgba(${u[0]}, ${u[1]}, ${u[2]}, ${t.alpha})`};function labels(e,t,u,y,w){let T=t.replace(/\[.*\]/g,"").split("\n").map(e=>e.trim()),$=Math.max(0,u);for(let t=T.length-1;t>=0;t--){let u=t*w.lineHeight+y;w.shadowColor&&""!==w.shadowColor&&(e.fillStyle=w.shadowColor,e.fillText(T[t],$+5,u+16)),e.fillStyle=w.labelColor,e.fillText(T[t],$+4,u+15)}}function point(e,t,u,y,w){e.fillStyle=colorDepth(y,w),e.beginPath(),e.arc(t,u,w.pointSize,0,2*Math.PI),e.fill()}function rect(e,t,u,y,w,T){if(e.beginPath(),e.lineWidth=T.lineWidth,T.useCurves){let T=(t+t+y)/2,$=(u+u+w)/2;e.ellipse(T,$,y/2,w/2,0,0,2*Math.PI)}else e.moveTo(t+T.roundRect,u),e.lineTo(t+y-T.roundRect,u),e.quadraticCurveTo(t+y,u,t+y,u+T.roundRect),e.lineTo(t+y,u+w-T.roundRect),e.quadraticCurveTo(t+y,u+w,t+y-T.roundRect,u+w),e.lineTo(t+T.roundRect,u+w),e.quadraticCurveTo(t,u+w,t,u+w-T.roundRect),e.lineTo(t,u+T.roundRect),e.quadraticCurveTo(t,u,t+T.roundRect,u),e.closePath();e.stroke()}function lines(e,t,u){if(!(t.length<2)){for(let y of(e.beginPath(),e.moveTo(t[0][0],t[0][1]),t))e.strokeStyle=colorDepth(y[2]||0,u),e.lineTo(Math.trunc(y[0]),Math.trunc(y[1]));e.stroke(),u.fillPolygons&&(e.closePath(),e.fill())}}function arrow(e,t,u,y=5){let w,T,$;e.beginPath(),e.moveTo(t[0],t[1]),e.lineTo(u[0],u[1]),T=y*Math.cos(w=Math.atan2(u[1]-t[1],u[0]-t[0]))+u[0],$=y*Math.sin(w)+u[1],e.moveTo(T,$),w+=1/3*(2*Math.PI),T=y*Math.cos(w)+u[0],$=y*Math.sin(w)+u[1],e.lineTo(T,$),w+=1/3*(2*Math.PI),T=y*Math.cos(w)+u[0],$=y*Math.sin(w)+u[1],e.lineTo(T,$),e.closePath(),e.stroke(),e.fill()}var TK={color:"rgba(173, 216, 230, 0.6)",labelColor:"rgba(173, 216, 230, 1)",shadowColor:"black",alpha:.5,font:'small-caps 16px "Segoe UI"',lineHeight:18,lineWidth:4,pointSize:2,roundRect:8,drawPoints:!1,drawLabels:!0,drawBoxes:!0,drawAttention:!0,drawGestures:!0,drawPolygons:!0,drawGaze:!0,fillPolygons:!1,useDepth:!0,useCurves:!1,faceLabels:"",bodyLabels:"",bodyPartLabels:"",objectLabels:"",handLabels:"",fingerLabels:"",gestureLabels:""},TZ={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[185,40,39,37,0,267,269,270,409],lipsLowerOuter:[61,146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[191,80,81,82,13,312,311,310,415],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],lipsLowerSemiOuter:[76,77,90,180,85,16,315,404,320,307,306],lipsUpperSemiOuter:[184,74,73,72,11,302,303,304,408],lipsLowerSemiInner:[62,96,89,179,86,15,316,403,319,325,292],lipsUpperSemiInner:[183,42,41,38,12,268,271,272,407],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]},TY={count:468,mouth:13,symmetryLine:[13,TZ.midwayBetweenEyes[0]]},TJ={leftEye:0,rightEye:1,nose:2,mouth:3,leftEar:4,rightEar:5,symmetryLine:[3,2]},TQ=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]},{key:"EyebrowUpper",indices:[63,64,65,66,67,68,69,70]},{key:"EyebrowLower",indices:[48,49,50,51,52,53]}],T1=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]],T2=[127,34,139,11,0,37,232,231,120,72,37,39,128,121,47,232,121,128,104,69,67,175,171,148,157,154,155,118,50,101,73,39,40,9,151,108,48,115,131,194,204,211,74,40,185,80,42,183,40,92,186,230,229,118,202,212,214,83,18,17,76,61,146,160,29,30,56,157,173,106,204,194,135,214,192,203,165,98,21,71,68,51,45,4,144,24,23,77,146,91,205,50,187,201,200,18,91,106,182,90,91,181,85,84,17,206,203,36,148,171,140,92,40,39,193,189,244,159,158,28,247,246,161,236,3,196,54,68,104,193,168,8,117,228,31,189,193,55,98,97,99,126,47,100,166,79,218,155,154,26,209,49,131,135,136,150,47,126,217,223,52,53,45,51,134,211,170,140,67,69,108,43,106,91,230,119,120,226,130,247,63,53,52,238,20,242,46,70,156,78,62,96,46,53,63,143,34,227,173,155,133,123,117,111,44,125,19,236,134,51,216,206,205,154,153,22,39,37,167,200,201,208,36,142,100,57,212,202,20,60,99,28,158,157,35,226,113,160,159,27,204,202,210,113,225,46,43,202,204,62,76,77,137,123,116,41,38,72,203,129,142,64,98,240,49,102,64,41,73,74,212,216,207,42,74,184,169,170,211,170,149,176,105,66,69,122,6,168,123,147,187,96,77,90,65,55,107,89,90,180,101,100,120,63,105,104,93,137,227,15,86,85,129,102,49,14,87,86,55,8,9,100,47,121,145,23,22,88,89,179,6,122,196,88,95,96,138,172,136,215,58,172,115,48,219,42,80,81,195,3,51,43,146,61,171,175,199,81,82,38,53,46,225,144,163,110,246,33,7,52,65,66,229,228,117,34,127,234,107,108,69,109,108,151,48,64,235,62,78,191,129,209,126,111,35,143,163,161,246,117,123,50,222,65,52,19,125,141,221,55,65,3,195,197,25,7,33,220,237,44,70,71,139,122,193,245,247,130,33,71,21,162,153,158,159,170,169,150,188,174,196,216,186,92,144,160,161,2,97,167,141,125,241,164,167,37,72,38,12,145,159,160,38,82,13,63,68,71,226,35,111,158,153,154,101,50,205,206,92,165,209,198,217,165,167,97,220,115,218,133,112,243,239,238,241,214,135,169,190,173,133,171,208,32,125,44,237,86,87,178,85,86,179,84,85,180,83,84,181,201,83,182,137,93,132,76,62,183,61,76,184,57,61,185,212,57,186,214,207,187,34,143,156,79,239,237,123,137,177,44,1,4,201,194,32,64,102,129,213,215,138,59,166,219,242,99,97,2,94,141,75,59,235,24,110,228,25,130,226,23,24,229,22,23,230,26,22,231,112,26,232,189,190,243,221,56,190,28,56,221,27,28,222,29,27,223,30,29,224,247,30,225,238,79,20,166,59,75,60,75,240,147,177,215,20,79,166,187,147,213,112,233,244,233,128,245,128,114,188,114,217,174,131,115,220,217,198,236,198,131,134,177,132,58,143,35,124,110,163,7,228,110,25,356,389,368,11,302,267,452,350,349,302,303,269,357,343,277,452,453,357,333,332,297,175,152,377,384,398,382,347,348,330,303,304,270,9,336,337,278,279,360,418,262,431,304,408,409,310,415,407,270,409,410,450,348,347,422,430,434,313,314,17,306,307,375,387,388,260,286,414,398,335,406,418,364,367,416,423,358,327,251,284,298,281,5,4,373,374,253,307,320,321,425,427,411,421,313,18,321,405,406,320,404,405,315,16,17,426,425,266,377,400,369,322,391,269,417,465,464,386,257,258,466,260,388,456,399,419,284,332,333,417,285,8,346,340,261,413,441,285,327,460,328,355,371,329,392,439,438,382,341,256,429,420,360,364,394,379,277,343,437,443,444,283,275,440,363,431,262,369,297,338,337,273,375,321,450,451,349,446,342,467,293,334,282,458,461,462,276,353,383,308,324,325,276,300,293,372,345,447,382,398,362,352,345,340,274,1,19,456,248,281,436,427,425,381,256,252,269,391,393,200,199,428,266,330,329,287,273,422,250,462,328,258,286,384,265,353,342,387,259,257,424,431,430,342,353,276,273,335,424,292,325,307,366,447,345,271,303,302,423,266,371,294,455,460,279,278,294,271,272,304,432,434,427,272,407,408,394,430,431,395,369,400,334,333,299,351,417,168,352,280,411,325,319,320,295,296,336,319,403,404,330,348,349,293,298,333,323,454,447,15,16,315,358,429,279,14,15,316,285,336,9,329,349,350,374,380,252,318,402,403,6,197,419,318,319,325,367,364,365,435,367,397,344,438,439,272,271,311,195,5,281,273,287,291,396,428,199,311,271,268,283,444,445,373,254,339,263,466,249,282,334,296,449,347,346,264,447,454,336,296,299,338,10,151,278,439,455,292,407,415,358,371,355,340,345,372,390,249,466,346,347,280,442,443,282,19,94,370,441,442,295,248,419,197,263,255,359,440,275,274,300,383,368,351,412,465,263,467,466,301,368,389,380,374,386,395,378,379,412,351,419,436,426,322,373,390,388,2,164,393,370,462,461,164,0,267,302,11,12,374,373,387,268,12,13,293,300,301,446,261,340,385,384,381,330,266,425,426,423,391,429,355,437,391,327,326,440,457,438,341,382,362,459,457,461,434,430,394,414,463,362,396,369,262,354,461,457,316,403,402,315,404,403,314,405,404,313,406,405,421,418,406,366,401,361,306,408,407,291,409,408,287,410,409,432,436,410,434,416,411,264,368,383,309,438,457,352,376,401,274,275,4,421,428,262,294,327,358,433,416,367,289,455,439,462,370,326,2,326,370,305,460,455,254,449,448,255,261,446,253,450,449,252,451,450,256,452,451,341,453,452,413,464,463,441,413,414,258,442,441,257,443,442,259,444,443,260,445,444,467,342,445,459,458,250,289,392,290,290,328,460,376,433,435,250,290,392,411,416,433,341,463,464,453,464,465,357,465,412,343,412,399,360,363,440,437,399,456,420,456,363,401,435,288,372,383,353,339,255,249,448,261,255,133,243,190,133,155,112,33,246,247,33,130,25,398,384,286,362,398,414,362,463,341,263,359,467,263,249,255,466,467,260,75,60,166,238,239,79,162,127,139,72,11,37,121,232,120,73,72,39,114,128,47,233,232,128,103,104,67,152,175,148,173,157,155,119,118,101,74,73,40,107,9,108,49,48,131,32,194,211,184,74,185,191,80,183,185,40,186,119,230,118,210,202,214,84,83,17,77,76,146,161,160,30,190,56,173,182,106,194,138,135,192,129,203,98,54,21,68,5,51,4,145,144,23,90,77,91,207,205,187,83,201,18,181,91,182,180,90,181,16,85,17,205,206,36,176,148,140,165,92,39,245,193,244,27,159,28,30,247,161,174,236,196,103,54,104,55,193,8,111,117,31,221,189,55,240,98,99,142,126,100,219,166,218,112,155,26,198,209,131,169,135,150,114,47,217,224,223,53,220,45,134,32,211,140,109,67,108,146,43,91,231,230,120,113,226,247,105,63,52,241,238,242,124,46,156,95,78,96,70,46,63,116,143,227,116,123,111,1,44,19,3,236,51,207,216,205,26,154,22,165,39,167,199,200,208,101,36,100,43,57,202,242,20,99,56,28,157,124,35,113,29,160,27,211,204,210,124,113,46,106,43,204,96,62,77,227,137,116,73,41,72,36,203,142,235,64,240,48,49,64,42,41,74,214,212,207,183,42,184,210,169,211,140,170,176,104,105,69,193,122,168,50,123,187,89,96,90,66,65,107,179,89,180,119,101,120,68,63,104,234,93,227,16,15,85,209,129,49,15,14,86,107,55,9,120,100,121,153,145,22,178,88,179,197,6,196,89,88,96,135,138,136,138,215,172,218,115,219,41,42,81,5,195,51,57,43,61,208,171,199,41,81,38,224,53,225,24,144,110,105,52,66,118,229,117,227,34,234,66,107,69,10,109,151,219,48,235,183,62,191,142,129,126,116,111,143,7,163,246,118,117,50,223,222,52,94,19,141,222,221,65,196,3,197,45,220,44,156,70,139,188,122,245,139,71,162,145,153,159,149,170,150,122,188,196,206,216,92,163,144,161,164,2,167,242,141,241,0,164,37,11,72,12,144,145,160,12,38,13,70,63,71,31,226,111,157,158,154,36,101,205,203,206,165,126,209,217,98,165,97,237,220,218,237,239,241,210,214,169,140,171,32,241,125,237,179,86,178,180,85,179,181,84,180,182,83,181,194,201,182,177,137,132,184,76,183,185,61,184,186,57,185,216,212,186,192,214,187,139,34,156,218,79,237,147,123,177,45,44,4,208,201,32,98,64,129,192,213,138,235,59,219,141,242,97,97,2,141,240,75,235,229,24,228,31,25,226,230,23,229,231,22,230,232,26,231,233,112,232,244,189,243,189,221,190,222,28,221,223,27,222,224,29,223,225,30,224,113,247,225,99,60,240,213,147,215,60,20,166,192,187,213,243,112,244,244,233,245,245,128,188,188,114,174,134,131,220,174,217,236,236,198,134,215,177,58,156,143,124,25,110,7,31,228,25,264,356,368,0,11,267,451,452,349,267,302,269,350,357,277,350,452,357,299,333,297,396,175,377,381,384,382,280,347,330,269,303,270,151,9,337,344,278,360,424,418,431,270,304,409,272,310,407,322,270,410,449,450,347,432,422,434,18,313,17,291,306,375,259,387,260,424,335,418,434,364,416,391,423,327,301,251,298,275,281,4,254,373,253,375,307,321,280,425,411,200,421,18,335,321,406,321,320,405,314,315,17,423,426,266,396,377,369,270,322,269,413,417,464,385,386,258,248,456,419,298,284,333,168,417,8,448,346,261,417,413,285,326,327,328,277,355,329,309,392,438,381,382,256,279,429,360,365,364,379,355,277,437,282,443,283,281,275,363,395,431,369,299,297,337,335,273,321,348,450,349,359,446,467,283,293,282,250,458,462,300,276,383,292,308,325,283,276,293,264,372,447,346,352,340,354,274,19,363,456,281,426,436,425,380,381,252,267,269,393,421,200,428,371,266,329,432,287,422,290,250,328,385,258,384,446,265,342,386,387,257,422,424,430,445,342,276,422,273,424,306,292,307,352,366,345,268,271,302,358,423,371,327,294,460,331,279,294,303,271,304,436,432,427,304,272,408,395,394,431,378,395,400,296,334,299,6,351,168,376,352,411,307,325,320,285,295,336,320,319,404,329,330,349,334,293,333,366,323,447,316,15,315,331,358,279,317,14,316,8,285,9,277,329,350,253,374,252,319,318,403,351,6,419,324,318,325,397,367,365,288,435,397,278,344,439,310,272,311,248,195,281,375,273,291,175,396,199,312,311,268,276,283,445,390,373,339,295,282,296,448,449,346,356,264,454,337,336,299,337,338,151,294,278,455,308,292,415,429,358,355,265,340,372,388,390,466,352,346,280,295,442,282,354,19,370,285,441,295,195,248,197,457,440,274,301,300,368,417,351,465,251,301,389,385,380,386,394,395,379,399,412,419,410,436,322,387,373,388,326,2,393,354,370,461,393,164,267,268,302,12,386,374,387,312,268,13,298,293,301,265,446,340,380,385,381,280,330,425,322,426,391,420,429,437,393,391,326,344,440,438,458,459,461,364,434,394,428,396,262,274,354,457,317,316,402,316,315,403,315,314,404,314,313,405,313,421,406,323,366,361,292,306,407,306,291,408,291,287,409,287,432,410,427,434,411,372,264,383,459,309,457,366,352,401,1,274,4,418,421,262,331,294,358,435,433,367,392,289,439,328,462,326,94,2,370,289,305,455,339,254,448,359,255,446,254,253,449,253,252,450,252,256,451,256,341,452,414,413,463,286,441,414,286,258,441,258,257,442,257,259,443,259,260,444,260,467,445,309,459,250,305,289,290,305,290,460,401,376,435,309,250,392,376,411,433,453,341,464,357,453,465,343,357,412,437,343,399,344,360,440,420,437,456,360,420,363,361,401,288,265,372,353,390,339,249,339,448,255];function connectionsToIndices(e){let t=e.map(e=>e[0]);return t.push(e[e.length-1][1]),t}function connectionsToIndices2(e){let t=e.map(e=>e[0]);return t.push(e[e.length-1][1]),t}[127,234,132,58,172,150,149,148,152,377,378,379,397,288,361,454,356,70,63,105,66,107,336,296,334,293,300,168,6,195,4,98,97,2,326,327,33,160,158,133,153,144,362,385,387,263,373,380,57,40,37,0,267,270,287,321,314,17,84,91,78,81,13,311,308,402,14,178].map(e=>T1[e]),[33,133,362,263,1,62,308,159,145,386,374,6,102,331,2,13,14,70,105,107,336,334,300,54,10,284,50,280,234,454,58,288,152].map(e=>T1[e]),[33,133,362,263,1,78,308].map(e=>T1[e]),connectionsToIndices([[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]]),connectionsToIndices([[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]]),connectionsToIndices([[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]]),connectionsToIndices([[474,475],[475,476],[476,477],[477,474]]),connectionsToIndices([[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]]),connectionsToIndices([[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]]),connectionsToIndices([[469,470],[470,471],[471,472],[472,469]]),connectionsToIndices([[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]]),Object.entries({lips:connectionsToIndices2([[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]]),leftEye:connectionsToIndices2([[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]]),leftEyebrow:connectionsToIndices2([[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]]),leftIris:connectionsToIndices2([[474,475],[475,476],[476,477],[477,474]]),rightEye:connectionsToIndices2([[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]]),rightEyebrow:connectionsToIndices2([[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]]),rightIris:connectionsToIndices2([[469,470],[470,471],[471,472],[472,469]]),faceOval:connectionsToIndices2([[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]])}).map(([e,t])=>t.map(t=>[t,e])).flat();var T3=[61,146,91,181,84,17,314,405,321,375,291,185,40,39,37,0,267,269,270,409,78,95,88,178,87,14,317,402,318,324,308,191,80,81,82,13,312,311,310,415,76,77,90,180,85,16,315,404,320,307,306,184,74,73,72,11,302,303,304,408,62,96,89,179,86,15,316,403,319,325,292,183,42,41,38,12,268,271,272,407],T7=[33,7,163,144,145,153,154,155,133,246,161,160,159,158,157,173,130,25,110,24,23,22,26,112,243,247,30,29,27,28,56,190,226,31,228,229,230,231,232,233,244,113,225,224,223,222,221,189,35,124,46,53,52,65,143,111,117,118,119,120,121,128,245,156,70,63,105,66,107,55,193],T4=[263,249,390,373,374,380,381,382,362,466,388,387,386,385,384,398,359,255,339,254,253,252,256,341,463,467,260,259,257,258,286,414,446,261,448,449,450,451,452,453,464,342,445,444,443,442,441,413,265,353,276,283,282,295,372,340,346,347,348,349,350,357,465,383,300,293,334,296,336,285,417];function face(e,t,u){if(aT=mergeDeep(TK,u),!t||!e)return;let y=getCanvasContext(e);if(y)for(let e of(y.font=aT.font,y.strokeStyle=aT.color,y.fillStyle=aT.color,t))aT.drawBoxes&&rect(y,e.box[0],e.box[1],e.box[2],e.box[3],aT),function(e,t){var u,y,w,T,$,M,O,P,z;if(!aT.drawLabels||(null==(u=aT.faceLabels)?void 0:u.length)===0)return;let L=aT.faceLabels.slice();if(L=replace(L,"[id]",e.id.toFixed(0)),e.score&&(L=replace(L,"[score]",100*e.score)),e.gender&&(L=replace(L,"[gender]",e.gender)),e.genderScore&&(L=replace(L,"[genderScore]",100*e.genderScore)),e.age&&(L=replace(L,"[age]",e.age)),e.distance&&(L=replace(L,"[distance]",100*e.distance)),e.real&&(L=replace(L,"[real]",100*e.real)),e.live&&(L=replace(L,"[live]",100*e.live)),e.emotion&&e.emotion.length>0){let t=e.emotion.map(e=>`${Math.trunc(100*e.score)}% ${e.emotion}`);t.length>3&&(t.length=3),L=replace(L,"[emotions]",t.join(" "))}(null==(w=null==(y=e.rotation)?void 0:y.angle)?void 0:w.roll)&&(L=replace(L,"[roll]",rad2deg(e.rotation.angle.roll))),(null==($=null==(T=e.rotation)?void 0:T.angle)?void 0:$.yaw)&&(L=replace(L,"[yaw]",rad2deg(e.rotation.angle.yaw))),(null==(O=null==(M=e.rotation)?void 0:M.angle)?void 0:O.pitch)&&(L=replace(L,"[pitch]",rad2deg(e.rotation.angle.pitch))),(null==(z=null==(P=e.rotation)?void 0:P.gaze)?void 0:z.bearing)&&(L=replace(L,"[gaze]",rad2deg(e.rotation.gaze.bearing))),labels(t,L,e.box[0],e.box[1],aT)}(e,y),e.mesh&&e.mesh.length>0&&(function(e,t){if(aT.drawPoints){if((null==e?void 0:e.mesh.length)>=468)for(let u=0;u<e.mesh.length;u++)point(t,e.mesh[u][0],e.mesh[u][1],e.mesh[u][2],aT),aT.drawAttention&&(T3.includes(u)&&point(t,e.mesh[u][0],e.mesh[u][1],e.mesh[u][2]+127,aT),T7.includes(u)&&point(t,e.mesh[u][0],e.mesh[u][1],e.mesh[u][2]-127,aT),T4.includes(u)&&point(t,e.mesh[u][0],e.mesh[u][1],e.mesh[u][2]-127,aT));else for(let[u,y]of Object.entries((null==e?void 0:e.annotations)||{})){if(!(null==y?void 0:y[0]))continue;let e=y[0];point(t,e[0],e[1],0,aT),aT.drawLabels&&labels(t,u,e[0],e[1],aT)}}}(e,y),function(e,t){if(aT.drawPolygons&&e.mesh.length>=468){t.lineWidth=1;for(let u=0;u<T2.length/3;u++){let y=[T2[3*u+0],T2[3*u+1],T2[3*u+2]].map(t=>e.mesh[t]);lines(t,y,aT)}!function(e,t){var u,y,w,T;if((null==(u=e.annotations)?void 0:u.leftEyeIris)&&(null==(y=e.annotations)?void 0:y.leftEyeIris[0])){t.strokeStyle=aT.useDepth?"rgba(255, 200, 255, 0.3)":aT.color,t.beginPath();let u=Math.abs(e.annotations.leftEyeIris[3][0]-e.annotations.leftEyeIris[1][0])/2,y=Math.abs(e.annotations.leftEyeIris[4][1]-e.annotations.leftEyeIris[2][1])/2;t.ellipse(e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1],u,y,0,0,2*Math.PI),t.stroke(),aT.fillPolygons&&(t.fillStyle=aT.useDepth?"rgba(255, 255, 200, 0.3)":aT.color,t.fill())}if((null==(w=e.annotations)?void 0:w.rightEyeIris)&&(null==(T=e.annotations)?void 0:T.rightEyeIris[0])){t.strokeStyle=aT.useDepth?"rgba(255, 200, 255, 0.3)":aT.color,t.beginPath();let u=Math.abs(e.annotations.rightEyeIris[3][0]-e.annotations.rightEyeIris[1][0])/2,y=Math.abs(e.annotations.rightEyeIris[4][1]-e.annotations.rightEyeIris[2][1])/2;t.ellipse(e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1],u,y,0,0,2*Math.PI),t.stroke(),aT.fillPolygons&&(t.fillStyle=aT.useDepth?"rgba(255, 255, 200, 0.3)":aT.color,t.fill())}}(e,t)}}(e,y),function(e,t){var u;if(aT.drawGaze&&(null==(u=e.rotation)?void 0:u.angle)&&"undefined"!=typeof Path2D){t.strokeStyle="pink";let u=e.box[0]+e.box[2]/2-e.box[3]*rad2deg(e.rotation.angle.yaw)/90,y=e.box[1]+e.box[3]/2+e.box[2]*rad2deg(e.rotation.angle.pitch)/90,w=new Path2D(`
      M ${e.box[0]+e.box[2]/2} ${e.box[1]}
      C
        ${u} ${e.box[1]},
        ${u} ${e.box[1]+e.box[3]},
        ${e.box[0]+e.box[2]/2} ${e.box[1]+e.box[3]}
    `),T=new Path2D(`
      M ${e.box[0]} ${e.box[1]+e.box[3]/2}
      C 
        ${e.box[0]} ${y},
        ${e.box[0]+e.box[2]} ${y},
        ${e.box[0]+e.box[2]} ${e.box[1]+e.box[3]/2}
    `);t.stroke(T),t.stroke(w)}}(e,y),function(e,t){var u;if(aT.drawGaze&&(null==(u=e.rotation)?void 0:u.gaze.strength)&&e.rotation.gaze.bearing&&e.annotations.leftEyeIris&&e.annotations.rightEyeIris&&e.annotations.leftEyeIris[0]&&e.annotations.rightEyeIris[0]){t.strokeStyle="pink",t.fillStyle="pink";let u=[e.annotations.leftEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.leftEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];arrow(t,[e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1]],[u[0],u[1]],4);let y=[e.annotations.rightEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.rightEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];arrow(t,[e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1]],[y[0],y[1]],4)}}(e,y))}function body(e,t,u){var y,w;let T=mergeDeep(TK,u);if(!t||!e)return;let $=getCanvasContext(e);if($){$.lineJoin="round";for(let e=0;e<t.length;e++){if($.strokeStyle=T.color,$.fillStyle=T.color,$.lineWidth=T.lineWidth,$.font=T.font,T.drawBoxes&&t[e].box&&4===t[e].box.length&&(rect($,t[e].box[0],t[e].box[1],t[e].box[2],t[e].box[3],T),T.drawLabels&&(null==(y=T.bodyLabels)?void 0:y.length)>0)){let u=T.bodyLabels.slice();u=replace(u,"[id]",t[e].id.toFixed(0)),labels($,u=replace(u,"[score]",100*t[e].score),t[e].box[0],t[e].box[1],T)}if(T.drawPoints&&t[e].keypoints)for(let u=0;u<t[e].keypoints.length;u++)t[e].keypoints[u].score&&0!==t[e].keypoints[u].score&&($.fillStyle=colorDepth(t[e].keypoints[u].position[2],T),point($,t[e].keypoints[u].position[0],t[e].keypoints[u].position[1],0,T));if(T.drawLabels&&(null==(w=T.bodyPartLabels)?void 0:w.length)>0&&t[e].keypoints)for(let u of($.font=T.font,t[e].keypoints)){if(!u.score||0===u.score)continue;let e=T.bodyPartLabels.slice();e=replace(e,"[label]",u.part),labels($,e=replace(e,"[score]",100*u.score),u.position[0],u.position[1],T)}if(T.drawPolygons&&t[e].keypoints&&t[e].annotations)for(let u of Object.values(t[e].annotations))for(let e of u)!function(e,t,u){if(!(t.length<2)){if(e.lineWidth=u.lineWidth,!u.useCurves||t.length<=2){lines(e,t,u);return}e.moveTo(t[0][0],t[0][1]);for(let u=0;u<t.length-2;u++){let y=(t[u][0]+t[u+1][0])/2,w=(t[u][1]+t[u+1][1])/2;e.quadraticCurveTo(t[u][0],t[u][1],y,w)}e.quadraticCurveTo(t[t.length-2][0],t[t.length-2][1],t[t.length-1][0],t[t.length-1][1]),e.stroke(),u.fillPolygons&&(e.closePath(),e.fill())}}($,e,T)}}}function hand(e,t,u){var y,w;let T=mergeDeep(TK,u);if(!t||!e)return;let $=getCanvasContext(e);if($)for(let e of($.lineJoin="round",$.font=T.font,t)){if(T.drawBoxes){if($.strokeStyle=T.color,$.fillStyle=T.color,rect($,e.box[0],e.box[1],e.box[2],e.box[3],T),T.drawLabels&&(null==(y=T.handLabels)?void 0:y.length)>0){let t=T.handLabels.slice();t=replace(t,"[id]",e.id.toFixed(0)),t=replace(t,"[label]",e.label),labels($,t=replace(t,"[score]",100*e.score),e.box[0],e.box[1],T)}$.stroke()}if(T.drawPoints&&e.keypoints&&e.keypoints.length>0)for(let t of e.keypoints)$.fillStyle=colorDepth(t[2],T),point($,t[0],t[1],0,T);if(T.drawLabels&&e.annotations&&(null==(w=T.fingerLabels)?void 0:w.length)>0)for(let[t,u]of Object.entries(e.annotations)){let e=T.fingerLabels.slice();labels($,e=replace(e,"[label]",t),u[u.length-1][0],u[u.length-1][1],T)}if(T.drawPolygons&&e.annotations){let addHandLine=e=>{if(e&&0!==e.length&&e[0])for(let t=0;t<e.length;t++){$.beginPath();let u=e[t][2]||0;$.strokeStyle=colorDepth(t*u,T),$.moveTo(e[t>0?t-1:0][0],e[t>0?t-1:0][1]),$.lineTo(e[t][0],e[t][1]),$.stroke()}};$.lineWidth=T.lineWidth,addHandLine(e.annotations.index),addHandLine(e.annotations.middle),addHandLine(e.annotations.ring),addHandLine(e.annotations.pinky),addHandLine(e.annotations.thumb)}}}function object(e,t,u){var y;let w=mergeDeep(TK,u);if(!t||!e)return;let T=getCanvasContext(e);if(T){for(let e of(T.lineJoin="round",T.font=w.font,t))if(w.drawBoxes){if(T.strokeStyle=w.color,T.fillStyle=w.color,rect(T,e.box[0],e.box[1],e.box[2],e.box[3],w),w.drawLabels&&(null==(y=w.objectLabels)?void 0:y.length)>0){let t=w.objectLabels.slice();t=replace(t,"[id]",e.id.toFixed(0)),t=replace(t,"[label]",e.label),labels(T,t=replace(t,"[score]",100*e.score),e.box[0],e.box[1],w)}T.stroke()}}}function gesture(e,t,u){var y;let w=mergeDeep(TK,u);if(t&&e&&w.drawGestures&&(null==(y=w.gestureLabels)?void 0:y.length)>0){let u=getCanvasContext(e);if(!u)return;u.font=w.font,u.fillStyle=w.color;let y=1;for(let e=0;e<t.length;e++){let[T,$]=Object.entries(t[e]);if($.length>1&&$[1].length>0){let e=T[1]>0?`#${T[1]}`:"",t=w.gestureLabels.slice();t=replace(t,"[where]",T[0]),t=replace(t,"[who]",e),labels(u,t=replace(t,"[what]",$[1]),8,2+y*w.lineHeight,w),y+=1}}}}var T6={face:`face
    confidence: [score]%
    [gender] [genderScore]%
    age: [age] years
    distance: [distance]cm
    real: [real]%
    live: [live]%
    [emotions]
    roll: [roll]\xb0 yaw:[yaw]\xb0 pitch:[pitch]\xb0
    gaze: [gaze]\xb0`,body:"body [score]%",bodyPart:"[label] [score]%",object:"[label] [score]%",hand:"[label] [score]%",finger:"[label]",gesture:"[where] [who]: [what]"},T8=0;function person(e,t,u){let y=mergeDeep(TK,u);if(!t||!e)return;let w=getCanvasContext(e);if(w){w.lineJoin="round",w.font=y.font;for(let e=0;e<t.length;e++)if(y.drawBoxes){if(w.strokeStyle=y.color,w.fillStyle=y.color,rect(w,t[e].box[0],t[e].box[1],t[e].box[2],t[e].box[3],y),y.drawLabels){let u=`person #${e}`;y.shadowColor&&""!==y.shadowColor&&(w.fillStyle=y.shadowColor,w.fillText(u,t[e].box[0]+3,1+t[e].box[1]+y.lineHeight,t[e].box[2])),w.fillStyle=y.labelColor,w.fillText(u,t[e].box[0]+2,0+t[e].box[1]+y.lineHeight,t[e].box[2])}w.stroke()}}}function canvas2(e,t){if(!e||!t)return;let u=getCanvasContext(t);u&&u.drawImage(e,0,0)}async function tensor(e,t){e&&t&&Cw.browser&&await ht.toPixels(e,t)}async function all(e,t,u){if(!(null==t?void 0:t.performance)||!e)return null;let y=now(),w=mergeDeep(TK,u),T=Promise.all([face(e,t.face,w),body(e,t.body,w),hand(e,t.hand,w),object(e,t.object,w),gesture(e,t.gesture,w)]);return T8=Cw.perfadd?T8+Math.round(now()-y):Math.round(now()-y),t.performance.draw=T8,T}function init2(){TK.faceLabels=T6.face,TK.bodyLabels=T6.body,TK.bodyPartLabels=T6.bodyPart,TK.handLabels=T6.hand,TK.fingerLabels=T6.finger,TK.objectLabels=T6.object,TK.gestureLabels=T6.gesture}var T9={};__export(T9,{connected:()=>Ea,kpt:()=>Et});var Et=["nose","leftEyeInside","leftEye","leftEyeOutside","rightEyeInside","rightEye","rightEyeOutside","leftEar","rightEar","leftMouth","rightMouth","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftPinky","rightPinky","leftIndex","rightIndex","leftThumb","rightThumb","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle","leftHeel","rightHeel","leftFoot","rightFoot","bodyCenter","bodyTop","leftPalm","leftHand","rightPalm","rightHand"],Ea={shoulders:["leftShoulder","rightShoulder"],hips:["rightHip","leftHip"],mouth:["leftMouth","rightMouth"],leftLegUpper:["leftHip","leftKnee"],leftLegLower:["leftKnee","leftAnkle"],leftFoot:["leftAnkle","leftHeel","leftFoot"],leftTorso:["leftShoulder","leftHip"],leftArmUpper:["leftShoulder","leftElbow"],leftArmLower:["leftElbow","leftWrist"],leftHand:["leftWrist","leftPalm"],leftHandPinky:["leftPalm","leftPinky"],leftHandIndex:["leftPalm","leftIndex"],leftHandThumb:["leftPalm","leftThumb"],leftEyeOutline:["leftEyeInside","leftEyeOutside"],rightLegUpper:["rightHip","rightKnee"],rightLegLower:["rightKnee","rightAnkle"],rightFoot:["rightAnkle","rightHeel","rightFoot"],rightTorso:["rightShoulder","rightHip"],rightArmUpper:["rightShoulder","rightElbow"],rightArmLower:["rightElbow","rightWrist"],rightHand:["rightWrist","rightPalm"],rightHandPinky:["rightPalm","rightPinky"],rightHandIndex:["rightPalm","rightIndex"],rightHandThumb:["rightPalm","rightThumb"],rightEyeOutline:["rightEyeInside","rightEyeOutside"]},En=224,Er=[8,16,32,32,32];async function loadDetector(e){if(Cw.initial&&(aE=null),!aE&&e.body.detector&&e.body.detector.modelPath){aE=await loadModel(e.body.detector.modelPath);let t=(null==aE?void 0:aE.executor)?Object.values(aE.modelSignature.inputs):void 0;En=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0}else e.debug&&aE&&log("cached model:",aE.modelUrl);return!function(){let e=[],t=0;for(;t<5;){let u=0,y=t;for(;y<Er.length&&Er[y]===Er[t];)u+=2,y++;let w=Er[t],T=Math.ceil(En/w),$=Math.ceil(En/w);for(let t=0;t<T;++t)for(let y=0;y<$;++y)for(let w=0;w<u;++w)e.push({x:(y+.5)/$,y:(t+.5)/T});t=y}aR={x:Jt(e.map(e=>e.x)),y:Jt(e.map(e=>e.y))}}(),aE}async function decodeResults(e,t,u,y){var w,T,$;let M=[],O={};O.boxes=($=aR,De(()=>{let t=ph(e,12,1),u=pg(t[0]),y=pg(t[1]),w=pg(t[2]),T=pg(t[3]);u=o7(o6(u,En),$.x),y=o7(o6(y,En),$.y),w=o8(o6(w,En),5),T=o8(o6(T,En),5);let M=u1(u,o6(w,2)),O=u1(y,o6(T,2)),P=o7(M,w),z=o7(O,T),L=py([M,O,P,z],1);return L})),O.scores=lS(t),O.nms=await c$.nonMaxSuppressionAsync(O.boxes,O.scores,1,(null==(w=u.body.detector)?void 0:w.minConfidence)||.1,(null==(T=u.body.detector)?void 0:T.iouThreshold)||.1);let P=await O.nms.data(),z=await O.scores.data(),L=await O.boxes.array();for(let e of Array.from(P)){let t=z[e],u=L[e],w=[Math.round(u[0]*y[0]),Math.round(u[1]*y[1]),Math.round(u[2]*y[0]),Math.round(u[3]*y[1])],T={score:t,boxRaw:u,box:w};M.push(T)}return Object.keys(O).forEach(e=>Ot(O[e])),M}async function detectBoxes(e,t,u){let y={};y.res=null==aE?void 0:aE.execute(e,["Identity"]),y.logitsRaw=lN(y.res,[0,0,0],[1,-1,1]),y.boxesRaw=lN(y.res,[0,0,1],[1,-1,-1]),y.logits=pg(y.logitsRaw),y.boxes=pg(y.boxesRaw);let w=await decodeResults(y.boxes,y.logits,t,u);return Object.keys(y).forEach(e=>Ot(y[e])),w}function calc(e,t=[1,1]){let u=[e.map(e=>e[0]),e.map(e=>e[1])],y=[Math.min(...u[0]),Math.min(...u[1])],w=[Math.max(...u[0]),Math.max(...u[1])],T=[y[0],y[1],w[0]-y[0],w[1]-y[1]],$=[T[0]/t[0],T[1]/t[1],T[2]/t[0],T[3]/t[1]];return{box:T,boxRaw:$}}function scale(e,t){let u=[e[2]*t,e[3]*t],y=[e[0]-(u[0]-e[2])/2,e[1]-(u[1]-e[3])/2,u[0],u[1]];return y}var Es=256,El=Number.MAX_SAFE_INTEGER,Ed={landmarks:["ld_3d","activation_segmentation","activation_heatmap","world_3d","output_poseflag"]},Ec=[],Eh=[[0,0],[0,0],[0,0],[0,0]],Eg=0,sigmoid=e=>1-1/(1+Math.exp(e)),loadDetect=e=>loadDetector(e);async function loadPose(e){if(Cw.initial&&(a$=null),a$)e.debug&&log("cached model:",a$.modelUrl);else{a$=await loadModel(e.body.modelPath);let t=(null==a$?void 0:a$.executor)?Object.values(a$.modelSignature.inputs):void 0;Es=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0}return a$}function prepareImage(e,t,u){var y,w;let T;let $={};if(!(null==(y=null==e?void 0:e.shape)?void 0:y[1])||!(null==(w=null==e?void 0:e.shape)?void 0:w[2]))return e;if(u&&($.cropped=c$.cropAndResize(e,[u],[0],[e.shape[1],e.shape[2]])),e.shape[1]!==e.shape[2]){let u=[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],y=[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0];Eh=[[0,0],u,y,[0,0]],$.pad=dN($.cropped||e,Eh),$.resize=c$.resizeBilinear($.pad,[t,t]),T=o6($.resize,TH.tf255)}else e.shape[1]!==t?($.resize=c$.resizeBilinear($.cropped||e,[t,t]),T=o6($.resize,TH.tf255)):T=o6($.cropped||e,TH.tf255);return Object.keys($).forEach(e=>Ot($[e])),T}async function detectLandmarks(e,t,u){if(!(null==a$?void 0:a$.executor))return null;let y={};[y.ld,y.segmentation,y.heatmap,y.world,y.poseflag]=null==a$?void 0:a$.execute(e,Ed.landmarks);let w=(await y.poseflag.data())[0],T=await y.ld.data(),$=await y.world.data();Object.keys(y).forEach(e=>Ot(y[e]));let M=[];for(let e=0;e<T.length/5;e++){let t=sigmoid(T[5*e+3]),y=sigmoid(T[5*e+4]),O=Math.trunc(100*t*y*w)/100,P=[T[5*e+0]/Es,T[5*e+1]/Es,T[5*e+2]+0],z=[Math.trunc(u[0]*P[0]),Math.trunc(u[1]*P[1]),P[2]],L=[$[5*e+0],$[5*e+1],$[5*e+2]+0];M.push({part:Et[e],positionRaw:P,position:z,distance:L,score:O})}if(w<(t.body.minConfidence||0))return null;!function(e){let t=e.find(e=>"leftPalm"===e.part),u=e.find(e=>"leftWrist"===e.part),y=e.find(e=>"leftIndex"===e.part);t.position[2]=((u.position[2]||0)+(y.position[2]||0))/2;let w=e.find(e=>"rightPalm"===e.part),T=e.find(e=>"rightWrist"===e.part),$=e.find(e=>"rightIndex"===e.part);w.position[2]=((T.position[2]||0)+($.position[2]||0))/2}(M);let O=function(e,t,u){for(let u of e)u.position=[Math.trunc(u.position[0]*(t[0]+Eh[2][0]+Eh[2][1])/t[0]-Eh[2][0]),Math.trunc(u.position[1]*(t[1]+Eh[1][0]+Eh[1][1])/t[1]-Eh[1][0]),u.position[2]],u.positionRaw=[u.position[0]/t[0],u.position[1]/t[1],2*u.position[2]/(t[0]+t[1])];if(u){let y=u[2]-u[0],w=u[3]-u[1];for(let T of e)T.positionRaw=[T.positionRaw[0]/w+u[1],T.positionRaw[1]/y+u[0],T.positionRaw[2]],T.position=[Math.trunc(T.positionRaw[0]*t[0]),Math.trunc(T.positionRaw[1]*t[1]),T.positionRaw[2]]}return e}(M,u),P=O.map(e=>e.position),z=calc(P,[u[0],u[1]]),L={};for(let[e,t]of Object.entries(Ea)){let u=[];for(let e=0;e<t.length-1;e++){let y=O.find(u=>u.part===t[e]),w=O.find(u=>u.part===t[e+1]);y&&w&&u.push([y.position,w.position])}L[e]=u}let W={id:0,score:Math.trunc(100*w)/100,box:z.box,boxRaw:z.boxRaw,keypoints:O,annotations:L};return W}async function predict(e,t){var u,y,w;let T=[e.shape[2]||0,e.shape[1]||0],$=(t.body.skipTime||0)>now()-Eg,M=El<(t.body.skipFrames||0);if(t.skipAllowed&&$&&M&&null!==Ec)El++;else{let $=[];if(null==(y=null==(u=t.body)?void 0:u.detector)?void 0:y.enabled){let u=prepareImage(e,224);$=await detectBoxes(u,t,T),Ot(u)}else $=[{box:[0,0,0,0],boxRaw:[0,0,1,1],score:0}];for(let u=0;u<$.length;u++){let y=prepareImage(e,256,null==(w=$[u])?void 0:w.boxRaw);Ec.length=0;let M=await detectLandmarks(y,t,T);Ot(y),M&&(M.id=u,Ec.push(M))}Eg=now(),El=0}return Ec}var Ey=[{class:1,label:"person"},{class:2,label:"bicycle"},{class:3,label:"car"},{class:4,label:"motorcycle"},{class:5,label:"airplane"},{class:6,label:"bus"},{class:7,label:"train"},{class:8,label:"truck"},{class:9,label:"boat"},{class:10,label:"traffic light"},{class:11,label:"fire hydrant"},{class:12,label:"stop sign"},{class:13,label:"parking meter"},{class:14,label:"bench"},{class:15,label:"bird"},{class:16,label:"cat"},{class:17,label:"dog"},{class:18,label:"horse"},{class:19,label:"sheep"},{class:20,label:"cow"},{class:21,label:"elephant"},{class:22,label:"bear"},{class:23,label:"zebra"},{class:24,label:"giraffe"},{class:25,label:"backpack"},{class:26,label:"umbrella"},{class:27,label:"handbag"},{class:28,label:"tie"},{class:29,label:"suitcase"},{class:30,label:"frisbee"},{class:31,label:"skis"},{class:32,label:"snowboard"},{class:33,label:"sports ball"},{class:34,label:"kite"},{class:35,label:"baseball bat"},{class:36,label:"baseball glove"},{class:37,label:"skateboard"},{class:38,label:"surfboard"},{class:39,label:"tennis racket"},{class:40,label:"bottle"},{class:41,label:"wine glass"},{class:42,label:"cup"},{class:43,label:"fork"},{class:44,label:"knife"},{class:45,label:"spoon"},{class:46,label:"bowl"},{class:47,label:"banana"},{class:48,label:"apple"},{class:49,label:"sandwich"},{class:50,label:"orange"},{class:51,label:"broccoli"},{class:52,label:"carrot"},{class:53,label:"hot dog"},{class:54,label:"pizza"},{class:55,label:"donut"},{class:56,label:"cake"},{class:57,label:"chair"},{class:58,label:"couch"},{class:59,label:"potted plant"},{class:60,label:"bed"},{class:61,label:"dining table"},{class:62,label:"toilet"},{class:63,label:"tv"},{class:64,label:"laptop"},{class:65,label:"mouse"},{class:66,label:"remote"},{class:67,label:"keyboard"},{class:68,label:"cell phone"},{class:69,label:"microwave"},{class:70,label:"oven"},{class:71,label:"toaster"},{class:72,label:"sink"},{class:73,label:"refrigerator"},{class:74,label:"book"},{class:75,label:"clock"},{class:76,label:"vase"},{class:77,label:"scissors"},{class:78,label:"teddy bear"},{class:79,label:"hair drier"},{class:80,label:"toothbrush"}],EA=0,Ex=[],Eb=0,Ev=Number.MAX_SAFE_INTEGER;async function load(e){if(Cw.initial&&(a_=null),a_)e.debug&&log("cached model:",a_.modelUrl);else{a_=await loadModel(e.object.modelPath);let t=(null==a_?void 0:a_.executor)?Object.values(a_.modelSignature.inputs):void 0;EA=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}return a_}async function process3(e,t,u){if(!e)return[];let y={},w=[],T=await e.array();y.squeeze=pg(e);let $=ph(y.squeeze,6,1);y.stack=py([$[1],$[0],$[3],$[2]],1),y.boxes=pg(y.stack),y.scores=pg($[4]),y.classes=pg($[5]),Ot([e,...$]),y.nms=await c$.nonMaxSuppressionAsync(y.boxes,y.scores,u.object.maxDetected||0,u.object.iouThreshold,u.object.minConfidence||0);let M=await y.nms.data(),O=0;for(let e of Array.from(M)){let u=Math.trunc(100*T[0][e][4])/100,y=T[0][e][5];if(Number.isNaN(y))continue;let $=Ey[y].label,[M,P]=[T[0][e][0]/EA,T[0][e][1]/EA],z=[M,P,T[0][e][2]/EA-M,T[0][e][3]/EA-P],L=[Math.trunc(z[0]*t[0]),Math.trunc(z[1]*t[1]),Math.trunc(z[2]*t[0]),Math.trunc(z[3]*t[1])];w.push({id:O++,score:u,class:y,label:$,box:L,boxRaw:z})}return Object.keys(y).forEach(e=>Ot(y[e])),w}async function predict2(e,t){if(!(null==a_?void 0:a_.executor))return[];let u=(t.object.skipTime||0)>now()-Eb,y=Ev<(t.object.skipFrames||0);return t.skipAllowed&&u&&y&&Ex.length>0?(Ev++,Ex):(Ev=0,new Promise(async u=>{let y=[e.shape[2]||0,e.shape[1]||0],w=c$.resizeBilinear(e,[EA,EA]),T=t.object.enabled?null==a_?void 0:a_.execute(w,["tower_0/detections"]):null;Eb=now(),Ot(w);let $=await process3(T,y,t);Ex=$,u($)}))}var Ek={};__export(Ek,{connected:()=>EN,kpt:()=>ES});var ES=["head","neck","rightShoulder","rightElbow","rightWrist","chest","leftShoulder","leftElbow","leftWrist","bodyCenter","rightHip","rightKnee","rightAnkle","leftHip","leftKnee","leftAnkle"],EN={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},EC=0,EE={id:0,keypoints:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,annotations:{}},ER=Number.MAX_SAFE_INTEGER;async function load2(e){return Cw.initial&&(aM=null),aM?e.debug&&log("cached model:",aM.modelUrl):aM=await loadModel(e.body.modelPath),aM}async function max2d(e,t){let[u,y]=e.shape,w=lA(e,[y*u]),T=ug(w,0),$=(await T.data())[0];if($>t){let e=ls(w,0),t=dc(e,u),y=(await t.data())[0],M=o6(e,u),O=(await M.data())[0];return Ot([w,T,e,t,M]),[y,O,$]}return Ot([w,T]),[0,0,$]}async function predict3(e,t){if(!(null==aM?void 0:aM.executor)||!(null==aM?void 0:aM.inputs[0].shape))return[];let u=(t.body.skipTime||0)>now()-EC,y=ER<(t.body.skipFrames||0);return t.skipAllowed&&u&&y&&Object.keys(EE.keypoints).length>0?(ER++,[EE]):(ER=0,new Promise(async u=>{let y;let w=De(()=>{var t,u;let y=c$.resizeBilinear(e,[(null==(t=null==aM?void 0:aM.inputs[0].shape)?void 0:t[2])||0,(null==(u=null==aM?void 0:aM.inputs[0].shape)?void 0:u[1])||0],!1),w=o8(y,TH.tf2),T=u1(w,TH.tf1);return T});if(t.body.enabled&&(y=null==aM?void 0:aM.execute(w)),EC=now(),Ot(w),y){EE.keypoints.length=0;let u=pg(y);Ot(y);let w=pR(u,2);Ot(u);for(let u=0;u<w.length;u++){let[y,T,$]=await max2d(w[u],t.body.minConfidence);$>(t.body.minConfidence||0)&&EE.keypoints.push({score:Math.round(100*$)/100,part:ES[u],positionRaw:[y/aM.inputs[0].shape[2],T/aM.inputs[0].shape[1]],position:[Math.round(e.shape[2]*y/aM.inputs[0].shape[2]),Math.round(e.shape[1]*T/aM.inputs[0].shape[1])]})}w.forEach(e=>Ot(e))}EE.score=EE.keypoints.reduce((e,t)=>t.score>e?t.score:e,0);let T=EE.keypoints.map(e=>e.position[0]),$=EE.keypoints.map(e=>e.position[1]);EE.box=[Math.min(...T),Math.min(...$),Math.max(...T)-Math.min(...T),Math.max(...$)-Math.min(...$)];let M=EE.keypoints.map(e=>e.positionRaw[0]),O=EE.keypoints.map(e=>e.positionRaw[1]);for(let[e,u]of(EE.boxRaw=[Math.min(...M),Math.min(...O),Math.max(...M)-Math.min(...M),Math.max(...O)-Math.min(...O)],Object.entries(EN))){let y=[];for(let e=0;e<u.length-1;e++){let w=EE.keypoints.find(t=>t.part===u[e]),T=EE.keypoints.find(t=>t.part===u[e+1]);w&&T&&w.score>(t.body.minConfidence||0)&&T.score>(t.body.minConfidence||0)&&y.push([w.position,T.position])}EE.annotations[e]=y}u([EE])}))}var getBoxSize=e=>[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])],getBoxCenter=e=>[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2,1],clampBox=(e,t)=>e?[Math.trunc(Math.max(0,e.startPoint[0])),Math.trunc(Math.max(0,e.startPoint[1])),Math.trunc(Math.min(t.shape[2]||0,e.endPoint[0])-Math.max(0,e.startPoint[0])),Math.trunc(Math.min(t.shape[1]||0,e.endPoint[1])-Math.max(0,e.startPoint[1]))]:[0,0,0,0],getRawBox=(e,t)=>e?[e.startPoint[0]/(t.shape[2]||0),e.startPoint[1]/(t.shape[1]||0),(e.endPoint[0]-e.startPoint[0])/(t.shape[2]||0),(e.endPoint[1]-e.startPoint[1])/(t.shape[1]||0)]:[0,0,0,0],scaleBoxCoordinates=(e,t,u)=>{let y=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],w=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],T=e.landmarks.map(e=>[(e[0]+u[0])*t[0],(e[1]+u[1])*t[1]]);return{startPoint:y,endPoint:w,landmarks:T,confidence:e.confidence}},cutAndResize=(e,t,u)=>{let y=t.shape[1],w=t.shape[2],T=[e.startPoint[1]/y,e.startPoint[0]/w,e.endPoint[1]/y,e.endPoint[0]/w],$=c$.cropAndResize(t,[T],[0],u),M=o6($,TH.tf255);return Ot($),M},enlargeBox=(e,t)=>{let u=getBoxCenter(e),y=getBoxSize(e),w=[t*y[0]/2,t*y[1]/2];return{startPoint:[u[0]-w[0],u[1]-w[1]],endPoint:[u[0]+w[0],u[1]+w[1]],landmarks:e.landmarks,confidence:e.confidence,size:y}},squarifyBox=e=>{let t=getBoxCenter(e),u=getBoxSize(e),y=Math.max(...u)/2;return{startPoint:[Math.round(t[0]-y),Math.round(t[1]-y)],endPoint:[Math.round(t[0]+y),Math.round(t[1]+y)],landmarks:e.landmarks,confidence:e.confidence,size:[Math.round(u[0]),Math.round(u[1])]}},calculateLandmarksBoundingBox=e=>{let t=e.map(e=>e[0]),u=e.map(e=>e[1]);return{startPoint:[Math.min(...t),Math.min(...u)],endPoint:[Math.max(...t),Math.max(...u)],landmarks:e}},E$=[[1,0,0],[0,1,0],[0,0,1]],normalizeRadians=e=>e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI)),computeRotation=(e,t)=>normalizeRadians(Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0])),buildTranslationMatrix=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]],dot=(e,t)=>{let u=0;for(let y=0;y<e.length;y++)u+=e[y]*t[y];return u},getColumnFrom2DArr=(e,t)=>{let u=[];for(let y=0;y<e.length;y++)u.push(e[y][t]);return u},multiplyTransformMatrices=(e,t)=>{let u=[],y=e.length;for(let w=0;w<y;w++){u.push([]);for(let T=0;T<y;T++)u[w].push(dot(e[w],getColumnFrom2DArr(t,T)))}return u},buildRotationMatrix=(e,t)=>{let u=Math.cos(e),y=Math.sin(e),w=buildTranslationMatrix(t[0],t[1]),T=multiplyTransformMatrices(w,[[u,-y,0],[y,u,0],[0,0,1]]),$=buildTranslationMatrix(-t[0],-t[1]);return multiplyTransformMatrices(T,$)},invertTransformMatrix=e=>{let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],u=[e[0][2],e[1][2]],y=[-dot(t[0],u),-dot(t[1],u)];return[t[0].concat(y[0]),t[1].concat(y[1]),[0,0,1]]},rotatePoint=(e,t)=>[dot(e,t[0]),dot(e,t[1])],findFaceCenter=e=>{let t=e.map(e=>e[0]),u=e.map(e=>e[1]);return[Math.min(...t)+(Math.max(...t)-Math.min(...t))/2,Math.min(...u)+(Math.max(...u)-Math.min(...u))/2]},calculateFaceBox=(e,t)=>{let u=findFaceCenter(e),y=getBoxSize(t),w={startPoint:[u[0]-y[0]/2,u[1]-y[1]/2],endPoint:[u[0]+y[0]/2,u[1]+y[1]/2]};return w},EM=null,EF=0,EO=null,size=()=>EF;async function load3(e){var t;return Cw.initial&&(aF=null),aF?e.debug&&log("cached model:",aF.modelUrl):aF=await loadModel(null==(t=e.face.detector)?void 0:t.modelPath),EO=ke(EF=aF.executor&&aF.inputs[0].shape?aF.inputs[0].shape[2]:256,"int32"),EM=mu(function(e){let t=192===e?{strides:[4],anchors:[1]}:{strides:[e/16,e/8],anchors:[2,6]},u=[];for(let y=0;y<t.strides.length;y++){let w=t.strides[y],T=Math.floor((e+w-1)/w),$=Math.floor((e+w-1)/w),M=t.anchors[y];for(let e=0;e<T;e++){let t=w*(e+.5);for(let e=0;e<$;e++){let y=w*(e+.5);for(let e=0;e<M;e++)u.push([y,t])}}}return u}(EF)),aF}async function getBoxes(e,t){var u,y,w,T,$,M,O,P,z;if(!e||e.isDisposedInternal||4!==e.shape.length||e.shape[1]<1||e.shape[2]<1)return[];let L={},W=[0,0],B=[1,1];if(null==(y=null==(u=null==t?void 0:t.face)?void 0:u.detector)?void 0:y.square){let t=Math.max(e.shape[2],e.shape[1]);W=[Math.floor((t-e.shape[2])/2),Math.floor((t-e.shape[1])/2)],L.padded=dN(e,[[0,0],[W[1],W[1]],[W[0],W[0]],[0,0]]),B=[e.shape[2]/t,e.shape[1]/t],W=[W[0]/EF,W[1]/EF]}else L.padded=e.clone();L.resized=c$.resizeBilinear(L.padded,[EF,EF]),L.div=o6(L.resized,TH.tf127),L.normalized=u1(L.div,TH.tf1);let j=null==aF?void 0:aF.execute(L.normalized);if(Array.isArray(j)&&j.length>2){let e=j.sort((e,t)=>e.size-t.size);L.concat384=lk([e[0],e[2]],2),L.concat512=lk([e[1],e[3]],2),L.concat=lk([L.concat512,L.concat384],1),L.batch=pg(L.concat,[0])}else Array.isArray(j)?L.batch=pg(j[0]):L.batch=pg(j);Ot(j),L.boxes=function(e){if(!EM||!EO)return Gr([0,0]);let t={};t.boxStarts=lN(e,[0,1],[-1,2]),t.centers=o7(t.boxStarts,EM),t.boxSizes=lN(e,[0,3],[-1,2]),t.boxSizesNormalized=o6(t.boxSizes,EO),t.centersNormalized=o6(t.centers,EO),t.halfBoxSize=o6(t.boxSizesNormalized,TH.tf2),t.starts=u1(t.centersNormalized,t.halfBoxSize),t.ends=o7(t.centersNormalized,t.halfBoxSize),t.startNormalized=o8(t.starts,EO),t.endNormalized=o8(t.ends,EO);let u=lV([t.startNormalized,t.endNormalized],1);return Object.keys(t).forEach(e=>Ot(t[e])),u}(L.batch),L.logits=lN(L.batch,[0,0],[-1,1]),L.sigmoid=lS(L.logits),L.scores=pg(L.sigmoid),L.nms=await c$.nonMaxSuppressionAsync(L.boxes,L.scores,(null==(w=t.face.detector)?void 0:w.maxDetected)||0,(null==(T=t.face.detector)?void 0:T.iouThreshold)||0,(null==($=t.face.detector)?void 0:$.minConfidence)||0);let q=await L.nms.array(),Z=[],Y=await L.scores.data();for(let u=0;u<q.length;u++){let y=Y[q[u]];if(y>((null==(M=t.face.detector)?void 0:M.minConfidence)||0)){let w={};w.bbox=lN(L.boxes,[q[u],0],[1,-1]),w.slice=lN(L.batch,[q[u],5],[1,-1]),w.squeeze=pg(w.slice),w.landmarks=lA(w.squeeze,[6,-1]);let T=await w.bbox.data(),$=[T[0]*B[0]-W[0],T[1]*B[1]-W[1],T[2]*B[0]-W[0],T[3]*B[1]-W[1]],M={startPoint:[$[0],$[1]],endPoint:[$[2],$[3]],landmarks:await w.landmarks.array(),confidence:y};w.anchor=lN(EM,[q[u],0],[1,2]);let j=await w.anchor.data(),Y=scaleBoxCoordinates(M,[(e.shape[2]||0)/EF,(e.shape[1]||0)/EF],j),J=enlargeBox(Y,(null==(O=t.face.detector)?void 0:O.scale)||1.4),ee=squarifyBox(J);ee.size[0]>((null==(P=t.face.detector)?void 0:P.minSize)||0)&&ee.size[1]>((null==(z=t.face.detector)?void 0:z.minSize)||0)&&Z.push(ee),Object.keys(w).forEach(e=>Ot(w[e]))}}return Object.keys(L).forEach(e=>Ot(L[e])),Z}var EP=0,ED=TZ.leftEyeLower0,Ez=TZ.rightEyeLower0,EL={leftBounds:[ED[0],ED[ED.length-1]],rightBounds:[Ez[0],Ez[Ez.length-1]]},EW={upperCenter:3,lowerCenter:4,index:71,numCoordinates:76};async function load4(e){var t,u;return Cw.initial&&(aO=null),aO?e.debug&&log("cached model:",aO.modelUrl):aO=await loadModel(null==(t=e.face.iris)?void 0:t.modelPath),-1===(EP=(null==aO?void 0:aO.executor)&&(null==(u=aO.inputs)?void 0:u[0].shape)?aO.inputs[0].shape[2]:0)&&(EP=64),aO}function replaceIrisCoords(e,t,u,y){for(let w=0;w<TQ.length;w++){let{key:T,indices:$}=TQ[w],M=TZ[`${u}${T}`];if(!y||y.includes(T))for(let u=0;u<$.length;u++){let y=$[u];e[M[u]]=[t[y][0],t[y][1],(t[y][2]+e[M[u]][2])/2]}}}var getLeftToRightEyeDepthDifference=e=>{let t=e[EL.leftBounds[0]][2],u=e[EL.rightBounds[0]][2];return t-u},getEyeBox=(e,t,u,y,w,T=!1,$=2.3)=>{let M=squarifyBox(enlargeBox(calculateLandmarksBoundingBox([e[u],e[y]]),$)),O=getBoxSize(M),P=c$.cropAndResize(t,[[M.startPoint[1]/w,M.startPoint[0]/w,M.endPoint[1]/w,M.endPoint[0]/w]],[0],[EP,EP]);if(T&&Cw.kernels.includes("flipleftright")){let e=c$.flipLeftRight(P);Ot(P),P=e}return{box:M,boxSize:O,crop:P}},getEyeCoords=(e,t,u,y=!1)=>{let w=[];for(let T=0;T<EW.numCoordinates;T++){let $=e[3*T],M=e[3*T+1],O=e[3*T+2];w.push([(y?1-$/EP:$/EP)*u[0]+t.startPoint[0],M/EP*u[1]+t.startPoint[1],O])}return{rawCoords:w,iris:w.slice(EW.index)}},getAdjustedIrisCoords=(e,t,u)=>{let y=e[TZ[`${u}EyeUpper0`][EW.upperCenter]][2],w=e[TZ[`${u}EyeLower0`][EW.lowerCenter]][2],T=(y+w)/2;return t.map((e,t)=>{let u=T;return 2===t?u=y:4===t&&(u=w),[e[0],e[1],u]})};async function augmentIris(e,t,u,y){var w,T;if(!(null==aO?void 0:aO.executor))return e;let{box:$,boxSize:M,crop:O}=getEyeBox(e,t,EL.leftBounds[0],EL.leftBounds[1],u,!0,(null==(w=y.face.iris)?void 0:w.scale)||2.3),{box:P,boxSize:z,crop:L}=getEyeBox(e,t,EL.rightBounds[0],EL.rightBounds[1],u,!0,(null==(T=y.face.iris)?void 0:T.scale)||2.3),W=lk([O,L]);Ot(O),Ot(L);let B=aO.execute(W);Ot(W);let j=await B.data();Ot(B);let q=j.slice(0,3*EW.numCoordinates),{rawCoords:Z,iris:Y}=getEyeCoords(q,$,M,!0),J=j.slice(3*EW.numCoordinates),{rawCoords:ee,iris:ea}=getEyeCoords(J,P,z,!1),en=getLeftToRightEyeDepthDifference(e);30>Math.abs(en)?(replaceIrisCoords(e,Z,"left",null),replaceIrisCoords(e,ee,"right",null)):en<1?replaceIrisCoords(e,Z,"left",["EyeUpper0","EyeLower0"]):replaceIrisCoords(e,ee,"right",["EyeUpper0","EyeLower0"]);let er=getAdjustedIrisCoords(e,Y,"left"),ei=getAdjustedIrisCoords(e,ea,"right"),es=e.concat(er).concat(ei);return es}async function augment(e,t){var u,y,w,T,$,M,O,P,z,L;let W={lips:await (null==(y=null==(u=t.filter(e=>160===e.size))?void 0:u[0])?void 0:y.data()),irisL:await (null==(T=null==(w=t.filter(e=>10===e.size))?void 0:w[0])?void 0:T.data()),eyeL:await (null==(M=null==($=t.filter(e=>142===e.size))?void 0:$[0])?void 0:M.data()),irisR:await (null==(P=null==(O=t.filter(e=>10===e.size))?void 0:O[1])?void 0:P.data()),eyeR:await (null==(L=null==(z=t.filter(e=>142===e.size))?void 0:z[1])?void 0:L.data())};for(let t of Object.values(W))if(!t)return e;let B=T7.reduce((t,u)=>t+=e[u][2],0)/T7.length;for(let t=0;t<W.irisL.length/2;t++)e.push([W.irisL[2*t+0],W.irisL[2*t+1],B]);let j=T4.reduce((t,u)=>t+=e[u][2],0)/T4.length;for(let t=0;t<W.irisR.length/2;t++)e.push([W.irisR[2*t+0],W.irisR[2*t+1],j]);for(let t=0;t<W.eyeL.length/2;t++)e[T7[t]]=[W.eyeL[2*t+0],W.eyeL[2*t+1],e[T7[t]][2]];for(let t=0;t<W.eyeR.length/2;t++)e[T4[t]]=[W.eyeR[2*t+0],W.eyeR[2*t+1],e[T4[t]][2]];for(let t=0;t<W.lips.length/2;t++)e[T3[t]]=[W.lips[2*t+0],W.lips[2*t+1],e[T3[t]][2]];return e}var EB={boxes:[],skipped:Number.MAX_SAFE_INTEGER,timestamp:0},EV=null,EU=0;async function predict4(e,t){var u,y,w,T,$,M,O,P,z,L;let W=((null==(u=t.face.detector)?void 0:u.skipTime)||0)>now()-EB.timestamp,B=EB.skipped<((null==(y=t.face.detector)?void 0:y.skipFrames)||0);t.skipAllowed&&W&&B&&0!==EB.boxes.length?EB.skipped++:(EB.boxes=await getBoxes(e,t),EB.timestamp=now(),EB.skipped=0);let j=[],q=[],Z=0,Y=EU;for(let u=0;u<EB.boxes.length;u++){let y;let W=EB.boxes[u],B=0,J={id:Z++,mesh:[],meshRaw:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,boxScore:0,faceScore:0,size:[0,0],annotations:{}};if([B,y,J.tensor]=function(e,t,u,y){let w;let T=t.landmarks.length>=TY.count?TY.symmetryLine:TJ.symmetryLine,$=0,M=E$;if(e&&Cw.kernels.includes("rotatewithoffset")){$=computeRotation(t.landmarks[T[0]],t.landmarks[T[1]]);let e=$&&0!==$&&Math.abs($)>.2;if(e){let e=getBoxCenter(t),T=[e[0]/u.shape[2],e[1]/u.shape[1]],O=c$.rotateWithOffset(u,$,0,[T[0],T[1]]);M=buildRotationMatrix(-$,e),w=cutAndResize(t,O,[y,y]),Ot(O)}else w=cutAndResize(t,u,[y,y])}else w=cutAndResize(t,u,[y,y]);return[$,M,w]}(null==(w=t.face.detector)?void 0:w.rotation,W,e,(null==(T=t.face.mesh)?void 0:T.enabled)?EU:size()),t.filter.equalization){let e=J.tensor?await histogramEqualization(J.tensor):void 0;Ot(J.tensor),e&&(J.tensor=e)}if(J.boxScore=Math.round(100*W.confidence)/100,(null==($=t.face.mesh)?void 0:$.enabled)&&(null==EV?void 0:EV.executor)){if(EV){if((null==(M=t.face.attention)?void 0:M.enabled)&&!Cw.kernels.includes("atan2"))return t.face.attention.enabled=!1,Ot(J.tensor),j;let u=EV.execute(J.tensor),w=u.find(e=>1===e.shape[e.shape.length-1]),T=await w.data();if(J.faceScore=Math.round(100*T[0])/100,J.faceScore<((null==(O=t.face.detector)?void 0:O.minConfidence)||1)){if(W.confidence=J.faceScore,t.face.mesh.keepInvalid)for(let t of(J.box=clampBox(W,e),J.boxRaw=getRawBox(W,e),J.size=W.size,J.score=J.boxScore,J.mesh=W.landmarks,J.meshRaw=J.mesh.map(t=>[t[0]/(e.shape[2]||1),t[1]/(e.shape[1]||1),(t[2]||0)/Y]),Object.keys(TJ)))J.annotations[t]=[J.mesh[TJ[t]]]}else{let w=u.find(e=>1404===e.shape[e.shape.length-1]),T=lA(w,[-1,3]),$=await T.array();for(let w of(Ot(T),(null==(P=t.face.attention)?void 0:P.enabled)?$=await augment($,u):(null==(z=t.face.iris)?void 0:z.enabled)&&($=await augmentIris($,J.tensor,EU,t)),J.mesh=function(e,t,u,y,w){let T=getBoxSize(t),$=e.map(e=>[T[0]/w*(e[0]-w/2),T[1]/w*(e[1]-w/2),e[2]||0]),M=u&&0!==u&&Math.abs(u)>.2,O=M?buildRotationMatrix(u,[0,0]):E$,P=M?$.map(e=>[...rotatePoint(e,O),e[2]]):$,z=M?invertTransformMatrix(y):E$,L=getBoxCenter(t),W=[dot(L,z[0]),dot(L,z[1])];return P.map(e=>[Math.trunc(e[0]+W[0]),Math.trunc(e[1]+W[1]),Math.trunc(e[2]||0)])}($,W,B,y,EU),J.meshRaw=J.mesh.map(t=>[t[0]/(e.shape[2]||0),t[1]/(e.shape[1]||0),(t[2]||0)/Y]),Object.keys(TZ)))J.annotations[w]=TZ[w].map(e=>J.mesh[e]);J.score=J.faceScore;let M={...calculateFaceBox(J.mesh,W),confidence:W.confidence,landmarks:W.landmarks,size:W.size};J.box=clampBox(M,e),J.boxRaw=getRawBox(M,e),J.size=M.size,q.push(M)}Ot(u)}else t.debug&&log("face mesh detection requested, but model is not loaded")}else for(let t of(J.box=clampBox(W,e),J.boxRaw=getRawBox(W,e),J.score=J.boxScore,J.size=W.size,J.mesh=W.landmarks,J.meshRaw=J.mesh.map(t=>[t[0]/(e.shape[2]||0),t[1]/(e.shape[1]||0),(t[2]||0)/Y]),Object.keys(TJ)))J.annotations[t]=[J.mesh[TJ[t]]];J.score>((null==(L=t.face.detector)?void 0:L.minConfidence)||1)?j.push(J):Ot(J.tensor)}return EB.boxes=q,j}async function load5(e){var t,u,y,w,T,$;return Cw.initial&&(EV=null),(null==(t=e.face.attention)?void 0:t.enabled)&&(null==EV?void 0:EV.signature)&&Object.keys((null==(u=null==EV?void 0:EV.signature)?void 0:u.outputs)||{}).length<6&&(EV=null),EV?e.debug&&log("cached model:",EV.modelUrl):EV=(null==(y=e.face.attention)?void 0:y.enabled)?await loadModel(e.face.attention.modelPath):await loadModel(null==(w=e.face.mesh)?void 0:w.modelPath),EU=EV.executor&&(null==(T=null==EV?void 0:EV.inputs)?void 0:T[0].shape)?null==($=null==EV?void 0:EV.inputs)?void 0:$[0].shape[2]:256,EV}var EG=[],EH=[],Ej=0,Eq=0,EK=Number.MAX_SAFE_INTEGER,EZ=!1;async function load6(e){var t,u,y;return Cw.initial&&(aP=null),aP?e.debug&&log("cached model:",aP.modelUrl):EG=(EZ=(null==(y=null==(u=null==(aP=await loadModel(null==(t=e.face.emotion)?void 0:t.modelPath))?void 0:aP.inputs)?void 0:u[0].shape)?void 0:y[3])===3)?["angry","disgust","fear","happy","neutral","sad","surprise"]:["angry","disgust","fear","happy","sad","surprise","neutral"],aP}async function predict5(e,t,u,y){var w,T;if(!aP)return[];let $=EK<((null==(w=t.face.emotion)?void 0:w.skipFrames)||0),M=((null==(T=t.face.emotion)?void 0:T.skipTime)||0)>now()-Eq;return t.skipAllowed&&M&&$&&Ej===y&&EH[u]&&EH[u].length>0?(EK++,EH[u]):(EK=0,new Promise(async w=>{var T,$,M;let O=[];if(null==(T=t.face.emotion)?void 0:T.enabled){let u={},y=(null==aP?void 0:aP.inputs[0].shape)?aP.inputs[0].shape[2]:0;if((null==($=t.face.emotion)?void 0:$.crop)>0){let w=null==(M=t.face.emotion)?void 0:M.crop,T=[[w,w,1-w,1-w]];u.resize=c$.cropAndResize(e,T,[0],[y,y])}else u.resize=c$.resizeBilinear(e,[y,y],!1);EZ?(u.mul=o8(u.resize,255),u.normalize=u1(u.mul,[103.939,116.779,123.68]),u.emotion=null==aP?void 0:aP.execute(u.normalize)):(u.channels=o8(u.resize,TH.rgb),u.grayscale=uI(u.channels,3,!0),u.grayscaleSub=u1(u.grayscale,TH.tf05),u.grayscaleMul=o8(u.grayscaleSub,TH.tf2),u.emotion=null==aP?void 0:aP.execute(u.grayscaleMul)),Eq=now();let w=await u.emotion.data();for(let e=0;e<w.length;e++)w[e]>(t.face.emotion.minConfidence||0)&&O.push({score:Math.min(.99,Math.trunc(100*w[e])/100),emotion:EG[e]});O.sort((e,t)=>t.score-e.score),Object.keys(u).forEach(e=>Ot(u[e]))}EH[u]=O,Ej=y,w(O)}))}var EY=[],EJ=0,EQ=0,E1=Number.MAX_SAFE_INTEGER;async function load7(e){var t;return Cw.initial&&(aD=null),aD?e.debug&&log("cached model:",aD.modelUrl):aD=await loadModel(null==(t=e.face.description)?void 0:t.modelPath),aD}async function predict6(e,t,u,y){var w,T,$,M;let O={age:0,gender:"unknown",genderScore:0,descriptor:[]};if(!(null==aD?void 0:aD.executor))return O;let P=E1<((null==(w=t.face.description)?void 0:w.skipFrames)||0),z=((null==(T=t.face.description)?void 0:T.skipTime)||0)>now()-EJ;return t.skipAllowed&&P&&z&&EQ===y&&(null==($=null==EY?void 0:EY[u])?void 0:$.age)>0&&(null==(M=null==EY?void 0:EY[u])?void 0:M.genderScore)>0?(E1++,EY[u]):(E1=0,new Promise(async w=>{var T;if(null==(T=t.face.description)?void 0:T.enabled){let u=function(e,t){var u,y;let w;let T=e.image||e.tensor||e;if(!(null==aD?void 0:aD.inputs[0].shape))return T;if((null==(u=t.face.description)?void 0:u.crop)>0){let e=null==(y=t.face.description)?void 0:y.crop,u=[[e,e,1-e,1-e]];w=c$.cropAndResize(T,u,[0],[aD.inputs[0].shape[2],aD.inputs[0].shape[1]])}else w=c$.resizeBilinear(T,[aD.inputs[0].shape[2],aD.inputs[0].shape[1]],!1);let $=o8(w,TH.tf255);return Ot(w),$}(e,t),y=null==aD?void 0:aD.execute(u);EJ=now(),Ot(u);let w=y.find(e=>1===e.shape[1]),T=await w.data(),$=Math.trunc(200*Math.abs(T[0]-.5))/100;$>(t.face.description.minConfidence||0)&&(O.gender=T[0]<=.5?"female":"male",O.genderScore=Math.min(.99,$));let M=ls(y.find(e=>100===e.shape[1]),1),P=(await M.data())[0];Ot(M);let z=y.find(e=>100===e.shape[1]),L=await z.data();O.age=Math.round(L[P-1]>L[P+1]?10*P-100*L[P-1]:10*P+100*L[P+1])/10,(Number.isNaN(T[0])||Number.isNaN(L[0]))&&log("faceres error:",{model:aD,result:y});let W=y.find(e=>1024===e.shape[1]),B=W?await W.data():[];O.descriptor=Array.from(B),y.forEach(e=>Ot(e))}EY[u]=O,EQ=y,w(O)}))}async function mask(e){if(!e.tensor||!e.mesh||e.mesh.length<100)return e.tensor;let t=e.tensor.shape[2]||0,u=e.tensor.shape[1]||0,y=await e.tensor.buffer(),w=[];for(let t of TZ.silhouette)w.push({x:(e.mesh[t][0]-e.box[0])/e.box[2],y:(e.mesh[t][1]-e.box[1])/e.box[3]});w=w.map(e=>({x:e.x>.5?e.x+.1:e.x-.1,y:e.y>.5?e.y+.1:e.y-.1}));for(let e=0;e<t;e++)for(let T=0;T<u;T++){let u=function(e,t,u){let y=!1,w=u.length-1;for(let T=0;T<u.length;w=T++)u[T].y>t!=u[w].y>t&&e<(u[w].x-u[T].x)*(t-u[T].y)/(u[w].y-u[T].y)+u[T].x&&(y=!y);return y}(e/t,T/t,w);u||(y.set(.5*y.get(0,T,e,0),0,T,e,0),y.set(.5*y.get(0,T,e,1),0,T,e,1),y.set(.5*y.get(0,T,e,2),0,T,e,2))}let T=y.toTensor();return T}var E2=[],E0=Number.MAX_SAFE_INTEGER,E3=0,E7=0;async function load8(e){var t;return Cw.initial&&(aL=null),aL?e.debug&&log("cached model:",aL.modelUrl):aL=await loadModel(null==(t=e.face.antispoof)?void 0:t.modelPath),aL}async function predict7(e,t,u,y){var w,T;if(!(null==aL?void 0:aL.executor))return 0;let $=((null==(w=t.face.antispoof)?void 0:w.skipTime)||0)>now()-E7,M=E0<((null==(T=t.face.antispoof)?void 0:T.skipFrames)||0);return t.skipAllowed&&$&&M&&E3===y&&E2[u]?(E0++,E2[u]):(E0=0,new Promise(async t=>{let w=c$.resizeBilinear(e,[(null==aL?void 0:aL.inputs[0].shape)?aL.inputs[0].shape[2]:0,(null==aL?void 0:aL.inputs[0].shape)?aL.inputs[0].shape[1]:0],!1),T=null==aL?void 0:aL.execute(w),$=(await T.data())[0];E2[u]=Math.round(100*$)/100,E3=y,E7=now(),Ot([w,T]),t(E2[u])}))}var E4=[],E6=Number.MAX_SAFE_INTEGER,E8=0,E9=0;async function load9(e){var t;return Cw.initial&&(aW=null),aW?e.debug&&log("cached model:",aW.modelUrl):aW=await loadModel(null==(t=e.face.liveness)?void 0:t.modelPath),aW}async function predict8(e,t,u,y){var w,T;if(!(null==aW?void 0:aW.executor))return 0;let $=((null==(w=t.face.liveness)?void 0:w.skipTime)||0)>now()-E9,M=E6<((null==(T=t.face.liveness)?void 0:T.skipFrames)||0);return t.skipAllowed&&$&&M&&E8===y&&E4[u]?(E6++,E4[u]):(E6=0,new Promise(async t=>{let w=c$.resizeBilinear(e,[(null==aW?void 0:aW.inputs[0].shape)?aW.inputs[0].shape[2]:0,(null==aW?void 0:aW.inputs[0].shape)?aW.inputs[0].shape[1]:0],!1),T=null==aW?void 0:aW.execute(w),$=(await T.data())[0];E4[u]=Math.round(100*$)/100,E8=y,E9=now(),Ot([w,T]),t(E4[u])}))}var Ra=[],Rn=["white","black","asian","indian","other"],Rr=[15,23,28,35.5,45.5,55.5,65],Ri=0,Rs=0,Rl=Number.MAX_SAFE_INTEGER;async function load10(e){var t;return Cw.initial&&(aB=null),aB?e.debug&&log("cached model:",aB.modelUrl):aB=await loadModel(null==(t=e.face.gear)?void 0:t.modelPath),aB}async function predict9(e,t,u,y){var w,T;if(!aB)return{age:0,gender:"unknown",genderScore:0,race:[]};let $=Rl<((null==(w=t.face.gear)?void 0:w.skipFrames)||0),M=((null==(T=t.face.gear)?void 0:T.skipTime)||0)>now()-Rs;return t.skipAllowed&&M&&$&&Ri===y&&Ra[u]?(Rl++,Ra[u]):(Rl=0,new Promise(async w=>{var T,$,M,O;if(!(null==aB?void 0:aB.inputs[0].shape))return;let P={},z=[[0,.1,.9,.9]];if((null==(T=t.face.gear)?void 0:T.crop)>0){let e=null==($=t.face.gear)?void 0:$.crop;z=[[e,e,1-e,1-e]]}P.resize=c$.cropAndResize(e,z,[0],[aB.inputs[0].shape[2],aB.inputs[0].shape[1]]);let L={age:0,gender:"unknown",genderScore:0,race:[]};(null==(M=t.face.gear)?void 0:M.enabled)&&([P.age,P.gender,P.race]=aB.execute(P.resize,["age_output","gender_output","race_output"]));let W=await P.gender.data();L.gender=W[0]>W[1]?"male":"female",L.genderScore=Math.round(100*(W[0]>W[1]?W[0]:W[1]))/100;let B=await P.race.data();for(let e=0;e<B.length;e++)B[e]>((null==(O=t.face.gear)?void 0:O.minConfidence)||.2)&&L.race.push({score:Math.round(100*B[e])/100,race:Rn[e]});L.race.sort((e,t)=>t.score-e.score);let j=Array.from(await P.age.data()),q=j.map((e,t)=>[Rr[t],e]).sort((e,t)=>t[1]-e[1]),Z=q[0][0];for(let e=1;e<q.length;e++)Z+=q[e][1]*(q[e][0]-Z);L.age=Math.round(10*Z)/10,Object.keys(P).forEach(e=>Ot(P[e])),Ra[u]=L,Ri=y,Rs=now(),w(L)}))}var Ru=[],Rd=0,Rh=0,Rg=Number.MAX_SAFE_INTEGER;async function load11(e){return Cw.initial&&(aV=null),aV?e.debug&&log("cached model:",aV.modelUrl):aV=await loadModel(e.face.ssrnet.modelPathAge),aV}async function predict10(e,t,u,y){var w,T,$,M;if(!aV)return{age:0};let O=Rg<((null==(w=t.face.ssrnet)?void 0:w.skipFrames)||0),P=((null==(T=t.face.ssrnet)?void 0:T.skipTime)||0)>now()-Rh;return t.skipAllowed&&O&&P&&Rd===y&&(null==($=Ru[u])?void 0:$.age)&&(null==(M=Ru[u])?void 0:M.age)>0?(Rg++,Ru[u]):(Rg=0,new Promise(async w=>{var T,$,M;if(!(null==aV?void 0:aV.inputs)||!aV.inputs[0]||!aV.inputs[0].shape)return;let O={};if((null==(T=t.face.ssrnet)?void 0:T.crop)>0){let u=null==($=t.face.ssrnet)?void 0:$.crop,y=[[u,u,1-u,1-u]];O.resize=c$.cropAndResize(e,y,[0],[aV.inputs[0].shape[2],aV.inputs[0].shape[1]])}else O.resize=c$.resizeBilinear(e,[aV.inputs[0].shape[2],aV.inputs[0].shape[1]],!1);O.enhance=o8(O.resize,TH.tf255);let P={age:0};if((null==(M=t.face.ssrnet)?void 0:M.enabled)&&(O.age=aV.execute(O.enhance)),O.age){let e=await O.age.data();P.age=Math.trunc(10*e[0])/10}Object.keys(O).forEach(e=>Ot(O[e])),Ru[u]=P,Rd=y,Rh=now(),w(P)}))}var Ry=[],RA=0,Rx=0,Rb=Number.MAX_SAFE_INTEGER;async function load12(e){var t;return Cw.initial&&(aU=null),aU?e.debug&&log("cached model:",aU.modelUrl):aU=await loadModel(null==(t=e.face.ssrnet)?void 0:t.modelPathGender),aU}async function predict11(e,t,u,y){var w,T,$,M;if(!aU)return{gender:"unknown",genderScore:0};let O=Rb<((null==(w=t.face.ssrnet)?void 0:w.skipFrames)||0),P=((null==(T=t.face.ssrnet)?void 0:T.skipTime)||0)>now()-Rx;return t.skipAllowed&&O&&P&&RA===y&&(null==($=Ry[u])?void 0:$.gender)&&(null==(M=Ry[u])?void 0:M.genderScore)>0?(Rb++,Ry[u]):(Rb=0,new Promise(async w=>{var T,$,M;if(!(null==aU?void 0:aU.inputs[0].shape))return;let O={};if((null==(T=t.face.ssrnet)?void 0:T.crop)>0){let u=null==($=t.face.ssrnet)?void 0:$.crop,y=[[u,u,1-u,1-u]];O.resize=c$.cropAndResize(e,y,[0],[aU.inputs[0].shape[2],aU.inputs[0].shape[1]])}else O.resize=c$.resizeBilinear(e,[aU.inputs[0].shape[2],aU.inputs[0].shape[1]],!1);O.enhance=De(()=>{var e,t;let u;if((null==(t=null==(e=null==aU?void 0:aU.inputs)?void 0:e[0].shape)?void 0:t[3])===1){let[e,t,y]=ph(O.resize,3,3),w=o8(e,.2989),T=o8(t,.587),$=o8(y,.114),M=la([w,T,$]);u=o8(u1(M,TH.tf05),2)}else u=o8(u1(O.resize,TH.tf05),2);return u});let P={gender:"unknown",genderScore:0};(null==(M=t.face.ssrnet)?void 0:M.enabled)&&(O.gender=aU.execute(O.enhance));let z=await O.gender.data();P.gender=z[0]>z[1]?"female":"male",P.genderScore=z[0]>z[1]?Math.trunc(100*z[0])/100:Math.trunc(100*z[1])/100,Object.keys(O).forEach(e=>Ot(O[e])),Ry[u]=P,RA=y,Rx=now(),w(P)}))}var Rk=[],Rw=0,RS=0,RN=Number.MAX_SAFE_INTEGER;async function load13(e){var t;return Cw.initial&&(aG=null),aG?e.debug&&log("cached model:",aG.modelUrl):aG=await loadModel(null==(t=e.face.mobilefacenet)?void 0:t.modelPath),aG}async function predict12(e,t,u,y){var w,T;if(!(null==aG?void 0:aG.executor))return[];let $=RN<((null==(w=t.face.mobilefacenet)?void 0:w.skipFrames)||0),M=((null==(T=t.face.mobilefacenet)?void 0:T.skipTime)||0)>now()-RS;return t.skipAllowed&&M&&$&&Rw===y&&Rk[u]?(RN++,Rk[u]):new Promise(async w=>{var T;let $=[];if((null==(T=t.face.mobilefacenet)?void 0:T.enabled)&&(null==aG?void 0:aG.inputs[0].shape)){let t={};t.crop=c$.resizeBilinear(e,[aG.inputs[0].shape[2],aG.inputs[0].shape[1]],!1),t.data=aG.execute(t.crop);let u=await t.data.data();$=Array.from(u),Object.keys(t).forEach(e=>Ot(t[e]))}Rk[u]=$,Rw=y,RS=now(),w($)})}var RC=[],RT=0,RE=0,RR=Number.MAX_SAFE_INTEGER;async function load14(e){return Cw.initial&&(aH=null),aH?e.debug&&log("cached model:",aH.modelUrl):aH=await loadModel(e.face.insightface.modelPath),aH}async function predict13(e,t,u,y){var w,T;if(!(null==aH?void 0:aH.executor))return[];let $=RR<((null==(w=t.face.insightface)?void 0:w.skipFrames)||0),M=((null==(T=t.face.insightface)?void 0:T.skipTime)||0)>now()-RE;return t.skipAllowed&&M&&$&&RT===y&&RC[u]?(RR++,RC[u]):new Promise(async w=>{var T;let $=[];if((null==(T=t.face.insightface)?void 0:T.enabled)&&(null==aH?void 0:aH.inputs[0].shape)){let t={};t.crop=c$.resizeBilinear(e,[aH.inputs[0].shape[2],aH.inputs[0].shape[1]],!1),t.data=aH.execute(t.crop);let u=await t.data.data();$=Array.from(u),Object.keys(t).forEach(e=>Ot(t[e]))}RC[u]=$,RT=y,RE=now(),w($)})}var calculateGaze=e=>{if(!e.annotations.rightEyeIris||!e.annotations.leftEyeIris)return{bearing:0,strength:0};let t=(e.mesh[33][2]||0)>(e.mesh[263][2]||0),u=t?e.mesh[473]:e.mesh[468],y=t?[(e.mesh[133][0]+e.mesh[33][0])/2,(e.mesh[133][1]+e.mesh[33][1])/2]:[(e.mesh[263][0]+e.mesh[362][0])/2,(e.mesh[263][1]+e.mesh[362][1])/2],w=t?[e.mesh[133][0]-e.mesh[33][0],e.mesh[23][1]-e.mesh[27][1]]:[e.mesh[263][0]-e.mesh[362][0],e.mesh[253][1]-e.mesh[257][1]],T=[(y[0]-u[0])/w[0]-0,1*(u[1]-y[1])/w[1]- -.1],$=Math.sqrt(T[0]*T[0]+T[1]*T[1]);$=Math.min($,e.boxRaw[2]/2,e.boxRaw[3]/2);let M=(Math.atan2(0-T[1],0-T[0])+Math.PI/2)%Math.PI;return{bearing:M,strength:$}},calculateFaceAngle=(e,t)=>{let normalize2=e=>{let t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return e[0]/=t,e[1]/=t,e[2]/=t,e},subVectors=(e,t)=>{let u=e[0]-t[0],y=e[1]-t[1],w=e[2]-t[2];return[u,y,w]},crossVectors=(e,t)=>{let u=e[1]*t[2]-e[2]*t[1],y=e[2]*t[0]-e[0]*t[2],w=e[0]*t[1]-e[1]*t[0];return[u,y,w]},u=e.meshRaw;if(!u||u.length<300)return{angle:{pitch:0,yaw:0,roll:0},matrix:[1,0,0,0,1,0,0,0,1],gaze:{bearing:0,strength:0}};let y=Math.max(e.boxRaw[2]*t[0],e.boxRaw[3]*t[1])/1.5,w=[u[10],u[152],u[234],u[454]].map(e=>[e[0]*t[0]/y,e[1]*t[1]/y,e[2]]),T=normalize2(subVectors(w[1],w[0])),$=normalize2(subVectors(w[3],w[2])),M=normalize2(crossVectors($,T));$=crossVectors(T,M);let O=[$[0],$[1],$[2],T[0],T[1],T[2],M[0],M[1],M[2]],P=(e=>{let t,u,y;let[w,T,$,M,O,P,z,L,W]=e;if(M<1){if(M>-1){let e=Math.sqrt(w*w+z*z);y=Math.atan2(M,e),u=Math.atan2(-z,w),t=Math.atan2(-P,O)}else y=-Math.PI/2,u=-Math.atan2(L,W),t=0}else y=Math.PI/2,u=Math.atan2(L,W),t=0;return Number.isNaN(t)&&(t=0),Number.isNaN(u)&&(u=0),Number.isNaN(y)&&(y=0),{pitch:-t,yaw:-u,roll:-y}})(O),z=478===u.length?calculateGaze(e):{bearing:0,strength:0};return{angle:P,matrix:O,gaze:z}},detectFace=async(e,t)=>{var u,y,w,T,$,M,O,P,z,L,W,B,j,q,Z,Y,J,ee,ea,en,er,ei,es;let el,eu,ed,ep,ec,eh,em,ey,eA;let ex=now(),eb=[];e.state="run:face";let ek=await predict4(t,e.config);if(e.performance.face=Cw.perfadd?(e.performance.face||0)+Math.trunc(now()-ex):Math.trunc(now()-ex),!t.shape||4!==t.shape.length||!ek)return[];for(let eI=0;eI<ek.length;eI++){if(e.analyze("Get Face"),!ek[eI].tensor||ek[eI].tensor.isDisposedInternal){log("Face object is disposed:",ek[eI].tensor);continue}if(null==(u=e.config.face.detector)?void 0:u.mask){let e=await mask(ek[eI]);Ot(ek[eI].tensor),e&&(ek[eI].tensor=e)}let eC=ek[eI].mesh&&ek[eI].mesh.length>200?calculateFaceAngle(ek[eI],[t.shape[2],t.shape[1]]):null;e.analyze("Start Emotion:"),e.config.async?ep=(null==(y=e.config.face.emotion)?void 0:y.enabled)?predict5(ek[eI].tensor||ar([]),e.config,eI,ek.length):[]:(e.state="run:emotion",ex=now(),ep=(null==(w=e.config.face.emotion)?void 0:w.enabled)?await predict5(ek[eI].tensor||ar([]),e.config,eI,ek.length):[],e.performance.emotion=Cw.perfadd?(e.performance.emotion||0)+Math.trunc(now()-ex):Math.trunc(now()-ex)),e.analyze("End Emotion:"),e.analyze("Start AntiSpoof:"),e.config.async?em=(null==(T=e.config.face.antispoof)?void 0:T.enabled)?predict7(ek[eI].tensor||ar([]),e.config,eI,ek.length):0:(e.state="run:antispoof",ex=now(),em=(null==($=e.config.face.antispoof)?void 0:$.enabled)?await predict7(ek[eI].tensor||ar([]),e.config,eI,ek.length):0,e.performance.antispoof=Cw.perfadd?(e.performance.antispoof||0)+Math.trunc(now()-ex):Math.trunc(now()-ex)),e.analyze("End AntiSpoof:"),e.analyze("Start Liveness:"),e.config.async?ey=(null==(M=e.config.face.liveness)?void 0:M.enabled)?predict8(ek[eI].tensor||ar([]),e.config,eI,ek.length):0:(e.state="run:liveness",ex=now(),ey=(null==(O=e.config.face.liveness)?void 0:O.enabled)?await predict8(ek[eI].tensor||ar([]),e.config,eI,ek.length):0,e.performance.liveness=Cw.perfadd?(e.performance.antispoof||0)+Math.trunc(now()-ex):Math.trunc(now()-ex)),e.analyze("End Liveness:"),e.analyze("Start GEAR:"),e.config.async?eu=(null==(P=e.config.face.gear)?void 0:P.enabled)?predict9(ek[eI].tensor||ar([]),e.config,eI,ek.length):null:(e.state="run:gear",ex=now(),eu=(null==(z=e.config.face.gear)?void 0:z.enabled)?await predict9(ek[eI].tensor||ar([]),e.config,eI,ek.length):null,e.performance.gear=Math.trunc(now()-ex)),e.analyze("End GEAR:"),e.analyze("Start SSRNet:"),e.config.async?(el=(null==(L=e.config.face.ssrnet)?void 0:L.enabled)?predict10(ek[eI].tensor||ar([]),e.config,eI,ek.length):null,ed=(null==(W=e.config.face.ssrnet)?void 0:W.enabled)?predict11(ek[eI].tensor||ar([]),e.config,eI,ek.length):null):(e.state="run:ssrnet",ex=now(),el=(null==(B=e.config.face.ssrnet)?void 0:B.enabled)?await predict10(ek[eI].tensor||ar([]),e.config,eI,ek.length):null,ed=(null==(j=e.config.face.ssrnet)?void 0:j.enabled)?await predict11(ek[eI].tensor||ar([]),e.config,eI,ek.length):null,e.performance.ssrnet=Math.trunc(now()-ex)),e.analyze("End SSRNet:"),e.analyze("Start MobileFaceNet:"),e.config.async?ec=(null==(q=e.config.face.mobilefacenet)?void 0:q.enabled)?predict12(ek[eI].tensor||ar([]),e.config,eI,ek.length):null:(e.state="run:mobilefacenet",ex=now(),ec=(null==(Z=e.config.face.mobilefacenet)?void 0:Z.enabled)?await predict12(ek[eI].tensor||ar([]),e.config,eI,ek.length):null,e.performance.mobilefacenet=Math.trunc(now()-ex)),e.analyze("End MobileFaceNet:"),e.analyze("Start InsightFace:"),e.config.async?eh=(null==(Y=e.config.face.insightface)?void 0:Y.enabled)?predict13(ek[eI].tensor||ar([]),e.config,eI,ek.length):null:(e.state="run:mobilefacenet",ex=now(),eh=(null==(J=e.config.face.insightface)?void 0:J.enabled)?await predict13(ek[eI].tensor||ar([]),e.config,eI,ek.length):null,e.performance.mobilefacenet=Math.trunc(now()-ex)),e.analyze("End InsightFace:"),e.analyze("Start Description:"),e.config.async?eA=predict6(ek[eI].tensor||ar([]),e.config,eI,ek.length):(e.state="run:description",ex=now(),eA=await predict6(ek[eI].tensor||ar([]),e.config,eI,ek.length),e.performance.description=Cw.perfadd?(e.performance.description||0)+Math.trunc(now()-ex):Math.trunc(now()-ex)),e.analyze("End Description:"),e.config.async&&([el,ed,ep,ec,eh,eA,eu,em,ey]=await Promise.all([el,ed,ep,ec,eh,eA,eu,em,ey])),e.analyze("Finish Face:"),(null==(ee=e.config.face.ssrnet)?void 0:ee.enabled)&&el&&ed&&(eA={...eA,age:el.age,gender:ed.gender,genderScore:ed.genderScore}),(null==(ea=e.config.face.gear)?void 0:ea.enabled)&&eu&&(eA={...eA,age:eu.age,gender:eu.gender,genderScore:eu.genderScore,race:eu.race}),(null==(en=e.config.face.mobilefacenet)?void 0:en.enabled)&&ec&&(eA.descriptor=ec),(null==(er=e.config.face.insightface)?void 0:er.enabled)&&eh&&(eA.descriptor=eh);let eE=(null==(ei=e.config.face.iris)?void 0:ei.enabled)?function(e,t){let u=null==e?void 0:e.annotations;if(!(null==u?void 0:u.leftEyeIris)||!(null==u?void 0:u.rightEyeIris))return 0;let y=Math.max(Math.abs(u.leftEyeIris[3][0]-u.leftEyeIris[1][0]),Math.abs(u.rightEyeIris[3][0]-u.rightEyeIris[1][0]))/t,w=Math.round(1.17/y)/100;return w}(ek[eI],t.shape[2]):0,eR=(null==(es=e.config.face.detector)?void 0:es.return)?pg(ek[eI].tensor):null;Ot(ek[eI].tensor),ek[eI].tensor&&delete ek[eI].tensor;let e$={...ek[eI],id:eI};eA.age&&(e$.age=eA.age),eA.gender&&(e$.gender=eA.gender),eA.genderScore&&(e$.genderScore=eA.genderScore),eA.descriptor&&(e$.embedding=eA.descriptor),eA.race&&(e$.race=eA.race),ep&&(e$.emotion=ep),em&&(e$.real=em),ey&&(e$.live=ey),eE>0&&(e$.distance=eE),eC&&(e$.rotation=eC),eR&&(e$.tensor=eR),eb.push(e$),e.analyze("End Face")}return e.analyze("End FaceMesh:"),e.config.async&&(e.performance.face&&delete e.performance.face,e.performance.age&&delete e.performance.age,e.performance.gender&&delete e.performance.gender,e.performance.emotion&&delete e.performance.emotion),eb},R$={thumb:0,index:1,middle:2,ring:3,pinky:4,all:[0,1,2,3,4],nameMapping:{0:"thumb",1:"index",2:"middle",3:"ring",4:"pinky"},pointsMapping:{0:[[0,1],[1,2],[2,3],[3,4]],1:[[0,5],[5,6],[6,7],[7,8]],2:[[0,9],[9,10],[10,11],[11,12]],3:[[0,13],[13,14],[14,15],[15,16]],4:[[0,17],[17,18],[18,19],[19,20]]},getName:e=>R$.nameMapping[e],getPoints:e=>R$.pointsMapping[e]},R_={none:0,half:1,full:2,nameMapping:{0:"none",1:"half",2:"full"},getName:e=>R_.nameMapping[e]},RM={verticalUp:0,verticalDown:1,horizontalLeft:2,horizontalRight:3,diagonalUpRight:4,diagonalUpLeft:5,diagonalDownRight:6,diagonalDownLeft:7,nameMapping:{0:"verticalUp",1:"verticalDown",2:"horizontalLeft",3:"horizontalRight",4:"diagonalUpRight",5:"diagonalUpLeft",6:"diagonalDownRight",7:"diagonalDownLeft"},getName:e=>RM.nameMapping[e]},RF=class{constructor(e){__publicField(this,"name"),__publicField(this,"curls"),__publicField(this,"directions"),__publicField(this,"weights"),__publicField(this,"weightsRelative"),this.name=e,this.curls={},this.directions={},this.weights=[1,1,1,1,1],this.weightsRelative=[1,1,1,1,1]}curl(e,t,u){void 0===this.curls[e]&&(this.curls[e]=[]),this.curls[e].push([t,u])}direction(e,t,u){this.directions[e]||(this.directions[e]=[]),this.directions[e].push([t,u])}weight(e,t){this.weights[e]=t;let u=this.weights.reduce((e,t)=>e+t,0);this.weightsRelative=this.weights.map(e=>5*e/u)}matchAgainst(e,t){let u=0;for(let t in e){let y=e[t],w=this.curls[t];if(void 0===w){u+=this.weightsRelative[t];continue}for(let[e,T]of w)if(y===e){u+=T*this.weightsRelative[t];break}}for(let e in t){let y=t[e],w=this.directions[e];if(void 0===w){u+=this.weightsRelative[e];continue}for(let[t,T]of w)if(y===t){u+=T*this.weightsRelative[e];break}}return u/10}},{thumb:RO,index:RP,middle:Rz,ring:RL,pinky:RW}=R$,{none:RB,half:RV,full:RU}=R_,{verticalUp:RG,verticalDown:RH,horizontalLeft:Rj,horizontalRight:Rq,diagonalUpRight:RK,diagonalUpLeft:RZ,diagonalDownRight:RY,diagonalDownLeft:RJ}=RM,RQ=new RF("thumbs up");for(let e of(RQ.curl(RO,RB,1),RQ.direction(RO,RG,1),RQ.direction(RO,RZ,.25),RQ.direction(RO,RK,.25),[R$.index,R$.middle,R$.ring,R$.pinky]))RQ.curl(e,RU,1),RQ.direction(e,Rj,1),RQ.direction(e,Rq,1);var R1=new RF("victory");R1.curl(RO,RV,.5),R1.curl(RO,RB,.5),R1.direction(RO,RG,1),R1.direction(RO,RZ,1),R1.curl(RP,RB,1),R1.direction(RP,RG,.75),R1.direction(RP,RZ,1),R1.curl(Rz,RB,1),R1.direction(Rz,RG,1),R1.direction(Rz,RZ,.75),R1.curl(RL,RU,1),R1.direction(RL,RG,.2),R1.direction(RL,RZ,1),R1.direction(RL,Rj,.2),R1.curl(RW,RU,1),R1.direction(RW,RG,.2),R1.direction(RW,RZ,1),R1.direction(RW,Rj,.2),R1.weight(RP,2),R1.weight(Rz,2);var R2=new RF("point");R2.curl(RO,RU,1),R2.curl(RP,RB,.5),R2.curl(Rz,RU,.5),R2.curl(RL,RU,.5),R2.curl(RW,RU,.5),R2.weight(RP,2),R2.weight(Rz,2);var R0=new RF("middle finger");R0.curl(RO,RB,1),R0.curl(RP,RU,.5),R0.curl(Rz,RU,.5),R0.curl(RL,RU,.5),R0.curl(RW,RU,.5),R0.weight(RP,2),R0.weight(Rz,2);var R3=new RF("open palm");R3.curl(RO,RB,.75),R3.curl(RP,RB,.75),R3.curl(Rz,RB,.75),R3.curl(RL,RB,.75),R3.curl(RW,RB,.75);var R7=[RQ,R1,R2,R0,R3],R4={HALF_CURL_START_LIMIT:60,NO_CURL_START_LIMIT:130,DISTANCE_VOTE_POWER:1.1,SINGLE_ANGLE_VOTE_POWER:.9,TOTAL_ANGLE_VOTE_POWER:1.6};function calculateSlope(e,t,u,y){let w=180*Math.atan((t-y)/(e-u))/Math.PI;return w<=0?w=-w:w>0&&(w=180-w),w}function getSlopes(e,t){if(!e||!t)return[0,0];let u=calculateSlope(e[0],e[1],t[0],t[1]);if(2===e.length)return u;let y=calculateSlope(e[1],e[2],t[1],t[2]);return[u,y]}function angleOrientationAt(e,t=1){let u=0,y=0,w=0;return e>=75&&e<=105?u=1*t:e>=25&&e<=155?y=1*t:w=1*t,[u,y,w]}function estimateHorizontalDirection(e,t,u,y){return y===Math.abs(e)?e>0?RM.horizontalLeft:RM.horizontalRight:y===Math.abs(t)?t>0?RM.horizontalLeft:RM.horizontalRight:u>0?RM.horizontalLeft:RM.horizontalRight}function estimateVerticalDirection(e,t,u,y){return y===Math.abs(e)?e<0?RM.verticalDown:RM.verticalUp:y===Math.abs(t)?t<0?RM.verticalDown:RM.verticalUp:u<0?RM.verticalDown:RM.verticalUp}function estimate(e){let t=[],u=[],y=[],w=[];if(!e)return{curls:y,directions:w};for(let y of R$.all){let w=R$.getPoints(y),T=[],$=[];for(let t of w){let u=e[t[0]],y=e[t[1]],w=getSlopes(u,y),M=w[0],O=w[1];T.push(M),$.push(O)}t.push(T),u.push($)}for(let u of R$.all){let T=u===R$.thumb?1:0,$=R$.getPoints(u),M=e[$[T][0]],O=e[$[T+1][1]],P=e[$[3][1]],z=function(e,t,u){let y=e[0]-t[0],w=e[0]-u[0],T=t[0]-u[0],$=e[1]-t[1],M=e[1]-u[1],O=t[1]-u[1],P=e[2]-t[2],z=e[2]-u[2],L=t[2]-u[2],W=Math.sqrt(y*y+$*$+P*P),B=Math.sqrt(w*w+M*M+z*z),j=Math.sqrt(T*T+O*O+L*L),q=(j*j+W*W-B*B)/(2*j*W);q>1?q=1:q<-1&&(q=-1);let Z=Math.acos(q);return(Z=57.2958*Z%180)>R4.NO_CURL_START_LIMIT?R_.none:Z>R4.HALF_CURL_START_LIMIT?R_.half:R_.full}(M,O,P),L=function(e,t,u,y){let w=e[0]-t[0],T=e[0]-u[0],$=t[0]-u[0],M=e[1]-t[1],O=e[1]-u[1],P=t[1]-u[1],z=Math.max(Math.abs(w),Math.abs(T),Math.abs($)),L=Math.max(Math.abs(M),Math.abs(O),Math.abs(P)),W=0,B=0,j=0,q=L/(z+1e-5);q>1.5?W+=R4.DISTANCE_VOTE_POWER:q>.66?B+=R4.DISTANCE_VOTE_POWER:j+=R4.DISTANCE_VOTE_POWER;let Z=Math.sqrt(w*w+M*M),Y=Math.sqrt(T*T+O*O),J=Math.sqrt($*$+P*P),ee=Math.max(Z,Y,J),ea=e[0],en=e[1],er=u[0],ei=u[1];ee===Z?(er=u[0],ei=u[1]):ee===J&&(ea=t[0],en=t[1]);let es=[ea,en],el=[er,ei],eu=getSlopes(es,el),ed=angleOrientationAt(eu,R4.TOTAL_ANGLE_VOTE_POWER);for(let e of(W+=ed[0],B+=ed[1],j+=ed[2],y)){let t=angleOrientationAt(e,R4.SINGLE_ANGLE_VOTE_POWER);W+=t[0],B+=t[1],j+=t[2]}return W===Math.max(W,B,j)?estimateVerticalDirection(O,M,P,L):j===Math.max(B,j)?estimateHorizontalDirection(T,w,$,z):function(e,t,u,y,w,T,$,M){let O=estimateVerticalDirection(e,t,u,y),P=estimateHorizontalDirection(w,T,$,M);return O===RM.verticalUp?P===RM.horizontalLeft?RM.diagonalUpLeft:RM.diagonalUpRight:P===RM.horizontalLeft?RM.diagonalDownLeft:RM.diagonalDownRight}(O,M,P,L,T,w,$,z)}(M,O,P,t[u].slice(T));y[u]=z,w[u]=L}return{curls:y,directions:w}}function analyze(e){if(!e||0===e.length)return null;let t=estimate(e),u={};for(let e of R$.all)u[R$.getName(e)]={curl:R_.getName(t.curls[e]),direction:RM.getName(t.directions[e])};return u}var body2=e=>{if(!e)return[];let t=[];for(let u=0;u<e.length;u++){let y=e[u].keypoints.find(e=>"leftWrist"===e.part),w=e[u].keypoints.find(e=>"rightWrist"===e.part),T=e[u].keypoints.find(e=>"nose"===e.part);T&&y&&w&&y.position[1]<T.position[1]&&w.position[1]<T.position[1]?t.push({body:u,gesture:"i give up"}):T&&y&&y.position[1]<T.position[1]?t.push({body:u,gesture:"raise left hand"}):T&&w&&w.position[1]<T.position[1]&&t.push({body:u,gesture:"raise right hand"});let $=e[u].keypoints.find(e=>"leftShoulder"===e.part),M=e[u].keypoints.find(e=>"rightShoulder"===e.part);$&&M&&Math.abs($.positionRaw[1]-M.positionRaw[1])>.1&&t.push({body:u,gesture:`leaning ${$.position[1]>M.position[1]?"left":"right"}`})}return t},face2=e=>{if(!e)return[];let t=[];for(let u=0;u<e.length;u++)if(e[u].mesh&&e[u].mesh.length>450){let y=(e[u].mesh[33][2]||0)-(e[u].mesh[263][2]||0),w=e[u].mesh[33][0]-e[u].mesh[263][0];.15>=Math.abs(y/w)?t.push({face:u,gesture:"facing center"}):t.push({face:u,gesture:`facing ${y<0?"left":"right"}`});let T=Math.abs(e[u].mesh[374][1]-e[u].mesh[386][1])/Math.abs(e[u].mesh[443][1]-e[u].mesh[450][1]);T<.2&&t.push({face:u,gesture:"blink left eye"});let $=Math.abs(e[u].mesh[145][1]-e[u].mesh[159][1])/Math.abs(e[u].mesh[223][1]-e[u].mesh[230][1]);$<.2&&t.push({face:u,gesture:"blink right eye"});let M=Math.min(100,500*Math.abs(e[u].mesh[13][1]-e[u].mesh[14][1])/Math.abs(e[u].mesh[10][1]-e[u].mesh[152][1]));M>10&&t.push({face:u,gesture:`mouth ${Math.trunc(M)}% open`});let O=e[u].mesh[152][2]||0;Math.abs(O)>10&&t.push({face:u,gesture:`head ${O<0?"up":"down"}`})}return t},iris2=e=>{var t,u,y,w;if(!e)return[];let T=[];for(let $=0;$<e.length;$++){if(!(null==(u=null==(t=e[$].annotations)?void 0:t.leftEyeIris)?void 0:u[0])||!(null==(w=null==(y=e[$].annotations)?void 0:y.rightEyeIris)?void 0:w[0]))continue;let M=e[$].annotations.leftEyeIris[3][0]-e[$].annotations.leftEyeIris[1][0],O=e[$].annotations.leftEyeIris[4][1]-e[$].annotations.leftEyeIris[2][1],P=Math.abs(M*O),z=e[$].annotations.rightEyeIris[3][0]-e[$].annotations.rightEyeIris[1][0],L=e[$].annotations.rightEyeIris[4][1]-e[$].annotations.rightEyeIris[2][1],W=Math.abs(z*L),B=!1,j=Math.abs(P-W)/Math.max(P,W);j<.25&&(B=!0,T.push({iris:$,gesture:"facing center"}));let q=Math.abs(e[$].mesh[263][0]-e[$].annotations.leftEyeIris[0][0])/e[$].box[2],Z=Math.abs(e[$].mesh[33][0]-e[$].annotations.rightEyeIris[0][0])/e[$].box[2];(q>.06||Z>.06)&&(B=!1),q>Z?Z>.04&&T.push({iris:$,gesture:"looking right"}):q>.04&&T.push({iris:$,gesture:"looking left"});let Y=Math.abs(e[$].mesh[145][1]-e[$].annotations.rightEyeIris[0][1])/e[$].box[3],J=Math.abs(e[$].mesh[374][1]-e[$].annotations.leftEyeIris[0][1])/e[$].box[3];(J<.01||Y<.01||J>.022||Y>.022)&&(B=!1),(J<.01||Y<.01)&&T.push({iris:$,gesture:"looking down"}),(J>.022||Y>.022)&&T.push({iris:$,gesture:"looking up"}),B&&T.push({iris:$,gesture:"looking center"})}return T},hand2=e=>{if(!e)return[];let t=[];for(let u=0;u<e.length;u++){let y=[];if(e[u].annotations)for(let[t,w]of Object.entries(e[u].annotations))"palmBase"!==t&&Array.isArray(w)&&w[0]&&y.push({name:t.toLowerCase(),position:w[0]});if(y&&y.length>0){let e=y.reduce((e,t)=>(e.position[2]||0)<(t.position[2]||0)?e:t);t.push({hand:u,gesture:`${e.name} forward`});let w=y.reduce((e,t)=>e.position[1]<t.position[1]?e:t);t.push({hand:u,gesture:`${w.name} up`})}if(e[u].keypoints){let y=function(e){let t=[];if(!e||0===e.length)return t;let u=estimate(e);for(let e of R7){let y=e.matchAgainst(u.curls,u.directions);y>=.7&&t.push({name:e.name,confidence:y})}return t}(e[u].keypoints);for(let e of y)t.push({hand:u,gesture:e.name})}}return t};function getBoxSize2(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function getBoxCenter2(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function enlargeBox2(e,t=1.5){let u=getBoxCenter2(e),y=getBoxSize2(e),w=[t*y[0]/2,t*y[1]/2],T=[u[0]-w[0],u[1]-w[1]],$=[u[0]+w[0],u[1]+w[1]];return{startPoint:T,endPoint:$,palmLandmarks:e.palmLandmarks}}function squarifyBox2(e){let t=getBoxCenter2(e),u=getBoxSize2(e),y=Math.max(...u),w=y/2,T=[t[0]-w,t[1]-w],$=[t[0]+w,t[1]+w];return{startPoint:T,endPoint:$,palmLandmarks:e.palmLandmarks}}var buildTranslationMatrix2=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]];function dot2(e,t){let u=0;for(let y=0;y<e.length;y++)u+=e[y]*t[y];return u}function multiplyTransformMatrices2(e,t){let u=[],y=e.length;for(let w=0;w<y;w++){u.push([]);for(let T=0;T<y;T++)u[w].push(dot2(e[w],function(e,t){let u=[];for(let y=0;y<e.length;y++)u.push(e[y][t]);return u}(t,T)))}return u}function buildRotationMatrix2(e,t){let u=Math.cos(e),y=Math.sin(e),w=buildTranslationMatrix2(t[0],t[1]),T=multiplyTransformMatrices2(w,[[u,-y,0],[y,u,0],[0,0,1]]),$=buildTranslationMatrix2(-t[0],-t[1]);return multiplyTransformMatrices2(T,$)}function rotatePoint2(e,t){return[dot2(e,t[0]),dot2(e,t[1])]}var R6=[{x:.015625,y:.015625},{x:.015625,y:.015625},{x:.046875,y:.015625},{x:.046875,y:.015625},{x:.078125,y:.015625},{x:.078125,y:.015625},{x:.109375,y:.015625},{x:.109375,y:.015625},{x:.140625,y:.015625},{x:.140625,y:.015625},{x:.171875,y:.015625},{x:.171875,y:.015625},{x:.203125,y:.015625},{x:.203125,y:.015625},{x:.234375,y:.015625},{x:.234375,y:.015625},{x:.265625,y:.015625},{x:.265625,y:.015625},{x:.296875,y:.015625},{x:.296875,y:.015625},{x:.328125,y:.015625},{x:.328125,y:.015625},{x:.359375,y:.015625},{x:.359375,y:.015625},{x:.390625,y:.015625},{x:.390625,y:.015625},{x:.421875,y:.015625},{x:.421875,y:.015625},{x:.453125,y:.015625},{x:.453125,y:.015625},{x:.484375,y:.015625},{x:.484375,y:.015625},{x:.515625,y:.015625},{x:.515625,y:.015625},{x:.546875,y:.015625},{x:.546875,y:.015625},{x:.578125,y:.015625},{x:.578125,y:.015625},{x:.609375,y:.015625},{x:.609375,y:.015625},{x:.640625,y:.015625},{x:.640625,y:.015625},{x:.671875,y:.015625},{x:.671875,y:.015625},{x:.703125,y:.015625},{x:.703125,y:.015625},{x:.734375,y:.015625},{x:.734375,y:.015625},{x:.765625,y:.015625},{x:.765625,y:.015625},{x:.796875,y:.015625},{x:.796875,y:.015625},{x:.828125,y:.015625},{x:.828125,y:.015625},{x:.859375,y:.015625},{x:.859375,y:.015625},{x:.890625,y:.015625},{x:.890625,y:.015625},{x:.921875,y:.015625},{x:.921875,y:.015625},{x:.953125,y:.015625},{x:.953125,y:.015625},{x:.984375,y:.015625},{x:.984375,y:.015625},{x:.015625,y:.046875},{x:.015625,y:.046875},{x:.046875,y:.046875},{x:.046875,y:.046875},{x:.078125,y:.046875},{x:.078125,y:.046875},{x:.109375,y:.046875},{x:.109375,y:.046875},{x:.140625,y:.046875},{x:.140625,y:.046875},{x:.171875,y:.046875},{x:.171875,y:.046875},{x:.203125,y:.046875},{x:.203125,y:.046875},{x:.234375,y:.046875},{x:.234375,y:.046875},{x:.265625,y:.046875},{x:.265625,y:.046875},{x:.296875,y:.046875},{x:.296875,y:.046875},{x:.328125,y:.046875},{x:.328125,y:.046875},{x:.359375,y:.046875},{x:.359375,y:.046875},{x:.390625,y:.046875},{x:.390625,y:.046875},{x:.421875,y:.046875},{x:.421875,y:.046875},{x:.453125,y:.046875},{x:.453125,y:.046875},{x:.484375,y:.046875},{x:.484375,y:.046875},{x:.515625,y:.046875},{x:.515625,y:.046875},{x:.546875,y:.046875},{x:.546875,y:.046875},{x:.578125,y:.046875},{x:.578125,y:.046875},{x:.609375,y:.046875},{x:.609375,y:.046875},{x:.640625,y:.046875},{x:.640625,y:.046875},{x:.671875,y:.046875},{x:.671875,y:.046875},{x:.703125,y:.046875},{x:.703125,y:.046875},{x:.734375,y:.046875},{x:.734375,y:.046875},{x:.765625,y:.046875},{x:.765625,y:.046875},{x:.796875,y:.046875},{x:.796875,y:.046875},{x:.828125,y:.046875},{x:.828125,y:.046875},{x:.859375,y:.046875},{x:.859375,y:.046875},{x:.890625,y:.046875},{x:.890625,y:.046875},{x:.921875,y:.046875},{x:.921875,y:.046875},{x:.953125,y:.046875},{x:.953125,y:.046875},{x:.984375,y:.046875},{x:.984375,y:.046875},{x:.015625,y:.078125},{x:.015625,y:.078125},{x:.046875,y:.078125},{x:.046875,y:.078125},{x:.078125,y:.078125},{x:.078125,y:.078125},{x:.109375,y:.078125},{x:.109375,y:.078125},{x:.140625,y:.078125},{x:.140625,y:.078125},{x:.171875,y:.078125},{x:.171875,y:.078125},{x:.203125,y:.078125},{x:.203125,y:.078125},{x:.234375,y:.078125},{x:.234375,y:.078125},{x:.265625,y:.078125},{x:.265625,y:.078125},{x:.296875,y:.078125},{x:.296875,y:.078125},{x:.328125,y:.078125},{x:.328125,y:.078125},{x:.359375,y:.078125},{x:.359375,y:.078125},{x:.390625,y:.078125},{x:.390625,y:.078125},{x:.421875,y:.078125},{x:.421875,y:.078125},{x:.453125,y:.078125},{x:.453125,y:.078125},{x:.484375,y:.078125},{x:.484375,y:.078125},{x:.515625,y:.078125},{x:.515625,y:.078125},{x:.546875,y:.078125},{x:.546875,y:.078125},{x:.578125,y:.078125},{x:.578125,y:.078125},{x:.609375,y:.078125},{x:.609375,y:.078125},{x:.640625,y:.078125},{x:.640625,y:.078125},{x:.671875,y:.078125},{x:.671875,y:.078125},{x:.703125,y:.078125},{x:.703125,y:.078125},{x:.734375,y:.078125},{x:.734375,y:.078125},{x:.765625,y:.078125},{x:.765625,y:.078125},{x:.796875,y:.078125},{x:.796875,y:.078125},{x:.828125,y:.078125},{x:.828125,y:.078125},{x:.859375,y:.078125},{x:.859375,y:.078125},{x:.890625,y:.078125},{x:.890625,y:.078125},{x:.921875,y:.078125},{x:.921875,y:.078125},{x:.953125,y:.078125},{x:.953125,y:.078125},{x:.984375,y:.078125},{x:.984375,y:.078125},{x:.015625,y:.109375},{x:.015625,y:.109375},{x:.046875,y:.109375},{x:.046875,y:.109375},{x:.078125,y:.109375},{x:.078125,y:.109375},{x:.109375,y:.109375},{x:.109375,y:.109375},{x:.140625,y:.109375},{x:.140625,y:.109375},{x:.171875,y:.109375},{x:.171875,y:.109375},{x:.203125,y:.109375},{x:.203125,y:.109375},{x:.234375,y:.109375},{x:.234375,y:.109375},{x:.265625,y:.109375},{x:.265625,y:.109375},{x:.296875,y:.109375},{x:.296875,y:.109375},{x:.328125,y:.109375},{x:.328125,y:.109375},{x:.359375,y:.109375},{x:.359375,y:.109375},{x:.390625,y:.109375},{x:.390625,y:.109375},{x:.421875,y:.109375},{x:.421875,y:.109375},{x:.453125,y:.109375},{x:.453125,y:.109375},{x:.484375,y:.109375},{x:.484375,y:.109375},{x:.515625,y:.109375},{x:.515625,y:.109375},{x:.546875,y:.109375},{x:.546875,y:.109375},{x:.578125,y:.109375},{x:.578125,y:.109375},{x:.609375,y:.109375},{x:.609375,y:.109375},{x:.640625,y:.109375},{x:.640625,y:.109375},{x:.671875,y:.109375},{x:.671875,y:.109375},{x:.703125,y:.109375},{x:.703125,y:.109375},{x:.734375,y:.109375},{x:.734375,y:.109375},{x:.765625,y:.109375},{x:.765625,y:.109375},{x:.796875,y:.109375},{x:.796875,y:.109375},{x:.828125,y:.109375},{x:.828125,y:.109375},{x:.859375,y:.109375},{x:.859375,y:.109375},{x:.890625,y:.109375},{x:.890625,y:.109375},{x:.921875,y:.109375},{x:.921875,y:.109375},{x:.953125,y:.109375},{x:.953125,y:.109375},{x:.984375,y:.109375},{x:.984375,y:.109375},{x:.015625,y:.140625},{x:.015625,y:.140625},{x:.046875,y:.140625},{x:.046875,y:.140625},{x:.078125,y:.140625},{x:.078125,y:.140625},{x:.109375,y:.140625},{x:.109375,y:.140625},{x:.140625,y:.140625},{x:.140625,y:.140625},{x:.171875,y:.140625},{x:.171875,y:.140625},{x:.203125,y:.140625},{x:.203125,y:.140625},{x:.234375,y:.140625},{x:.234375,y:.140625},{x:.265625,y:.140625},{x:.265625,y:.140625},{x:.296875,y:.140625},{x:.296875,y:.140625},{x:.328125,y:.140625},{x:.328125,y:.140625},{x:.359375,y:.140625},{x:.359375,y:.140625},{x:.390625,y:.140625},{x:.390625,y:.140625},{x:.421875,y:.140625},{x:.421875,y:.140625},{x:.453125,y:.140625},{x:.453125,y:.140625},{x:.484375,y:.140625},{x:.484375,y:.140625},{x:.515625,y:.140625},{x:.515625,y:.140625},{x:.546875,y:.140625},{x:.546875,y:.140625},{x:.578125,y:.140625},{x:.578125,y:.140625},{x:.609375,y:.140625},{x:.609375,y:.140625},{x:.640625,y:.140625},{x:.640625,y:.140625},{x:.671875,y:.140625},{x:.671875,y:.140625},{x:.703125,y:.140625},{x:.703125,y:.140625},{x:.734375,y:.140625},{x:.734375,y:.140625},{x:.765625,y:.140625},{x:.765625,y:.140625},{x:.796875,y:.140625},{x:.796875,y:.140625},{x:.828125,y:.140625},{x:.828125,y:.140625},{x:.859375,y:.140625},{x:.859375,y:.140625},{x:.890625,y:.140625},{x:.890625,y:.140625},{x:.921875,y:.140625},{x:.921875,y:.140625},{x:.953125,y:.140625},{x:.953125,y:.140625},{x:.984375,y:.140625},{x:.984375,y:.140625},{x:.015625,y:.171875},{x:.015625,y:.171875},{x:.046875,y:.171875},{x:.046875,y:.171875},{x:.078125,y:.171875},{x:.078125,y:.171875},{x:.109375,y:.171875},{x:.109375,y:.171875},{x:.140625,y:.171875},{x:.140625,y:.171875},{x:.171875,y:.171875},{x:.171875,y:.171875},{x:.203125,y:.171875},{x:.203125,y:.171875},{x:.234375,y:.171875},{x:.234375,y:.171875},{x:.265625,y:.171875},{x:.265625,y:.171875},{x:.296875,y:.171875},{x:.296875,y:.171875},{x:.328125,y:.171875},{x:.328125,y:.171875},{x:.359375,y:.171875},{x:.359375,y:.171875},{x:.390625,y:.171875},{x:.390625,y:.171875},{x:.421875,y:.171875},{x:.421875,y:.171875},{x:.453125,y:.171875},{x:.453125,y:.171875},{x:.484375,y:.171875},{x:.484375,y:.171875},{x:.515625,y:.171875},{x:.515625,y:.171875},{x:.546875,y:.171875},{x:.546875,y:.171875},{x:.578125,y:.171875},{x:.578125,y:.171875},{x:.609375,y:.171875},{x:.609375,y:.171875},{x:.640625,y:.171875},{x:.640625,y:.171875},{x:.671875,y:.171875},{x:.671875,y:.171875},{x:.703125,y:.171875},{x:.703125,y:.171875},{x:.734375,y:.171875},{x:.734375,y:.171875},{x:.765625,y:.171875},{x:.765625,y:.171875},{x:.796875,y:.171875},{x:.796875,y:.171875},{x:.828125,y:.171875},{x:.828125,y:.171875},{x:.859375,y:.171875},{x:.859375,y:.171875},{x:.890625,y:.171875},{x:.890625,y:.171875},{x:.921875,y:.171875},{x:.921875,y:.171875},{x:.953125,y:.171875},{x:.953125,y:.171875},{x:.984375,y:.171875},{x:.984375,y:.171875},{x:.015625,y:.203125},{x:.015625,y:.203125},{x:.046875,y:.203125},{x:.046875,y:.203125},{x:.078125,y:.203125},{x:.078125,y:.203125},{x:.109375,y:.203125},{x:.109375,y:.203125},{x:.140625,y:.203125},{x:.140625,y:.203125},{x:.171875,y:.203125},{x:.171875,y:.203125},{x:.203125,y:.203125},{x:.203125,y:.203125},{x:.234375,y:.203125},{x:.234375,y:.203125},{x:.265625,y:.203125},{x:.265625,y:.203125},{x:.296875,y:.203125},{x:.296875,y:.203125},{x:.328125,y:.203125},{x:.328125,y:.203125},{x:.359375,y:.203125},{x:.359375,y:.203125},{x:.390625,y:.203125},{x:.390625,y:.203125},{x:.421875,y:.203125},{x:.421875,y:.203125},{x:.453125,y:.203125},{x:.453125,y:.203125},{x:.484375,y:.203125},{x:.484375,y:.203125},{x:.515625,y:.203125},{x:.515625,y:.203125},{x:.546875,y:.203125},{x:.546875,y:.203125},{x:.578125,y:.203125},{x:.578125,y:.203125},{x:.609375,y:.203125},{x:.609375,y:.203125},{x:.640625,y:.203125},{x:.640625,y:.203125},{x:.671875,y:.203125},{x:.671875,y:.203125},{x:.703125,y:.203125},{x:.703125,y:.203125},{x:.734375,y:.203125},{x:.734375,y:.203125},{x:.765625,y:.203125},{x:.765625,y:.203125},{x:.796875,y:.203125},{x:.796875,y:.203125},{x:.828125,y:.203125},{x:.828125,y:.203125},{x:.859375,y:.203125},{x:.859375,y:.203125},{x:.890625,y:.203125},{x:.890625,y:.203125},{x:.921875,y:.203125},{x:.921875,y:.203125},{x:.953125,y:.203125},{x:.953125,y:.203125},{x:.984375,y:.203125},{x:.984375,y:.203125},{x:.015625,y:.234375},{x:.015625,y:.234375},{x:.046875,y:.234375},{x:.046875,y:.234375},{x:.078125,y:.234375},{x:.078125,y:.234375},{x:.109375,y:.234375},{x:.109375,y:.234375},{x:.140625,y:.234375},{x:.140625,y:.234375},{x:.171875,y:.234375},{x:.171875,y:.234375},{x:.203125,y:.234375},{x:.203125,y:.234375},{x:.234375,y:.234375},{x:.234375,y:.234375},{x:.265625,y:.234375},{x:.265625,y:.234375},{x:.296875,y:.234375},{x:.296875,y:.234375},{x:.328125,y:.234375},{x:.328125,y:.234375},{x:.359375,y:.234375},{x:.359375,y:.234375},{x:.390625,y:.234375},{x:.390625,y:.234375},{x:.421875,y:.234375},{x:.421875,y:.234375},{x:.453125,y:.234375},{x:.453125,y:.234375},{x:.484375,y:.234375},{x:.484375,y:.234375},{x:.515625,y:.234375},{x:.515625,y:.234375},{x:.546875,y:.234375},{x:.546875,y:.234375},{x:.578125,y:.234375},{x:.578125,y:.234375},{x:.609375,y:.234375},{x:.609375,y:.234375},{x:.640625,y:.234375},{x:.640625,y:.234375},{x:.671875,y:.234375},{x:.671875,y:.234375},{x:.703125,y:.234375},{x:.703125,y:.234375},{x:.734375,y:.234375},{x:.734375,y:.234375},{x:.765625,y:.234375},{x:.765625,y:.234375},{x:.796875,y:.234375},{x:.796875,y:.234375},{x:.828125,y:.234375},{x:.828125,y:.234375},{x:.859375,y:.234375},{x:.859375,y:.234375},{x:.890625,y:.234375},{x:.890625,y:.234375},{x:.921875,y:.234375},{x:.921875,y:.234375},{x:.953125,y:.234375},{x:.953125,y:.234375},{x:.984375,y:.234375},{x:.984375,y:.234375},{x:.015625,y:.265625},{x:.015625,y:.265625},{x:.046875,y:.265625},{x:.046875,y:.265625},{x:.078125,y:.265625},{x:.078125,y:.265625},{x:.109375,y:.265625},{x:.109375,y:.265625},{x:.140625,y:.265625},{x:.140625,y:.265625},{x:.171875,y:.265625},{x:.171875,y:.265625},{x:.203125,y:.265625},{x:.203125,y:.265625},{x:.234375,y:.265625},{x:.234375,y:.265625},{x:.265625,y:.265625},{x:.265625,y:.265625},{x:.296875,y:.265625},{x:.296875,y:.265625},{x:.328125,y:.265625},{x:.328125,y:.265625},{x:.359375,y:.265625},{x:.359375,y:.265625},{x:.390625,y:.265625},{x:.390625,y:.265625},{x:.421875,y:.265625},{x:.421875,y:.265625},{x:.453125,y:.265625},{x:.453125,y:.265625},{x:.484375,y:.265625},{x:.484375,y:.265625},{x:.515625,y:.265625},{x:.515625,y:.265625},{x:.546875,y:.265625},{x:.546875,y:.265625},{x:.578125,y:.265625},{x:.578125,y:.265625},{x:.609375,y:.265625},{x:.609375,y:.265625},{x:.640625,y:.265625},{x:.640625,y:.265625},{x:.671875,y:.265625},{x:.671875,y:.265625},{x:.703125,y:.265625},{x:.703125,y:.265625},{x:.734375,y:.265625},{x:.734375,y:.265625},{x:.765625,y:.265625},{x:.765625,y:.265625},{x:.796875,y:.265625},{x:.796875,y:.265625},{x:.828125,y:.265625},{x:.828125,y:.265625},{x:.859375,y:.265625},{x:.859375,y:.265625},{x:.890625,y:.265625},{x:.890625,y:.265625},{x:.921875,y:.265625},{x:.921875,y:.265625},{x:.953125,y:.265625},{x:.953125,y:.265625},{x:.984375,y:.265625},{x:.984375,y:.265625},{x:.015625,y:.296875},{x:.015625,y:.296875},{x:.046875,y:.296875},{x:.046875,y:.296875},{x:.078125,y:.296875},{x:.078125,y:.296875},{x:.109375,y:.296875},{x:.109375,y:.296875},{x:.140625,y:.296875},{x:.140625,y:.296875},{x:.171875,y:.296875},{x:.171875,y:.296875},{x:.203125,y:.296875},{x:.203125,y:.296875},{x:.234375,y:.296875},{x:.234375,y:.296875},{x:.265625,y:.296875},{x:.265625,y:.296875},{x:.296875,y:.296875},{x:.296875,y:.296875},{x:.328125,y:.296875},{x:.328125,y:.296875},{x:.359375,y:.296875},{x:.359375,y:.296875},{x:.390625,y:.296875},{x:.390625,y:.296875},{x:.421875,y:.296875},{x:.421875,y:.296875},{x:.453125,y:.296875},{x:.453125,y:.296875},{x:.484375,y:.296875},{x:.484375,y:.296875},{x:.515625,y:.296875},{x:.515625,y:.296875},{x:.546875,y:.296875},{x:.546875,y:.296875},{x:.578125,y:.296875},{x:.578125,y:.296875},{x:.609375,y:.296875},{x:.609375,y:.296875},{x:.640625,y:.296875},{x:.640625,y:.296875},{x:.671875,y:.296875},{x:.671875,y:.296875},{x:.703125,y:.296875},{x:.703125,y:.296875},{x:.734375,y:.296875},{x:.734375,y:.296875},{x:.765625,y:.296875},{x:.765625,y:.296875},{x:.796875,y:.296875},{x:.796875,y:.296875},{x:.828125,y:.296875},{x:.828125,y:.296875},{x:.859375,y:.296875},{x:.859375,y:.296875},{x:.890625,y:.296875},{x:.890625,y:.296875},{x:.921875,y:.296875},{x:.921875,y:.296875},{x:.953125,y:.296875},{x:.953125,y:.296875},{x:.984375,y:.296875},{x:.984375,y:.296875},{x:.015625,y:.328125},{x:.015625,y:.328125},{x:.046875,y:.328125},{x:.046875,y:.328125},{x:.078125,y:.328125},{x:.078125,y:.328125},{x:.109375,y:.328125},{x:.109375,y:.328125},{x:.140625,y:.328125},{x:.140625,y:.328125},{x:.171875,y:.328125},{x:.171875,y:.328125},{x:.203125,y:.328125},{x:.203125,y:.328125},{x:.234375,y:.328125},{x:.234375,y:.328125},{x:.265625,y:.328125},{x:.265625,y:.328125},{x:.296875,y:.328125},{x:.296875,y:.328125},{x:.328125,y:.328125},{x:.328125,y:.328125},{x:.359375,y:.328125},{x:.359375,y:.328125},{x:.390625,y:.328125},{x:.390625,y:.328125},{x:.421875,y:.328125},{x:.421875,y:.328125},{x:.453125,y:.328125},{x:.453125,y:.328125},{x:.484375,y:.328125},{x:.484375,y:.328125},{x:.515625,y:.328125},{x:.515625,y:.328125},{x:.546875,y:.328125},{x:.546875,y:.328125},{x:.578125,y:.328125},{x:.578125,y:.328125},{x:.609375,y:.328125},{x:.609375,y:.328125},{x:.640625,y:.328125},{x:.640625,y:.328125},{x:.671875,y:.328125},{x:.671875,y:.328125},{x:.703125,y:.328125},{x:.703125,y:.328125},{x:.734375,y:.328125},{x:.734375,y:.328125},{x:.765625,y:.328125},{x:.765625,y:.328125},{x:.796875,y:.328125},{x:.796875,y:.328125},{x:.828125,y:.328125},{x:.828125,y:.328125},{x:.859375,y:.328125},{x:.859375,y:.328125},{x:.890625,y:.328125},{x:.890625,y:.328125},{x:.921875,y:.328125},{x:.921875,y:.328125},{x:.953125,y:.328125},{x:.953125,y:.328125},{x:.984375,y:.328125},{x:.984375,y:.328125},{x:.015625,y:.359375},{x:.015625,y:.359375},{x:.046875,y:.359375},{x:.046875,y:.359375},{x:.078125,y:.359375},{x:.078125,y:.359375},{x:.109375,y:.359375},{x:.109375,y:.359375},{x:.140625,y:.359375},{x:.140625,y:.359375},{x:.171875,y:.359375},{x:.171875,y:.359375},{x:.203125,y:.359375},{x:.203125,y:.359375},{x:.234375,y:.359375},{x:.234375,y:.359375},{x:.265625,y:.359375},{x:.265625,y:.359375},{x:.296875,y:.359375},{x:.296875,y:.359375},{x:.328125,y:.359375},{x:.328125,y:.359375},{x:.359375,y:.359375},{x:.359375,y:.359375},{x:.390625,y:.359375},{x:.390625,y:.359375},{x:.421875,y:.359375},{x:.421875,y:.359375},{x:.453125,y:.359375},{x:.453125,y:.359375},{x:.484375,y:.359375},{x:.484375,y:.359375},{x:.515625,y:.359375},{x:.515625,y:.359375},{x:.546875,y:.359375},{x:.546875,y:.359375},{x:.578125,y:.359375},{x:.578125,y:.359375},{x:.609375,y:.359375},{x:.609375,y:.359375},{x:.640625,y:.359375},{x:.640625,y:.359375},{x:.671875,y:.359375},{x:.671875,y:.359375},{x:.703125,y:.359375},{x:.703125,y:.359375},{x:.734375,y:.359375},{x:.734375,y:.359375},{x:.765625,y:.359375},{x:.765625,y:.359375},{x:.796875,y:.359375},{x:.796875,y:.359375},{x:.828125,y:.359375},{x:.828125,y:.359375},{x:.859375,y:.359375},{x:.859375,y:.359375},{x:.890625,y:.359375},{x:.890625,y:.359375},{x:.921875,y:.359375},{x:.921875,y:.359375},{x:.953125,y:.359375},{x:.953125,y:.359375},{x:.984375,y:.359375},{x:.984375,y:.359375},{x:.015625,y:.390625},{x:.015625,y:.390625},{x:.046875,y:.390625},{x:.046875,y:.390625},{x:.078125,y:.390625},{x:.078125,y:.390625},{x:.109375,y:.390625},{x:.109375,y:.390625},{x:.140625,y:.390625},{x:.140625,y:.390625},{x:.171875,y:.390625},{x:.171875,y:.390625},{x:.203125,y:.390625},{x:.203125,y:.390625},{x:.234375,y:.390625},{x:.234375,y:.390625},{x:.265625,y:.390625},{x:.265625,y:.390625},{x:.296875,y:.390625},{x:.296875,y:.390625},{x:.328125,y:.390625},{x:.328125,y:.390625},{x:.359375,y:.390625},{x:.359375,y:.390625},{x:.390625,y:.390625},{x:.390625,y:.390625},{x:.421875,y:.390625},{x:.421875,y:.390625},{x:.453125,y:.390625},{x:.453125,y:.390625},{x:.484375,y:.390625},{x:.484375,y:.390625},{x:.515625,y:.390625},{x:.515625,y:.390625},{x:.546875,y:.390625},{x:.546875,y:.390625},{x:.578125,y:.390625},{x:.578125,y:.390625},{x:.609375,y:.390625},{x:.609375,y:.390625},{x:.640625,y:.390625},{x:.640625,y:.390625},{x:.671875,y:.390625},{x:.671875,y:.390625},{x:.703125,y:.390625},{x:.703125,y:.390625},{x:.734375,y:.390625},{x:.734375,y:.390625},{x:.765625,y:.390625},{x:.765625,y:.390625},{x:.796875,y:.390625},{x:.796875,y:.390625},{x:.828125,y:.390625},{x:.828125,y:.390625},{x:.859375,y:.390625},{x:.859375,y:.390625},{x:.890625,y:.390625},{x:.890625,y:.390625},{x:.921875,y:.390625},{x:.921875,y:.390625},{x:.953125,y:.390625},{x:.953125,y:.390625},{x:.984375,y:.390625},{x:.984375,y:.390625},{x:.015625,y:.421875},{x:.015625,y:.421875},{x:.046875,y:.421875},{x:.046875,y:.421875},{x:.078125,y:.421875},{x:.078125,y:.421875},{x:.109375,y:.421875},{x:.109375,y:.421875},{x:.140625,y:.421875},{x:.140625,y:.421875},{x:.171875,y:.421875},{x:.171875,y:.421875},{x:.203125,y:.421875},{x:.203125,y:.421875},{x:.234375,y:.421875},{x:.234375,y:.421875},{x:.265625,y:.421875},{x:.265625,y:.421875},{x:.296875,y:.421875},{x:.296875,y:.421875},{x:.328125,y:.421875},{x:.328125,y:.421875},{x:.359375,y:.421875},{x:.359375,y:.421875},{x:.390625,y:.421875},{x:.390625,y:.421875},{x:.421875,y:.421875},{x:.421875,y:.421875},{x:.453125,y:.421875},{x:.453125,y:.421875},{x:.484375,y:.421875},{x:.484375,y:.421875},{x:.515625,y:.421875},{x:.515625,y:.421875},{x:.546875,y:.421875},{x:.546875,y:.421875},{x:.578125,y:.421875},{x:.578125,y:.421875},{x:.609375,y:.421875},{x:.609375,y:.421875},{x:.640625,y:.421875},{x:.640625,y:.421875},{x:.671875,y:.421875},{x:.671875,y:.421875},{x:.703125,y:.421875},{x:.703125,y:.421875},{x:.734375,y:.421875},{x:.734375,y:.421875},{x:.765625,y:.421875},{x:.765625,y:.421875},{x:.796875,y:.421875},{x:.796875,y:.421875},{x:.828125,y:.421875},{x:.828125,y:.421875},{x:.859375,y:.421875},{x:.859375,y:.421875},{x:.890625,y:.421875},{x:.890625,y:.421875},{x:.921875,y:.421875},{x:.921875,y:.421875},{x:.953125,y:.421875},{x:.953125,y:.421875},{x:.984375,y:.421875},{x:.984375,y:.421875},{x:.015625,y:.453125},{x:.015625,y:.453125},{x:.046875,y:.453125},{x:.046875,y:.453125},{x:.078125,y:.453125},{x:.078125,y:.453125},{x:.109375,y:.453125},{x:.109375,y:.453125},{x:.140625,y:.453125},{x:.140625,y:.453125},{x:.171875,y:.453125},{x:.171875,y:.453125},{x:.203125,y:.453125},{x:.203125,y:.453125},{x:.234375,y:.453125},{x:.234375,y:.453125},{x:.265625,y:.453125},{x:.265625,y:.453125},{x:.296875,y:.453125},{x:.296875,y:.453125},{x:.328125,y:.453125},{x:.328125,y:.453125},{x:.359375,y:.453125},{x:.359375,y:.453125},{x:.390625,y:.453125},{x:.390625,y:.453125},{x:.421875,y:.453125},{x:.421875,y:.453125},{x:.453125,y:.453125},{x:.453125,y:.453125},{x:.484375,y:.453125},{x:.484375,y:.453125},{x:.515625,y:.453125},{x:.515625,y:.453125},{x:.546875,y:.453125},{x:.546875,y:.453125},{x:.578125,y:.453125},{x:.578125,y:.453125},{x:.609375,y:.453125},{x:.609375,y:.453125},{x:.640625,y:.453125},{x:.640625,y:.453125},{x:.671875,y:.453125},{x:.671875,y:.453125},{x:.703125,y:.453125},{x:.703125,y:.453125},{x:.734375,y:.453125},{x:.734375,y:.453125},{x:.765625,y:.453125},{x:.765625,y:.453125},{x:.796875,y:.453125},{x:.796875,y:.453125},{x:.828125,y:.453125},{x:.828125,y:.453125},{x:.859375,y:.453125},{x:.859375,y:.453125},{x:.890625,y:.453125},{x:.890625,y:.453125},{x:.921875,y:.453125},{x:.921875,y:.453125},{x:.953125,y:.453125},{x:.953125,y:.453125},{x:.984375,y:.453125},{x:.984375,y:.453125},{x:.015625,y:.484375},{x:.015625,y:.484375},{x:.046875,y:.484375},{x:.046875,y:.484375},{x:.078125,y:.484375},{x:.078125,y:.484375},{x:.109375,y:.484375},{x:.109375,y:.484375},{x:.140625,y:.484375},{x:.140625,y:.484375},{x:.171875,y:.484375},{x:.171875,y:.484375},{x:.203125,y:.484375},{x:.203125,y:.484375},{x:.234375,y:.484375},{x:.234375,y:.484375},{x:.265625,y:.484375},{x:.265625,y:.484375},{x:.296875,y:.484375},{x:.296875,y:.484375},{x:.328125,y:.484375},{x:.328125,y:.484375},{x:.359375,y:.484375},{x:.359375,y:.484375},{x:.390625,y:.484375},{x:.390625,y:.484375},{x:.421875,y:.484375},{x:.421875,y:.484375},{x:.453125,y:.484375},{x:.453125,y:.484375},{x:.484375,y:.484375},{x:.484375,y:.484375},{x:.515625,y:.484375},{x:.515625,y:.484375},{x:.546875,y:.484375},{x:.546875,y:.484375},{x:.578125,y:.484375},{x:.578125,y:.484375},{x:.609375,y:.484375},{x:.609375,y:.484375},{x:.640625,y:.484375},{x:.640625,y:.484375},{x:.671875,y:.484375},{x:.671875,y:.484375},{x:.703125,y:.484375},{x:.703125,y:.484375},{x:.734375,y:.484375},{x:.734375,y:.484375},{x:.765625,y:.484375},{x:.765625,y:.484375},{x:.796875,y:.484375},{x:.796875,y:.484375},{x:.828125,y:.484375},{x:.828125,y:.484375},{x:.859375,y:.484375},{x:.859375,y:.484375},{x:.890625,y:.484375},{x:.890625,y:.484375},{x:.921875,y:.484375},{x:.921875,y:.484375},{x:.953125,y:.484375},{x:.953125,y:.484375},{x:.984375,y:.484375},{x:.984375,y:.484375},{x:.015625,y:.515625},{x:.015625,y:.515625},{x:.046875,y:.515625},{x:.046875,y:.515625},{x:.078125,y:.515625},{x:.078125,y:.515625},{x:.109375,y:.515625},{x:.109375,y:.515625},{x:.140625,y:.515625},{x:.140625,y:.515625},{x:.171875,y:.515625},{x:.171875,y:.515625},{x:.203125,y:.515625},{x:.203125,y:.515625},{x:.234375,y:.515625},{x:.234375,y:.515625},{x:.265625,y:.515625},{x:.265625,y:.515625},{x:.296875,y:.515625},{x:.296875,y:.515625},{x:.328125,y:.515625},{x:.328125,y:.515625},{x:.359375,y:.515625},{x:.359375,y:.515625},{x:.390625,y:.515625},{x:.390625,y:.515625},{x:.421875,y:.515625},{x:.421875,y:.515625},{x:.453125,y:.515625},{x:.453125,y:.515625},{x:.484375,y:.515625},{x:.484375,y:.515625},{x:.515625,y:.515625},{x:.515625,y:.515625},{x:.546875,y:.515625},{x:.546875,y:.515625},{x:.578125,y:.515625},{x:.578125,y:.515625},{x:.609375,y:.515625},{x:.609375,y:.515625},{x:.640625,y:.515625},{x:.640625,y:.515625},{x:.671875,y:.515625},{x:.671875,y:.515625},{x:.703125,y:.515625},{x:.703125,y:.515625},{x:.734375,y:.515625},{x:.734375,y:.515625},{x:.765625,y:.515625},{x:.765625,y:.515625},{x:.796875,y:.515625},{x:.796875,y:.515625},{x:.828125,y:.515625},{x:.828125,y:.515625},{x:.859375,y:.515625},{x:.859375,y:.515625},{x:.890625,y:.515625},{x:.890625,y:.515625},{x:.921875,y:.515625},{x:.921875,y:.515625},{x:.953125,y:.515625},{x:.953125,y:.515625},{x:.984375,y:.515625},{x:.984375,y:.515625},{x:.015625,y:.546875},{x:.015625,y:.546875},{x:.046875,y:.546875},{x:.046875,y:.546875},{x:.078125,y:.546875},{x:.078125,y:.546875},{x:.109375,y:.546875},{x:.109375,y:.546875},{x:.140625,y:.546875},{x:.140625,y:.546875},{x:.171875,y:.546875},{x:.171875,y:.546875},{x:.203125,y:.546875},{x:.203125,y:.546875},{x:.234375,y:.546875},{x:.234375,y:.546875},{x:.265625,y:.546875},{x:.265625,y:.546875},{x:.296875,y:.546875},{x:.296875,y:.546875},{x:.328125,y:.546875},{x:.328125,y:.546875},{x:.359375,y:.546875},{x:.359375,y:.546875},{x:.390625,y:.546875},{x:.390625,y:.546875},{x:.421875,y:.546875},{x:.421875,y:.546875},{x:.453125,y:.546875},{x:.453125,y:.546875},{x:.484375,y:.546875},{x:.484375,y:.546875},{x:.515625,y:.546875},{x:.515625,y:.546875},{x:.546875,y:.546875},{x:.546875,y:.546875},{x:.578125,y:.546875},{x:.578125,y:.546875},{x:.609375,y:.546875},{x:.609375,y:.546875},{x:.640625,y:.546875},{x:.640625,y:.546875},{x:.671875,y:.546875},{x:.671875,y:.546875},{x:.703125,y:.546875},{x:.703125,y:.546875},{x:.734375,y:.546875},{x:.734375,y:.546875},{x:.765625,y:.546875},{x:.765625,y:.546875},{x:.796875,y:.546875},{x:.796875,y:.546875},{x:.828125,y:.546875},{x:.828125,y:.546875},{x:.859375,y:.546875},{x:.859375,y:.546875},{x:.890625,y:.546875},{x:.890625,y:.546875},{x:.921875,y:.546875},{x:.921875,y:.546875},{x:.953125,y:.546875},{x:.953125,y:.546875},{x:.984375,y:.546875},{x:.984375,y:.546875},{x:.015625,y:.578125},{x:.015625,y:.578125},{x:.046875,y:.578125},{x:.046875,y:.578125},{x:.078125,y:.578125},{x:.078125,y:.578125},{x:.109375,y:.578125},{x:.109375,y:.578125},{x:.140625,y:.578125},{x:.140625,y:.578125},{x:.171875,y:.578125},{x:.171875,y:.578125},{x:.203125,y:.578125},{x:.203125,y:.578125},{x:.234375,y:.578125},{x:.234375,y:.578125},{x:.265625,y:.578125},{x:.265625,y:.578125},{x:.296875,y:.578125},{x:.296875,y:.578125},{x:.328125,y:.578125},{x:.328125,y:.578125},{x:.359375,y:.578125},{x:.359375,y:.578125},{x:.390625,y:.578125},{x:.390625,y:.578125},{x:.421875,y:.578125},{x:.421875,y:.578125},{x:.453125,y:.578125},{x:.453125,y:.578125},{x:.484375,y:.578125},{x:.484375,y:.578125},{x:.515625,y:.578125},{x:.515625,y:.578125},{x:.546875,y:.578125},{x:.546875,y:.578125},{x:.578125,y:.578125},{x:.578125,y:.578125},{x:.609375,y:.578125},{x:.609375,y:.578125},{x:.640625,y:.578125},{x:.640625,y:.578125},{x:.671875,y:.578125},{x:.671875,y:.578125},{x:.703125,y:.578125},{x:.703125,y:.578125},{x:.734375,y:.578125},{x:.734375,y:.578125},{x:.765625,y:.578125},{x:.765625,y:.578125},{x:.796875,y:.578125},{x:.796875,y:.578125},{x:.828125,y:.578125},{x:.828125,y:.578125},{x:.859375,y:.578125},{x:.859375,y:.578125},{x:.890625,y:.578125},{x:.890625,y:.578125},{x:.921875,y:.578125},{x:.921875,y:.578125},{x:.953125,y:.578125},{x:.953125,y:.578125},{x:.984375,y:.578125},{x:.984375,y:.578125},{x:.015625,y:.609375},{x:.015625,y:.609375},{x:.046875,y:.609375},{x:.046875,y:.609375},{x:.078125,y:.609375},{x:.078125,y:.609375},{x:.109375,y:.609375},{x:.109375,y:.609375},{x:.140625,y:.609375},{x:.140625,y:.609375},{x:.171875,y:.609375},{x:.171875,y:.609375},{x:.203125,y:.609375},{x:.203125,y:.609375},{x:.234375,y:.609375},{x:.234375,y:.609375},{x:.265625,y:.609375},{x:.265625,y:.609375},{x:.296875,y:.609375},{x:.296875,y:.609375},{x:.328125,y:.609375},{x:.328125,y:.609375},{x:.359375,y:.609375},{x:.359375,y:.609375},{x:.390625,y:.609375},{x:.390625,y:.609375},{x:.421875,y:.609375},{x:.421875,y:.609375},{x:.453125,y:.609375},{x:.453125,y:.609375},{x:.484375,y:.609375},{x:.484375,y:.609375},{x:.515625,y:.609375},{x:.515625,y:.609375},{x:.546875,y:.609375},{x:.546875,y:.609375},{x:.578125,y:.609375},{x:.578125,y:.609375},{x:.609375,y:.609375},{x:.609375,y:.609375},{x:.640625,y:.609375},{x:.640625,y:.609375},{x:.671875,y:.609375},{x:.671875,y:.609375},{x:.703125,y:.609375},{x:.703125,y:.609375},{x:.734375,y:.609375},{x:.734375,y:.609375},{x:.765625,y:.609375},{x:.765625,y:.609375},{x:.796875,y:.609375},{x:.796875,y:.609375},{x:.828125,y:.609375},{x:.828125,y:.609375},{x:.859375,y:.609375},{x:.859375,y:.609375},{x:.890625,y:.609375},{x:.890625,y:.609375},{x:.921875,y:.609375},{x:.921875,y:.609375},{x:.953125,y:.609375},{x:.953125,y:.609375},{x:.984375,y:.609375},{x:.984375,y:.609375},{x:.015625,y:.640625},{x:.015625,y:.640625},{x:.046875,y:.640625},{x:.046875,y:.640625},{x:.078125,y:.640625},{x:.078125,y:.640625},{x:.109375,y:.640625},{x:.109375,y:.640625},{x:.140625,y:.640625},{x:.140625,y:.640625},{x:.171875,y:.640625},{x:.171875,y:.640625},{x:.203125,y:.640625},{x:.203125,y:.640625},{x:.234375,y:.640625},{x:.234375,y:.640625},{x:.265625,y:.640625},{x:.265625,y:.640625},{x:.296875,y:.640625},{x:.296875,y:.640625},{x:.328125,y:.640625},{x:.328125,y:.640625},{x:.359375,y:.640625},{x:.359375,y:.640625},{x:.390625,y:.640625},{x:.390625,y:.640625},{x:.421875,y:.640625},{x:.421875,y:.640625},{x:.453125,y:.640625},{x:.453125,y:.640625},{x:.484375,y:.640625},{x:.484375,y:.640625},{x:.515625,y:.640625},{x:.515625,y:.640625},{x:.546875,y:.640625},{x:.546875,y:.640625},{x:.578125,y:.640625},{x:.578125,y:.640625},{x:.609375,y:.640625},{x:.609375,y:.640625},{x:.640625,y:.640625},{x:.640625,y:.640625},{x:.671875,y:.640625},{x:.671875,y:.640625},{x:.703125,y:.640625},{x:.703125,y:.640625},{x:.734375,y:.640625},{x:.734375,y:.640625},{x:.765625,y:.640625},{x:.765625,y:.640625},{x:.796875,y:.640625},{x:.796875,y:.640625},{x:.828125,y:.640625},{x:.828125,y:.640625},{x:.859375,y:.640625},{x:.859375,y:.640625},{x:.890625,y:.640625},{x:.890625,y:.640625},{x:.921875,y:.640625},{x:.921875,y:.640625},{x:.953125,y:.640625},{x:.953125,y:.640625},{x:.984375,y:.640625},{x:.984375,y:.640625},{x:.015625,y:.671875},{x:.015625,y:.671875},{x:.046875,y:.671875},{x:.046875,y:.671875},{x:.078125,y:.671875},{x:.078125,y:.671875},{x:.109375,y:.671875},{x:.109375,y:.671875},{x:.140625,y:.671875},{x:.140625,y:.671875},{x:.171875,y:.671875},{x:.171875,y:.671875},{x:.203125,y:.671875},{x:.203125,y:.671875},{x:.234375,y:.671875},{x:.234375,y:.671875},{x:.265625,y:.671875},{x:.265625,y:.671875},{x:.296875,y:.671875},{x:.296875,y:.671875},{x:.328125,y:.671875},{x:.328125,y:.671875},{x:.359375,y:.671875},{x:.359375,y:.671875},{x:.390625,y:.671875},{x:.390625,y:.671875},{x:.421875,y:.671875},{x:.421875,y:.671875},{x:.453125,y:.671875},{x:.453125,y:.671875},{x:.484375,y:.671875},{x:.484375,y:.671875},{x:.515625,y:.671875},{x:.515625,y:.671875},{x:.546875,y:.671875},{x:.546875,y:.671875},{x:.578125,y:.671875},{x:.578125,y:.671875},{x:.609375,y:.671875},{x:.609375,y:.671875},{x:.640625,y:.671875},{x:.640625,y:.671875},{x:.671875,y:.671875},{x:.671875,y:.671875},{x:.703125,y:.671875},{x:.703125,y:.671875},{x:.734375,y:.671875},{x:.734375,y:.671875},{x:.765625,y:.671875},{x:.765625,y:.671875},{x:.796875,y:.671875},{x:.796875,y:.671875},{x:.828125,y:.671875},{x:.828125,y:.671875},{x:.859375,y:.671875},{x:.859375,y:.671875},{x:.890625,y:.671875},{x:.890625,y:.671875},{x:.921875,y:.671875},{x:.921875,y:.671875},{x:.953125,y:.671875},{x:.953125,y:.671875},{x:.984375,y:.671875},{x:.984375,y:.671875},{x:.015625,y:.703125},{x:.015625,y:.703125},{x:.046875,y:.703125},{x:.046875,y:.703125},{x:.078125,y:.703125},{x:.078125,y:.703125},{x:.109375,y:.703125},{x:.109375,y:.703125},{x:.140625,y:.703125},{x:.140625,y:.703125},{x:.171875,y:.703125},{x:.171875,y:.703125},{x:.203125,y:.703125},{x:.203125,y:.703125},{x:.234375,y:.703125},{x:.234375,y:.703125},{x:.265625,y:.703125},{x:.265625,y:.703125},{x:.296875,y:.703125},{x:.296875,y:.703125},{x:.328125,y:.703125},{x:.328125,y:.703125},{x:.359375,y:.703125},{x:.359375,y:.703125},{x:.390625,y:.703125},{x:.390625,y:.703125},{x:.421875,y:.703125},{x:.421875,y:.703125},{x:.453125,y:.703125},{x:.453125,y:.703125},{x:.484375,y:.703125},{x:.484375,y:.703125},{x:.515625,y:.703125},{x:.515625,y:.703125},{x:.546875,y:.703125},{x:.546875,y:.703125},{x:.578125,y:.703125},{x:.578125,y:.703125},{x:.609375,y:.703125},{x:.609375,y:.703125},{x:.640625,y:.703125},{x:.640625,y:.703125},{x:.671875,y:.703125},{x:.671875,y:.703125},{x:.703125,y:.703125},{x:.703125,y:.703125},{x:.734375,y:.703125},{x:.734375,y:.703125},{x:.765625,y:.703125},{x:.765625,y:.703125},{x:.796875,y:.703125},{x:.796875,y:.703125},{x:.828125,y:.703125},{x:.828125,y:.703125},{x:.859375,y:.703125},{x:.859375,y:.703125},{x:.890625,y:.703125},{x:.890625,y:.703125},{x:.921875,y:.703125},{x:.921875,y:.703125},{x:.953125,y:.703125},{x:.953125,y:.703125},{x:.984375,y:.703125},{x:.984375,y:.703125},{x:.015625,y:.734375},{x:.015625,y:.734375},{x:.046875,y:.734375},{x:.046875,y:.734375},{x:.078125,y:.734375},{x:.078125,y:.734375},{x:.109375,y:.734375},{x:.109375,y:.734375},{x:.140625,y:.734375},{x:.140625,y:.734375},{x:.171875,y:.734375},{x:.171875,y:.734375},{x:.203125,y:.734375},{x:.203125,y:.734375},{x:.234375,y:.734375},{x:.234375,y:.734375},{x:.265625,y:.734375},{x:.265625,y:.734375},{x:.296875,y:.734375},{x:.296875,y:.734375},{x:.328125,y:.734375},{x:.328125,y:.734375},{x:.359375,y:.734375},{x:.359375,y:.734375},{x:.390625,y:.734375},{x:.390625,y:.734375},{x:.421875,y:.734375},{x:.421875,y:.734375},{x:.453125,y:.734375},{x:.453125,y:.734375},{x:.484375,y:.734375},{x:.484375,y:.734375},{x:.515625,y:.734375},{x:.515625,y:.734375},{x:.546875,y:.734375},{x:.546875,y:.734375},{x:.578125,y:.734375},{x:.578125,y:.734375},{x:.609375,y:.734375},{x:.609375,y:.734375},{x:.640625,y:.734375},{x:.640625,y:.734375},{x:.671875,y:.734375},{x:.671875,y:.734375},{x:.703125,y:.734375},{x:.703125,y:.734375},{x:.734375,y:.734375},{x:.734375,y:.734375},{x:.765625,y:.734375},{x:.765625,y:.734375},{x:.796875,y:.734375},{x:.796875,y:.734375},{x:.828125,y:.734375},{x:.828125,y:.734375},{x:.859375,y:.734375},{x:.859375,y:.734375},{x:.890625,y:.734375},{x:.890625,y:.734375},{x:.921875,y:.734375},{x:.921875,y:.734375},{x:.953125,y:.734375},{x:.953125,y:.734375},{x:.984375,y:.734375},{x:.984375,y:.734375},{x:.015625,y:.765625},{x:.015625,y:.765625},{x:.046875,y:.765625},{x:.046875,y:.765625},{x:.078125,y:.765625},{x:.078125,y:.765625},{x:.109375,y:.765625},{x:.109375,y:.765625},{x:.140625,y:.765625},{x:.140625,y:.765625},{x:.171875,y:.765625},{x:.171875,y:.765625},{x:.203125,y:.765625},{x:.203125,y:.765625},{x:.234375,y:.765625},{x:.234375,y:.765625},{x:.265625,y:.765625},{x:.265625,y:.765625},{x:.296875,y:.765625},{x:.296875,y:.765625},{x:.328125,y:.765625},{x:.328125,y:.765625},{x:.359375,y:.765625},{x:.359375,y:.765625},{x:.390625,y:.765625},{x:.390625,y:.765625},{x:.421875,y:.765625},{x:.421875,y:.765625},{x:.453125,y:.765625},{x:.453125,y:.765625},{x:.484375,y:.765625},{x:.484375,y:.765625},{x:.515625,y:.765625},{x:.515625,y:.765625},{x:.546875,y:.765625},{x:.546875,y:.765625},{x:.578125,y:.765625},{x:.578125,y:.765625},{x:.609375,y:.765625},{x:.609375,y:.765625},{x:.640625,y:.765625},{x:.640625,y:.765625},{x:.671875,y:.765625},{x:.671875,y:.765625},{x:.703125,y:.765625},{x:.703125,y:.765625},{x:.734375,y:.765625},{x:.734375,y:.765625},{x:.765625,y:.765625},{x:.765625,y:.765625},{x:.796875,y:.765625},{x:.796875,y:.765625},{x:.828125,y:.765625},{x:.828125,y:.765625},{x:.859375,y:.765625},{x:.859375,y:.765625},{x:.890625,y:.765625},{x:.890625,y:.765625},{x:.921875,y:.765625},{x:.921875,y:.765625},{x:.953125,y:.765625},{x:.953125,y:.765625},{x:.984375,y:.765625},{x:.984375,y:.765625},{x:.015625,y:.796875},{x:.015625,y:.796875},{x:.046875,y:.796875},{x:.046875,y:.796875},{x:.078125,y:.796875},{x:.078125,y:.796875},{x:.109375,y:.796875},{x:.109375,y:.796875},{x:.140625,y:.796875},{x:.140625,y:.796875},{x:.171875,y:.796875},{x:.171875,y:.796875},{x:.203125,y:.796875},{x:.203125,y:.796875},{x:.234375,y:.796875},{x:.234375,y:.796875},{x:.265625,y:.796875},{x:.265625,y:.796875},{x:.296875,y:.796875},{x:.296875,y:.796875},{x:.328125,y:.796875},{x:.328125,y:.796875},{x:.359375,y:.796875},{x:.359375,y:.796875},{x:.390625,y:.796875},{x:.390625,y:.796875},{x:.421875,y:.796875},{x:.421875,y:.796875},{x:.453125,y:.796875},{x:.453125,y:.796875},{x:.484375,y:.796875},{x:.484375,y:.796875},{x:.515625,y:.796875},{x:.515625,y:.796875},{x:.546875,y:.796875},{x:.546875,y:.796875},{x:.578125,y:.796875},{x:.578125,y:.796875},{x:.609375,y:.796875},{x:.609375,y:.796875},{x:.640625,y:.796875},{x:.640625,y:.796875},{x:.671875,y:.796875},{x:.671875,y:.796875},{x:.703125,y:.796875},{x:.703125,y:.796875},{x:.734375,y:.796875},{x:.734375,y:.796875},{x:.765625,y:.796875},{x:.765625,y:.796875},{x:.796875,y:.796875},{x:.796875,y:.796875},{x:.828125,y:.796875},{x:.828125,y:.796875},{x:.859375,y:.796875},{x:.859375,y:.796875},{x:.890625,y:.796875},{x:.890625,y:.796875},{x:.921875,y:.796875},{x:.921875,y:.796875},{x:.953125,y:.796875},{x:.953125,y:.796875},{x:.984375,y:.796875},{x:.984375,y:.796875},{x:.015625,y:.828125},{x:.015625,y:.828125},{x:.046875,y:.828125},{x:.046875,y:.828125},{x:.078125,y:.828125},{x:.078125,y:.828125},{x:.109375,y:.828125},{x:.109375,y:.828125},{x:.140625,y:.828125},{x:.140625,y:.828125},{x:.171875,y:.828125},{x:.171875,y:.828125},{x:.203125,y:.828125},{x:.203125,y:.828125},{x:.234375,y:.828125},{x:.234375,y:.828125},{x:.265625,y:.828125},{x:.265625,y:.828125},{x:.296875,y:.828125},{x:.296875,y:.828125},{x:.328125,y:.828125},{x:.328125,y:.828125},{x:.359375,y:.828125},{x:.359375,y:.828125},{x:.390625,y:.828125},{x:.390625,y:.828125},{x:.421875,y:.828125},{x:.421875,y:.828125},{x:.453125,y:.828125},{x:.453125,y:.828125},{x:.484375,y:.828125},{x:.484375,y:.828125},{x:.515625,y:.828125},{x:.515625,y:.828125},{x:.546875,y:.828125},{x:.546875,y:.828125},{x:.578125,y:.828125},{x:.578125,y:.828125},{x:.609375,y:.828125},{x:.609375,y:.828125},{x:.640625,y:.828125},{x:.640625,y:.828125},{x:.671875,y:.828125},{x:.671875,y:.828125},{x:.703125,y:.828125},{x:.703125,y:.828125},{x:.734375,y:.828125},{x:.734375,y:.828125},{x:.765625,y:.828125},{x:.765625,y:.828125},{x:.796875,y:.828125},{x:.796875,y:.828125},{x:.828125,y:.828125},{x:.828125,y:.828125},{x:.859375,y:.828125},{x:.859375,y:.828125},{x:.890625,y:.828125},{x:.890625,y:.828125},{x:.921875,y:.828125},{x:.921875,y:.828125},{x:.953125,y:.828125},{x:.953125,y:.828125},{x:.984375,y:.828125},{x:.984375,y:.828125},{x:.015625,y:.859375},{x:.015625,y:.859375},{x:.046875,y:.859375},{x:.046875,y:.859375},{x:.078125,y:.859375},{x:.078125,y:.859375},{x:.109375,y:.859375},{x:.109375,y:.859375},{x:.140625,y:.859375},{x:.140625,y:.859375},{x:.171875,y:.859375},{x:.171875,y:.859375},{x:.203125,y:.859375},{x:.203125,y:.859375},{x:.234375,y:.859375},{x:.234375,y:.859375},{x:.265625,y:.859375},{x:.265625,y:.859375},{x:.296875,y:.859375},{x:.296875,y:.859375},{x:.328125,y:.859375},{x:.328125,y:.859375},{x:.359375,y:.859375},{x:.359375,y:.859375},{x:.390625,y:.859375},{x:.390625,y:.859375},{x:.421875,y:.859375},{x:.421875,y:.859375},{x:.453125,y:.859375},{x:.453125,y:.859375},{x:.484375,y:.859375},{x:.484375,y:.859375},{x:.515625,y:.859375},{x:.515625,y:.859375},{x:.546875,y:.859375},{x:.546875,y:.859375},{x:.578125,y:.859375},{x:.578125,y:.859375},{x:.609375,y:.859375},{x:.609375,y:.859375},{x:.640625,y:.859375},{x:.640625,y:.859375},{x:.671875,y:.859375},{x:.671875,y:.859375},{x:.703125,y:.859375},{x:.703125,y:.859375},{x:.734375,y:.859375},{x:.734375,y:.859375},{x:.765625,y:.859375},{x:.765625,y:.859375},{x:.796875,y:.859375},{x:.796875,y:.859375},{x:.828125,y:.859375},{x:.828125,y:.859375},{x:.859375,y:.859375},{x:.859375,y:.859375},{x:.890625,y:.859375},{x:.890625,y:.859375},{x:.921875,y:.859375},{x:.921875,y:.859375},{x:.953125,y:.859375},{x:.953125,y:.859375},{x:.984375,y:.859375},{x:.984375,y:.859375},{x:.015625,y:.890625},{x:.015625,y:.890625},{x:.046875,y:.890625},{x:.046875,y:.890625},{x:.078125,y:.890625},{x:.078125,y:.890625},{x:.109375,y:.890625},{x:.109375,y:.890625},{x:.140625,y:.890625},{x:.140625,y:.890625},{x:.171875,y:.890625},{x:.171875,y:.890625},{x:.203125,y:.890625},{x:.203125,y:.890625},{x:.234375,y:.890625},{x:.234375,y:.890625},{x:.265625,y:.890625},{x:.265625,y:.890625},{x:.296875,y:.890625},{x:.296875,y:.890625},{x:.328125,y:.890625},{x:.328125,y:.890625},{x:.359375,y:.890625},{x:.359375,y:.890625},{x:.390625,y:.890625},{x:.390625,y:.890625},{x:.421875,y:.890625},{x:.421875,y:.890625},{x:.453125,y:.890625},{x:.453125,y:.890625},{x:.484375,y:.890625},{x:.484375,y:.890625},{x:.515625,y:.890625},{x:.515625,y:.890625},{x:.546875,y:.890625},{x:.546875,y:.890625},{x:.578125,y:.890625},{x:.578125,y:.890625},{x:.609375,y:.890625},{x:.609375,y:.890625},{x:.640625,y:.890625},{x:.640625,y:.890625},{x:.671875,y:.890625},{x:.671875,y:.890625},{x:.703125,y:.890625},{x:.703125,y:.890625},{x:.734375,y:.890625},{x:.734375,y:.890625},{x:.765625,y:.890625},{x:.765625,y:.890625},{x:.796875,y:.890625},{x:.796875,y:.890625},{x:.828125,y:.890625},{x:.828125,y:.890625},{x:.859375,y:.890625},{x:.859375,y:.890625},{x:.890625,y:.890625},{x:.890625,y:.890625},{x:.921875,y:.890625},{x:.921875,y:.890625},{x:.953125,y:.890625},{x:.953125,y:.890625},{x:.984375,y:.890625},{x:.984375,y:.890625},{x:.015625,y:.921875},{x:.015625,y:.921875},{x:.046875,y:.921875},{x:.046875,y:.921875},{x:.078125,y:.921875},{x:.078125,y:.921875},{x:.109375,y:.921875},{x:.109375,y:.921875},{x:.140625,y:.921875},{x:.140625,y:.921875},{x:.171875,y:.921875},{x:.171875,y:.921875},{x:.203125,y:.921875},{x:.203125,y:.921875},{x:.234375,y:.921875},{x:.234375,y:.921875},{x:.265625,y:.921875},{x:.265625,y:.921875},{x:.296875,y:.921875},{x:.296875,y:.921875},{x:.328125,y:.921875},{x:.328125,y:.921875},{x:.359375,y:.921875},{x:.359375,y:.921875},{x:.390625,y:.921875},{x:.390625,y:.921875},{x:.421875,y:.921875},{x:.421875,y:.921875},{x:.453125,y:.921875},{x:.453125,y:.921875},{x:.484375,y:.921875},{x:.484375,y:.921875},{x:.515625,y:.921875},{x:.515625,y:.921875},{x:.546875,y:.921875},{x:.546875,y:.921875},{x:.578125,y:.921875},{x:.578125,y:.921875},{x:.609375,y:.921875},{x:.609375,y:.921875},{x:.640625,y:.921875},{x:.640625,y:.921875},{x:.671875,y:.921875},{x:.671875,y:.921875},{x:.703125,y:.921875},{x:.703125,y:.921875},{x:.734375,y:.921875},{x:.734375,y:.921875},{x:.765625,y:.921875},{x:.765625,y:.921875},{x:.796875,y:.921875},{x:.796875,y:.921875},{x:.828125,y:.921875},{x:.828125,y:.921875},{x:.859375,y:.921875},{x:.859375,y:.921875},{x:.890625,y:.921875},{x:.890625,y:.921875},{x:.921875,y:.921875},{x:.921875,y:.921875},{x:.953125,y:.921875},{x:.953125,y:.921875},{x:.984375,y:.921875},{x:.984375,y:.921875},{x:.015625,y:.953125},{x:.015625,y:.953125},{x:.046875,y:.953125},{x:.046875,y:.953125},{x:.078125,y:.953125},{x:.078125,y:.953125},{x:.109375,y:.953125},{x:.109375,y:.953125},{x:.140625,y:.953125},{x:.140625,y:.953125},{x:.171875,y:.953125},{x:.171875,y:.953125},{x:.203125,y:.953125},{x:.203125,y:.953125},{x:.234375,y:.953125},{x:.234375,y:.953125},{x:.265625,y:.953125},{x:.265625,y:.953125},{x:.296875,y:.953125},{x:.296875,y:.953125},{x:.328125,y:.953125},{x:.328125,y:.953125},{x:.359375,y:.953125},{x:.359375,y:.953125},{x:.390625,y:.953125},{x:.390625,y:.953125},{x:.421875,y:.953125},{x:.421875,y:.953125},{x:.453125,y:.953125},{x:.453125,y:.953125},{x:.484375,y:.953125},{x:.484375,y:.953125},{x:.515625,y:.953125},{x:.515625,y:.953125},{x:.546875,y:.953125},{x:.546875,y:.953125},{x:.578125,y:.953125},{x:.578125,y:.953125},{x:.609375,y:.953125},{x:.609375,y:.953125},{x:.640625,y:.953125},{x:.640625,y:.953125},{x:.671875,y:.953125},{x:.671875,y:.953125},{x:.703125,y:.953125},{x:.703125,y:.953125},{x:.734375,y:.953125},{x:.734375,y:.953125},{x:.765625,y:.953125},{x:.765625,y:.953125},{x:.796875,y:.953125},{x:.796875,y:.953125},{x:.828125,y:.953125},{x:.828125,y:.953125},{x:.859375,y:.953125},{x:.859375,y:.953125},{x:.890625,y:.953125},{x:.890625,y:.953125},{x:.921875,y:.953125},{x:.921875,y:.953125},{x:.953125,y:.953125},{x:.953125,y:.953125},{x:.984375,y:.953125},{x:.984375,y:.953125},{x:.015625,y:.984375},{x:.015625,y:.984375},{x:.046875,y:.984375},{x:.046875,y:.984375},{x:.078125,y:.984375},{x:.078125,y:.984375},{x:.109375,y:.984375},{x:.109375,y:.984375},{x:.140625,y:.984375},{x:.140625,y:.984375},{x:.171875,y:.984375},{x:.171875,y:.984375},{x:.203125,y:.984375},{x:.203125,y:.984375},{x:.234375,y:.984375},{x:.234375,y:.984375},{x:.265625,y:.984375},{x:.265625,y:.984375},{x:.296875,y:.984375},{x:.296875,y:.984375},{x:.328125,y:.984375},{x:.328125,y:.984375},{x:.359375,y:.984375},{x:.359375,y:.984375},{x:.390625,y:.984375},{x:.390625,y:.984375},{x:.421875,y:.984375},{x:.421875,y:.984375},{x:.453125,y:.984375},{x:.453125,y:.984375},{x:.484375,y:.984375},{x:.484375,y:.984375},{x:.515625,y:.984375},{x:.515625,y:.984375},{x:.546875,y:.984375},{x:.546875,y:.984375},{x:.578125,y:.984375},{x:.578125,y:.984375},{x:.609375,y:.984375},{x:.609375,y:.984375},{x:.640625,y:.984375},{x:.640625,y:.984375},{x:.671875,y:.984375},{x:.671875,y:.984375},{x:.703125,y:.984375},{x:.703125,y:.984375},{x:.734375,y:.984375},{x:.734375,y:.984375},{x:.765625,y:.984375},{x:.765625,y:.984375},{x:.796875,y:.984375},{x:.796875,y:.984375},{x:.828125,y:.984375},{x:.828125,y:.984375},{x:.859375,y:.984375},{x:.859375,y:.984375},{x:.890625,y:.984375},{x:.890625,y:.984375},{x:.921875,y:.984375},{x:.921875,y:.984375},{x:.953125,y:.984375},{x:.953125,y:.984375},{x:.984375,y:.984375},{x:.984375,y:.984375},{x:.03125,y:.03125},{x:.03125,y:.03125},{x:.09375,y:.03125},{x:.09375,y:.03125},{x:.15625,y:.03125},{x:.15625,y:.03125},{x:.21875,y:.03125},{x:.21875,y:.03125},{x:.28125,y:.03125},{x:.28125,y:.03125},{x:.34375,y:.03125},{x:.34375,y:.03125},{x:.40625,y:.03125},{x:.40625,y:.03125},{x:.46875,y:.03125},{x:.46875,y:.03125},{x:.53125,y:.03125},{x:.53125,y:.03125},{x:.59375,y:.03125},{x:.59375,y:.03125},{x:.65625,y:.03125},{x:.65625,y:.03125},{x:.71875,y:.03125},{x:.71875,y:.03125},{x:.78125,y:.03125},{x:.78125,y:.03125},{x:.84375,y:.03125},{x:.84375,y:.03125},{x:.90625,y:.03125},{x:.90625,y:.03125},{x:.96875,y:.03125},{x:.96875,y:.03125},{x:.03125,y:.09375},{x:.03125,y:.09375},{x:.09375,y:.09375},{x:.09375,y:.09375},{x:.15625,y:.09375},{x:.15625,y:.09375},{x:.21875,y:.09375},{x:.21875,y:.09375},{x:.28125,y:.09375},{x:.28125,y:.09375},{x:.34375,y:.09375},{x:.34375,y:.09375},{x:.40625,y:.09375},{x:.40625,y:.09375},{x:.46875,y:.09375},{x:.46875,y:.09375},{x:.53125,y:.09375},{x:.53125,y:.09375},{x:.59375,y:.09375},{x:.59375,y:.09375},{x:.65625,y:.09375},{x:.65625,y:.09375},{x:.71875,y:.09375},{x:.71875,y:.09375},{x:.78125,y:.09375},{x:.78125,y:.09375},{x:.84375,y:.09375},{x:.84375,y:.09375},{x:.90625,y:.09375},{x:.90625,y:.09375},{x:.96875,y:.09375},{x:.96875,y:.09375},{x:.03125,y:.15625},{x:.03125,y:.15625},{x:.09375,y:.15625},{x:.09375,y:.15625},{x:.15625,y:.15625},{x:.15625,y:.15625},{x:.21875,y:.15625},{x:.21875,y:.15625},{x:.28125,y:.15625},{x:.28125,y:.15625},{x:.34375,y:.15625},{x:.34375,y:.15625},{x:.40625,y:.15625},{x:.40625,y:.15625},{x:.46875,y:.15625},{x:.46875,y:.15625},{x:.53125,y:.15625},{x:.53125,y:.15625},{x:.59375,y:.15625},{x:.59375,y:.15625},{x:.65625,y:.15625},{x:.65625,y:.15625},{x:.71875,y:.15625},{x:.71875,y:.15625},{x:.78125,y:.15625},{x:.78125,y:.15625},{x:.84375,y:.15625},{x:.84375,y:.15625},{x:.90625,y:.15625},{x:.90625,y:.15625},{x:.96875,y:.15625},{x:.96875,y:.15625},{x:.03125,y:.21875},{x:.03125,y:.21875},{x:.09375,y:.21875},{x:.09375,y:.21875},{x:.15625,y:.21875},{x:.15625,y:.21875},{x:.21875,y:.21875},{x:.21875,y:.21875},{x:.28125,y:.21875},{x:.28125,y:.21875},{x:.34375,y:.21875},{x:.34375,y:.21875},{x:.40625,y:.21875},{x:.40625,y:.21875},{x:.46875,y:.21875},{x:.46875,y:.21875},{x:.53125,y:.21875},{x:.53125,y:.21875},{x:.59375,y:.21875},{x:.59375,y:.21875},{x:.65625,y:.21875},{x:.65625,y:.21875},{x:.71875,y:.21875},{x:.71875,y:.21875},{x:.78125,y:.21875},{x:.78125,y:.21875},{x:.84375,y:.21875},{x:.84375,y:.21875},{x:.90625,y:.21875},{x:.90625,y:.21875},{x:.96875,y:.21875},{x:.96875,y:.21875},{x:.03125,y:.28125},{x:.03125,y:.28125},{x:.09375,y:.28125},{x:.09375,y:.28125},{x:.15625,y:.28125},{x:.15625,y:.28125},{x:.21875,y:.28125},{x:.21875,y:.28125},{x:.28125,y:.28125},{x:.28125,y:.28125},{x:.34375,y:.28125},{x:.34375,y:.28125},{x:.40625,y:.28125},{x:.40625,y:.28125},{x:.46875,y:.28125},{x:.46875,y:.28125},{x:.53125,y:.28125},{x:.53125,y:.28125},{x:.59375,y:.28125},{x:.59375,y:.28125},{x:.65625,y:.28125},{x:.65625,y:.28125},{x:.71875,y:.28125},{x:.71875,y:.28125},{x:.78125,y:.28125},{x:.78125,y:.28125},{x:.84375,y:.28125},{x:.84375,y:.28125},{x:.90625,y:.28125},{x:.90625,y:.28125},{x:.96875,y:.28125},{x:.96875,y:.28125},{x:.03125,y:.34375},{x:.03125,y:.34375},{x:.09375,y:.34375},{x:.09375,y:.34375},{x:.15625,y:.34375},{x:.15625,y:.34375},{x:.21875,y:.34375},{x:.21875,y:.34375},{x:.28125,y:.34375},{x:.28125,y:.34375},{x:.34375,y:.34375},{x:.34375,y:.34375},{x:.40625,y:.34375},{x:.40625,y:.34375},{x:.46875,y:.34375},{x:.46875,y:.34375},{x:.53125,y:.34375},{x:.53125,y:.34375},{x:.59375,y:.34375},{x:.59375,y:.34375},{x:.65625,y:.34375},{x:.65625,y:.34375},{x:.71875,y:.34375},{x:.71875,y:.34375},{x:.78125,y:.34375},{x:.78125,y:.34375},{x:.84375,y:.34375},{x:.84375,y:.34375},{x:.90625,y:.34375},{x:.90625,y:.34375},{x:.96875,y:.34375},{x:.96875,y:.34375},{x:.03125,y:.40625},{x:.03125,y:.40625},{x:.09375,y:.40625},{x:.09375,y:.40625},{x:.15625,y:.40625},{x:.15625,y:.40625},{x:.21875,y:.40625},{x:.21875,y:.40625},{x:.28125,y:.40625},{x:.28125,y:.40625},{x:.34375,y:.40625},{x:.34375,y:.40625},{x:.40625,y:.40625},{x:.40625,y:.40625},{x:.46875,y:.40625},{x:.46875,y:.40625},{x:.53125,y:.40625},{x:.53125,y:.40625},{x:.59375,y:.40625},{x:.59375,y:.40625},{x:.65625,y:.40625},{x:.65625,y:.40625},{x:.71875,y:.40625},{x:.71875,y:.40625},{x:.78125,y:.40625},{x:.78125,y:.40625},{x:.84375,y:.40625},{x:.84375,y:.40625},{x:.90625,y:.40625},{x:.90625,y:.40625},{x:.96875,y:.40625},{x:.96875,y:.40625},{x:.03125,y:.46875},{x:.03125,y:.46875},{x:.09375,y:.46875},{x:.09375,y:.46875},{x:.15625,y:.46875},{x:.15625,y:.46875},{x:.21875,y:.46875},{x:.21875,y:.46875},{x:.28125,y:.46875},{x:.28125,y:.46875},{x:.34375,y:.46875},{x:.34375,y:.46875},{x:.40625,y:.46875},{x:.40625,y:.46875},{x:.46875,y:.46875},{x:.46875,y:.46875},{x:.53125,y:.46875},{x:.53125,y:.46875},{x:.59375,y:.46875},{x:.59375,y:.46875},{x:.65625,y:.46875},{x:.65625,y:.46875},{x:.71875,y:.46875},{x:.71875,y:.46875},{x:.78125,y:.46875},{x:.78125,y:.46875},{x:.84375,y:.46875},{x:.84375,y:.46875},{x:.90625,y:.46875},{x:.90625,y:.46875},{x:.96875,y:.46875},{x:.96875,y:.46875},{x:.03125,y:.53125},{x:.03125,y:.53125},{x:.09375,y:.53125},{x:.09375,y:.53125},{x:.15625,y:.53125},{x:.15625,y:.53125},{x:.21875,y:.53125},{x:.21875,y:.53125},{x:.28125,y:.53125},{x:.28125,y:.53125},{x:.34375,y:.53125},{x:.34375,y:.53125},{x:.40625,y:.53125},{x:.40625,y:.53125},{x:.46875,y:.53125},{x:.46875,y:.53125},{x:.53125,y:.53125},{x:.53125,y:.53125},{x:.59375,y:.53125},{x:.59375,y:.53125},{x:.65625,y:.53125},{x:.65625,y:.53125},{x:.71875,y:.53125},{x:.71875,y:.53125},{x:.78125,y:.53125},{x:.78125,y:.53125},{x:.84375,y:.53125},{x:.84375,y:.53125},{x:.90625,y:.53125},{x:.90625,y:.53125},{x:.96875,y:.53125},{x:.96875,y:.53125},{x:.03125,y:.59375},{x:.03125,y:.59375},{x:.09375,y:.59375},{x:.09375,y:.59375},{x:.15625,y:.59375},{x:.15625,y:.59375},{x:.21875,y:.59375},{x:.21875,y:.59375},{x:.28125,y:.59375},{x:.28125,y:.59375},{x:.34375,y:.59375},{x:.34375,y:.59375},{x:.40625,y:.59375},{x:.40625,y:.59375},{x:.46875,y:.59375},{x:.46875,y:.59375},{x:.53125,y:.59375},{x:.53125,y:.59375},{x:.59375,y:.59375},{x:.59375,y:.59375},{x:.65625,y:.59375},{x:.65625,y:.59375},{x:.71875,y:.59375},{x:.71875,y:.59375},{x:.78125,y:.59375},{x:.78125,y:.59375},{x:.84375,y:.59375},{x:.84375,y:.59375},{x:.90625,y:.59375},{x:.90625,y:.59375},{x:.96875,y:.59375},{x:.96875,y:.59375},{x:.03125,y:.65625},{x:.03125,y:.65625},{x:.09375,y:.65625},{x:.09375,y:.65625},{x:.15625,y:.65625},{x:.15625,y:.65625},{x:.21875,y:.65625},{x:.21875,y:.65625},{x:.28125,y:.65625},{x:.28125,y:.65625},{x:.34375,y:.65625},{x:.34375,y:.65625},{x:.40625,y:.65625},{x:.40625,y:.65625},{x:.46875,y:.65625},{x:.46875,y:.65625},{x:.53125,y:.65625},{x:.53125,y:.65625},{x:.59375,y:.65625},{x:.59375,y:.65625},{x:.65625,y:.65625},{x:.65625,y:.65625},{x:.71875,y:.65625},{x:.71875,y:.65625},{x:.78125,y:.65625},{x:.78125,y:.65625},{x:.84375,y:.65625},{x:.84375,y:.65625},{x:.90625,y:.65625},{x:.90625,y:.65625},{x:.96875,y:.65625},{x:.96875,y:.65625},{x:.03125,y:.71875},{x:.03125,y:.71875},{x:.09375,y:.71875},{x:.09375,y:.71875},{x:.15625,y:.71875},{x:.15625,y:.71875},{x:.21875,y:.71875},{x:.21875,y:.71875},{x:.28125,y:.71875},{x:.28125,y:.71875},{x:.34375,y:.71875},{x:.34375,y:.71875},{x:.40625,y:.71875},{x:.40625,y:.71875},{x:.46875,y:.71875},{x:.46875,y:.71875},{x:.53125,y:.71875},{x:.53125,y:.71875},{x:.59375,y:.71875},{x:.59375,y:.71875},{x:.65625,y:.71875},{x:.65625,y:.71875},{x:.71875,y:.71875},{x:.71875,y:.71875},{x:.78125,y:.71875},{x:.78125,y:.71875},{x:.84375,y:.71875},{x:.84375,y:.71875},{x:.90625,y:.71875},{x:.90625,y:.71875},{x:.96875,y:.71875},{x:.96875,y:.71875},{x:.03125,y:.78125},{x:.03125,y:.78125},{x:.09375,y:.78125},{x:.09375,y:.78125},{x:.15625,y:.78125},{x:.15625,y:.78125},{x:.21875,y:.78125},{x:.21875,y:.78125},{x:.28125,y:.78125},{x:.28125,y:.78125},{x:.34375,y:.78125},{x:.34375,y:.78125},{x:.40625,y:.78125},{x:.40625,y:.78125},{x:.46875,y:.78125},{x:.46875,y:.78125},{x:.53125,y:.78125},{x:.53125,y:.78125},{x:.59375,y:.78125},{x:.59375,y:.78125},{x:.65625,y:.78125},{x:.65625,y:.78125},{x:.71875,y:.78125},{x:.71875,y:.78125},{x:.78125,y:.78125},{x:.78125,y:.78125},{x:.84375,y:.78125},{x:.84375,y:.78125},{x:.90625,y:.78125},{x:.90625,y:.78125},{x:.96875,y:.78125},{x:.96875,y:.78125},{x:.03125,y:.84375},{x:.03125,y:.84375},{x:.09375,y:.84375},{x:.09375,y:.84375},{x:.15625,y:.84375},{x:.15625,y:.84375},{x:.21875,y:.84375},{x:.21875,y:.84375},{x:.28125,y:.84375},{x:.28125,y:.84375},{x:.34375,y:.84375},{x:.34375,y:.84375},{x:.40625,y:.84375},{x:.40625,y:.84375},{x:.46875,y:.84375},{x:.46875,y:.84375},{x:.53125,y:.84375},{x:.53125,y:.84375},{x:.59375,y:.84375},{x:.59375,y:.84375},{x:.65625,y:.84375},{x:.65625,y:.84375},{x:.71875,y:.84375},{x:.71875,y:.84375},{x:.78125,y:.84375},{x:.78125,y:.84375},{x:.84375,y:.84375},{x:.84375,y:.84375},{x:.90625,y:.84375},{x:.90625,y:.84375},{x:.96875,y:.84375},{x:.96875,y:.84375},{x:.03125,y:.90625},{x:.03125,y:.90625},{x:.09375,y:.90625},{x:.09375,y:.90625},{x:.15625,y:.90625},{x:.15625,y:.90625},{x:.21875,y:.90625},{x:.21875,y:.90625},{x:.28125,y:.90625},{x:.28125,y:.90625},{x:.34375,y:.90625},{x:.34375,y:.90625},{x:.40625,y:.90625},{x:.40625,y:.90625},{x:.46875,y:.90625},{x:.46875,y:.90625},{x:.53125,y:.90625},{x:.53125,y:.90625},{x:.59375,y:.90625},{x:.59375,y:.90625},{x:.65625,y:.90625},{x:.65625,y:.90625},{x:.71875,y:.90625},{x:.71875,y:.90625},{x:.78125,y:.90625},{x:.78125,y:.90625},{x:.84375,y:.90625},{x:.84375,y:.90625},{x:.90625,y:.90625},{x:.90625,y:.90625},{x:.96875,y:.90625},{x:.96875,y:.90625},{x:.03125,y:.96875},{x:.03125,y:.96875},{x:.09375,y:.96875},{x:.09375,y:.96875},{x:.15625,y:.96875},{x:.15625,y:.96875},{x:.21875,y:.96875},{x:.21875,y:.96875},{x:.28125,y:.96875},{x:.28125,y:.96875},{x:.34375,y:.96875},{x:.34375,y:.96875},{x:.40625,y:.96875},{x:.40625,y:.96875},{x:.46875,y:.96875},{x:.46875,y:.96875},{x:.53125,y:.96875},{x:.53125,y:.96875},{x:.59375,y:.96875},{x:.59375,y:.96875},{x:.65625,y:.96875},{x:.65625,y:.96875},{x:.71875,y:.96875},{x:.71875,y:.96875},{x:.78125,y:.96875},{x:.78125,y:.96875},{x:.84375,y:.96875},{x:.84375,y:.96875},{x:.90625,y:.96875},{x:.90625,y:.96875},{x:.96875,y:.96875},{x:.96875,y:.96875},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375}],R8=class{constructor(e){var t,u,y,w;__publicField(this,"model"),__publicField(this,"anchors"),__publicField(this,"anchorsTensor"),__publicField(this,"inputSize"),__publicField(this,"inputSizeTensor"),__publicField(this,"doubleInputSizeTensor"),this.model=e,this.anchors=R6.map(e=>[e.x,e.y]),this.anchorsTensor=mu(this.anchors),this.inputSize=(null==(w=null==(y=null==(u=null==(t=this==null?void 0:this.model)?void 0:t.inputs)?void 0:u[0])?void 0:y.shape)?void 0:w[2])||0,this.inputSizeTensor=Jt([this.inputSize,this.inputSize]),this.doubleInputSizeTensor=Jt([2*this.inputSize,2*this.inputSize])}normalizeBoxes(e){let t={};t.boxOffsets=lN(e,[0,0],[-1,2]),t.boxSizes=lN(e,[0,2],[-1,2]),t.div=o6(t.boxOffsets,this.inputSizeTensor),t.boxCenterPoints=o7(t.div,this.anchorsTensor),t.halfBoxSizes=o6(t.boxSizes,this.doubleInputSizeTensor),t.sub=u1(t.boxCenterPoints,t.halfBoxSizes),t.startPoints=o8(t.sub,this.inputSizeTensor),t.add=o7(t.boxCenterPoints,t.halfBoxSizes),t.endPoints=o8(t.add,this.inputSizeTensor);let u=lV([t.startPoints,t.endPoints],1);return Object.keys(t).forEach(e=>Ot(t[e])),u}normalizeLandmarks(e,t){let u={};u.reshape=lA(e,[-1,7,2]),u.div=o6(u.reshape,this.inputSizeTensor),u.landmarks=o7(u.div,this.anchors[t]?this.anchors[t]:0);let y=o8(u.landmarks,this.inputSizeTensor);return Object.keys(u).forEach(e=>Ot(u[e])),y}async predict(e,t){var u;let y={};y.resize=c$.resizeBilinear(e,[this.inputSize,this.inputSize]),y.div=o6(y.resize,TH.tf127),y.image=u1(y.div,TH.tf1),y.batched=this.model.execute(y.image),y.predictions=pg(y.batched),y.slice=lN(y.predictions,[0,0],[-1,1]),y.sigmoid=lS(y.slice),y.scores=pg(y.sigmoid);let w=await y.scores.data();y.boxes=lN(y.predictions,[0,1],[-1,4]),y.norm=this.normalizeBoxes(y.boxes),y.nms=await c$.nonMaxSuppressionAsync(y.norm,y.scores,3*((null==(u=t.hand)?void 0:u.maxDetected)||1),t.hand.iouThreshold,t.hand.minConfidence);let T=await y.nms.array(),$=[];for(let t of T){let u={};u.box=lN(y.norm,[t,0],[1,-1]),u.slice=lN(y.predictions,[t,5],[1,14]),u.norm=this.normalizeLandmarks(u.slice,t),u.palmLandmarks=lA(u.norm,[-1,2]);let T=await u.box.data(),M=T.slice(0,2),O=T.slice(2,4),P=await u.palmLandmarks.array(),z={startPoint:M,endPoint:O,palmLandmarks:P,confidence:w[t]},L=function(e,t){let u=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],y=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],w=e.palmLandmarks.map(e=>{let u=[e[0]*t[0],e[1]*t[1]];return u});return{startPoint:u,endPoint:y,palmLandmarks:w,confidence:e.confidence}}(z,[(e.shape[2]||1)/this.inputSize,(e.shape[1]||0)/this.inputSize]);$.push(L),Object.keys(u).forEach(e=>Ot(u[e]))}return Object.keys(y).forEach(e=>Ot(y[e])),$}},R9=[0,5,9,13,17,1,2],$t=0,$n=class{constructor(e,t){var u,y,w;__publicField(this,"handDetector"),__publicField(this,"handPoseModel"),__publicField(this,"inputSize"),__publicField(this,"storedBoxes"),__publicField(this,"skipped"),__publicField(this,"detectedHands"),this.handDetector=e,this.handPoseModel=t,this.inputSize=(null==(w=null==(y=null==(u=this.handPoseModel)?void 0:u.inputs)?void 0:y[0].shape)?void 0:w[2])||0,this.storedBoxes=[],this.skipped=Number.MAX_SAFE_INTEGER,this.detectedHands=0}calculateLandmarksBoundingBox(e){let t=e.map(e=>e[0]),u=e.map(e=>e[1]),y=[Math.min(...t),Math.min(...u)],w=[Math.max(...t),Math.max(...u)];return{startPoint:y,endPoint:w}}getBoxForPalmLandmarks(e,t){let u=e.map(e=>rotatePoint2([...e,1],t)),y=this.calculateLandmarksBoundingBox(u);return enlargeBox2(squarifyBox2(y),5)}getBoxForHandLandmarks(e){let t=this.calculateLandmarksBoundingBox(e),u=enlargeBox2(squarifyBox2(t),1.65);u.palmLandmarks=[];for(let t=0;t<R9.length;t++)u.palmLandmarks.push(e[R9[t]].slice(0,2));return u}transformRawCoords(e,t,u,y){let w=getBoxSize2(t),T=[w[0]/this.inputSize,w[1]/this.inputSize,(w[0]+w[1])/this.inputSize/2],$=e.map(e=>[T[0]*(e[0]-this.inputSize/2),T[1]*(e[1]-this.inputSize/2),T[2]*e[2]]),M=buildRotationMatrix2(u,[0,0]),O=$.map(e=>{let t=rotatePoint2(e,M);return[...t,e[2]]}),P=function(e){let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],u=[e[0][2],e[1][2]],y=[-dot2(t[0],u),-dot2(t[1],u)];return[t[0].concat(y[0]),t[1].concat(y[1]),[0,0,1]]}(y),z=[...getBoxCenter2(t),1],L=[dot2(z,P[0]),dot2(z,P[1])];return O.map(e=>[Math.trunc(e[0]+L[0]),Math.trunc(e[1]+L[1]),Math.trunc(e[2])])}async estimateHands(e,t){let u,y=!1,w=(t.hand.skipTime||0)>now()-$t,T=this.skipped<(t.hand.skipFrames||0);t.skipAllowed&&w&&T?this.skipped++:(u=await this.handDetector.predict(e,t),this.skipped=0),u&&u.length>0&&(u.length!==this.detectedHands&&this.detectedHands!==t.hand.maxDetected||!t.hand.landmarks)&&(this.detectedHands=0,this.storedBoxes=[...u],this.storedBoxes.length>0&&(y=!0));let $=[];for(let u=0;u<this.storedBoxes.length;u++){let w=this.storedBoxes[u];if(w){if(t.hand.landmarks){let T=t.hand.rotation?function(e,t){let u=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]);return u-2*Math.PI*Math.floor((u+Math.PI)/(2*Math.PI))}(w.palmLandmarks[0],w.palmLandmarks[2]):0,M=getBoxCenter2(w),O=[M[0]/e.shape[2],M[1]/e.shape[1]],P=t.hand.rotation&&Cw.kernels.includes("rotatewithoffset")?c$.rotateWithOffset(e,T,0,O):e.clone(),z=buildRotationMatrix2(-T,M),L=y?this.getBoxForPalmLandmarks(w.palmLandmarks,z):w,W=function(e,t,u){let y=t.shape[1],w=t.shape[2],T=[[e.startPoint[1]/y,e.startPoint[0]/w,e.endPoint[1]/y,e.endPoint[0]/w]];return c$.cropAndResize(t,T,[0],u)}(L,P,[this.inputSize,this.inputSize]),B=o6(W,TH.tf255);Ot(W),Ot(P);let[j,q]=this.handPoseModel.execute(B);$t=now(),Ot(B);let Z=(await j.data())[0];if(Ot(j),Z>=t.hand.minConfidence/4){let e=lA(q,[-1,3]),t=await e.array();Ot(q),Ot(e);let y=this.transformRawCoords(t,L,T,z),M=this.getBoxForHandLandmarks(y);this.storedBoxes[u]={...M,confidence:Z};let O={landmarks:y,confidence:Z,boxConfidence:w.confidence,fingerConfidence:Z,box:{topLeft:M.startPoint,bottomRight:M.endPoint}};$.push(O)}else this.storedBoxes[u]=null;Ot(q)}else{let e=enlargeBox2(squarifyBox2(w),1.65),t={confidence:w.confidence,boxConfidence:w.confidence,fingerConfidence:0,box:{topLeft:e.startPoint,bottomRight:e.endPoint},landmarks:[]};$.push(t)}}}return this.storedBoxes=this.storedBoxes.filter(e=>null!==e),this.detectedHands=$.length,$.length>t.hand.maxDetected&&($.length=t.hand.maxDetected),$}},$i={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],palm:[0]};async function predict14(e,t){aK||function(){let e=aj?new R8(aj):void 0;e&&aq&&(aK=new $n(e,aq))}();let u=await aK.estimateHands(e,t);if(!u)return[];let y=[];for(let t=0;t<u.length;t++){let w={};if(u[t].landmarks)for(let e of Object.keys($i))w[e]=$i[e].map(e=>u[t].landmarks[e]);let T=u[t].landmarks,$=[Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,0,0],M=[0,0,0,0];if(T&&T.length>0){for(let e of T)e[0]<$[0]&&($[0]=e[0]),e[1]<$[1]&&($[1]=e[1]),e[0]>$[2]&&($[2]=e[0]),e[1]>$[3]&&($[3]=e[1]);$[2]-=$[0],$[3]-=$[1],M=[$[0]/(e.shape[2]||0),$[1]/(e.shape[1]||0),$[2]/(e.shape[2]||0),$[3]/(e.shape[1]||0)]}else $=u[t].box?[Math.trunc(Math.max(0,u[t].box.topLeft[0])),Math.trunc(Math.max(0,u[t].box.topLeft[1])),Math.trunc(Math.min(e.shape[2]||0,u[t].box.bottomRight[0])-Math.max(0,u[t].box.topLeft[0])),Math.trunc(Math.min(e.shape[1]||0,u[t].box.bottomRight[1])-Math.max(0,u[t].box.topLeft[1]))]:[0,0,0,0],M=[u[t].box.topLeft[0]/(e.shape[2]||0),u[t].box.topLeft[1]/(e.shape[1]||0),(u[t].box.bottomRight[0]-u[t].box.topLeft[0])/(e.shape[2]||0),(u[t].box.bottomRight[1]-u[t].box.topLeft[1])/(e.shape[1]||0)];let O=analyze(T);y.push({id:t,score:Math.round(100*u[t].confidence)/100,boxScore:Math.round(100*u[t].boxConfidence)/100,fingerScore:Math.round(100*u[t].fingerConfidence)/100,label:"hand",box:$,boxRaw:M,keypoints:T,annotations:w,landmarks:O})}return y}async function loadDetect2(e){var t;return Cw.initial&&(aj=null),aj?e.debug&&log("cached model:",aj.modelUrl):aj=await loadModel(null==(t=e.hand.detector)?void 0:t.modelPath),aj}async function loadSkeleton(e){var t;return Cw.initial&&(aq=null),aq?e.debug&&log("cached model:",aq.modelUrl):aq=await loadModel(null==(t=e.hand.skeleton)?void 0:t.modelPath),aq}var $s=[null,null],$u=["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],$d=[[0,0],[0,0]],$h=["hand","fist","pinch","point","face","tip","pinchtip"],$g=Number.MAX_SAFE_INTEGER,$y=0,$A=[0,0],$x={boxes:[],hands:[]},$b={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],base:[0],palm:[0,17,13,9,5,1,0]};async function loadDetect3(e){var t;if(Cw.initial&&($s[0]=null),$s[0])e.debug&&log("cached model:",$s[0].modelUrl);else{fakeOps(["tensorlistreserve","enter","tensorlistfromtensor","merge","loopcond","switch","exit","tensorliststack","nextiteration","tensorlistsetitem","tensorlistgetitem","reciprocal","shape","split","where"],e),$s[0]=await loadModel(null==(t=e.hand.detector)?void 0:t.modelPath);let u=$s[0].executor?Object.values($s[0].modelSignature.inputs):void 0;$d[0][0]=Array.isArray(u)?parseInt(u[0].tensorShape.dim[1].size):0,$d[0][1]=Array.isArray(u)?parseInt(u[0].tensorShape.dim[2].size):0}return $s[0]}async function loadSkeleton2(e){var t;if(Cw.initial&&($s[1]=null),$s[1])e.debug&&log("cached model:",$s[1].modelUrl);else{$s[1]=await loadModel(null==(t=e.hand.skeleton)?void 0:t.modelPath);let u=$s[1].executor?Object.values($s[1].modelSignature.inputs):void 0;$d[1][0]=Array.isArray(u)?parseInt(u[0].tensorShape.dim[1].size):0,$d[1][1]=Array.isArray(u)?parseInt(u[0].tensorShape.dim[2].size):0}return $s[1]}async function detectHands(e,t){let u=[];if(!e||!$s[0])return u;let y={},w=(e.shape[2]||1)/(e.shape[1]||1),T=Math.min(8*Math.round((e.shape[1]||0)/8),512),$=8*Math.round(T*w/8);y.resize=c$.resizeBilinear(e,[T,$]),y.cast=o5(y.resize,"int32"),[y.rawScores,y.rawBoxes]=await $s[0].executeAsync(y.cast,$u),y.boxes=pg(y.rawBoxes,[0,2]),y.scores=pg(y.rawScores,[0]);let M=pR(y.scores,1);Ot(M[4]),M.splice(4,1),y.filtered=py(M,1),Ot(M),y.max=ug(y.filtered,1),y.argmax=ls(y.filtered,1);let O=0;y.nms=await c$.nonMaxSuppressionAsync(y.boxes,y.max,(t.hand.maxDetected||0)+1,t.hand.iouThreshold||0,t.hand.minConfidence||1);let P=await y.nms.data(),z=await y.max.data(),L=await y.argmax.data();for(let e of Array.from(P)){let t=lN(y.boxes,e,1),w=await t.data();Ot(t);let T=[w[1],w[0],w[3]-w[1],w[2]-w[0]],$=scale(T,1.4),M=[Math.trunc(T[0]*$A[0]),Math.trunc(T[1]*$A[1]),Math.trunc(T[2]*$A[0]),Math.trunc(T[3]*$A[1])],P=z[e],W=$h[L[e]],B={id:O++,score:P,box:M,boxRaw:$,label:W};u.push(B)}return Object.keys(y).forEach(e=>Ot(y[e])),u.sort((e,t)=>t.score-e.score),u.length>(t.hand.maxDetected||1)&&(u.length=t.hand.maxDetected||1),u}async function detectFingers(e,t,u){let y={id:t.id,score:Math.round(100*t.score)/100,boxScore:Math.round(100*t.score)/100,fingerScore:0,box:t.box,boxRaw:t.boxRaw,label:t.label,keypoints:[],landmarks:{},annotations:{}};if(e&&$s[1]&&u.hand.landmarks&&t.score>(u.hand.minConfidence||0)){let w={},T=[t.boxRaw[1],t.boxRaw[0],t.boxRaw[3]+t.boxRaw[1],t.boxRaw[2]+t.boxRaw[0]];w.crop=c$.cropAndResize(e,[T],[0],[$d[1][0],$d[1][1]],"bilinear"),w.div=o6(w.crop,TH.tf255),[w.score,w.keypoints]=$s[1].execute(w.div,["Identity_1","Identity"]);let $=(await w.score.data())[0],M=(100-Math.trunc(100/(1+Math.exp($))))/100;if(M>=(u.hand.minConfidence||0)){y.fingerScore=M,w.reshaped=lA(w.keypoints,[-1,3]);let e=await w.reshaped.array(),u=e.map(e=>[e[0]/$d[1][1],e[1]/$d[1][0],e[2]||0]),T=u.map(e=>[e[0]*t.boxRaw[2],e[1]*t.boxRaw[3],e[2]||0]);for(let e of(y.keypoints=T.map(e=>[$A[0]*(e[0]+t.boxRaw[0]),$A[1]*(e[1]+t.boxRaw[1]),e[2]||0]),y.landmarks=analyze(y.keypoints),Object.keys($b)))y.annotations[e]=$b[e].map(e=>y.landmarks&&y.keypoints[e]?y.keypoints[e]:null)}Object.keys(w).forEach(e=>Ot(w[e]))}return y}async function predict15(e,t){var u,y;if(!(null==(u=$s[0])?void 0:u.executor)||!(null==(y=$s[1])?void 0:y.executor)||!$s[0].inputs[0].shape||!$s[1].inputs[0].shape)return[];$A=[e.shape[2]||0,e.shape[1]||0],$g++;let w=(t.hand.skipTime||0)>now()-$y,T=$g<(t.hand.skipFrames||0);return t.skipAllowed&&w&&T?$x.hands:new Promise(async u=>{let y=3*(t.hand.skipTime||0)>now()-$y,w=$g<3*(t.hand.skipFrames||0);t.skipAllowed&&$x.hands.length===t.hand.maxDetected?$x.hands=await Promise.all($x.boxes.map(u=>detectFingers(e,u,t))):t.skipAllowed&&y&&w&&$x.hands.length>0?$x.hands=await Promise.all($x.boxes.map(u=>detectFingers(e,u,t))):($x.boxes=await detectHands(e,t),$y=now(),$x.hands=await Promise.all($x.boxes.map(u=>detectFingers(e,u,t))),$g=0);let T=[...$x.boxes];if($x.boxes.length=0,t.cacheSensitivity>0)for(let u=0;u<$x.hands.length;u++){let y=function(e,t=[1,1]){let u=[e.map(e=>e[0]),e.map(e=>e[1])],y=[Math.min(...u[0]),Math.min(...u[1])],w=[Math.max(...u[0]),Math.max(...u[1])],T=[(y[0]+w[0])/2,(y[1]+w[1])/2],$=Math.max(T[0]-y[0],T[1]-y[1],-T[0]+w[0],-T[1]+w[1]),M=[Math.trunc(T[0]-$),Math.trunc(T[1]-$),Math.trunc(2*$),Math.trunc(2*$)],O=[M[0]/t[0],M[1]/t[1],M[2]/t[0],M[3]/t[1]];return{box:M,boxRaw:O}}($x.hands[u].keypoints,$A);if(y.box[2]/(e.shape[2]||1)>.05&&y.box[3]/(e.shape[1]||1)>.05&&$x.hands[u].fingerScore&&$x.hands[u].fingerScore>(t.hand.minConfidence||0)){let e=scale(y.box,1.6),t=scale(y.boxRaw,1.6);$x.boxes.push({...T[u],box:e,boxRaw:t})}}for(let e=0;e<$x.hands.length;e++){let t=calc($x.hands[e].keypoints,$A);$x.hands[e].box=t.box,$x.hands[e].boxRaw=t.boxRaw}u($x.hands)})}var empty=(e=null)=>({face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,width:0,height:0,error:e}),$v={};__export($v,{connected:()=>$E,horizontal:()=>$S,kpt:()=>$k,relative:()=>$T,vertical:()=>$C});var $k=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],$S=[["leftEye","rightEye"],["leftEar","rightEar"],["leftShoulder","rightShoulder"],["leftElbow","rightElbow"],["leftWrist","rightWrist"],["leftHip","rightHip"],["leftKnee","rightKnee"],["leftAnkle","rightAnkle"]],$C=[["leftKnee","leftShoulder"],["rightKnee","rightShoulder"],["leftAnkle","leftKnee"],["rightAnkle","rightKnee"]],$T=[[["leftHip","rightHip"],["leftShoulder","rightShoulder"]],[["leftElbow","rightElbow"],["leftShoulder","rightShoulder"]]],$E={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},$R=empty(),$$=0;async function load15(e){return!aZ||Cw.initial?aZ=await loadModel(e.segmentation.modelPath):e.debug&&log("cached model:",aZ.modelUrl),aZ}async function predict16(e,t){var u;let y;if(aZ||(aZ=await load15(t)),!(null==aZ?void 0:aZ.executor)||!(null==(u=null==aZ?void 0:aZ.inputs)?void 0:u[0].shape))return null;let w={};switch(w.resize=c$.resizeBilinear(e,[aZ.inputs[0].shape?aZ.inputs[0].shape[1]:0,aZ.inputs[0].shape?aZ.inputs[0].shape[2]:0],!1),w.norm=o6(w.resize,TH.tf255),w.res=aZ.execute(w.norm),w.squeeze=pg(w.res,[0]),[w.bgRaw,w.fgRaw]=pR(w.squeeze,2),w.fg=pl(w.fgRaw),w.mul=o8(w.fg,TH.tf255),w.expand=uR(w.mul,2),w.output=c$.resizeBilinear(w.expand,[e.shape[1]||0,e.shape[2]||0]),t.segmentation.mode||"default"){case"default":w.input=pg(e),w.concat=lk([w.input,w.output],-1),y=o5(w.concat,"int32");break;case"alpha":y=o5(w.output,"int32");break;default:y=ar(0)}return Object.keys(w).forEach(e=>Ot(w[e])),y}var $_={};function distance(e,t,u={order:2,multiplier:25}){if(!e||!e)return Number.MAX_SAFE_INTEGER;let y=0;for(let w=0;w<e.length;w++){let T=u.order&&2!==u.order?Math.abs(e[w]-t[w]):e[w]-t[w];y+=u.order&&2!==u.order?T**u.order:T*T}let w=Math.round(100*(u.multiplier||20)*y)/100;return w}__export($_,{distance:()=>distance,find:()=>find,similarity:()=>similarity});var normalizeDistance=(e,t,u,y)=>{if(0===e)return 1;let w=2===t?Math.sqrt(e):e**(1/t),T=Math.round(100*Math.max(Math.min((1-w/100-u)/(y-u),1),0))/100;return T};function similarity(e,t,u={order:2,multiplier:25,min:.2,max:.8}){let y=distance(e,t,u);return normalizeDistance(y,u.order||2,u.min||0,u.max||1)}function find(e,t,u={order:2,multiplier:25,threshold:0,min:.2,max:.8}){if(!Array.isArray(e)||!Array.isArray(t)||e.length<64||0===t.length)return{index:-1,distance:Number.POSITIVE_INFINITY,similarity:0};let y=Number.MAX_SAFE_INTEGER,w=-1;for(let T=0;T<t.length;T++){let $=t[T].length===e.length?distance(e,t[T],u):Number.MAX_SAFE_INTEGER;if($<y&&(y=$,w=T),y<(u.threshold||0))break}let T=normalizeDistance(y,u.order||2,u.min||0,u.max||1);return{index:w,distance:y,similarity:T}}__export({},{Models:()=>$J,validateModel:()=>validateModel});var $M={keypoints:[],padding:[[0,0],[0,0],[0,0],[0,0]]};function bodyParts(e){for(let t of $S){let u=e.keypoints.findIndex(e=>e.part===t[0]),y=e.keypoints.findIndex(e=>e.part===t[1]);if(e.keypoints[u]&&e.keypoints[y]&&e.keypoints[u].position[0]<e.keypoints[y].position[0]){let t=e.keypoints[u];e.keypoints[u]=e.keypoints[y],e.keypoints[y]=t}}for(let t of $C){let u=e.keypoints.findIndex(e=>e&&e.part===t[0]),y=e.keypoints.findIndex(e=>e&&e.part===t[1]);e.keypoints[u]&&e.keypoints[y]&&e.keypoints[u].position[1]<e.keypoints[y].position[1]&&e.keypoints.splice(u,1)}for(let[t,u]of $T){let y=e.keypoints.findIndex(e=>e&&e.part===t[0]),w=e.keypoints.findIndex(e=>e&&e.part===t[1]),T=e.keypoints.findIndex(e=>e&&e.part===u[0]),$=e.keypoints.findIndex(e=>e&&e.part===u[1]);if(!e.keypoints[T]||!e.keypoints[$])continue;let M=e.keypoints[y]?[Math.abs(e.keypoints[T].position[0]-e.keypoints[y].position[0]),Math.abs(e.keypoints[$].position[0]-e.keypoints[y].position[0])]:[0,0],O=e.keypoints[w]?[Math.abs(e.keypoints[$].position[0]-e.keypoints[w].position[0]),Math.abs(e.keypoints[T].position[0]-e.keypoints[w].position[0])]:[0,0];if(M[0]>M[1]||O[0]>O[1]){let t=e.keypoints[y];e.keypoints[y]=e.keypoints[w],e.keypoints[w]=t}}}var $F=0,$O=Number.MAX_SAFE_INTEGER,$P={boxes:[],bodies:[],last:0};async function load16(e){var t;return Cw.initial&&(aY=null),aY?e.debug&&log("cached model:",aY.modelUrl):(fakeOps(["size"],e),aY=await loadModel(e.body.modelPath)),($F=(null==aY?void 0:aY.executor)&&(null==(t=null==aY?void 0:aY.inputs)?void 0:t[0].shape)?aY.inputs[0].shape[2]:0)<64&&($F=256),nG.flagRegistry.WEBGL_USE_SHAPES_UNIFORMS&&nG.set("WEBGL_USE_SHAPES_UNIFORMS",!1),aY}async function predict17(e,t){var u;if(!(null==aY?void 0:aY.executor)||!(null==(u=null==aY?void 0:aY.inputs)?void 0:u[0].shape))return[];t.skipAllowed||($P.boxes.length=0),$O++;let y=(t.body.skipTime||0)>now()-$P.last,w=$O<(t.body.skipFrames||0);return t.skipAllowed&&y&&w?$P.bodies:new Promise(async u=>{let y={};$O=0,y.input=function(e,t){var u,y;let w={};if(!(null==(u=null==e?void 0:e.shape)?void 0:u[1])||!(null==(y=null==e?void 0:e.shape)?void 0:y[2]))return e;$M.padding=[[0,0],[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0],[0,0]],w.pad=dN(e,$M.padding),w.resize=c$.resizeBilinear(w.pad,[t,t]);let T=o5(w.resize,"int32");return Object.keys(w).forEach(e=>Ot(w[e])),T}(e,$F),y.res=null==aY?void 0:aY.execute(y.input),$P.last=now();let w=await y.res.array();for(let u of($P.bodies=17===y.res.shape[2]?function(e,t,u){let y=e[0][0],w=[],T=0;for(let e=0;e<y.length;e++)if((T=y[e][2])>t.body.minConfidence){let t=[y[e][1],y[e][0]];w.push({score:Math.round(100*T)/100,part:$k[e],positionRaw:t,position:[Math.round((u.shape[2]||0)*t[0]),Math.round((u.shape[1]||0)*t[1])]})}T=w.reduce((e,t)=>t.score>e?t.score:e,0);let $=[],M=calc(w.map(e=>e.position),[u.shape[2],u.shape[1]]),O={};for(let[e,u]of Object.entries($E)){let y=[];for(let e=0;e<u.length-1;e++){let T=w.find(t=>t.part===u[e]),$=w.find(t=>t.part===u[e+1]);T&&$&&T.score>(t.body.minConfidence||0)&&$.score>(t.body.minConfidence||0)&&y.push([T.position,$.position])}O[e]=y}let P={id:0,score:T,box:M.box,boxRaw:M.boxRaw,keypoints:w,annotations:O};return bodyParts(P),$.push(P),$}(w,t,e):function(e,t,u){let y=[];for(let w=0;w<e[0].length;w++){let T=e[0][w],$=Math.round(100*T[55])/100;if($>t.body.minConfidence){let e=[];for(let y=0;y<17;y++){let w=T[3*y+2];if(w>t.body.minConfidence){let t=[T[3*y+1],T[3*y+0]];e.push({part:$k[y],score:Math.round(100*w)/100,positionRaw:t,position:[Math.round((u.shape[2]||0)*t[0]),Math.round((u.shape[1]||0)*t[1])]})}}let M=[T[52],T[51],T[54]-T[52],T[53]-T[51]],O=[Math.trunc(M[0]*(u.shape[2]||0)),Math.trunc(M[1]*(u.shape[1]||0)),Math.trunc(M[2]*(u.shape[2]||0)),Math.trunc(M[3]*(u.shape[1]||0))],P={};for(let[u,y]of Object.entries($E)){let w=[];for(let u=0;u<y.length-1;u++){let T=e.find(e=>e.part===y[u]),$=e.find(e=>e.part===y[u+1]);T&&$&&T.score>(t.body.minConfidence||0)&&$.score>(t.body.minConfidence||0)&&w.push([T.position,$.position])}P[u]=w}let z={id:w,score:$,box:O,boxRaw:M,keypoints:[...e],annotations:P};bodyParts(z),y.push(z)}}return y.sort((e,t)=>t.score-e.score),y.length>t.body.maxDetected&&(y.length=t.body.maxDetected),y}(w,t,e),$P.bodies))!function(e,t){for(let u of(e.keypoints=e.keypoints.filter(e=>null==e?void 0:e.position),e.keypoints))u.position=[u.position[0]*(t[0]+$M.padding[2][0]+$M.padding[2][1])/t[0]-$M.padding[2][0],u.position[1]*(t[1]+$M.padding[1][0]+$M.padding[1][1])/t[1]-$M.padding[1][0]],u.positionRaw=[u.position[0]/t[0],u.position[1]/t[1]];let u=calc(e.keypoints.map(e=>e.position),t);e.box=u.box,e.boxRaw=u.boxRaw}(u,[e.shape[2]||1,e.shape[1]||1]),function(e){for(let t=0;t<e.length;t++)if(e[t]&&$M.keypoints[t]){let u=[Math.abs(e[t].positionRaw[0]-$M.keypoints[t].positionRaw[0]),Math.abs(e[t].positionRaw[1]-$M.keypoints[t].positionRaw[1])];u[0]<.005&&u[1]<.005?e[t]=$M.keypoints[t]:$M.keypoints[t]=e[t]}else $M.keypoints[t]=e[t]}(u.keypoints);Object.keys(y).forEach(e=>Ot(y[e])),u($P.bodies)})}var $z=[],$L=0,$W=Number.MAX_SAFE_INTEGER,$B=0;async function load17(e){if(!aJ||Cw.initial){aJ=await loadModel(e.object.modelPath);let t=(null==aJ?void 0:aJ.executor)?Object.values(aJ.modelSignature.inputs):void 0;$B=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):416}else e.debug&&log("cached model:",aJ.modelUrl);return aJ}async function process4(e,t,u){var y,w;let T=0,$=[],M=$B;for(let O of[1,2,4]){let P=13*O,z=pg(e.find(e=>e.shape[1]===P**2&&(e.shape[2]||0)===Ey.length)),L=await z.array(),W=pg(e.find(e=>e.shape[1]===P**2&&(e.shape[2]||0)<Ey.length)),B=lA(W,[-1,4,((null==(y=W.shape)?void 0:y[1])||0)/4]),j=ls(B,2),q=await j.array();for(let e=0;e<z.shape[0];e++)for(let y=0;y<((null==(w=z.shape)?void 0:w[1])||0);y++){let w=L[e][y];if(w>(u.object.minConfidence||0)&&61!==y){let u=(.5+Math.trunc(e%P))/P,z=(.5+Math.trunc(e/P))/P,L=q[e].map(e=>e*(P/O/M)),[W,B]=[u-2.5/O*L[0],z-2.5/O*L[1]],[j,Z]=[u+2.5/O*L[2]-W,z+2.5/O*L[3]-B],Y=[W,B,j,Z];Y=Y.map(e=>Math.max(0,Math.min(e,1)));let J=[Y[0]*t[0],Y[1]*t[1],Y[2]*t[0],Y[3]*t[1]],ee={id:T++,score:Math.round(100*w)/100,class:y+1,label:Ey[y].label,box:J.map(e=>Math.trunc(e)),boxRaw:Y};$.push(ee)}}Ot([z,W,B,j])}let O=$.map(e=>[e.boxRaw[1],e.boxRaw[0],e.boxRaw[3],e.boxRaw[2]]),P=$.map(e=>e.score),z=[];if(O&&O.length>0){let e=await c$.nonMaxSuppressionAsync(O,P,u.object.maxDetected||0,u.object.iouThreshold,u.object.minConfidence);z=Array.from(await e.data()),Ot(e)}return $.filter((e,t)=>z.includes(t)).sort((e,t)=>t.score-e.score)}async function predict18(e,t){if(!(null==aJ?void 0:aJ.executor))return[];let u=(t.object.skipTime||0)>now()-$L,y=$W<(t.object.skipFrames||0);return t.skipAllowed&&u&&y&&$z.length>0?($W++,$z):($W=0,Cw.kernels.includes("mod")&&Cw.kernels.includes("sparsetodense"))?new Promise(async u=>{let y;let w=[e.shape[2]||0,e.shape[1]||0],T=c$.resizeBilinear(e,[$B,$B],!1),$=o6(T,TH.tf255),M=p$($,[0,3,1,2]);t.object.enabled&&(y=aJ.execute(M)),$L=now();let O=await process4(y,w,t);$z=O,Ot([T,$,M,...y]),u(O)}):$z}var $V=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],$U=$V.length,$G=$V.reduce((e,t,u)=>(e[t]=u,e),{});[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]].map(([e,t])=>[$G[e],$G[t]]);var $H=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]],$j=class{constructor(e,t){__publicField(this,"priorityQueue"),__publicField(this,"numberOfElements"),__publicField(this,"getElementValue"),this.priorityQueue=Array(e),this.numberOfElements=-1,this.getElementValue=t}enqueue(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)}dequeue(){let e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e}empty(){return -1===this.numberOfElements}size(){return this.numberOfElements+1}all(){return this.priorityQueue.slice(0,this.numberOfElements+1)}max(){return this.priorityQueue[0]}swim(e){for(;e>0&&this.less(Math.floor(e/2),e);)this.exchange(e,Math.floor(e/2)),e=Math.floor(e/2)}sink(e){for(;2*e<=this.numberOfElements;){let t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}}getValueAt(e){return this.getElementValue(this.priorityQueue[e])}less(e,t){return this.getValueAt(e)<this.getValueAt(t)}exchange(e,t){let u=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=u}};function getOffsetPoint(e,t,u,y){return{y:y.get(e,t,u),x:y.get(e,t,u+$U)}}function getImageCoords(e,t,u){let{heatmapY:y,heatmapX:w,id:T}=e,{y:$,x:M}=getOffsetPoint(y,w,T,u);return{x:e.heatmapX*t+M,y:e.heatmapY*t+$}}function addVectors(e,t){return{x:e.x+t.x,y:e.y+t.y}}var $q=["MobilenetV1/offset_2/BiasAdd","MobilenetV1/heatmap_2/BiasAdd","MobilenetV1/displacement_fwd_2/BiasAdd","MobilenetV1/displacement_bwd_2/BiasAdd"];function traverse(e,t,u,y,w,T,$=2){let getStridedIndexNearPoint=(e,t,u)=>{var y,w,T,$;return{y:(y=Math.round(e.y/16),w=t-1,y<0?0:y>w?w:y),x:(T=Math.round(e.x/16),$=u-1,T<0?0:T>$?$:T)}},[M,O]=y.shape,P=getStridedIndexNearPoint(t.position,M,O),z={y:T.get(P.y,P.x,e),x:T.get(P.y,P.x,T.shape[2]/2+e)},L=addVectors(t.position,z),W=L;for(let e=0;e<$;e++){let e=getStridedIndexNearPoint(W,M,O),t=getOffsetPoint(e.y,e.x,u,w);W=addVectors({x:16*e.x,y:16*e.y},{x:t.x,y:t.y})}let B=getStridedIndexNearPoint(W,M,O),j=y.get(B.y,B.x,u);return{position:W,part:$V[u],score:j}}function withinRadius(e,{x:t,y:u},y){return e.some(({keypoints:e})=>{var w;let T=null==(w=e[y])?void 0:w.position;return!!T&&2500>=function(e,t,u,y){let w=u-e,T=y-t;return w*w+T*T}(u,t,T.y,T.x)})}async function predict19(e,t){if(!(null==aQ?void 0:aQ.executor))return[];let u=De(()=>{if(!aQ.inputs[0].shape)return[];let t=c$.resizeBilinear(e,[aQ.inputs[0].shape[2],aQ.inputs[0].shape[1]]),u=u1(o6(o5(t,"float32"),127.5),1),y=aQ.execute(u,$q),w=y.map(e=>pg(e,[0]));return w[1]=lS(w[1]),w}),y=await Promise.all(u.map(e=>e.buffer()));for(let e of u)Ot(e);let w=function(e,t,u,y,w,T){let $=[],M=function(e,t){let[u,y,w]=t.shape,T=new $j(u*y*w,({score:e})=>e);for(let $=0;$<u;++$)for(let u=0;u<y;++u)for(let y=0;y<w;++y){let w=t.get($,u,y);!(w<e)&&function(e,t,u,y,w){let[T,$]=w.shape,M=!0,O=Math.max(u-1,0),P=Math.min(u+1+1,T);for(let u=O;u<P;++u){let T=Math.max(y-1,0),O=Math.min(y+1+1,$);for(let y=T;y<O;++y)if(w.get(u,y,e)>t){M=!1;break}if(!M)break}return M}(y,w,$,u,t)&&T.enqueue({score:w,part:{heatmapY:$,heatmapX:u,id:y}})}return T}(T,t);for(;$.length<w&&!M.empty();){let w=M.dequeue(),O=getImageCoords(w.part,16,e);if(withinRadius($,O,w.part.id))continue;let P=function(e,t,u,y,w){let T=$H.map(([e,t])=>[$G[e],$G[t]]),$=T.map(([,e])=>e),M=T.map(([e])=>e),O=t.shape[2],P=$.length,z=Array(O),L=getImageCoords(e.part,16,u);z[e.part.id]={score:e.score,part:$V[e.part.id],position:L};for(let e=P-1;e>=0;--e){let y=$[e],T=M[e];z[y]&&!z[T]&&(z[T]=traverse(e,z[y],T,t,u,w))}for(let e=0;e<P;++e){let w=M[e],T=$[e];z[w]&&!z[T]&&(z[T]=traverse(e,z[w],T,t,u,y))}return z}(w,t,e,u,y);P=P.filter(e=>e.score>T);let z=function(e,t){let u=t.reduce((t,{position:u,score:y},w)=>(withinRadius(e,u,w)||(t+=y),t),0);return u/t.length}($,P),L=function(e){let t=e.reduce(({maxX:e,maxY:t,minX:u,minY:y},{position:{x:w,y:T}})=>({maxX:Math.max(e,w),maxY:Math.max(t,T),minX:Math.min(u,w),minY:Math.min(y,T)}),{maxX:Number.NEGATIVE_INFINITY,maxY:Number.NEGATIVE_INFINITY,minX:Number.POSITIVE_INFINITY,minY:Number.POSITIVE_INFINITY});return[t.minX,t.minY,t.maxX-t.minX,t.maxY-t.minY]}(P);z>T&&$.push({keypoints:P,box:L,score:Math.round(100*z)/100})}return $}(y[0],y[1],y[2],y[3],t.body.maxDetected,t.body.minConfidence);if(!aQ.inputs[0].shape)return[];let T=function(e,[t,u],[y,w]){let T=t/y,$=u/w,scalePose=(e,t)=>({id:t,score:e.score,boxRaw:[e.box[0]/w,e.box[1]/y,e.box[2]/w,e.box[3]/y],box:[Math.trunc(e.box[0]*$),Math.trunc(e.box[1]*T),Math.trunc(e.box[2]*$),Math.trunc(e.box[3]*T)],keypoints:e.keypoints.map(({score:e,part:t,position:u})=>({score:e,part:t,position:[Math.trunc(u.x*$),Math.trunc(u.y*T)],positionRaw:[u.x/y,u.y/y]})),annotations:{}}),M=e.map((e,t)=>scalePose(e,t));return M}(w,[e.shape[1],e.shape[2]],[aQ.inputs[0].shape[2],aQ.inputs[0].shape[1]]);return T}async function load18(e){return!aQ||Cw.initial?aQ=await loadModel(e.body.modelPath):e.debug&&log("cached model:",aQ.modelUrl),aQ}var $K=["fgr","pha","r1o","r2o","r3o","r4o"],$Z={},$Y=0;function init3(e){Ot([$Z.r1i,$Z.r2i,$Z.r3i,$Z.r4i,$Z.downsample_ratio]),$Z.r1i=ar(0),$Z.r2i=ar(0),$Z.r3i=ar(0),$Z.r4i=ar(0),$Y=e.segmentation.ratio||.5,$Z.downsample_ratio=ar($Y)}async function load19(e){return!a1||Cw.initial?a1=await loadModel(e.segmentation.modelPath):e.debug&&log("cached model:",a1.modelUrl),init3(e),a1}var normalize=e=>De(()=>{let t=pg(e,[0]),u=o8(t,TH.tf255),y=o5(u,"int32");return y});function getRGBA(e,t){let u=e?normalize(e):$a([t.shape[1]||0,t.shape[2]||0,3],255,"int32"),y=t?normalize(t):$a([e.shape[1]||0,e.shape[2]||0,1],255,"int32"),w=lk([u,y],-1);return Ot([u,y]),w}async function predict20(e,t){let u;if(a1||(a1=await load19(t)),!(null==a1?void 0:a1.executor))return null;$Z.src=o6(e,255),$Y!==t.segmentation.ratio&&init3(t);let[y,w,T,$,M,O]=await a1.executeAsync($Z,$K);switch(t.segmentation.mode||"default"){case"default":u=getRGBA(y,w);break;case"alpha":u=getRGBA(null,w);break;case"foreground":u=getRGBA(y,null);break;case"state":u=De(()=>{let e={};return e.unstack=pR(T,-1),e.concat=lk(e.unstack,1),e.split=ph(e.concat,4,1),e.stack=lk(e.split,2),e.squeeze=pg(e.stack,[0]),e.expand=uR(e.squeeze,-1),e.add=o7(e.expand,1),e.mul=o8(e.add,127.5),e.cast=o5(e.mul,"int32"),e.tile=u_(e.cast,[1,1,3]),e.alpha=$a([e.tile.shape[0]||0,e.tile.shape[1]||0,1],255,"int32"),lk([e.tile,e.alpha],-1)});break;default:u=ar(0)}return Ot([$Z.src,y,w,$Z.r1i,$Z.r2i,$Z.r3i,$Z.r4i]),[$Z.r1i,$Z.r2i,$Z.r3i,$Z.r4i]=[T,$,M,O],u}async function load20(e){return!a2||Cw.initial?a2=await loadModel(e.segmentation.modelPath):e.debug&&log("cached model:",a2.modelUrl),a2}async function predict21(e,t){var u;let y;if(a2||(a2=await load20(t)),!(null==a2?void 0:a2.executor)||!(null==(u=null==a2?void 0:a2.inputs)?void 0:u[0].shape))return null;let w={};switch(w.resize=c$.resizeBilinear(e,[a2.inputs[0].shape?a2.inputs[0].shape[1]:0,a2.inputs[0].shape?a2.inputs[0].shape[2]:0],!1),w.norm=o6(w.resize,TH.tf255),w.res=a2.execute(w.norm),w.squeeze=pg(w.res,[0]),w.alpha=c$.resizeBilinear(w.squeeze,[e.shape[1]||0,e.shape[2]||0]),w.mul=o8(w.alpha,TH.tf255),t.segmentation.mode||"default"){case"default":w.input=pg(e),w.concat=lk([w.input,w.mul],-1),y=o5(w.concat,"int32");break;case"alpha":y=o5(w.mul,"int32");break;default:y=ar(0)}return Object.keys(w).forEach(e=>Ot(w[e])),y}function validateModel(e,t,u){var y,w;if(!t||!(null==(y=null==e?void 0:e.config)?void 0:y.validateModels))return null;let T=["const","placeholder","noop","pad","squeeze","add","sub","mul","div"],$=["biasadd","fusedbatchnormv3","matmul","switch","shape","merge","split","broadcastto"],M=[],O=[],P=t.modelUrl,z=t.executor;if(null==(w=null==z?void 0:z.graph)?void 0:w.nodes)for(let e of Object.values(z.graph.nodes)){let t=e.op.toLowerCase();M.includes(t)||M.push(t)}else!z&&e.config.debug&&log("model not loaded",u);for(let t of M)T.includes(t)||$.includes(t)||e.env.kernels.includes(t)||e.env.kernels.includes(t.replace("_",""))||e.env.kernels.includes(t.replace("native",""))||e.env.kernels.includes(t.replace("v2",""))||O.push(t);return e.config.debug&&O.length>0&&log("model validation failed:",u,O),O.length>0?{name:u,missing:O,ops:M,url:P}:null}var $J=class{constructor(e){__publicField(this,"instance"),__publicField(this,"models",{}),this.models={},this.instance=e}stats(){let e=0,t=0,u=0;for(let y of Object.values(TV))e+=Number.isNaN(+y.sizeFromManifest)?0:y.sizeFromManifest,t+=Number.isNaN(+y.sizeLoadedWeights)?0:y.sizeLoadedWeights,u+=Number.isNaN(+y.sizeDesired)?0:y.sizeDesired;let y=u>0?t/u:0;return{numLoadedModels:Object.values(TV).filter(e=>null==e?void 0:e.loaded).length,numDefinedModels:Object.keys(this.models).length,percentageLoaded:y,totalSizeFromManifest:e,totalSizeWeights:t,totalSizeLoading:u,modelStats:Object.values(TV)}}reset(){for(let e of Object.keys(this.models))this.models[e]=null}async load(e){var t,u,y,w,T,$,M,O,P,z,L,W,B,j,q,Z,Y,J,ee,ea,en,er,ei,es,el,eu,ed;Cw.initial&&this.reset(),e&&(this.instance=e);let ep={};for(let[e,ec]of(ep.blazeface=this.instance.config.face.enabled&&!this.models.blazeface?load3(this.instance.config):null,ep.antispoof=this.instance.config.face.enabled&&(null==(t=this.instance.config.face.antispoof)?void 0:t.enabled)&&!this.models.antispoof?load8(this.instance.config):null,ep.liveness=this.instance.config.face.enabled&&(null==(u=this.instance.config.face.liveness)?void 0:u.enabled)&&!this.models.liveness?load9(this.instance.config):null,ep.faceres=this.instance.config.face.enabled&&(null==(y=this.instance.config.face.description)?void 0:y.enabled)&&!this.models.faceres?load7(this.instance.config):null,ep.emotion=this.instance.config.face.enabled&&(null==(w=this.instance.config.face.emotion)?void 0:w.enabled)&&!this.models.emotion?load6(this.instance.config):null,ep.iris=this.instance.config.face.enabled&&(null==(T=this.instance.config.face.iris)?void 0:T.enabled)&&!(null==($=this.instance.config.face.attention)?void 0:$.enabled)&&!this.models.iris?load4(this.instance.config):null,ep.facemesh=this.instance.config.face.enabled&&(null==(M=this.instance.config.face.mesh)?void 0:M.enabled)&&!this.models.facemesh?load5(this.instance.config):null,ep.gear=this.instance.config.face.enabled&&(null==(O=this.instance.config.face.gear)?void 0:O.enabled)&&!this.models.gear?load10(this.instance.config):null,ep.ssrnetage=this.instance.config.face.enabled&&(null==(P=this.instance.config.face.ssrnet)?void 0:P.enabled)&&!this.models.ssrnetage?load11(this.instance.config):null,ep.ssrnetgender=this.instance.config.face.enabled&&(null==(z=this.instance.config.face.ssrnet)?void 0:z.enabled)&&!this.models.ssrnetgender?load12(this.instance.config):null,ep.mobilefacenet=this.instance.config.face.enabled&&(null==(L=this.instance.config.face.mobilefacenet)?void 0:L.enabled)&&!this.models.mobilefacenet?load13(this.instance.config):null,ep.insightface=this.instance.config.face.enabled&&(null==(W=this.instance.config.face.insightface)?void 0:W.enabled)&&!this.models.insightface?load14(this.instance.config):null,ep.blazepose=this.instance.config.body.enabled&&!this.models.blazepose&&(null==(B=this.instance.config.body.modelPath)?void 0:B.includes("blazepose"))?loadPose(this.instance.config):null,ep.blazeposedetect=this.instance.config.body.enabled&&!this.models.blazeposedetect&&this.instance.config.body.detector&&this.instance.config.body.detector.modelPath?loadDetect(this.instance.config):null,ep.efficientpose=this.instance.config.body.enabled&&!this.models.efficientpose&&(null==(j=this.instance.config.body.modelPath)?void 0:j.includes("efficientpose"))?load2(this.instance.config):null,ep.movenet=this.instance.config.body.enabled&&!this.models.movenet&&(null==(q=this.instance.config.body.modelPath)?void 0:q.includes("movenet"))?load16(this.instance.config):null,ep.posenet=this.instance.config.body.enabled&&!this.models.posenet&&(null==(Z=this.instance.config.body.modelPath)?void 0:Z.includes("posenet"))?load18(this.instance.config):null,ep.handtrack=this.instance.config.hand.enabled&&!this.models.handtrack&&(null==(J=null==(Y=this.instance.config.hand.detector)?void 0:Y.modelPath)?void 0:J.includes("handtrack"))?loadDetect3(this.instance.config):null,ep.handskeleton=this.instance.config.hand.enabled&&this.instance.config.hand.landmarks&&!this.models.handskeleton&&(null==(ea=null==(ee=this.instance.config.hand.detector)?void 0:ee.modelPath)?void 0:ea.includes("handtrack"))?loadSkeleton2(this.instance.config):null,this.instance.config.hand.enabled&&!this.models.handdetect&&(null==(er=null==(en=this.instance.config.hand.detector)?void 0:en.modelPath)?void 0:er.includes("handdetect"))&&(ep.handdetect=loadDetect2(this.instance.config),ep.handskeleton=loadSkeleton(this.instance.config)),ep.centernet=this.instance.config.object.enabled&&!this.models.centernet&&(null==(ei=this.instance.config.object.modelPath)?void 0:ei.includes("centernet"))?load(this.instance.config):null,ep.nanodet=this.instance.config.object.enabled&&!this.models.nanodet&&(null==(es=this.instance.config.object.modelPath)?void 0:es.includes("nanodet"))?load17(this.instance.config):null,ep.selfie=this.instance.config.segmentation.enabled&&!this.models.selfie&&(null==(el=this.instance.config.segmentation.modelPath)?void 0:el.includes("selfie"))?load20(this.instance.config):null,ep.meet=this.instance.config.segmentation.enabled&&!this.models.meet&&(null==(eu=this.instance.config.segmentation.modelPath)?void 0:eu.includes("meet"))?load15(this.instance.config):null,ep.rvm=this.instance.config.segmentation.enabled&&!this.models.rvm&&(null==(ed=this.instance.config.segmentation.modelPath)?void 0:ed.includes("rvm"))?load19(this.instance.config):null,Object.entries(ep)))(null==ec?void 0:ec.then)&&ec.then(t=>this.models[e]=t);await Promise.all(Object.values(ep))}list(){let e=Object.keys(this.models).map(e=>{var t;return{name:e,loaded:null!==this.models[e],size:0,url:this.models[e]?null==(t=this.models[e])?void 0:t.modelUrl:null}});for(let t of e){let e=Object.keys(TV).find(e=>e.startsWith(t.name));e&&(t.size=TV[e].sizeLoadedWeights,t.url=TV[e].url)}return e}loaded(){let e=this.list(),t=e.filter(e=>e.loaded).map(e=>e.name);return t}validate(){let e=[];for(let t of Object.keys(this.models)){let u=this.models[t];if(!u)continue;let y=validateModel(this.instance,u,t);y&&e.push(y)}return e}},$Q=`
/9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUA
AAABAAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABcGFpbnQu
bmV0IDQuMi4xMwAA/9sAQwAGBAUGBQQGBgUGBwcGCAoQCgoJCQoUDg8MEBcUGBgXFBYWGh0lHxob
IxwWFiAsICMmJykqKRkfLTAtKDAlKCko/9sAQwEHBwcKCAoTCgoTKBoWGigoKCgoKCgoKCgoKCgo
KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo/8AAEQgBAAEAAwEhAAIRAQMRAf/E
AB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE
EQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZH
SElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1
tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEB
AQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET
IjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFla
Y2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
x8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+qaKACigApGOKAML
Xp8xlF5A7V4X8RtYs7PzfNImnx8sa8Kp9z3q2tEgp6angWs62ZZ5CTGoJ6DArGNz5p+UrID6EUrF
PUlW1EuN0XNW7PQ2L5j3JnoKXN0KijqNP0eYoqXBdgPuuo+ZPeupisWn2Jd4+0r924XgsQOCff3/
AJ1FzRKxDqGii6m3siiQ8F1XGfXI6YNWLfRbiRQMkcZI9fpTDluT2/h6Qy8gDPbtmtG38JeY480Z
5zSLUTZg8M28YwYxjAArXtdPt402qgHbpSaLWhma3o0Uqk7Nx9DWLaaVblgPs6qRyds2M/gRSQp9
zZOni2iWS2hlQ+kjYz9OMGrdjq89vIPPVhj+8M/lQyDq9P1WOYBlMZz1AOD+VdDaTiReOKulK0jO
tHmi0WDTlr0TyxRVhT8tJjIX+9SUxHXUV553BRQAVBcPhSBTSuxPY86+IGti0s5I7dsORy9fM3i6
8e8mfDO5P90ZrWWiJicNPpZZtxV/xrW0jQt4DOv6Vk2dEEdTY6BHuB25rpbPSo0QARjP0qTRI17W
wA/hFaMWmoQMgflQXYsDS142rU9tpqqenfNA7GgtihxkdKuRW6qMY/GkDZY8sY4Ap4hXbyB+VArk
EtuH4wPyrk/EGkOm+a3jw3suRQLc5i38SX9hJ9nnY+XnBUdPyNdFY6pa3KkkAE9l6f8AfJ/pSJT6
GhDmI+Zb4ZRycdv6ium0nUhKFydrelTsNnS2829RnrVgV6NKXNG55lWPLIM81Op+WrZkRMfmNNzT
A7GivPO4KKAEY4XNYWt3vkwPg4OK0giJdjw/xrqhm87Zs8tc7pX5A+leSajf6aHYJ50kn4AZpTep
rBWRm2Vobm4BXfyehPFdnpmnBFUY5rI2SN63tlToK0YI+KZpFF+3QdavwoKTLtoW0Toaswpk5pCb
LCxipAhoIuP2dKevHXoaYDylRyxhlwRQI4nxVoCXWZI1GfpXGtbSWjYPGP73+NIGupt6TqMsLruZ
ih4xnP5V09mQ+JLd8gn0xSYJnVaVdkook69K34zuUGunDS3Rx4qOzHVIp4rrOMY3NJQI7GivPO8K
KAILt9kZrz3xlebYiu8KCCWb0XvW0NFch6ysfO3jLVjfXLIn+pQkKorl7WxNxIPl71g2dUUdpo+l
pBGvHPet23iC8ihFosrxirkHQUFo0IF4FXI1O726CpKLacCrMJoJLYHAPpTwucHpSRJJ5e4AZI9x
UqpxzVpCuOC8cUpQUMRnXttuB4rjNdsYyeVwfXpmpGmcvcQyafMCFJjPY10eg34BUg4DcZP8jUO4
HaRq3lLNF+IHet7R7jz7c56rwa2wz9+xhiVeFy/T1PFegeaNPWigDsc0ZrzzvDNIaAM7VpNqdegr
xL4l6kywyRhseZ19lrdfAZL4jxYg3Fw20d63tJsdrDI5rm3Z3R0R0Mce1eKnQYAplIkWrMJ45oZS
NO3PHbNXIyfpSGWowSOasxLUiZdjFSqtNEMkUemKlAGKsRJjAppFAiORMjmsTVrNZEO4cfSoZSOD
1eJ7WXBUzQZ+7nkfSo7e2Ei+ZaMzxntjBX2NSU1Y6/wxqojiEFzkA8KTXYaUoWRyv3W5rSjpNHPX
+BmpSg8V6J5gUUAdhRXnneFFAGHrTfu5PpXzj8S70/aZtxzztXFbv4DKHxHI+H4GZiz9zxXXW8G3
GBXMjvLRXAx0oPGPSmMVeOnWrMTYpFI0bcg1fh54xmgovRcD3qxETSIZcRvzp+/BpEkqsBUqsM9K
q4Em4Gkxk0yRGXrVW6i8yFhkg+tJjRxGsWrxllkUMh9eK5uMz6bcebbnfG33kPcVkay2OntPKuo0
nhXI67c8qa7Lw3c+adjcEDGK1paSRhVV4s6A0or0jyRRQ1AHX0V553hRQBz+vNtt5z3xXzX8Qbdm
uic5YnOMdK3l8JnTXvlbwpYl+WySOgrp5YfLOOB9O1c62O7qQkc+9RsKChFPWp4DluOlSykaNruH
ArUgHShFNF2NT1qxGO3NBmyxGcE1N2560CFzjrUysO9JAPDDjFOVuKoQuSRTWouBkazbCa3cd8cV
wF7IISQccHBzUSWpV9C3o1x5b5GAjdQD1rs9DjC3kckbEhqKfxIzn8LOupRXqnkPccBSkUAzraK8
87wooA5rxMSI3HqK8B8bQl9Q8sffY5b/AAraXwkUviNrw9pH2W1ViMMRTdRjw4HpWNtDti9TPc4P
FQs2M5qdyyMHLcfjV63HTAoBGtap0wK0YxigpsuRDtVhVYd6GQydVwwIqdRnqKCR23I5pCMUW6gD
YNKuetAEise9KTxQBWuFyhrznxNZkXjFeN3I+tTIZg2OqmzmxNF0PO3vXp/g2+hukVl4zyPanTXv
JmVR+60dpThXpnlPceopWFAbnV0V553hSGgRynjC5FujOey14Ssp1HxNmTnc+a3kvcIpv37HoEYQ
QmMdVHSsnVbYJF5jVk0dsNzlruVIsl2wKxbjWrVHILjg1CRbZJb+ILHPzyhfStODWLQgFJFYd+el
UJM27HUIXxhga1Y5lLVLKLkMnoauxnPPrSEx7ShF+Y/n2qrc6xBbhizDAqkK1zJuvG9nbg8ZA681
ly/Ei052RO3uKAsZlx8QGd8xxvt9Aa1NH8dK7AXMcip64zigdkdrZX8F7EJLdwwNXMkrz1qRMRly
CK4TxmpidWI49felPYSOMmi80NIoOV6qRzXYeA5SskYPfirpfEjGr8LPWVHyD6U4CvQPL3ZItOYc
UDOoNFeed4Uhpks4H4iE/Z5MeleMeGULeLgjds10S+BGdL+Jc9OSBU2Huc5Nc74yvUtrcDBrJnZF
63PJdXvLy/lKWw46bvQVz82jXhkLO5Y+9ZlsYthcRnbIjY9R3q3awTRkEM3WmJI6C0ea3dGRsr1x
XY6TqW9FLHnjrUs0izpLK5DDjofSta3ckH09KRUkZuuTvFGdvPauE1Y3U6Mqbssf/rUxHPTaJPK2
ZmJPbBqzY6DCZh5xJC9s9aBJHU6dpemJjfEmfetJtI0+VPkUr/unFOxdiextHs33W07YHQHk11mk
Xb3KbZ1xIvcd6LEyWho4Nct41sTPYb16ipexCPPZN+wYGCvH1rrPAEJmvkPoc1VL4kZVvgZ6yFwK
cBXoHkkqinFaVyzo80GuE7WJRQSziPiGdthK5HQV4x4J/wBI8WPIewNdEvgRNL42emO/yj1UHNef
eNpRczbC+I17DvWT2OqJxc0sMK4TCisy41q0hfEkqj8aixdwTXNOlwvmqD9anS9tXH7uVG+hosO4
/wC0oOhrR0+6G4YNIEzsNEuCxAPNdjZruA4xxUmjINSjURksOlcbqFykbnjFA1sYGoassaknCqO5
rl7rxhGm7yBnBxuJq0rkSlYpw+NLlsfd5P8AerVsvHEqSBHwPVgcgVpyMyVXU3rXxcHYETAk+hru
/DWti6ZSTyOKzZqndHaxvvUGq2rQ+dYyqR24qWI8dvbr7LqDxyDAzXpvw6FvIxePGSM06Xxoyr/A
zviKFHNegeX1J41zUhXioGbuaSuM6wpCaBHG/EcA6HN/exxXjXw2jL67cv8A3Qa6H8CFR+NnoWpO
I4XI44rxLxrqjQzSEsQM1gdSPM9U1uR1YbmWIdXHf2rmpIb67YS28UrRlsLI3c/jW0VZGUpO5pW1
jfLNOjahawzwReYI5cjzMkDavHJ5/SrVv9uhtPtVxCPLBwzxnlT9KGghLU3tKvvPjHzbl7EGuisJ
GRxWLOg7nRXJEbDjmvSNK+aFSfSoZr0KutRkphc4NcRrdkVjL9aVio7Hk3iqS8ubhrWzUlsZY9kG
cZNc5D4aee5MclzJIFTzHAO0MfatqSOWu7bFS1srDUZEis0vIZoUxPvfcC+4/dx2xjr712XiTwXb
WmlQ6hol3cRhoFd4rlg3zY5wR0GelavQwjq7GD4etdVvSnk2wAB+9v8A8mvcfA2kXiRo0/UdcDis
ZnTTulqeoWqbUAJqWUb42X1FZlnjfjSwlGrr5S/eNdD4RkvLAAQ4yRyaUZcruVKl7TQ9I0G+mnzH
ckFwM8VuIK7ac3KF2eXiKapz5UWYxipNtMyNejNch0jSar3cjR27uoyQCRVRWom9DxTx54gu5fMi
lbKdMVjfCZPNlv5v9rFbVHpYqjGzbOn8SzFI9o715L4u0r7arYzk+lYdTqSujy7U/C0u4vHk+WwO
xuh9q3J9dgvbdVukMV1EwbDDgn04rZMwlHoZ+orZ6hfQ3RWVnQYCgZAq+8U0ln5NtBsV2yxYcfgK
JtW0CnB31LlroVwJ1nQLGDjeP7w+lb0dsFxjrWB0tHS6NuWPJ6A16ToUm63T3Gallr4S7cxiTjrX
PaxaF7dlVeSMUhxZ5jd+H7qCa4eF3DSE5x3zXN3Wk6jbyeaiFWUY6ZyPStYS5SalPmVipFbX0E4c
W0alvmPHJrag0rVvEE6LdljGpG2NRtQD+tW5XMI0uU9M8NeFo9PiQhecDIIrtrOMIoG3H4VlJm9t
C6CB06VPGM1IHLeItGS6uw+ORT7e3jsbQvj7gzUNam0JaWE+HN7NqOqX80n3FO1RXo8YzXdS+BHk
4z+KyzGPapcU2YIv7qQtiuaxvcaWqG4O6FwfSrS1JbPnrxoxkv7qIfejcitj4V2f2exumI+8+aKn
xHTT+G5d8Txlm4rjLxMsQwzWT3OiK0Mm6sEkVsAcjFc1d+FEmlGwEDPQVopaEuOpr6f4ZWNAu3tW
vHpAj5ZQcUFIWaDjGMVUMQ3cVDBmvbhY7QAV2nh+T/R1yeKhlrY31+b61FcQK6nIoJMi401WblRi
qr6PCw5UYq9y+YgOgWzNkRrx3xWjp+nx2v3FQcelAbmko9anQ4GBUNisPHWr1qMrQhS2K11HvmYV
hamcxSRZ5xRIqluS/DKAQQXZxyXrvo2FdlL4EeZjH+/ZbjNSZpswLNBrE1Gt7VE4ODVIlnh/j61F
j4lmeTGyUbq6LwdEqWbeX0YbhSqfEddP4Bddj4JIrhL5d8h7VjI6oLQqKNzelWre3yc4/ClFjaL6
wqBxxUUxwCKu5BmXRA6c+9ZjP83FSBoQuPs4BrsNBlUW659KmRrDY6G1lyQtW3Hy0lqQ1qVJnAbm
oy3b9KYJCqRj3o4zRctIlhjLHmpSuOBRbQOpLGpPFaES7UqkZzKN1KsEc87/AHUUmvPLTVGv72aQ
k7WJwKmRrQ3ud74Ltilgz4++2a6iNDXdS0gjyMU71my7GpqTbxSbMki3SViajTTHqkSeR/GeyZmg
nQHkEE1S+F+oPPavBL96I4/Cia1udVF+4dVrkW+Fq8+v4tjMDWUkdVJ6WM0cNV+F+MVmjUcZgqnP
1qpNNnkcVRLiZtxIS1UzzIF7mghlxUZpVQdq6nTVdAoAOKzkbQWhvwM6gMM1twOJYx3NOJE11Kt1
H1/pVVlwBkk+9NocXoOQ45FPj+fkUJFF2NSB700v/hTEty5ZpkjvVyUgcCq6GM9zC14/8Se6GcZQ
1574Xs5WkI2HBPHFQ1dm1KSSZ7Rotn9l0+KPHIHNacae1dy0Vjxaj5ptlhVp+2s2CJ9ppCKzuWNx
zSFc1SYrHNeNdIGpaYw25ZeRXmvheyk0jVpEdcLJ0q3ZxNKTa0O3vQHg/DNcHrsJDmsmjspnNzNt
fFIJ24GazOhC+azDmgZIOOKBsp3J2qSaZodubq58yQ4QAnmhGT3NO18pb7BORmu205LfYpyKVkWp
Oxr5gKYWoIZWgfGfloFq1qTPLubnGO1RPtxg4P0oBAkY/hBz6VNDDkZ6AU0W2WSdqkdKr9ZOaGSj
VtcLHmnOcgmmYvcz7mBLy3MbdD1q9ouiRK6bUAVeelOC1InPlidSsWMDFOCEdq3uefykqrinYqGy
rFvApMVka2DAowKAsMkRXQqwyDXn/iWyitNQ3qPl6itIvRoF8RXinW4tQ6HI6GuW8SIVBPalc6qe
5x9x97r3qruwTjrWZ0ksZ9TUmcDNAmZ9/wAoao63rR0+w22MLPtAzt6mghmfofiB76LdJBJBIp5D
d/oa7bSdWLIPnpDi9TM8TeKdas51XTbIyxd3J/pXS+E/EFxqNoFu7do5OmD60maHWrnZyDRkn/69
MlEyOR0xntVoNx+FUgYjPxg4FLCuWDZyKQr2RoRnP0qO+nEFpJITgAUzLqZnhu6+0rknOTXpOmwJ
Fbrt5yMmnHYyr6Oxb2ijaKLnPYMClwKQWK3n0hn+lachHOJ9pNNN0apQFzsY10a4v4hXQh0xpieQ
MA1XLZNjhK80cT8OdV+3Wl3A7ZZJCw+hrR1qLcjZ/CsbnfHRnFXseHJArOYYbrUs1uPhYbuatqFP
ByfSkMq3UIINYkto+87Tx6GkSxfsDbflGD7CtTw/pk4nzITtPIFMFudsukh4Rxz71paTpKwP5jcn
0qTRy0NORMDgVCqewoJTJgAoxjntTiTu7fWmFxAcnn1q3EPl+X8KZMi4gKqB1Peob/Tv7Us5bfeU
yOoq4R5nYxqT5I8xieH9J1DTbvyJELRg8ODwa9Ms5mSFV9BWiptbnNVrKdmif7Q1KLg96XIZc5Is
pNL5pqeUrmMtZs0jzV08phchaY00zH1p2ZNxjS1g+LdJOt6U9ssmxjyGp2urDjLlaZzng/wUPDqz
TSTmWeTrjpVjVk3Rvjr2rnqQ5dDvo1XUd2cTqSNk9OKxXGCeKxZ1DAxHTr2q5C/y8GokUhsz54qu
uCxzSQjQ0+FZblR2ro4bZYiMVQ0dBb7Qi5x0qzuG5QOh71LYErDufpSeWrHnimIXbjkUjLkH1Hem
gGxryc+tXI19KYmWegq9YLiLJ7mtqS945cS7QsWehqxA9dEjz4krPSxyZqbFFhGxUm6smjRM55Lk
HvSvNxXTY57kLT+9MNwKdhXGm5FIbkU7Bca1wMEVhaiuQcVhXWiZ14R6tHGanGBI2OtYkqEHjgVy
s9ErEeo6UBsHipKEZs5qpPdRxcbhx70NCSuybTNWihc5brW9Fq6vjMnFSdEIdDRi8RRKygZbHFbu
m6nb3RA3gMegNJhOm0jbXGOoxTuCc1Rz3FyoGKawz9KaAVcZqeMgCmIkB4FaUTbYwB6V00Fuzixb
0SFMuDU8Mlbs4UPeXHeiOXkUrDuXYnyKk3cVk0ap6HMxxketSMhrcwRC0dMMZFMQ3yzSeVQAeUaz
9Vj8uPd271nVV4m+GdpnHX67pCeKyLtBtNcR6xlk9RVeWTb3qRnO6trgttyIfm71z7ai8j7/AJmN
DNqUVa5Yi1AnjynHuBV+11YJhWWXcP8AZNSzqgmaEerSsf3NtIQP4mGKtRavdRgMIpVI9KjU0a7n
R6T43uYQI7qN2Tpkqciu503VVuQGAYZHQjFVc4alPlZrpKGAznpTwxOc9+lWjIlUACnM4XApiLNk
nmvnsK0NvpXZRVonmYqV52GsmanhXitTmFkSiJTSAvwrxUxXIrJ7miOfjf1pzNWxkRlqYWpgJupu
6gQbuahvIxPA6eo4pNXVioS5WmefakGhndH4INZs5DJXA10PaTurmLO21uKpSZqGMoXGnRzBiyjd
9Kx5rcQS428fSkjanLoaOliHGZFB56VswW+mtPufcBsGOAfmxz+tFkd8HpoaUx09FAtFY8DO71qb
Sms/Nb7RbecG6AEjFLS5c78t+p0djpVs9wsyQiJAdyr1rW+zqjErzSe559Sbk9S3C+MA1bjbgE1S
MSXzMVG0vNUI2tPKrAuCMnrVzNd0PhR49W/O2xrHmp4TxVMzQshpIzzQBehqesnuaI5VGzT2bitz
FEbNTC1ADS1JupgG6l3UAc14s04yR/aYRll+8BXCtLncDXFWjys9TCz5oW7GddH5qqNzWDOgQnC8
VSuo1kHzAGkPYopEY2+RWxV23Vzj5G/Kg3jWaNazhZuqNXS6TaKhB2c0jR1nJWOlhOxRxU4YkCgx
Y0OQatQyDbyaaFYe8uF4NY3iC9ltbVGj43NTIL3h7WzMihjzXVQXYYDdW9Cf2WcOJpfaRZ3g9KsQ
mupnCLIabGeaAL0LcVY3cVmzRHIxtUhetzEjZqjLUAIWpN1ArhupwagAfDKQ3Q1594v0c2bm6tx+
5Y8j+6ayrR5onThp8s7dzkZjuqAAmuBnqC7c0iwgtzSA0rWzjfGRW3ZadDu4AoNYo2rfS4v7orSh
05UA2r0pDbsTm29KRottBNyJ0wpJ9KhD7f6U0ikNWffIFBz60zVUW52ow4UcUN6EPcx44WsbgOmd
ua7TT5Bd24KHnFKnLlZFSN4koluLdueRWvp14swweG9DXoxldHlTjYtzGoo25qzEvwtUxas2jRPQ
5CNqkLVsYoYzUzdQA3dSFqBBmnqaBhuqhriCXTpVIzxUz+Fl03aSPI9QTypW2/dz0qKNw3SvOPZR
Mqin8VLKRcs3O4Cuk0w/MDjt1NBtHY6O2IIHY1pxgFaETIRwMkjtVSUEk4570MlFW5bap6dKzWm8
1tqH8aY+hp2FvGoGayNevVt7/ap4xzUvYjqTLtvLPcvJxSaVcyWsxTnFZlnT2t15xHmCtOBYwQy4
B9q7cPO+jPPxFO2qLEj5HWo42+aus4HpoX4W4FTF+KlotbHII9SFuK0MUNZqiLUDE3UbqBBupwag
Bc1DefPbyD/ZND2KjujyPWlKzuPesRZjHJXms9lMuw3StjnmphKDSLTJ7OfE3JrpbO4GQc9qlnRA
3LO82k5NbFvdADkjBoCSHyXIIIzgVQvdRigT7wzjgUzO1jHknlvG7qnp61etYFQDIpCZoqVijzXn
3iC8EmsOuaCGb/heR/s0ijkVv6fbxy3QMg5xmsnuX0Ldzut3+UYTPWk+2GJSe+M1pFtamcldalmx
1eO4XaThhWnC+TXqR2PHqL3maUJ4qRjxSEjj42qXdxVmaGs1MJoATfSbqBAG5p6mgAzTJTmNvpQU
tzzHXY83D/U1zF5FhjgV5r3Pa6FMsV5HWnLe7RhqBRdmTwagN2d2K2rPU1C5LAnPrUs6Iysbdrq6
f3gK0BrUKj/WClY05iM6xLOcQAj3NT29uznfKSzHuadzNu7NSBFjHNSm5VO9IRnajqoWMhTzXFtA
bvUfMduSeg702Qz0rS7FbTToQFwzjJqaGTFyfK5PQViyzUuFmuIdgGABya5u/vTaN5cnUHFUmLoZ
zyskwlgJweSK6zQdUEwVJeGr0aUrxPLxEfe0OrhPAqVjxWhznGRtUwatDK4jNxURbmkAm6jNABup
6tQAFqhupNtu59qUnZFwV5JHnWsHdIx96w5lz15rzT2uhRmt85xWbcxMnUGmZlB0bdxmrNvFIcfM
350mWjbs7YkDJY/jW5ZWW4jikWkdNp9mqYJFaJdEHHakUULu/VB1rLn1Ld/FgetMGYd/qWSQmSa0
/AemS32pfa7piLeLkg9z6UmQtz0W7uQ2cZx0A9BVzR7cAea6j2rPqX0L99KRat5A6Dk1wOoKZ52a
YfMORTYRLujiGWEq6/NWza2yKQVHNdOHerRy4laJo6TTnbbtb8KuM3Fdh5z3OJjbmpt3FaMxAtUZ
agBN1GaQBzTwaAAms3VbjERUGsa07RsdeFpuUuY4jUjljWTKK4j02RE4IpJYFk6imQkVl0xWarsO
mAEcUi0bNnZBR0rWtoguMCkUi21wI161mXuocEKaYXMS4u+pY/hVCSWSY4HT0pEmlouiSahdpEBl
mOceleiwWcNjClvHgJH97Hc1EmVFFi3Czy7mwIl/WtJbjP7uLgd/apQ2VNVvtsBhiPzdK5S4nAuR
nqOCaTGi9pcytPlU+XpmumtWII44rah8ZjiNIXRuWeNvvViQ/LXpJWPJbu7nCRvVkNxVsxBmqJmo
EPiXca0YLMuOlJsuKuPlsSi5IrNuG8s4HWs5VEkbwoOTKsk+FJY4rC1K53k1xTk5O7PSpwVNWRzt
4cms+WpKICtSLTETQj5q0YeBSGiys23pUguGxQMq3E59ayrm4x3yaAKiRtO2WPHcmhruKFxFajzZ
ScA44qRHoXhuMaLpxaUg6hcDLMf4F9KlhuDeXGASIl+8azZslYma68y48m1+7nFW5rtbRNhb5z1p
iMKbUg0zuW4A4rPgb7VdKXOMmpA7HRbMS7nUYiUda0lkQOBngVrS+JGdbWLRt2bAx5BqeQ/LXpnj
PQ4GJ+ashuK0MhWaoWcA0AaOmASMK7jRNPWYBmHyiuepO2x10qfcv6vYxCzYqoGK4HVYVTJrmb5l
c6oaM5TUJ8EgGsG4kLNUHT0M64OaqMMikSRsuKbnFMRLG3zVehOaGNE445NNlnVFpDMu6uie9Vo1
8z5mOAOST2pDK91cNN+5tsrH3PrW54a06KxT7fdrlh/q1Pc+tJ6IUdZGvHPLezMcnBOWbsPap5r3
ylFtbdT1xUWNWzU0/Zbwlgfmx8zGsHWtRHmMqE59aAMyNifvHPc1f0gtPdqkY5JosJHeNci2tktY
euPnNY+oXWZEVJNrZ9aun8SIq/CzodHuriIokhDIR1ronbKZr0o6o8ipoz//2Q==`,$1=`
/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAsICAoIBwsKCQoNDAsNERwSEQ8PESIZGhQcKSQrKigk
JyctMkA3LTA9MCcnOEw5PUNFSElIKzZPVU5GVEBHSEX/2wBDAQwNDREPESESEiFFLicuRUVFRUVF
RUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUX/wAARCASwBLADASIA
AhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAAAAEDAgQFBgf/xABDEAEAAgECBAMECQIDBgUFAQAA
AQIDBBEFEiExE0FRBiJhcRQjMkJSgZGhsWLBJDNyFSVTY3OSNEPR4fAHFjWCokT/xAAYAQEAAwEA
AAAAAAAAAAAAAAAAAQIDBP/EACARAQEBAQADAQEBAQEBAAAAAAABAhEDITFBEjJRIhP/2gAMAwEA
AhEDEQA/APqYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAKNTq8OkxzfNkisQC8eb1XtRNbzXT4q7eU2nu0MntRq/D8StMccvW29ZmdvgjsTyvZjxOLj
+s8WLxn8TFPXs6Oj9oct7c14rkxz22nrB2I49KOdTjelmszfmpMeUxv/AA28OqwZ4icWWtt/SUi4
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmdo3nsPNe0Pt
Fh09Z0+DNWL7+9O/7A3eJcZppsV5raI27esvH6jX5ddM25p79Ilo59VbUZOe2Tm/PeGvfPfT2iKR
PLv1+DO678XmW/a97U6TtOyzTbTF538/T9WjTNecm9a7126tqk3rSYxY5ta1plRZqZNXGjyZcPXl
mZmsx+qjBrsuO16xM7eXRt04JrdTltk5OWJnfaWf0a2lty5MdZnfzSn+WOHiOutFpjHa9e8bQ2fp
+alYy462pk7zXbuxjPesbRS0f6ZZV1ET1tErzXFLHo+A+1ddZf6NrI8PJHa1vN6iJi0bxMTHwfOa
zhzd61v1846utwniM6DUdb3nBaNrVmd9vjC/ZVePYirBqMWppz4rxaPgtEAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAItaK1m09ojcHnvarjM8P0vh49+a/eY8ng9D
h1fGM1rxjtGPfvbzdbjuTJxHX48cTPNltM/KsS9Dw7S49Jp6UpHaGe2vjz1y9J7LYK13vHWe7bj2
ex1tvM80ekuxW3RnW3Vm6P5jRx8H0+OYmMcb+bapo8GKPdpC6bQwtdHU8JpWkdJ/JweL6e23iU67
d4dubSqyVi9Zi0bwIs68XGp36TtEq7ZJmZmevzdbifCKWtbJinkt6eTgZPFw32t+sRurbWVzxs1y
Rv6T8V1NZNPtfq0seTm+Kevr+SZuxXjvaPiV8N4viycto9HseG6+uu08W6Rkj7UPmFck1tE1nlmP
Ld3eA8V8HVVi1pjq6Ma/pnqce/ERMTETHaUrKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAADW19+TQ5p/p2bLS4v04Zmt5VjeQeJ4bjnLqsupv+Ka1+ERLv4reTmcNxcuC
vy3l0qdI2hlr66sT02ot0ZV7qqrInruzrVZLGSZ37JjqgYTG0K5lbaFVhDT1Ub456RPweY4hixWi
eSdpjvD1eWejz3FNHWYtkpvFo9EIseb3tS3SerOms22rfpPqZKzvvHSYUz70TExG6Gdbs2rljeJ/
Mx5L0vEzPaelnOi98c9J2bFNTFpit47+a+PVUvx9T9nOIfT+GV5p3yY/ds67wvsXqpxau+G09Lx+
r3TqrEAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADV4ljnLw3U0jvO
O0fs2lWqyUw6XLkyfYrWZkHldBEV09eveG3Fq1mI3jd4vPrOIaid8G9MP3Y38k6fNrt/rMk9Ou8s
tfXXn49rGWInuy8SO/k5Gl1E3rG/fzbOe94wTy99mbRvTrMOOvNfJWsesywniukrG/jU6fF43WYN
TmtEeJtEQ06aSmK2+bNtEd+qfSO17unF9Hmvy1y13XWyVmN4tExLxVK8PmNq5NrT58zawam+m/yc
0Xj8NpRYSvQZ7xEOdqI3rPozxayNRXe0ct/ON03jmrKB5nV4q1yTO20Obmv4c+cx8HoeI6WZpNoj
q83niYmYscU0r8aJ6T1n49zeJ+Meqm1drb9J+Kd5p136StGVem9l9TbHxLDFp7W7+sS+q1nesT6w
+PcAzVjiGHftzQ+v4f8AJpv6On8jH9ZgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAABp8VrW/C9TW0ztOO3b5Nxp8VmI4bn37TWYB8f1HFtTfUfR9FWJmsdZ9I7MtJxDX5s
d8ta1y0xzteaR2277rcuhycP12SceLxMeWNpjttHwlu8I0mfQ1y+D7k5YmJmY36T36Ka43z/AF1t
cI1ds+qxVj7/AEej19PCw9HJ4NoK4OIU5Y35YmZdzVTGebVZabx5jJS+Tmns81rNLm1Wrzc9rVw4
Yibbem72mXTTS0w0M3BvEta1bWrM95ie5EanY87wXgNOL6XPfxraXLhra/W28bR/dzYzarBqJxRe
bzE7Rt5vWU9n8mPHOGmS0Ypnea1naJb+k9ncNLR7u2y/WcxXO4TOoyUrN6zD0FaW5Y3hu49FiwUi
KxCvLMR0hlW0jn6ukWw3iXjOJzbDlneOj3GaN6zDzfFOH+LE7SRGo83XNSZ2lbG2/WfdlvaT2cy6
rNFInlrv1mfJ37cK4PwTTxOoidRm2+/2/KFuyMp47XB4LivXiunrH2b2iH2qn2K/J8x4fGDNxTSZ
9Nh8OviRvTyfT6xtWI+DeXs9MNZubypASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAOZx6/LoOWPvWiHTcf2hiZ0e8fc2mf1E5+vP/AEeuSd7RC2uKtI6QjHfeINTfwtPf
Jvty9WPfbt/lucP03gxfJf7d/wBoReYpm97zaNeLb4Ims9Nt94auDjem1Wo5PFi1onylS+1o7l8V
bxvtupjDMdNkYtXS1+Stt+m63xImEJ4xjHER2ZxMUjeUTO3VRmydBbjLJqPi08mbeVOXJPq1sl5Q
Vbkz9+rRy35rxHqzmZlVEe/Ez5LRlW5iyfR6zffaIjq1OSNZps2a21rZInafSPJhxGMl9LStLRWM
lorM/A4dkrWbYfLZC2W/7K6eubX6b4RzT+W76K8b7G6X62cu3Sten59nsm3j+OXz3/0ANGIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0OIYfpOHPijvNNo+fdvtXJO18k/
/OwPFYbz2ls3jx8VqW6xMdWPEdP9D4lkx/dt79flLLHbkxTPwY6nt2512ORTRzE2x4/dpE7cvkme
E4IrW3hRMxO8THRtU1FKWtvtvK2upx22rzRCtXkqzh2jtF7ZbT122b01ndnpuWuP3Z3+Ky20qDVv
fauzVy3mejZzNK8dVjqi87KLRLYtXruqvXzkQp7Qoid88R6rcl+WGlW0/Sa22mfhCZOq2x082ix6
jkm822pO8VrPdr4dNObVeDo8XW3uzMbzK+mvxT7szE27cvnu9j7PcNjSaXx8mOIzZevbrEeic5tN
+SZnpt8J4fHD9HXHO3PPW0x/DeBtJxx29vaAJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAKNRim9Z5e89Nl4DzXtVh5babURHrSf7f3ec1+qnDorWrvvt5Pccb0n0zhmWk
Rvevv1+cPE2rGTFNZU26PFfxwa5dVkjelI2772nZnX6bbrEUq3o0d678u8wmuDL2ittvVjXdneeK
cGv4jpJ6U56+kS7+j118+GLXpakzHaWlp9NNY3tv+bbiYiNoQy1y30uyZJlrWmZnuym6q1iIJnop
yW2Te8bdWnnypQqzZOadokiIpSZntWN5lrxki19vNRxrUeBwnNNd+fJEY6/OejXLn3Xe/wDp9wyn
E8uo4lqqxblv7lJ26T6vpD5X7G8QycKzeBMbzMRM1/FH/wA/h9QwZ6ajDXLitvWzRgsAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeL45w+dDrZvWv1OWd4+E+j2jX
12jx67TWw5Y6T2nzifU+rZ1y9eHwzDYxxEy18+DJodXfT5o96vafWPVbjyxDn1OOzHudbM0rt2UW
iI69mVtRXZq5tREb9VUoy2iIlRbJ0UX1VZ6btTLrI7V6yk62M2oisT1c7JmtkttVMUyZp6x0beDS
RWOvdKijDimvWd3G9pNRMfRcNfvZOb9Hpb0itJeP47k/3hgjaZnbaP1XxWW3T0movbNS0W645nbf
0nrMPpXs3xamoxdJiLbe/X1n8Uf3fKsOTw4jbaXo+EarJhtGTHMxeJ6xH7Sti9Zaj6x3HM4NxXFx
DS1mtoi8dJrv2l011QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AGjxLhODieOIye7kr9m8d4eM4to9RwjPXFa0ZIvG9bR0fQXmPbDFvTTZPOJmEWS/V8bs9R43NxLL
G8eFbePg1bajU5/s0l1ceKLx1hbjwRE9mOpx0y2uRTSZsm3PMw2aaKtIjo6kYo9EXpET0hVLXxYK
xC6MZvyx1lFs0RHfaPiCnU12pLyHGNDbUajBekWma2npWN3p8+opa20e9LSyZLxExTlpM+vdOdcZ
a9tPS8MyUvFrzWlI6727u1pYxYrbVmb7x+TQx6au3Nqcl7/0rcmW9axGnwZJj1novmxnZXV0fFp4
ZxLBPgTGK8xzXr5fOH0bFlpmxVyY7Rato3iYfNuG2x56Wrqa8s2jz+7Lu8O12bS6jkwzN6THNNI6
tvrN68Y4rxlx1vHa0bskAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAA4XtTTm0OKfTJ/aXdcL2pyRGjwU362yb7fkJz9eTxxyZJjyltRXzUZK7TFtl9Lbwy06YzrHwa+
fJFd/wCVt8m0bQ0eS2qzcm+1K/an+zNZFL5M1pjFXeI72ky48eGnPkvNp27+TPU6nHpMfLXaIjpE
erk5dRMxOfN1mPeisfshW1ne1a1577Y6x5R3U0zze31FOWI6ze0byU098kRlzbxM9qrMlPDpyRMR
Md5Vt/Ihp5898mWZm1pjftE91uCt7fCI7dWeHDEW3t723l6rslqxWZnasR+SYhFbzhnfxJ2jyeq9
lcGXWZcmW0zWKxHLaI7794eJx5fpfEKabT8t8l5isddo3l9S4VjrwrRUwzSJt3tav3pdOL6Y6dXD
j8HFWm+/KsU4NRXPvtWazHquWVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAa+fXYNP9u8b+kdZBsDkZOO135cWOZn4y5Wu4xqctbe9y19Kp4njt6vi+PDm8DFMWybbzPlV
5PiGtz67UxbNbeKTtWIjaIXYpnwuaftT5tXJT3vmi1pMsrU5qIrG1V1a+5DCa7b9GFbRr5J6Wnbt
Cu+Wmk0m8956z8ZWZNorbfzcbX5rZslazPux3hUt41NTntktObJ13+zX1bek01r4/HzVm0bxPXy/
+bNfDgjVa2uOY92kdfg6ufJOKvLXtttVVSqbcta2vM7zXtHpLQy5ZtMd+vWd+7Zy3mdJHXra3f0c
vUarw7zFY5rT2hH1Lavnrgx81p3U49Pk4nE5L35MO/StfNRXR5tXnrS8W67WvfyiPSPi7uLHFK1p
jrtSsbR5Lc4RzsXBaYreP4l45esRD2HD9fnw6evvWvO3Tfr0aGk0U55ra0TFInv6uzgrXFXlx0i0
77RPlC83Yj+JW7oddqr6vHzTTw9/f6dod+L1t9m0T8pcbFSmPHER3892W0zPuz+jSbVvidkcqmfP
Sel7bekrI4n4dZnPWIrHeYnZee2Wpy8dEaml4npNZblw5qzb8M9JbYgAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAABEzFYmZnaI7yCXL1XGa0jJXT0571nbee27DiXEprp8nhbxG20W8
5cbD0ikfnKO+urTPvjoZdXqctdsmTaPSvRpWmsdZ6yztfaGplvv3lWW1tyRlz1x0vkn7Vo5atTNe
Y0+1o79V2KsZsvX7Ne5mwxnyTNvsx2iGneM/rCdRSuOsTasTt5kRFtpjqmOH4t4nk7estiMNa97R
Hwhna0iuKTEdmGWa4672nZtRele1N59Zlq6vLOSsYorEc07qcW65euzRvtXvPZy52naZ7ujr6fXV
rWdukREK8+njHgmZmPc67bq6ivVWhxxgxZLztNrT1mZ/SP4VZs0zaOvfp84WUtNsXLvtv3699+rU
z7+Jtt5qURqMnPpctaR1rMSw4ZoK57eNk6xHaJRh97Ltt7lo5Z+L1HAPZvVauZ2nFTSzMTzeJEz8
to6xPfvsZntPZ9rXxabmxzefdrv0j1dXh/BcmstW1qxTHHasR3+b0GPhGl+kWmd64dNEVjf73T7X
y8vy+Ddx6O3iRakxTH5RXrMw1/lX+3Itw2MFIraN48qRHdZi0cUjmmPen9noox1iO0fNzdXEYrTt
stcmd9aX0bJ+HePmiKTitO8TMLZ1cVjrMfqpz6ys4pjfrPRWZ9rXXptUit6zO+23VyaRHEc05L1/
w9J9ys/en1ljqdVbwYw452tlnl3jyjzbmmiMeKtYjpEbLeTXPUU8ee/+qjJpsV5rbkrFqzE1tEbT
DpYNbW21Mnu29fKWna0KbqTdjXXjld0cvQ63ltGHNPSfs2n+HUbS9c2s2UASqAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAOVxPWe99HpP8ArmP4b+r1EabT3yT3iOkesvMVtN7za07zad5l
XV5GmM9vVfEstvDx0jtaVVMlq+UJ18b5cMRvPeSuK87bUt+i2Z3PtG7zXpjkzXt6R+TXyTMzvM7t
ydHqZ+zhv1+Cv/ZuqvPTHMfOYaTMil1a1K2vHSLTELq2v+KWzThGo84rH5rq8JzedqR+ZeI7WnOS
34pYTafWXR/2Pln/AMyrKOCWnvmiPyR6O1y9585lhWJvl557Q6eo4T4dYiMvW3b3UanhldHpJtGX
e09unmjsT7eb1l4trI2t0hsZfrdNO0bzy+nzU20/+NmkzO9esz+TZxWis9dttvPv+Tn21jjaW8zn
26bTG3mp1M/Wzv3t0jyWXiKZJmsTERaZhXXDbNl8WaztWenxZLstPp5pau8frDtVrNMM5cfTfpMf
3aunxxbes9d/R09Dp8ebJi09ptFr3jtt2WyrW9wy1Jx132mK+Xq9PotT0iIU19ntLtExa3T47T+q
6nBaYvsZstZ+cT/LeMnUi0TXffo1s2m8Ws2/OIMWk5Jib5L328rS2t94Sh5TV4ppklpW6PT6rh+P
NbebTHyas8E081mZy5P2W6OFhjxNTE/hr/LoRO0Kvo9dPqctKzMxEx1la5t3tdnjnMs4noievcrO
yZjeFF1OSnNV0OG62cn1GWffj7Mz5w05joovzY7xes7TE7w0xrjPeex6Ua+j1UarBFu1o6Wj0lsN
3JfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrU5o0+nvlt92P3BxuM6nxNRGCs+7Tv8
2hToxm1r3m9utrTvMsonqyt7XTmcja0u3O6FMfi5t/u0/lzdJM81p9O3zdvHTwsUR5+bfPqOfX1h
dqV+3O7bs1+T31oqmI3TEM4rvCdkDGIIhlFd2daboS0NXG2bD6bufxXU1vlmu/u4us/N0+L1tTSx
kr9qk7w89j1FNZMV3jxLzvaJ8mer+LSOZqK2xZotbvljfr/89U453rXt9lse081xZtNjx7TGKu0t
DHlrevSevaN5Y6+tJ8c7VRNMt63n3ub+6/R54rERMztDYy4a5omclYmfxKcenrjtHLvtPrCnVmdb
eFe3JXmjy6eS/DrMuLVYsta9Mdt++6qLxO+0dEc8UmInr18iUfReHcXrqccb9Z27Q61Lb13eJ9nc
1Z35rTvE9avY4bTkpG8xEfB05vYxqybc07R281naGMREdoT5JQqy9mply7Q3bV3iXG1eXw7TWSka
c258t7+tpT5/BjT7MfHqndz12Z+M4lMMKyziUJJiN1WSu9fku23RaOgKNJqbaTU1t9yelo+D0cTE
xEx1iXmM1Nt3W4PqvFweDaffx9vjDbGvxz+TP66QDRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAOJxzU73rp6z296zsZMkYsdr2naKxvLyObNOfNfJbvad1dXkaeOdpvsc2yuZVzfbfqybutwu
s5s8R92J3dvJb3tnO4HSMegtmt3nfZvYp8SZl0z45NfSK7onH1bNcfRFqnUKJr0Y7dVtq7prjEsK
0XVpEM6028mW20IHK41aPo3J6zs4ODhdcvPnvExFevNXpMOrxi/PlrTee7PLX6Pwa09uaNlKtHg9
dM3z5d7ReOu02nu0JzZMfblrv5R5uvrcdImZ26T1mYhxs1Os7RH93PZ7axuafNfLitvbaYU3yZYt
PXs9NwHhui1HBa5LVicsb81onrEuVqNNSuS8Y67dZ6xPZa59Il9uX41vEitImZme3q2Kxbxora0T
Md/ROSa4Ztkj7c9OafL5LuGYubmyX3iu/TfbdSfVnpvZLT/XZK233+Mbbva1xRXyiPk8pwbH4N6T
adq5a71n0tD1WDL4tPe6Xr0tDpz8YVnJHWEXYxbqlBedoef4tW0XraO09HdyztSZcbUz43C+ee9b
SVMaeOfqq7+jGckQ1Yz7+7v2RN/WXPXZPjci2+2yyJaVMuy+uSJlA2d+pNoVRbeDcSxyTE+TDDlt
pdRXLTynrHrDOyiyZeVFnY9TjvXJjres71tG8MnJ4Nqt4tp7T1jrV1nRL1x2cvABKAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAHJ49qfD09cNZ97JPX5PPw2uI6j6Vrsl/ux7tfk1mWr7dOM8iLdm
vfebREefRsWldw7SxqNbWbR7lPesrn3Vteo7dYjDpMGCvfbeXQ0uLlxRLRxROfUc34p6fCHYrXlr
EejqrjY8uzCYW7MZjdVKqK9VlaxCYrsnYExBMRMJRPZA8/xPHtmpP9W2xx76vhWOInvt/C7ike7N
vwzE9kcapGfhlevTaFbFo8RqJ5vy8/RoW09ek0msxHfp3dzNoLzp4zUmZpMbT8HJyYJi20X2n0lh
ZY1li/RaidBF4w2mK3jrHaFGp1lN+tptPp5IjBkid5mIp16TKu0abBPv33vPlM7z+iPdFNcWXU5I
tkrNce/b1W5db1nTaf3ax9q0fxDW1ebNk2phty1mOu09VOm8W19orEz23j1TwfSeERFuEYMddptW
d43dvBn21eKJ75KbW+cf/JcTgMxXTb3nbljz+TpcPmc2uyZO1KRtVtGVdi0bx07qJnllsRO6rNTe
N4XVamsy8mnvPwc3R2jPwe8TPbdlxXNOPSZfhWWpwO85OFzv57qrODkzeHntSe8Sn6Rv0a3EZ218
8nXekfr1a0ZLVnqx19dWb6demXybOO7lYMvNMdW9S/VVLo0us7tPHdtUtEwJiZU3jq2Jhham8CVG
PNODNTJXvWd3qcWSubFXJWd4tG8PK3pPd1OB6veLaa89Y61/u2xfxh5c/rsgNHOAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAANLimq+i6O0xPv392rdeZ4rq/pOqnlnelOkIt5F8Z7Wj27I2I6sb25YY
V1ImY3dbQ08LRc23vZp2j5OJG+XJWle9p2h6HHtbJXFT7OOIpX+7TxT31j5rycdTh+Dpz+XaG/sw
w18PHWseULN2trBE9UcrJKBhFU7JAQi0dEomegNDUYovM7x3jb5tO1ZvpbaTLtzRExWfWPJ08kbT
Ex5NXWYYyV5omYtHWJieyeDzuizfRs19Jn6TM7Ru1uMcJxZqTkw+5f4ebqa7SV1MR4tdrx2vEfy1
axqsNOTLjnLXytVXi3Xj8+nmsxTLM16d5npPyUzpekTtSK+U7vS6vQ/SYmK1vWPS1HOn2dvvvvE/
tDO5XlcO+LbfHSd/W3o6/BdDOXPTnj3Kz38rS6Wm4FNrRyRzTH3p6RH/AKvR8L4dXSzE3jmtHn5I
mbfqLV+m4dbLSsZInHjr3iI6zLpYaxS01rHuxHRHiT9mv6s67Vj1aqL6326MrWiYa+/Q54BxPaGe
XRZpj8MquB4+Xg8zPnB7SX30to379GxpK1xcHiKz5IS8xr8PLPixH2bftLTy05o6dHYyVjLhy0t1
izjZa3pMVv3iO/qz1G2L+NbSajbNyW7xLsY8kTDz+fJXFqKZN4iZnafi6WHL0iYlStI7OO+7axW2
crFl7dW9jvE9ULN+J3ZbdFGOy+AYWpEqN7afNXLj+1Wd23KrJVMvCzseh0+auow1yU7WhY4fCdV4
OadPefcvPuz6S7jol649Tl4AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV581NPhtkvO0R+4NPi2
r8DB4dJ9+/7Q83Po2NTqLanNbLfvPaPSFDHV66sZ5ET0hRknyW2lTtMyouz0c8usx2n7s7vScKwx
zc1vu/y85p+maJh6Th+SOWeveXR4/wDLm8v+nX5mUWa9bbrInolmu5jdTNkxYFk2Isr3TuCzeGMz
+THdEyDDJO9Ja823rt2XWnya946pGvktDXta0ztWu/ybvLE9dkcoOf4GbJPWK1j49VmLh9JtE33v
Mevb9G7WsW8l1ccREISophiJ2jpDYpijbaOjOuOJ8ujOdqxsgVcsUjaETYvbaFFrgu5lVsm0yUtu
ryg43H5m+GIj1XcJzePoL4pnrWGtxmfchr8JvfHS1622if3QljzTTLes+qrNjrkiYtCzPMxnm095
YZJ6boS5teB49Tqscza97VtvWvlv8V/FOF34RrIxTM2xXjelp/eHoeA6XnzReY3ivX/0dfivDcfE
9HbDbaLx1pb0lOs+jO7K8Lis3cN+0NKcd9PmthzV5clJ2mF9J9GHHVL108dm1SznYr/Ft0tuhLb8
mNohFbMhLWy0mJ3rPXvDvcO1karBG8/WV6Wj+7kWrvDDBlvpdRGSnbzj1hpjX4z8mOx6UYYstc2O
uSk71tG7Ns5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeXneJ62dVl5KT9VTt8Z9W9xbWclPo+O
fft9qfSHEU1pv48ftYST23ZTDC/p0YtlVuvVjMbM5+LCZjYGWGdrTPxiHY4ffaf3cjTxz1v6xMS6
Olty2iXVj/Dk8n+ndrkhnGRo1v8AFdW3RCrZ5uiYsqrboncSu508yjmZRYQt50TfowYTbYGVrKrT
uTZjvukQnYhMIGVY2ZxPVWyrHVCWzXpVXkt3TE7Va+W4K7X3jv1auTNy3jdba0RZpamfroQN7Hk3
6wr1GTaN2OOJiu6Mu98NvgDi8Wy74d/yZ8PiPAiO2zU4nb6qIn1bugjfFE/ASp1ke9u15mbbRDZ1
Mb823kx0Ontn1OOkedoJCvT8I03gaKsz9q/WW+isRWsVjtHRKyrhe0XCfpWL6Vgr9fjjrEfeh5fF
feH0V5Dj3DPoOo+k4a/U5J6xH3ZZ7z3228evytOk7NvFbo0cdols47bSybt7HbddHVqUs2aW3Qnq
xVeu8LILR3SlZw3V/R8nhXn6u0/pLuPMXjeHT4Zruf6jLPvR9mZ8/g1xrvpz+TH7HUAaMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAABRq9VXSYJyW79qx6yvmdo3l5viGs+maqYrO+OnSvx+KLeLZz2te1rZL2v
ed7WneZYWnZl5K72YV1xEyxmeqJljzIEWlVkszvbZp5soN3h2SJz3pP3odCnuWmPRxuERfJrZmtZ
mtY96fR28kbX3dXj/wAuTyf6bmK+9YX1s0cNtm3Sd4LFY2K23W1s16StiUJW7bp22RW3RluBuruz
mWEgrmCGWyNkoExKE1QlPmsqRDKeyBjaejWy2W3ttDUyz1QKslvehVqKTNosyyTvELabXptIJpaP
B39Ia2mz+JGpr51jdZefDx2hzuHZObNq58poJaGtjxJ2+LoaKP8ADRPo5+T3skx5OhpOmC0fBNQ0
5yTbn+bt8A0u9raiY6RHLVwY62mI6zMvaaHBGn0mPHt1iN5+aYVsACBXqMFNTgviyxvW0bSsAeE1
mkvw7V2w5Ote9besJx2er4rw2nEdNNekZa9aW9JeQjnxZLYskTW9Z2mJY7zz26fHrrdpbZsY7NGt
mxjvso1b9NmUwpx33XRO4K7VUTE1nmrvEx1bVo2VWiJE/XY4frY1WPlt0y17x6/FuPM0m+HJGTHO
1qu9pNVXVYt46Xj7VfRtnXXL5MfzexsALsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHM4jxOMFJphmJv529Dq
ZLfjDjPEIx450+K3v2+1MeUOHSOWFc3nJkmZnf4yujpVlqunOeFpV2nctLCZUXRM7MJtsWlRkv3Q
ky5NmpWt9RnrixVm17TtEQnJabXisRMzPSIew9n+CRoccajURvqLx5/chfOest642OGcIpoOG2w7
ROW9d72+LQvXevyejcPUU5M+SvpLeOataraw2a0dLbLqTtK1G3Es4lVWWUSoldFtmcXUbpidgXzK
GEW3TuCUSncnsDFMMLSms9EC6J6FpVzbZE5ALy0809ZbFr9GtfrEoFMzuuwz0Ueey3HbaBLDXe7i
tMOfwWnP9I+NZbuttvhs1uBRtXPb4SDm3iIvf57N7Dbl0VrS5+XrltEd+Z1Jx7cNms9N4TURRw3T
+PrcO3WszEvZOD7P6aYiMlvu16S7y1QAIAABxOPcLnUY/pWCv1tI96I+9DtgmXl68Biy7/NtUu3+
O8HnFa2s0tfd75KR5fFyMWTdhrPHVnX9R0cd21S3Rzsdm1iuqs256wrmGcT0RYSx5d047X02SMmO
esd49YRE9WcdSXhZ2O1p89NRji9J+cei1xMc3wXi+KZj1j1dTTaqmor06WjvWW+ddcu8XK8BZmAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAMMmWmKu952UZ9XFZmuP3revlDTtzWnmvO8q3XGmfHb9ZanV3yxtWeWn7y4es
vPNtDqZJ6Ts5mppvdl/XXRMyfGvSNlu/RVvtOzLfoipLT1VTKbSpvfogRkvtDVyZOhkyvQcA4Dzz
XV6yvTvTHMfvK+c9U3rkW+zvA/D21urr789cdZ8vi9KDb45rejl8Rry6iJ/FV1HP4vXbBTJEfYt1
+UpiHM295bXsqrO9l8QkZ0lZEqqLeyBZHZLGvZkhIndADKJ3TMoqWQMZ6pjsxll2jsCLSrmU2lFY
36gieyu0LJk3jbsga0wdqzK20QpyztQGprL/AFMrOE05NLkt6qdVWZxNrSe5o9vWBLiUjnzXn0vL
q555dHt8HOwV928/1z/LpzXxbYccRvzTB+jucOwxh0dI22mY3ltIrHLWIjyjZKyoAAAAACJiJjaY
3iXleM8InR5J1GniZw2n3oj7s/8Ao9Wi9a3rNbRE1mNpifNFnVs65XhcWTdt47bnFuF24dm8TFEz
p7T0/pn0a+HJux1OOrOux08d1ndqY7tillVkzExLOk7yd4YxGwluViJhE45raL0na0dtlWO0+bZr
1TKi+2zptZGTamT3b/tLacvJjiY3XaTWdYxZZ6/dtPm1zrv1z78fPcbwC7EAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhkyV
xUm152iAZWtFazNp2iGhm1Vss8uP3aevnKrNntqLdelI7VRHRnrX/HRjx/tZREVjZXeybW6KbWZt
pCZ6S08tN7Nmbb7zCrJtyoS5145bSx5mWafelr3tsKmS/o08uXyhlly7RPV2+AcBnPNdZrK+53pS
fP4ytnPVda4y4BwHxOXV6uvu96Unz+MvVxG0bQRG0bR2G0nHLb2gCUDX12LxtFmpHeazt82wT1gH
mMN4tWs+rcr2aEV8DU5sM/cvO3yb+O0csLUTSdrLphRE8tlkZI7Atr2ZMazDJVKTYSCawi7Ksq7z
1QERvLK3ZGPrKbyCrbdnMcsbeaa18/RhvvM7oGEwTG0JmYYTIML22a2e28xELM19oURPNO4lOem+
n3ZY5+prVnMc2GYU4/L4A0a15cNf6rz/AC6fC6+NxCPOuOu/5tHJTbHj+F5/l1+BYumXJMd9o3/d
MRXYASgAAAAAAABhlxUz4rY8lYtS0bTEvH8R4ffhmo6bzhtPu29Pg9mq1Gnx6rDbFmrzVsizq2df
zXkMWTeIbNL7tbXaHLwzUctvexWn3bmPL8WFnHVL326VZ91MfFVjvvVlz79kLrcf2m7j7bNHH3bl
J2SirLQoy4t1++7G0dBC/RanxI8PJPv18/WG241+alovSdrV6w6mDNGfFF4/OPSW2b1zeTPL1aAs
zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAVZ9RXBTe3WZ7R6iZOpzZq4ac1p+UermZMl89+a/byj0Ra9815ted59PQ32hlrXXRjH
DpCLX6ML5NlNsm/ZRqstfdXzbsZt06sLZNvNB1Za8RDWyZdo7q8udq5Mu/mIMt4md2lmy7JzZuWJ
dHgfBL8RvGo1MTXTxPSPx/8AstJ1XWpIs4BwSdbeNVqq/URPu0n73/s9hEREbRG0QUpWlYrWIisR
tER5JbSccur2gCUAAAAPM8Sry8Uyz67fwuxbzVPGsE49XGbvF42V4M0TEL33ERnktsxpk3sumK2j
admFdPFZ33VS2Mdui2J3UU6LYlFSsN2O5NkCyJ6K7T1TEsbAsxdpReerKkTFGMxvYEz0rsqtbbpC
b2VT1QEzuwtbaGUxspuJU3neWdKoiu8rq12gCI92YatLcublnzbEz1aOptyZqTuDHLfxN6R0+t5X
qdJhjBp6UiPLeXl9NSMnEKxHa1+bb8nrlvxUAAAAAAAAAAABTqtNj1eC2LLXeto/R43VabJw/VTh
ydY+7b1h7ho8V4dXiGlmvbJXrS3xRZ1fGv5rzeHN02bEW3cys3xZJx5ImtqztMS3MeTeGFjqlb2O
8btql3NpbZtYsnSBLeiWfdTjtutid+ghherHS5p0+f3vsX6T8Fkw181d4lMvEWdnHaGnw/UeNh5L
T7+PpPxbjdyWcvAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAo1Oprgr63ntAmTqdRqK4K9etp7Q5d7Wy2m953lNrWyWm953mVd77R0
Za1104xxlN9lV8qnJl2a9s3xUXX2ybsJyRDWtl3YWydEC+2VRkzeW6q+T4tbJm+KRdfK1cmWZnlr
vNp7RC/R6HU8SycmCk7ed57Q9ZwvgOn4fEXtHi5/O9o7fJaZ6z1uRyOEezVstq6jiEbV71xevzer
rWtKxWsRFY6REeSRrJxz22gCUAAAAAANbX6aNVpL0npMRvWfSXlKamsRMVvXm+EvZXjmpaPWHzfL
oNRjzXicfWJ8phfPxFejx72x7xMzK+sXiNoiXlq+Pi6fWV/VfTNqfLJl/WTg9Pji8R70LqvMV1Gq
j/zcv6yz+lanzzZP1lWpelTET6S81Gp1P/Gyf90s412rjtnyfqql6asREdWM9+jz9eJ6yP8Az7uh
odZqMt458tpB1JvEViI3/RhzRt13/R1MNaziiZiJn5K9ZNceKZiIiQcu/WekT+iYrWI3lzdTrs+8
8uW0fJzcur1Np/zsn6g79phVaIeetqNR/wAXJ/3SwnUaj/i5P+6UD0ldonum161h5mNRqP8Ai5P1
lNtRqJjacuT9Qd22WN5aGeZyZd/KHJy59RHbLf8AVq31Gp/4uT9ZEvS8Lr/vSs2npzRtL1z53wK+
oza/HW2XJNd99pmX0Rb8VAAAAAAAAAAAAAAcHj/C5yV+l4I9+v24jzj1cLFk8nu5jeNpeW41wmdL
knU6ev1Vp96sfdn/ANFdTrXG+eq1q5F2LLtbZoY8m8d11bbSydErsYsm+zZrO/zcnBm226uhiyRK
EtrvCrJDOJTeu8A1MWX6Lqq5N/dnpb5O5ExMbx2cPNTeJb/DM/iYPDtPvY+nzhri/jDy5/W6AuwA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAa2p1UYo5adbz+xbxMlvqJ1OqjDHLXree0ejmzNrWm953tPmTPWbWneZ7yoy5YhjrXXTjH8s75N
mtkyxt0VZM2/m175N1V03yTKubMLXVXybeYLLX2VXy7eam+b0bOg4VquJW+rry4/O9uyZOq3UjVm
9r25axMzPaIdvhns1kzbZddM0p5Y47z8/R2+HcF03Doi1a8+Xzvbv+TotJnjDXkt+K8ODHp8cY8N
IpSO0RCwF2YAAAAAAAAACvUZYw6fJkntWN3k8dfHz2vLucdz8mkjFE9bz1+UOZosX1UzPm0nqI/W
MYo9FlcPNklfFGeH/NshLGun+Cz6PtHZtVZWlRLS+jxPkRpIn7rdoupHTdA5s6SI+7H6Mfo+32Y2
+To3neSIiZ7A0IjPXpXLePlMotGW3272t85datKzHZjbTVnsDj+FG/2Y/RlGP4R+jo20u7H6N1Ql
o+H8I/REY957R+jpfReiK6eOYHLtj2tttH6KrY/6Y/R2c+kjeJiFVtLG24hxpw7/AHY/RRkw9O37
O99Hrt1YX0tfOBLjcGp4XF8c+u8fs9c4dcVcGemSI61nd3IneN1orQAAAAAAAAAAAAABFqxes1tE
TE9JiUgPKcX4RbRXnNgiZwWnrH4XPi28PdXpW9JraImsxtMS8pxXhF9DecuGJtgmf+1TWW2N/la1
L7N7T5e3Vy6W3hsYcvLbqzbO9jvvCzvDR0+XeO7crO6FmGSvRThy/RtVXJ92elvk2rRvDUzU7pl4
izsd2J3jeBpcNz+Lg5LT7+Pp+Xk3W7js5eAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs0NTrN96Yp6edkW8Wzm6+LNTq4pvTHO9vOfRoWtt
1mes95YWvs1s2fZldddOczLPLn2ju0MmebT3YZc2/mpm3qqllN1drsbZIhr3yzvtHf4AsvlYYseb
V5Yx4KTe0+UQ6nDvZ3UazbJqd8OKeu33peq0eh0+hxcmnxxWPOfOfm0mP+steT/ji8N9mKY9suum
L37+HHaPm9DSlaVitKxWsdohI0Y22gAgAAAAAAAAAABXnyRhw3yT92Nwef4xm8bVzET0rPJH5d12
CvLhho3rN9RWs9Z23n5y6O21YhrVYbdGOCfrrLPJRpv863zVS6FS09SvZj3lVZZRdPSqmnSWdrIE
ebOkK4ldTsgW1WKqd1oMZhEVZyRAImOjGI6rJ7IiATNd46qL02bHkiaxaoNGY2n4ImPgtyV2n0Vo
Gvlx7x2beiyTk08RPevSVUxux00+Fn2n7N+n5rRFb4AAAAAAAAAAAAAAACLVres1tETWekxKQHlu
L8InR2nPp43wz3j8P/s5dLveWrFqzW0bxPeJeV4xwmdFec+CJnDM9Y/CrY1xv8qvTZ+WYdbDk5oh
5zHk283U0eo3jaZZ2N5XYjrCnLSJhOK+8d1kxvCqzSwZvousrb7k9LfJ3nB1OLeJdLhufx9LEWn3
6e7LXN9Ofy5/W4AuxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAETaKxMzO0Qi9646Ta07RDmZ9VbPbaOlI7Qi3i+c3TPUaqcu9adKfy0722ZXvFa9
XO1OrjrESxt66ZJmcjPUanlidmhkzTZVfLN5VWvsC2b7R3U3yqrZZtO1esz2h2+F+zWTUcuXXTNM
feKR3n5+iZLVbqRzNJo9TxHLyaekz62ntD1fDOA6fQbZL7Zc/wCKY6R8odLBgxabFGPDSKUjyiFj
SZkYa3aALKAAAAAAAAAAAAAADQ4pl2pTFH3p3n5Q33E12Tn1eSfKscsLZ+orS00eJqbW+Lfnu1tF
XaJnZsz3WpCfsyp00fWSvmPdVYOmSUDd8kR3InoQosy7JmUX7MdwZ17ro7KKT1XRPRAsrO0rYndr
79V1ZBaQiJ6JgCSIJASwrO07MpV2nqBlrv1a1o2bf2qtfLXaQUTO0sb05o3jv3ZXhjS20xEphW5h
yeJjjf7UdJWNKLziyRePsz0lux1SgAQAAAAAAAAAAAAAADG9K5KTS8Rato2mJZAPIcU4ZbQZuekT
OC3afT4NXFkmlntc2GmoxWx5K71tG0vHa/RX0GpmlutJ61t6wrY2xr8dXS5uesN+tt4ef0eaa223
2dnHk3juyreM81OaFGiy/RtZET9jJ7s/2bdutd2jqKeic3iNTsd8a2h1H0jTVtP2o6W+bZbOO+gA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABje9cdJt
adohGTLXFTmvO0fy52bJfU23t0pHaqLeL5xdK9Rnvqb+cUjtCi94xxvK3JetKuHrdZvaa1ljb10y
cnIs1Wt3naJc++TmVWvMz1YWybfMGdsm3eWek0mo4jm8PT0mfW3lDf4V7P5tdMZdRviwfvZ6/TaX
DpMMYsFIpWPTzXmf+steT8jn8L4Dp+HxF77Zc/4pjpHydYGjC3oAAAAAAAAAAAAAAAAADG9opS1p
7RG7zszN6WtPe0zLua+3Joss/wBOzhzG2OsL5+IrY09dsSyYRijbHEMvOChb7KjF0yS2LQ169Mso
S24noyrPVXWejNVKbTuw3T3REdQWU6LYlVvsyiUDPfqupPRr79VuOQX1lZEqoZxIMksd0gT2VT0l
bPZVbuCaW8i8bwr32WxbcGnkjaZa9p2ndv5qbw5+aNugLItF6TEtvTX5sMb969HMpfazc0d9stqe
vVZDdAQAAAAAAAAAAAAAAAADV1+iprtPOO/2u9bektoB4TJTJpNRbHkja1Z6uto8viVht+0HDvpG
H6Tjj6zHHvbecONw7Ltfkmeqmo6Ma69DXbbZTkr1mGWO3RneOaGbZRoM30fVzSelMnT83aef1FZ7
x3h1tBqfpGnjmn369LNc3sc3kzy9bQCzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAa+q1dNNXr7157VhGp1Xh70x+9f9ocy283m1p5rz3mVbrjXHjt91lz
5c9+fJ1nyjyhdM8lZlOOIiqrUXikd+kMreunnI5XEdX4dZiZcG+XmtNl/F83PeeWWHDOGanieSKY
q+5H2rz2hMzWd1Iqx1yajJXHhrNrW6REeb1nCPZumn2z62Ivl7xTyr/6uhwzhGn4Zj2xxzZJ+1kn
vLoNJnjHW7TbbsAszAAAAAAAAAAAAAAAAAAAAaPFrbaSK/itEOXt0rDf4xb/ACa/GZacRvaF58Q2
IjasQnzPIhCU92tMbZGzHmotG10C6nZkwpPRmipIllEbMIZIE7solgmJBnCyk9VMM6z1BtVllEqK
z0WRILYlluriWcSDJVbusV27gwInaSWM9ECyZ3hqamnSWxFmOSOaqRx725bNnSZNs9J+OynVY+WZ
YYr7TE+nVaIr0Ais81Yn1hKAAAAAAAAAAAAAAAAAABExvG09peU4nov9n66L0j6q/WPg9Y1OJaON
ZpL0+9HWs/EWzeVz9PbmrEtnyc3h9reHy26TWdnSr2YX6657ijLXpLX0+onSamL/AHJ6W+Tbv2aW
ekTv16JzeI1Ox6KJiYiY7Slz+E6jxdN4dp3vj6fl5Og2clnKACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeQRMxEbzO0Q08uqtkma4ulfO3r8lefUePMxWf
cjy9WvlzVxV6T1Z61/x0Y8f7Wc7Ur1lqVy+LqOWJ2hp6rXddon5rOF1tfmz5OkT0qzb8dWbxjp1c
biuuilJ5Z6r+IcQrixzEy8zl1E6rNt1tMztFY81sztU1eRucN4ffi2p5esRM72n0h7rS6XFo8FcO
CkVpX082nwXh3+z9FWLxHi36328vg6TZyW9ABAAAAAAAAAAAAAAAAAAAAAADj8Unm1tK/hqppHvw
y1k8/EMk+m0GOPeafiFpCZYwolnXspvHvLa9mF46gmnZmwozRUiUCBKYYsoBLOFbKAX0llEqqyzi
QXRLOJVRLOOwLIljZMEgrlhKyYYTAK5nZPN0RZjugUanHzVlz6xtLq361c+9eXItPpXX0dubTU+E
bL2lw2++O1fSW6m/VYAISAAAAAAAAAAAAAAAAAp1GbwcfTreelYEydcuMcRrM/L9nnlsV6wqpi2r
tv133mfWVkRyRtEdGFva7MzkYZNoamWN4bV4mYa9qztKIujhVppxGI8r1mJegeZpknBqKZY+7L0t
LRekWrO8TG8Ns/HJ5ZypAWZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAADS12fp4VJ6z9qVuq1HgUiI+3bpDl589cOKZmevqprXPTbx477rDJlrhr1nq4+s182tMRP
RqaziXiZJrWekNG17ZbxWJ336M5LXRbI3dLTJrs07RMY6fan1dHLrowY+X7MVjt6N3R6Kul0EbWm
s7bz8Z+LnabQX43r7Y53php/mXj+Dnv0f1JO1x/8ZxbUzj02O15mfLtD13AvZqnDds+pmMmo26el
XX0Wh0/D8EYtNjilY7+s/NstpOOTW7QBKgAAAAAAAAAAAAAAAAAAAAAADG88tLW9I3BwJtz6nNf1
vK/DHVqYJ3pzT5y3MPZeojOWMQylEKpTVjZnDCwkqzYQyRRICATCITAJZQxhMAshnEq4ZQC2srKq
qrIBZCWNZZgwswmFloVyCu0dFcx1WyrtCBhv5NTPHXds2U5o3hIz4ffbPt+KHUcTSW5c9Jme0u2v
VYAKpAAAAAAAAAAAAAAAAYZctcVOa35R6tLrltN795/YvknNqrfhpPLH92V5isd9mWq6fHjk6rn0
ZxG8KK5Jm/wbVZiYZtqrmkqL023bkxvCiY3lJHNyRG81mHS4Rn5sNsNp64+3yaWaNrzOzHBl+i6q
mT7s9J+S+ay8mex6EIneN47SNXKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAImYiJme0JafEs3h6fkidrZOn5eaLeJk7eOdm1Hi2vmtPTry/CHmOJcUvmvOPF1n09Pm
6HF9ZGm01qxO3R5vSY7XwzmzTy47zzTEd7en5Mfvt2/PURWdo3tvPrPlKymbktFqTtMTvHzbOLDG
f63JXbFX7FdnoODcDprZpq9TjiMMTvSn4vj8l5fxnrk91saPSa7i2hpOfbTVt5x1m0fLydzR6PDo
dPGHBXasd585n1lsRERG0dIF5OOe6tAEqgAAAAAAAAAAAAAAAAAAAAAAADX11+TRZrf0y2Gjxe22
gtH4piP3TPpXKwxtjhuYo9xq442iIblI2pC1RET2ILd9kxCqRjZmwlCSEohIJAQAAJZISDKGUd2M
MoBnVbVVCyAWVWeSuqyOwIlXZZKue4MJV2WWYT2QKbKL9YlfdRdIo35b7/Hd3KTzUrPrDh27uxpb
c2mpPwX/ABX9XAKpAAAAAAAAAAAAAACekTIp1eTwtJmv+GkyJn1oafeazbfpMzLR4jq/o8b823zX
6XNF8ERCvTcNpxLV5LauvPhx9Irv3lhztdtv8TtaWLicXrt03jzjzb2k1nid56ty3s/w+a7Uwzjn
1raejlarhmbhl/FpbxMO/fzj5p/ixSeXOvTtRfeI280ZI26tfDm3pWe63LaZx7qtGvniJ6tPLvOK
fOa9WzbJvTbza02jl3n5SSljscK1MajSxWZ96nSW88xw/VfQ9XMT9nfa3yemid43jtLeXsce88qQ
EqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADia3UTm1l4j7OP3Y/u
7Vp2rM+kPJW1PhYcmS0+9MzKm/jbwz31weMzbV8UppazPL9q0/BF4rk1GLDSNqxPWPhCnHmnNrtT
qPKteWPm6U6OdHaZvO+SaRNvhv12Ub/q3FhtrNVj0uKOt56z6R5y9zix1w4qY6RtWsREOJ7L6OKa
S2rvX6zNM7T6Vh3mmZyOfya7eACzIAAAAAAAAAAAAAAAAAAAAAAAAAAczjVvqMVfW/8AZ03I41bf
Lp6/OVs/UVrY47NyOzUxd4bUJpEbb3Z7IiOrKIVSjZhMLJYyhKIgmGUQSDESIEbJEgQmCITEAmGU
IiGUAyhZVhDOoM4Wx2VQtqBKuyyWEgqlhKyyuyBVaGtkbNmvk7A15l1eH2300R6TMORPSXT4ZO+O
8fFefEX63gEAAAAAAAAAAAAAAAq1WPxdLlp+Kkx+y1Fvsz8gjhaDauGK8sx07y3OE3m1tT6RaP4c
vU6yMNKUx73zT0ilY3l2eF6a+m0kRl/zbzz3+Ez5M8z26fJruW6wzYq5sV8d43raNpZjRzPPaTmx
5b6bJ9rHO3zb2WJ8GWPEscY9bgzxH2t62n19GWW0eHOzHU5XbjXZ1x8WTnz2iZ7S2M1IjH2+LX0V
KTqs8zO9ot0j8nUthi1J3UaOFMTfLFo6xMbS9BwHWTqdHOO8+/hnln5eTjYMFo1WTH5VnePzXcIm
2k4zlpPSmXy/hfF5eMfJns69OA2cgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAADG/2LfJ874rW845mubliY7bPoto5qzHrDz0+yePNF41OotaJ7RWNtpV1OtfHqZ715fhu
j8adNpcVfeyzE2/vLuanhOu1nEctIxTTFa/+ZPbZ3eHcF0vDbTfFE2yzG03t32+DokynXl9+leDB
TTYKYccbUpWIhYCzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAcXjE/4zDH9M/wAu04XF5/3jj/0f3Wz9
RUYmzDWxS2I7FSyjuzY1ZKpRKEygEwiWUIkGIk2QJNhKQhMIhkCYZQxhlAMoZwwZwgWQshVCyATL
CWc9ldpBhZXLOVdpQK7NfJPRdaWvknoDVvPvOnwuel4+TlXn3nS4VPvXj4QtEV0wAAAAAAAAAAAA
AAAAAVV02CmTxK4qRf8AFFeq0AAAanEsfPpZmO9Ji0NDLfkwdOsulrumiyzHlVzJrz4Ovoy26vB8
cTBa9NffLtMY77Rv8Yegx5ImkKdJoY1HC81Y+3OSbVn0mGGkmbY45u6tnrrTOu2xGO0RxCd+nNVj
qKxTV1vH2pjaGtnyzXXYdo96ZmGXEMk15b7/AGZiVerWPTYckZcNbx5wzc7hGbnxXxzPWk7x8pdF
0S9jh1OXgAlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAcPjEf4/FP9H93ccXjMf4vDP9Mx+62fqKrx+S+GvibEFSsqyYwlVK
ZYsmIMoRKYJQIPIEiQ2ATCUQygCGUIhMAyhnDCGUIFkLIV1ZxIMpVWWSrsCuyqyyyq09ECq8tfJK
66jJ2Bp5J6upwn7dv9Lk5J951uE/av8AJaIrqAAAAAAAAAAAAAAAAAAAAAAq1Mc2myxPnWf4cmtu
XT9fR0tffk0WSe28bfq5Wbamm3326MtunwfK6PCv/AxPraZ/dz9PO97/AOqf5dHhdZrw7Dv3mOb9
XOxRFM+avpe38mvkPHf/AFWlrKba7Tzt99ZxKkfR7euyNXMTrtPHfa0z+zPiM/UR8Zj+Wbdu8HpN
M2bfzrV13M4dO2pyR61dNvj44/J/oAWZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADj8bj63BPzdhyeNx0wz8ZWz9RWri7Nmv
VrYu0NmqaRZHZlDGGSiwxZSgCEkCBCQSCQBMJRCYgEsoYx3Z17AlMIhlCBnDOGEM4AlhZZKq4KrK
7LLKrIFN2vdfZReAaObu6/CO9vk5OePR1uEd7fJeIrqAIAAAAAAAAAAAAAAAAAAAAGtxCk5NFliI
3mI32+XVyNTyZOHTee946PQKPoeDffw4777eW/yVs60xv+ZxOnr4Okx1t05KRv8Ao41Z5q3yed5m
XY1szXRZ5jvFJ/hxItP0aOSN9q7yrtr4f2tHFM5+KT16Yq/vK/iGSbXw4vO14UcPx5MGfNbPG18m
1oj4THRsTw7VanPXVYpi3gzMcnrvCnG11JOupwuN8+a3pEQ6jT4divjxWnJExa09pbjbM5HHu90A
JUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAHM41H1GOf6nTc/jEf4Ws+lls/UX45uGekNujTwdm5RNIthKIZKLDFlsiQIShIC
EgCUJ7AmGTGO7IDzZQhMSDJMMYZQgZwzhhDOATuqssmVdgVWVWWyqtCBTeVF19lF+wNLNG7q8I+9
8nLyupwnt+S8RXUAQAAAAAAAAAAAAAAAAAAAAAAItWL1mto3iY2lyrcLyUxzix2ia2nvPeK+jrCL
OrTVnxpanhuPPemSs8l6RtE7dJj0ldpNP9GwRSZ3neZmV4cR/Vs4AJQAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANHi1d9H
M+kt5ra+vPoskfDdOfqK4mn7Q3aNHBPZu0W0RdDOGFWcKLCJZeTGQQlCQSgASBsCYZQxhlAJTAmA
TsmAgGcM4YQyjsgRLC3VnaVcgwsrt3Z2V2QK7tbJ1bN5a9waeWO7p8Knt8nNyebpcK8vkvlFdQBA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9RXmwZI+ErEWjesx6wQeZwejeo0cccuW8
elpblJaaRGxVnCuss4ZrMvJEgCAASISCQIBlCYYpieoM0wx8k7gzIRueYM4Z79FcSy3QEsLJmWFp
BjaVVpZWlXMoGNmvkXXlr3kGtknu6XCf7OXkl1OEdl8orqgIAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAHmskcmtzV/rls0U62OXiWX4zErcc9GmkRfWVkSqqziWayxCPIANwBIhIJSxS
CRG6dwZwlhEs4BluMdzfqgZxLLdXuy3AmVdpZTKuZBjaVVpWWV2QlhZRdfZRcGpl7urwfrzfJy8r
rcH61vPyWitdMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHA4nHLxKZ9awnH2ZcY
jbW459aq8fZpfiI2IZwrqzhmsz3Ebm4JN0AMhCQSIASndiAziWUSriWcAyRujc80DM3RCfIETLCW
UsZEsJYSslXZAwlTddPZTkBp5e7r8Gj6rJPxhx8k9Xa4PG2C8/FaK10QAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAcfjcbZMFvnDWx9m5x2PqcNvS+zSxT7sNPxH62YZQwqzhRZO6UCB
KUAJTux3SDIRuAncQAmJZRLBMSgZ7iIAZRKd2DICUSlAljLCYWMLIFVukNfI2bNbIDTyT7zu8Ijb
Sz/qcG/2nf4T/wCE/wD2WnxWt4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHL9oL
+Hw2cm28VvEuPptfgyVj6yIn0no7/FtJfW8NzYMe3PaPd39d3iMug1WktNc2C9dvPbeP1aZ9xF+v
T471tHu2iflK2HkqWmvaZj5Surqc9Ps5bx+alTHqYHm68S1Vf/NmfnC2vGNTXvyT84Ql6A3cSvHM
sfaxVn5Ssrxyv3sM/lKB1xza8bwT3pePyWV4tpZ+/MfOEjfGrXiGlt2zV/PotrqcN/s5aT/+wLRj
FontMSlAlKEgndO6IAZQljDIEgeQljLCzOVdkCu/SGrkbF56NPNeKxMzMRHxENe0+89DwuNtHHzl
5PJr8NcnLW3Pbf7r1nCZm2gpae8zMrz4i/W6AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAETETG0xukB4HVaeMHEtRi26RedvkyjBSfX9W77QYvC4xz7dMlYlrU7M929dWJLFc6aPK0q
7YLxPS0S22FlP6q38Zac0yR92s/KVc3tHfFf8tpbcsLRvB/dR/8ALLVnU0r9uL1+dZI1mnmdvGpv
6TOy6ym+Oto2tWJ+cJ/tW+KLK5KW+zes/KU7tG+h01p64qx8Y6NXNo6Y+uPJlp8rLf0rfG7MXtHa
0x8pZxqs9e2a8f8A7Oj7HaTHn0+f6RWM23LETfr6vRW4PoL99NT8ui7F4+vEdXXtnt+fVbXjGsr/
AOZE/OsPS29nuH27YrV+VpeV9pdPXhOtw49NG9Mld55+vXcTPd42I47qo7xSfyWV9oM8d8VJ/VxM
d8l46xWF9cV7en6o/qLfxp2I9ob+eCv/AHMo9op89P8A/wBORGmyT5R+qfo2X8P7n9Q/jTsx7RR5
6ef+4/8AuHftg/8A6cWcOSO9J/WEbWr3pY7Efzp2Lcfv5YK/9zWy8d1E/ZpSv5Oba1/+Hb9lc+LP
bFt87I7E/wAabWbiurvEx4nL/pjZzc2bJkn372t85ZXx55/BX85lucC0vPxnTxlnnjm32mOiZqUu
LJ2p4TwnVavNWaYbRTfre0bQ99pcH0bT0xb78vmtiIiNojaErMwAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAHnfarF7umzRHaZrLjYrdIen9ocPi8JyTt1xzF4eUw23rCm3R4r6bMy
wt6kdTaWLdjswmNoZontsCm0K5XWjopnuDC0dGpqG5bs08/daKV672MjbSaif6oh6Z5f2LtvptRX
0tEvUN3Jfo8f7cYve0eX4zV7B5z20xc/C8eSPuZIRficfXlcPaG7ino08HWIbePpLF2NuiyOyrHK
3fZFSwuovHVfaVF4QK5YWTM9UT0EKry6Ps1Tn4zjn8NZn9nOtLseydObiWW34cf918fWfk+PYANn
KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq1WKM+ly4p+/WYeBxTNd6zG0xO0
vobw3FcP0bi2em20Tbmj5Srr418V9sa2Z7qKyzi07MXUylhaU7yjqhLCeiq3ddaFNxFYW7NLNG8t
zya+WO6Va9J7FW66mvwidnrXiPY3Ny8RyUn71Jj9Ht3RPjk19HK9pMHj8D1ER3rHN+jqqtTjjNps
uOe16zAifXzfTz7kNyndpYazS9qT0mszDdoxrsi6m8LazMq6zDOsq1ZEyrt1WWlXaUCqyq0rbKbi
Fdp6PReyFd8uqv8ACsfy83aXrPZHHto89/xX2/SP/dpj6y8vx6EBq5gAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAB5n2q03LfDqqx39y39npmlxbS/TOG5se29tuavzgWzeV4mtui2
O3RRSY2hdVhqO2MvI36iu9lUsrSrvDHn6spnmSiq5jooyV6tq1VV69RC32byTh43h8otMx+r6I+Z
aK/g8TwX7bXh9Mid4iW+fjl8n1ICWb57xLBOm4zqse20Tbmj8+qKdnS9q8PhcTw5tumSm0/OHMxz
0Za+uzx3sX1t0Zxurr1ZxvspWiZYWZbsbT0QK7KLrZVZJFaqt5vbezNOTg9J/FaZeJns93wCvLwb
T/GJn92uGHldIBowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuAPA67F9H4l
qMW20VvO3yRWW97T4fC4rXJHSMtI/WGhVlue3b473K2KzMML4+62tujG9pnozXaOSOVFMnVbmq1t
trJRW5E7wwvUxTvCyY6CHOt7moxz6Wh9PxTzYaT61h8x1MbZK/OH0zTf+Fxf6I/htj45vL9WgLMn
mvbPFvocGWO9L7fq85p5maw9d7VYvE4JkmPu2if3eW0+PasdFNOnxfF1Y2hlykRsmY+LJ0MZjZXa
eq2eyi8oQTO0KLdZWzPRjWu6VaqtHR73g0bcI0sf0Q8Nkq93wqNuFaWP+XDTDDytwBowAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAef9q8HNpcGaI60vtPyl56k9Iew49j8ThGe
PwxFv0l4zH2U26fDfTYiyJljvsjf4sm6vJ1hrXjq2MkqLdZEVbgbMx0auGdmzNt6iHN1Ub5af6of
TdPG2nxx6Vj+HzaaTm1+nx/iyVj930ysbViPRrj45vL9SAuyc7j1efguqj+jd4/T33rD3HEcPj8O
1GP8WOY/Z4TTT7sKadHhbcsZnaCJ3TPZk6VdrKbTutmP0U2nqgrGOsr8deiuI2X09EqKM1dt3uuG
f/jdN/06/wAPE546S9rwud+Gaaf+XH8NMMPK2wGjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABrcRp4nDtRWPPHP8PCYusPoWSvNjtX1iYfPuWaXtX8MzCuvjfw32siu8ptXoxi
0wy5t4YulReqmazu2skbquURWFInddM7VYRGyL291KFnCcfj8e0le/Lbmn8n0N4b2Ur4nHLWmPsY
5e5a5+OXyXugBZmiY3iY9Xz7NjnTa3Ph/BeYj5PoTxftFg8Hjk2iOmWkW/Psrr418V5WrWd2faFc
V2jdnEMXWxntupmN7NiYU27iWML6dVMVnddjgVqMsdHr+CW5uE6f4Rt+7yuSsTDv+zWXn0WTHP3L
/tK+GHl+O0A1c4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8Dn93W56/wDM
t/L3z59qp24jn+OS38lnpr4r7ZxHQ2TEstt3PXUrt27K57rr1VT0BjKnJPRbMqMs7QlV2fYvHvrd
VknyrEfu9m8f7FZI8fVU85iJewbT45NfQBKo817W4eulzxHaZrL0rje09ItwqbfhtBVs3leai8RD
KLw1sduesL606dWFdsZT1jdhNeq6K9DlhCVUU6s4jZnt1YzAhnM71dH2bycmszY/K1d/0c6OzY4R
fwuK4p8rTstn6z8k7HrwGzkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHz3
Vxvr80/8y38voTwGpj/F5/8AqT/JfjTx/WVeyY6FPspc9dZPVXaOq2WEwIUTVRmjo2rNfLHRI3vZ
DJycXtX8dZh7t879nsnhcbwz23tt+r6I2nxyb+gCVBzuPY/E4PqI9K7ui19fTxNBnp60n+Aj5/pJ
3jZu1aOnnltMNussdfXbm+l3ZM9URHREdZVXTuT1Nk7boQiOkJw28PU47/htEp5eivJPLMTCZ9Vv
x7mJ3iJ9UqNHk8XR4b+tIXuhxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD
weqjbWZ4/wCZP8vePCaz/wDIaiP+Zb+UX408f0r9lOxWOifJhXWjfyYWllPRXYQxnrCrJHRd3YZI
6A1NJecHEsN/S0T+76bE7xE+r5dk93LW3pL6ZpMni6PDf8VIn9m2fjm8s9rgFmQxvHNS0esbMiew
PnHLyai9fS0w2aNfUTtrs3+uf5bGPqy068fF227KtSsdFlKqNGMV6myyY6sbdIQI8tlOWOi6Jhhk
j3RD0vA8nicMx9etZmHRcT2Zyb6XNT8N9/2dt0T449T2AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAHhdfG3E9TH9cvdPEcXjk4zqI/q3L8aeP6xr2TsxpLOekMK6mFo6qpXSrm
OqBixvHSVmzC4OfqK7S9/wAByeLwbTW9K7fo8Fqo6Paeyl+fglI/Da0NcMPK7QC7AAB8313TiOf/
AKk/y2MHWrX4jG3E9R/1Lfyv0/aFNOrHxuU7LI7MMayGTVlHWUXhNe6Z6wIUsb9d1m20q7dkDpez
N9tRqKT5xEvRvKez9+Xis1/FSYerb5+OTyf6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAB43j9eXjN/jWJ/Z7J5L2mry8Upb8VIF8f6aGOey2eynHvOy7bowrrYSxZSwQJ2YXZ
92N4BoanrEvVexmTm4blr+HJ/aHltRHSXofYm/1Wrp5RaJaYY+X49WA0c4AD51xONuKan/qW/lbp
+0MOLRtxbU/9SU4J7KadWPjep2WQrr2WRPRk1TvsndXMpiRCb9FNu0rbTuqvKBscCjfi9PhWZeue
V9n434rafTHL1TfPxy+T/QAszAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHmv
avHtfTZfnV6VxPajHzcNrf8ABeJFs/XnMcr4no18c+6vr2YadkY2YM57sEDLyY37Mo7MMnYGlqO0
vQ+xNfqNVb1tEfs87qZ2rL0/sVX/AHdnt65P7Q0wx8vx6UBo5wAHz/jUbcX1PT78qtO2vaCnJxjP
8Zif2amnnspp04+OjWejKJ6MKdmcMmyJn4m5ZHzEVPMwtJv0VZLbQDqezcb8RzT6Y/7vUPM+ytZt
n1OTyiIh6Ztn45N/6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABocbxeLw
nUR5xXm/Rvq8+OMuDJjntaswEeBxT0bNZ6NatZpNqz3rO0rqsdO3PxlaWEMpY+aqWXkryT0ZT2V3
7A0dVPuy9f7G124NM/iyT/Z4zWT7sw957MYfB4Fp4/FE2/WWmGHldcBowAAeM9qKcvFeb8VIly9P
0nq7ntbTbVYL+tJj93CwT76unR4/jo0nozhhTsy3Y1sWljM9Ce7HyQIm3RRlttVbaWrnt0Sh6n2U
x8vD8mSfv3/h3XN4Bi8Lg2nj8Uc36y6TeOPXugCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAPD8RxeBxXUU26Tbmj8+quro+02Lw+I4ssdslNvzhzazvDPbq8d7GW7Dfqz2VzG
0s2qd+iu/Zn5Ksk9BVztX1mI8930zh2LwOHabH+HHWP2fNYp4+vwYvxXiP3fUqxtWIjyjZtj45/L
faQFmQADzftfj3w6fJ6WmHmsP23rvaqnNwqLfhvEvIYZ+sV038bo0noy36MK9oZQxrdMyrlnMbMZ
QKrS1M07zEestq/RRjr4utwY/wAV4j91p9V18fQdJj8LR4ccfdpEfsuREbREJbuMAAAAAAAAAAAA
BAJAAAAEAJEAJQAJQAJEAJQAJQAJEACUJAQlAJEAJQAJQJAAAEAJEAJBAAAJAABAJEJAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwvanDzaPFmjvjv8A
tLztJ3h7HjGHx+FainnFeaPnHV4vFbeIU038VbHeGF+kso7Mb9mTdhKnLK3dRm7SIrHhGPxeP6Sv
9cT/AHfSnz72Zx+J7Q45/BWZ/Z9BbZ+OXyfQBZQABzeP4/E4NqI9Ii36S8Ng/wAx9C4jTxOH6ivr
jn+Hz3B/mQi/GvjdCnWNlsdI2V07LIlg6USrt2ZzZXMoFV+zPhGLxeOaavpbm/RVltEN72Yx+Jxm
b7dKUmf7L5+s9/HtRA2cqRACRACRACRACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCQQCRACRACRCQBCQBCQB
ACRACRACRACRACL1i9LVntMbPATTwdRkxT3pea/u+gPE8Xx+DxrPHlaYt+qNfGvjvtXXsi0dOrKk
dEXjZg6VMtbP2bMtXUdpEV0/Y2nNxbNf8OP+727xvsXH+N1U/wBEfy9k3nxyb+gCVQAGOWvNivX1
rMPnGGOXNNfOJ2fSZ6w+dZKeHxDPX8N7R+6L8a+L63KdoZ7q6zvEMpnowdKJ6ywmWUyqvIKM0vQ+
x+D6rU55+9aKx+TzWa36vbezmDwODYenW+95/Nphj5L6dQBo5wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAEiAAAEoA
AAAAAAAAAAAAAEAkEAkRuAkQbgkQAkQAkQAkQAl5T2nx8nEMOT8dNv0l6pwfarHvpcGWPu32/WCr
YvK4mOem6b9mGKd4Z3idmFdka0y1c892zfpMtLPaNpEV6D2Kj/Eauf6YeweQ9ieuTVz8K/3evbT4
5NfQBKoAA8FxCvJxrUx/XMvevD8Zry8fz/Haf2RfjTx/6RSOnRMyypHu9kXjowrqVSrvPRnZVl6V
kK0775MsUjvadn0nT4ow6bFijtSsVfPuFYvpPGtNTy54mfy6vorXDm8l9pEC7JIgBIgBIgBIgBIg
BIgBIhIAgBIhIAgBIgBIIBIAAhIAhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAA
AAAAAAAAABAJQkAEAAAAAAAAAAjc3BIjdG4Mkbo5kcwMjdhzHMDPc3V8xzAs3N1fMjmBZubq+Y5g
Wbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmTzAz3N2HMnmBlu5ftFTx
OEZJ/DMW/d0t2rxKni8N1FPWkiZ9eS08e7Cy8dGGn6UhZaJljXZGnmc3UT3dPP2cnUT78xCIV6j2
H/8A9c/6f7vXPI+w8bU1U+vL/d63du5NfUiDcVSIAS8b7RV5eOb/AIqRL2TyXtNX/e2KfXH/AHlF
+NPH/pr4+2xcxx0hFpY11K7R16KM32ZWz3UaidqSgrc9kcPicWyZJjfw6T+727y3sXh2xarN+K0V
h6lvPjj3e0ASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAAAkQAkQAkAAAAAAAAAAAAAAA
EgAAAAAAAAAAAAAAAAAAAAAgAAABKDcAN0bgkY8xzAyRux5kcwM9zdXNkTcFm6OZXzMeYFvMibKu
ZHMC2bo51U2RuC2bom6rc3BZzom6sBZzI52ADPnOdggFnMc6skFnMc6rc3BbznOp3RzAv50c6nml
HMC/nOf4qOY5wX85zqOc5wbHOc7X5znBsc6edr85zg2ec52vzpi4NjmY5bROG+/bllVzsNTk5dLl
n0pP8BHmMHWNmzt0aum8obm08vVjfrtnxztR0mXHzTvaZdjVRMTLkZo6yiFen9iZ2pqY/wBP93rN
3kPY+/LfPX1rE/u9XzN3HfqzdO6vmTuIZ7m7Hc3Bnu8t7TR/vHBP9E/y9Pu837SV31umn+if5Rfi
/j/01MMb1hjkrtKzBG0bMsmOZY11tOYamr6Und0LUc7XT7u3rJPqL8er9lcPhcFpbzyWm39v7O00
+FYvA4Zpsc94xxu227jv1IAgAAAAAAAAABKAAAASgASgBIgBIgBIgBIhIAAAAAAAAAAAAAAAAAAC
UACUJAAAAAAAAAAAABIAAAAAAAAAAAAAAAAAAAAg3AEbomQZbo3YzLGbAz3RNlc3YzcFs2YzdVN2
M2Bdzom6nmNwW86JurTAMuY3REJ2BB1ZRVMVBhsbSsiqeUFXLucq3lTygp5TlXcpygp5TlXcpygp
5TlXcqOUFXKjlXcrGYBXysdlswiYBVMdUTCyY6sZBWxlnMMZgGLGZZSwkDdHMiWO4MuY5mEyjcFn
N1OdVzHMC3nTzqeY5gX85zqOZPMC+Lqdbk20eb/RKOZr8QybaK/XvtH7iZ9aGlp2luzT3fg19NHS
OjbmPcYX67XH1XSZ9XIzRvMuzrK7zLkZYmYnciunb9lZ5dTk+OP+71cXeP8AZnJ/ip2nf3J/l6iL
/Fu5L9bMWZczXi6YuIbEWTzKIuyiwLt3nuO25uI4a/hx7/rLuczg8TicvFLbfdpEK6+NPH/phhjo
stLGkctUWnoxrrU3j1cnWTzZq1jzl1clo5Zcu8c+txR63iP3Tn6pv4+g4o5cVI9IiGe7CJ2iE7t3
GyN2O6dwSINwSISAlAAlACRAAlAAlACRACRCQAAAAAAAAAASgASISAAAAAAAAAAAAACQAAAAAAAA
AAAAAASAAAAAAAAAAAAAAAAIAAAQCAJljuljsCJlhMs9mOwMJYys5TkBVsjZdyHICrZPKt5E8oK4
qmKrOVOwMIqyirPY2Bjyp2ZbAI2NmSARsbMgEbI2ZAMdjZICNkbMkSCNmOzJEgx2YyzljMAwlhKy
WEwCuWErJhhMArlhLOWEgxljMpljIImWMyTKJA3N0IBO5vux3NwZbnMx3NwZczT4jf3MdPW27a3a
fJOq1XNP2KdIRfi+J2trSYfcjeF+Wm1OicVeWIiN9kai8xjY12ORqultnI1Ecsujq79XP1FovWYI
rTgeq+j8QrWZ+3Mx+r2UXeC0WG2Ti2kiN5mL807eUREvbzbaejefHJv62Iv8WUXa0WTFhVtRdlF2
rz9WUXBtc7jR9dqc2T1ttHyhvZMvJitb0jdq6XHNcNenWVN3028U99WRj6Kb02be3Tq18/SN2Lpc
3UdN9nOmZrqKX/DaJ/d0svvTLRzV3jomK6+Pd1vvWJj0ZczT0mXxNJht60hfFnQ4qu3N1cWTEgs3
Tur5k7gz3N2O5uDM3Y7m4MtxBuCQASIASIASAAAAAAACRCQAAAAAAAAEoSAAAAAAAAAAAlAAlCQA
AAAAAAAAAAASAAAAAAAAAAAAIASgAAAEJAQJQCNkbMgGOyOVnsAw5TlZ7GwMOVPKy2NgY7GzIBGx
skA2AAAAAAAAAAQkBAEghEskAxYzDPZGwK5hjMLJhjMAqmGEwumrCagomFcw2JqqtUFEsLLrV82F
o7gqljKyYYTGwMZRKUSCAQAboJnaN5Bjkneu0d5W4ccViIiOzHFWbTzNumP1Zarr8eeRMbxDW1Mx
NO67NbkhzNVnmInqzaOZrL93JyZeV0M1++7S02jvxDWxhxx033tPpC8Z6rrezWjmZyazJG2/u03h
2vFibTHoqvamiwVwY+nLGzV0+SZ1Mx8G0/45tOhzJ5lXMc3UVXRdlF1HP+iYsDPLPPy49/tz1+Te
pSIr0ho6ak5Ms5J8o2q6NImOrHV7XX488ypzTtHXo0s9t6zG7c1G1qz6ubeZiZ3UatXJG3yauSO7
cvMTEx5tPLb3prPRMVr0HB8vicNxf0+7+kt+LOJwTJyY/Bnz3tH93X36N58cWvq6LSyiyndMSlC7
mZcymLJiwLosmJVRLKLAtiU7q4lMSCzc3YxJuDMRuAlKAEgAAAlAkAAAAAABKAEgAAAAAJAAAAAA
AAAAAAAEgAAAAAAAAAAAAAkAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAhIAAACAAAASgAAAAAAEAAAA
hGzJAImGMwzQDDZjNVuyNgUTVhNGxysZqDVmiu1G5NN2M4waM0+DCaN2cbGcQNGaMZq3JxMJxA1J
qx2bU4kU09slorWNwa20z02RXHbJbl26QvtFovbHWkxEdJt5y2MOHlr2U1W3jx+1hiw8vSO63lmI
XRTaEWmtY6snRHO1VpmJ+DjavpSZl2s8b7y4HFcnh0n0gha5ebJN55KRM2mdoiPN6fh+kpwXh0Wy
RHj5Otp/s5Ps1p62y31+em9aTMYt/OfVfxTiPjZ52naI7fBrI5t66xz5+a1rW7yx0eSL6iZjtEOX
qNbSletom3lENjh2fbHzbbWt3iVozruc+5ztWubf4M4ybpQ2Oboyrva0Vjza8WdDR4OkXt3n9ldX
kaePP9VtYqctYhdvt5oivTeCZ2YOxXk6ubqMfV0b9mrljfqlFcq88k7z2U5axeItDa1OPessuC8P
ya7XRWYnwqdbT/ZMilvIu4dpslNdixXja8Y5tt85djZdbDWnGOesRtXFtuw6T27No5Kx2OrKYQlC
ExKJgBnEpiyvdlEgsizKLKollFgWxLKJVRLKJBbEp3VxLKJBnuMWQJEbpBIAAAJAAAABIAAAAAAA
lAJAAAAAAAAAAAAAASAAAAAAAAAAAAAJAAAABAJABAlAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAA
AAABAJQAAAAgAABAAI2EoBGyJhkgGPKxmqxAKpownHC+YRMdN5BrTj67R3bOn01o7p01Iv71u89o
b9a7LfBTfS1vWI2jf12VfQPSW8KX2mas+NC2iv6xMNfJpMnLtEbuuxtMRCtzF55NR5rPps1N/ctP
y6uHreE6nXZ4pak48X3rT06fB7fNeI33cbX6mI32R/MWu7XF116aDSRhxbRERs8f499bkyZeeKae
kzE2mdon81/tfxDLGOunwbzlzbx08oaHBvZHJlx48mrvaa94pu04y617576rNGLRRM0397JEd/lu
9Dw/S3x4qxffo6mm4NjwUiKY4iI9Ib1dHFY6QIaNabbrYrLfrpJtaK1rMzPZb/s+05IpP59OyLeJ
k7eNfRaOc1ue32I7fGXYpi5Y77M8OGMeOKxHSFsU3Y29deZMzirl6dlVvhLatCjJHeYQv1rXnps1
8k9/VsW6qLVmZIi1rzitlvFKRvaZ2h6TSaenC9FFY+3brM+sqeG8Prp4+kZ+lvuxPkr1mqm95nfp
DXM459676a2q1dsV7XietvNno78+CJn1cjX6mOeIm0bR33dfRU5NJjidt9t5afjG/V6JZ7I2QMNh
nyo2BhsMuVG3wAhMSbbQRAMolnE+iuGUSCyJZRKuGUSCyJZK4llEgyZMYTuCUsYSCQASISAAAlCQ
AAAAAAEoASCASAAAAAAAAAAAAlACRACQAAAAAAAAAEgCEoASCAAAAAAAAAAAAAAAAAAAAAAABAAA
AAAAAAAISAIAAAAAAQAAACASgAAAQJAQAAhIDHZhln3do7z0WS18mWsajHjmes7pg3dNi5aRMNqO
yvDHTpPRaigHZhN4hHRlaVN59JY3zRENLUavaO+yq0iNVlitJ6vNcR1MVi0zO0era1/Ea0rPvbz5
PM5MWp45qvo2GZrhmfrsnpHpHzTCseEcM/2vrr8Q1Eb4qzy44nziPN63HpYiIiI7LNHoqabBTFii
IpSNohuVxrKtWMEejPwY9G1FFmHB4mWJn7MdfnIM9JpIx15to5pbUaas/a6rqViI7MxPxqX0UT1r
O3wVzpbR2hviP5i03Y5s6a879FNtHljydhExCv8AMTPJXBnRZbz0iG5ptFjwe/l96zctMVamTJtE
yTMibu1VrdTzRMR0j0ed4lr64MVpm0RERvMz5NvX62uOJ69XhOKX1HH9bHDtFvNYnfJeOy0Z2ojX
6jjnEq6fRUmccTvN/J9H0eKcOnx45neaxEbubwHgOHg+milI3vP2resu3Wu0JQmITsmISDHZHKz2
JgFc1RMLJhGwK9iIZ7MZgEdgmAEwyiWCdwWRLKJVxKYsC2JTuriWUSDNlEsIlMAySx3SCRCQSIAS
AAACRACQAAAAAAASIASAAAAAAAAAAAAAAACRACRACQASIAAAAAAAAAAAAAAAAAAAAAAAAQCUAAAA
AAAAAAIAAAAAAAAQAAAAAACBICBICAAEJAQJQCJcLjuS2ny6fPG/LWdpd1o8T0X07SXx/e7wCdJx
Wa0jmneHQpxPDMdZmJfNtZm49weZrh0/j4o7VtSZ2+Uw0/8A7o49k92vBLc/ntFohFW9PqGXimOI
6Tu1L8T3eCx6r2t1O3JwvHjifO99v7t/Bwf2l1PXU6rS6eJ8qUm8x+so5TsekzcSjbvs4mt4rzW5
K2mbT0itesy2cHsvbvqtbmyz5xERWP2jd1tJwrTaONsOKtZ8585+cnDrzmn4Rq+IZObUROHD32n7
Vv8A0ej0uhxaXFGPFSK1j0bkY4jyZRVZVXFGUVWbGwKsk8mObekNrSW3pWf1a2aYjHbm7bNnQ1id
PW0TvuDdhJEbQABMsLW2R0ZTMQrvfbz2YWzVhpanUxEd0dWkW5c8R5uXxDX1w4pnfr5Q19XxKuOJ
2neXltVqtVxbV/RdJ715+1bypANfiOu1HENV9C0MTfNeesx2rD1PAeBYuE6aKx72W3W9/WVnBuB4
eF4dqRzZbdb5J72l160WVK02ZxCYhOwI23TsnY2BGxsnYBjsiYZsZBjMMZZSgGEolMsQDdG6NwZ7
piVe6YkFsSziVMWZRILolMSriWUSCyJTuwhMSDMRCQSI3SAlACRCQAAEoAEoASAAAAAAAAACUACR
ACQAAAAAAAAAAAAASAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAABAAAAAAAAAAAAACBKAAAAAAAQ
JQAAAhICEbJAYTWJ7wx8KvpC0BV4ceieWGewDHlNmWwCNjZICNhIDmcZredBecdpiY69FXCOLW+i
UiZidukulmxxlx2paN4mNng+K4+I8Hy2yaTfl37TXetoCPfRxfp1qi3F48ofKMvtvxak8s6LDv61
rZji9rPaLUf5PC+bfttS0q8q3p9W/wBrRMdpUZuKdN99nzvFqPbTVz7nD8OKs+do2/mW3h4D7Xaq
ZnPrtNpqz35aRaYOHY9Zk4pNt9rR+rl6zi+OnS+WN57Rv1lXp/YrNaYtruL6zNPnGO3hxP6O5w/2
f0HDuun09Yv55Le9afznqcOvO4tBreMTHu30unnva0bWt8on+70nDuE4OHYYx4Kbesz3tPrMuhGO
IjpDOKrK9YVpsyiGUQnYGOyUgI2SlAIEmwMWMs9kTAMJYzDOYRMArmGErZhhMArlHmzmGMwDE3Ts
bAbs4swj5pgFkSziVcM4BZEsolXDKAZwyhjCYBkACQhIAAAAAAAJAAAAAAAAAAAAAAAAAAAShIAA
AAAAAAJAAAAAAAAAAAAAABAJEAAAAAAAAAAAAAAAIEoBKAAAAAAAAAAAAAAABAlAAAAAAAIAAAAA
BAkBAkBAkBAlACEgMZjdjbFW8bWrEx8YWANb6Fp+bfwab+vLDKMFK9qxH5L0bAr8OPRPKz2AY7J2
SbAjYZAI2E7AIEgIEgIEgMdkSy2NgY7MdlmyNoBXsxmFuyNgVTVjNV3KjlBRNTlXTVHKCrlIqt5T
lBhEMohlFerLlBjEMohMVTEARDKCITsAk2AEgAAAkAAAAAAAAAAAAAAAAAAAAAAAASAAAAAAAAD/
2Q==`;async function warmupBitmap(e){let t,u;let b64toBlob=(e,t="application/octet-stream")=>fetch(`data:${t};base64,${e}`).then(e=>e.blob());switch(e.config.warmup){case"face":t=await b64toBlob($Q);break;case"body":case"full":t=await b64toBlob($1);break;default:t=null}if(t){let y=await createImageBitmap(t);u=await e.detect(y,e.config),y.close()}return u}async function warmupCanvas(e){return new Promise(t=>{let u,y;switch(e.config.warmup){case"face":u="data:image/jpeg;base64,"+$Q;break;case"full":case"body":u="data:image/jpeg;base64,"+$1;break;default:u=""}if("undefined"!=typeof Image)y=new Image;else if(Cw.Image)y=new Cw.Image;else{t(void 0);return}y.onload=async()=>{let u=canvas(y.naturalWidth,y.naturalHeight);if(u){let w=u.getContext("2d");w&&w.drawImage(y,0,0);let T=await e.image(u,!0),$=T.tensor?await e.detect(T.tensor,e.config):void 0;t($)}else log("Warmup: Canvas not found"),t(void 0)},u?y.src=u:t(void 0)})}async function warmupNode(e){var t;let u,y;if(t="face"===e.config.warmup?$Q:$1,u=na.from(t,"base64"),"node"in nr&&"tensorflow"===sk()){let t=Cr.decodeJpeg(u),w=uR(t,0);e.tf.dispose(t),y=await e.detect(w,e.config),e.tf.dispose(w)}else e.config.debug&&log("Warmup tfjs-node not loaded");return y}async function runInference(e){return"function"==typeof createImageBitmap?await warmupBitmap(e):"undefined"!=typeof Image||void 0!==Cw.Canvas?await warmupCanvas(e):await warmupNode(e)}async function runCompile(e){var t,u,y,w;if(!nG.flagRegistry.ENGINE_COMPILE_ONLY)return;let T=sk(),$=ak();if("webgl"!==T&&"humangl"!==T||!(null==$?void 0:$.checkCompileCompletion))return;nG.set("ENGINE_COMPILE_ONLY",!0);let M=oF.state.numTensors,O=[];for(let[T,$]of Object.entries(e.models.models)){if(!$)continue;let M=(null==$?void 0:$.modelSignature)&&(null==(u=null==(t=null==$?void 0:$.inputs)?void 0:t[0])?void 0:u.shape)?[...$.inputs[0].shape]:[1,64,64,3],P=(null==$?void 0:$.modelSignature)&&(null==(w=null==(y=null==$?void 0:$.inputs)?void 0:y[0])?void 0:w.dtype)?$.inputs[0].dtype:"float32";for(let e=0;e<M.length;e++)-1===M[e]&&(M[e]=0===e?1:64);let z=Gr(M,P);try{let e=$.execute(z);O.push(T),Array.isArray(e)?e.forEach(e=>Ot(e)):Ot(e)}catch(t){e.config.debug&&log("compile fail model:",T)}Ot(z)}let P=await $.checkCompileCompletionAsync();$.getUniformLocations(),e.config.debug&&log("compile pass:",{models:O,kernels:P.length}),nG.set("ENGINE_COMPILE_ONLY",!1);let z=oF.state.numTensors;z-M>0&&log("tensor leak:",z-M)}async function warmup(e,t){await check(e,!1);let u=now();return(e.state="warmup",t&&(e.config=mergeDeep(e.config,t)),e.config.warmup&&0!==e.config.warmup.length&&"none"!==e.config.warmup)?new Promise(async t=>{await e.models.load(),await Ime(),await runCompile(e);let y=await runInference(e),w=now();e.config.debug&&log("warmup",e.config.warmup,Math.round(w-u),"ms"),e.emit("warmup"),t(y)}):empty()}var $0=class{constructor(e){var t;__publicField(this,"version"),__publicField(this,"config"),__publicField(this,"result"),__publicField(this,"state"),__publicField(this,"process"),__publicField(this,"tf"),__publicField(this,"env",Cw),__publicField(this,"draw",Tq),__publicField(this,"match",$_),__publicField(this,"models"),__publicField(this,"events"),__publicField(this,"faceTriangulation"),__publicField(this,"faceUVMap"),__publicField(this,"performance"),__privateAdd(this,a3),__privateAdd(this,a7),__privateAdd(this,a4),__publicField(this,"analyze",(...e)=>{if(!__privateGet(this,a7))return;let t=this.tf.engine().state.numTensors,u=__privateGet(this,a3);__privateSet(this,a3,t);let y=t-u;0!==y&&log(...e,y)}),__privateAdd(this,a6,e=>{if(!__privateGet(this,a4))return null;if(!e)return"input is not defined";if(this.env.node&&!(e instanceof oC))return"input must be a tensor";try{this.tf.getBackend()}catch(e){return"backend not loaded"}return null}),__publicField(this,"webcam",new CS),__publicField(this,"emit",e=>{var t;(null==(t=this.events)?void 0:t.dispatchEvent)&&this.events.dispatchEvent(new Event(e))}),__privateAdd(this,a8,{});let u=(Cn.tfjs||hl).replace(/-(.*)/,"");Cs.wasmPath=`https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${u}/dist/`,Cs.modelBasePath=Cw.browser?"../models/":"file://models/",this.version=TU,Object.defineProperty(this,"version",{value:TU}),this.config=JSON.parse(JSON.stringify(Cs)),Object.seal(this.config),this.config.cacheModels="undefined"!=typeof indexedDB,e&&(this.config=mergeDeep(this.config,e)),t=this.config,TB.cacheModels=t.cacheModels,TB.verbose=t.debug,TB.modelBasePath=t.modelBasePath,this.tf=nr,this.state="idle",__privateSet(this,a3,0),__privateSet(this,a7,!1),__privateSet(this,a4,!1),this.performance={},this.events="undefined"!=typeof EventTarget?new EventTarget:void 0,this.models=new $J(this),init2(),this.result=empty(),this.process={tensor:null,canvas:null},this.faceTriangulation=T2,this.faceUVMap=T1,validateModel(this,null,""),this.emit("create"),(this.config.debug||this.env.browser)&&log(`version: ${this.version}`),this.config.debug&&log(`tfjs version: ${this.tf.version["tfjs-core"]}`);let y=JSON.parse(JSON.stringify(this.env));delete y.kernels,delete y.initial,delete y.perfadd,this.config.debug&&log("environment:",y)}reset(){let e=this.config.backend;this.config=JSON.parse(JSON.stringify(Cs)),this.config.backend=e,reset(),Cw.initial=!0}validate(e){let t=function validate(e,t,u="config",y=[]){for(let w of Object.keys(t))if("object"==typeof t[w])validate(e[w],t[w],w,y);else{let T=e&&void 0!==e[w];T||y.push({reason:"unknown property",where:`${u}.${w} = ${t[w]}`});let $=e&&typeof e[w]==typeof t[w];T&&!$&&y.push({reason:"property type mismatch",where:`${u}.${w} = ${t[w]}`,expected:typeof e[w]})}return t.debug&&"config"===u&&y.length>0&&log("invalid configuration",y),y}(Cs,e||this.config);return 0===t.length&&(this.config=mergeDeep(this.config,e)),t}now(){return now()}image(e,t=!1){return process2(e,this.config,t)}async segmentation(e,t){var u,y,w;if(t&&(this.config=mergeDeep(this.config,t)),!this.config.segmentation.enabled)return null;let T=await process2(e,this.config);if(!T.tensor)return null;let $=null;return(null==(u=this.config.segmentation.modelPath)?void 0:u.includes("rvm"))&&($=await predict20(T.tensor,this.config)),(null==(y=this.config.segmentation.modelPath)?void 0:y.includes("meet"))&&($=await predict16(T.tensor,this.config)),(null==(w=this.config.segmentation.modelPath)?void 0:w.includes("selfie"))&&($=await predict21(T.tensor,this.config)),Ot(T.tensor),$}compare(e,t){return compare(this.config,e,t)}async init(){await check(this,!0),await this.tf.ready(),reset()}async load(e){this.state="load";let t=now(),u=Object.values(this.models.models).filter(e=>e).length;e&&(this.config=mergeDeep(this.config,e)),this.env.initial&&(await check(this,!1)||log("error: backend check failed"),await Ime(),this.env.browser&&(this.config.debug&&log("configuration:",this.config),this.config.debug&&log("tf flags:",this.tf.ENV.flags))),await this.models.load(this),this.env.initial&&this.config.debug&&log("tf engine state:",this.tf.engine().state.numBytes,"bytes",this.tf.engine().state.numTensors,"tensors"),this.env.initial=!1;let y=Object.values(this.models.models).filter(e=>e).length;y!==u&&(this.models.validate(),this.emit("load"));let w=Math.trunc(now()-t);w>(this.performance.loadModels||0)&&(this.performance.loadModels=this.env.perfadd?(this.performance.loadModels||0)+w:w)}next(e=this.result){return function(e,t){var u,y,w,T,$,M,O,P,z,L,W,B,j,q,Z,Y,J,ee,ea,en,er,ei,es,el,eu,ed;let ep=now();if(!e)return empty();let ec=Date.now()-e.timestamp,eh=ec<1e3?8-Math.log(ec+1):1;if(e.canvas&&($R.canvas=e.canvas),e.error&&($R.error=e.error),$R.body&&e.body.length===$R.body.length)for(let T=0;T<e.body.length;T++){let $=e.body[T].box.map((e,t)=>((eh-1)*$R.body[T].box[t]+e)/eh),M=e.body[T].boxRaw.map((e,t)=>((eh-1)*$R.body[T].boxRaw[t]+e)/eh),O=e.body[T].keypoints.map((e,t)=>{var u,y,w,$,M,O,P,z,L;return{score:e.score,part:e.part,position:[$R.body[T].keypoints[t]?((eh-1)*($R.body[T].keypoints[t].position[0]||0)+(e.position[0]||0))/eh:e.position[0],$R.body[T].keypoints[t]?((eh-1)*($R.body[T].keypoints[t].position[1]||0)+(e.position[1]||0))/eh:e.position[1],$R.body[T].keypoints[t]?((eh-1)*($R.body[T].keypoints[t].position[2]||0)+(e.position[2]||0))/eh:e.position[2]],positionRaw:[$R.body[T].keypoints[t]?((eh-1)*($R.body[T].keypoints[t].positionRaw[0]||0)+(e.positionRaw[0]||0))/eh:e.positionRaw[0],$R.body[T].keypoints[t]?((eh-1)*($R.body[T].keypoints[t].positionRaw[1]||0)+(e.positionRaw[1]||0))/eh:e.positionRaw[1],$R.body[T].keypoints[t]?((eh-1)*($R.body[T].keypoints[t].positionRaw[2]||0)+(e.positionRaw[2]||0))/eh:e.positionRaw[2]],distance:[$R.body[T].keypoints[t]?((eh-1)*((null==(u=$R.body[T].keypoints[t].distance)?void 0:u[0])||0)+((null==(y=e.distance)?void 0:y[0])||0))/eh:null==(w=e.distance)?void 0:w[0],$R.body[T].keypoints[t]?((eh-1)*((null==($=$R.body[T].keypoints[t].distance)?void 0:$[1])||0)+((null==(M=e.distance)?void 0:M[1])||0))/eh:null==(O=e.distance)?void 0:O[1],$R.body[T].keypoints[t]?((eh-1)*((null==(P=$R.body[T].keypoints[t].distance)?void 0:P[2])||0)+((null==(z=e.distance)?void 0:z[2])||0))/eh:null==(L=e.distance)?void 0:L[2]]}}),P={},z={connected:{}};for(let[e,T]of((null==(u=t.body.modelPath)?void 0:u.includes("efficientpose"))?z=Ek:(null==(y=t.body.modelPath)?void 0:y.includes("blazepose"))?z=T9:(null==(w=t.body.modelPath)?void 0:w.includes("movenet"))&&(z=$v),Object.entries(z.connected))){let t=[];for(let e=0;e<T.length-1;e++){let u=O.find(t=>t.part===T[e]),y=O.find(t=>t.part===T[e+1]);u&&y&&t.push([u.position,y.position])}P[e]=t}$R.body[T]={...e.body[T],box:$,boxRaw:M,keypoints:O,annotations:P}}else $R.body=JSON.parse(JSON.stringify(e.body));if($R.hand&&e.hand.length===$R.hand.length)for(let t=0;t<e.hand.length;t++){let u=e.hand[t].box.map((e,u)=>((eh-1)*$R.hand[t].box[u]+e)/eh),y=e.hand[t].boxRaw.map((e,u)=>((eh-1)*$R.hand[t].boxRaw[u]+e)/eh);$R.hand[t].keypoints.length!==e.hand[t].keypoints.length&&($R.hand[t].keypoints=e.hand[t].keypoints);let w=e.hand[t].keypoints&&e.hand[t].keypoints.length>0?e.hand[t].keypoints.map((e,u)=>e.map((e,y)=>((eh-1)*($R.hand[t].keypoints[u][y]||1)+(e||0))/eh)):[],O={};if(Object.keys($R.hand[t].annotations).length!==Object.keys(e.hand[t].annotations).length)$R.hand[t].annotations=e.hand[t].annotations,O=$R.hand[t].annotations;else if(e.hand[t].annotations)for(let u of Object.keys(e.hand[t].annotations))O[u]=(null==(M=null==($=null==(T=e.hand[t])?void 0:T.annotations)?void 0:$[u])?void 0:M[0])?e.hand[t].annotations[u].map((e,y)=>e.map((e,w)=>((eh-1)*$R.hand[t].annotations[u][y][w]+e)/eh)):null;$R.hand[t]={...e.hand[t],box:u,boxRaw:y,keypoints:w,annotations:O}}else $R.hand=JSON.parse(JSON.stringify(e.hand));if($R.face&&e.face.length===$R.face.length)for(let t=0;t<e.face.length;t++){let u=e.face[t].box.map((e,u)=>((eh-1)*$R.face[t].box[u]+e)/eh),y=e.face[t].boxRaw.map((e,u)=>((eh-1)*$R.face[t].boxRaw[u]+e)/eh),w=e.face[t].annotations;if(Object.keys($R.face[t].annotations).length!==Object.keys(e.face[t].annotations).length)$R.face[t].annotations=e.face[t].annotations,w=$R.face[t].annotations;else if(e.face[t].annotations)for(let u of Object.keys(e.face[t].annotations))w[u]=(null==(z=null==(P=null==(O=e.face[t])?void 0:O.annotations)?void 0:P[u])?void 0:z[0])?e.face[t].annotations[u].map((e,y)=>e.map((e,w)=>((eh-1)*$R.face[t].annotations[u][y][w]+e)/eh)):null;if(e.face[t].rotation){let T={matrix:[0,0,0,0,0,0,0,0,0],angle:{roll:0,yaw:0,pitch:0},gaze:{bearing:0,strength:0}};T.matrix=null==(L=e.face[t].rotation)?void 0:L.matrix,T.angle={roll:((eh-1)*((null==(B=null==(W=$R.face[t].rotation)?void 0:W.angle)?void 0:B.roll)||0)+((null==(q=null==(j=e.face[t].rotation)?void 0:j.angle)?void 0:q.roll)||0))/eh,yaw:((eh-1)*((null==(Y=null==(Z=$R.face[t].rotation)?void 0:Z.angle)?void 0:Y.yaw)||0)+((null==(ee=null==(J=e.face[t].rotation)?void 0:J.angle)?void 0:ee.yaw)||0))/eh,pitch:((eh-1)*((null==(en=null==(ea=$R.face[t].rotation)?void 0:ea.angle)?void 0:en.pitch)||0)+((null==(ei=null==(er=e.face[t].rotation)?void 0:er.angle)?void 0:ei.pitch)||0))/eh},T.gaze={bearing:((eh-1)*((null==(es=$R.face[t].rotation)?void 0:es.gaze.bearing)||0)+((null==(el=e.face[t].rotation)?void 0:el.gaze.bearing)||0))/eh,strength:((eh-1)*((null==(eu=$R.face[t].rotation)?void 0:eu.gaze.strength)||0)+((null==(ed=e.face[t].rotation)?void 0:ed.gaze.strength)||0))/eh},$R.face[t]={...e.face[t],rotation:T,box:u,boxRaw:y,annotations:w}}else $R.face[t]={...e.face[t],box:u,boxRaw:y,annotations:w}}else $R.face=JSON.parse(JSON.stringify(e.face));if($R.object&&e.object.length===$R.object.length)for(let t=0;t<e.object.length;t++){let u=e.object[t].box.map((e,u)=>((eh-1)*$R.object[t].box[u]+e)/eh),y=e.object[t].boxRaw.map((e,u)=>((eh-1)*$R.object[t].boxRaw[u]+e)/eh);$R.object[t]={...e.object[t],box:u,boxRaw:y}}else $R.object=JSON.parse(JSON.stringify(e.object));if(e.persons){let t=e.persons;if($R.persons&&t.length===$R.persons.length)for(let e=0;e<t.length;e++)$R.persons[e].box=t[e].box.map((t,u)=>((eh-1)*$R.persons[e].box[u]+t)/eh);else $R.persons=JSON.parse(JSON.stringify(t))}e.gesture&&($R.gesture=e.gesture),$R.width=e.width,$R.height=e.height;let em=now();return $$=Cw.perfadd?$$+Math.round(em-ep):Math.round(em-ep),e.performance&&($R.performance={...e.performance,interpolate:$$}),$R}(e,this.config)}async warmup(e){let t=now(),u=await warmup(this,e),y=now();return this.performance.warmup=Math.trunc(y-t),u}async profile(e,t){let u=await this.tf.profile(()=>this.detect(e,t)),y={},w=0;for(let e of u.kernels){let t=Number(e.kernelTimeMs)||0;y[e.name]?y[e.name]+=t:y[e.name]=t,w+=t}let T=[];for(let e of(Object.entries(y).forEach(e=>T.push({kernel:e[0],time:e[1],perc:0})),T))e.perc=Math.round(1e3*e.time/w)/1e3,e.time=Math.round(1e3*e.time)/1e3;return T.sort((e,t)=>t.time-e.time),T.length=20,T}async detect(e,t){return this.state="detect",new Promise(async u=>{var y,w,T,$,M,O,P,z,L,W,B,j,q,Z,Y,J,ee,ea,en,er,ei;let es;this.state="config",this.config=mergeDeep(this.config,t),this.state="check";let el=__privateGet(this,a6).call(this,e);el&&(log(el,e),this.emit("error"),u(empty(el)));let eu=now();await this.load(),es=now(),this.state="image";let ed=await process2(e,this.config);if(this.process=ed,this.performance.inputProcess=this.env.perfadd?(this.performance.inputProcess||0)+Math.trunc(now()-es):Math.trunc(now()-es),this.analyze("Get Image:"),!ed.tensor){this.config.debug&&log("could not convert input to tensor"),this.emit("error"),u(empty("could not convert input to tensor"));return}this.emit("image"),es=now(),this.config.skipAllowed=await skip(this.config,ed.tensor),this.config.filter.autoBrightness=(this.config.filter.autoBrightness||!1)&&this.config.skipAllowed,this.performance.totalFrames||(this.performance.totalFrames=0),this.performance.cachedFrames||(this.performance.cachedFrames=0),this.performance.totalFrames++,this.config.skipAllowed&&this.performance.cachedFrames++,this.performance.cacheCheck=this.env.perfadd?(this.performance.cacheCheck||0)+Math.trunc(now()-es):Math.trunc(now()-es),this.analyze("Check Changed:");let ep=[],ec=[],eh=[],em=[];this.state="detect:face",this.config.async?(ep=this.config.face.enabled?detectFace(this,ed.tensor):[],this.performance.face&&delete this.performance.face):(es=now(),ep=this.config.face.enabled?await detectFace(this,ed.tensor):[],this.performance.face=this.env.perfadd?(this.performance.face||0)+Math.trunc(now()-es):Math.trunc(now()-es)),this.config.async&&(-1===this.config.body.maxDetected||-1===this.config.hand.maxDetected)&&(ep=await ep),this.analyze("Start Body:"),this.state="detect:body";let ey=-1===this.config.body.maxDetected?mergeDeep(this.config,{body:{maxDetected:this.config.face.enabled?1*ep.length:1}}):this.config;this.config.async?((null==(y=this.config.body.modelPath)?void 0:y.includes("posenet"))?ec=this.config.body.enabled?predict19(ed.tensor,ey):[]:(null==(w=this.config.body.modelPath)?void 0:w.includes("blazepose"))?ec=this.config.body.enabled?predict(ed.tensor,ey):[]:(null==(T=this.config.body.modelPath)?void 0:T.includes("efficientpose"))?ec=this.config.body.enabled?predict3(ed.tensor,ey):[]:(null==($=this.config.body.modelPath)?void 0:$.includes("movenet"))&&(ec=this.config.body.enabled?predict17(ed.tensor,ey):[]),this.performance.body&&delete this.performance.body):(es=now(),(null==(M=this.config.body.modelPath)?void 0:M.includes("posenet"))?ec=this.config.body.enabled?await predict19(ed.tensor,ey):[]:(null==(O=this.config.body.modelPath)?void 0:O.includes("blazepose"))?ec=this.config.body.enabled?await predict(ed.tensor,ey):[]:(null==(P=this.config.body.modelPath)?void 0:P.includes("efficientpose"))?ec=this.config.body.enabled?await predict3(ed.tensor,ey):[]:(null==(z=this.config.body.modelPath)?void 0:z.includes("movenet"))&&(ec=this.config.body.enabled?await predict17(ed.tensor,ey):[]),this.performance.body=this.env.perfadd?(this.performance.body||0)+Math.trunc(now()-es):Math.trunc(now()-es)),this.analyze("End Body:"),this.analyze("Start Hand:"),this.state="detect:hand";let eA=-1===this.config.hand.maxDetected?mergeDeep(this.config,{hand:{maxDetected:this.config.face.enabled?2*ep.length:1}}):this.config;this.config.async?((null==(W=null==(L=this.config.hand.detector)?void 0:L.modelPath)?void 0:W.includes("handdetect"))?eh=this.config.hand.enabled?predict14(ed.tensor,eA):[]:(null==(j=null==(B=this.config.hand.detector)?void 0:B.modelPath)?void 0:j.includes("handtrack"))&&(eh=this.config.hand.enabled?predict15(ed.tensor,eA):[]),this.performance.hand&&delete this.performance.hand):(es=now(),(null==(Z=null==(q=this.config.hand.detector)?void 0:q.modelPath)?void 0:Z.includes("handdetect"))?eh=this.config.hand.enabled?await predict14(ed.tensor,eA):[]:(null==(J=null==(Y=this.config.hand.detector)?void 0:Y.modelPath)?void 0:J.includes("handtrack"))&&(eh=this.config.hand.enabled?await predict15(ed.tensor,eA):[]),this.performance.hand=this.env.perfadd?(this.performance.hand||0)+Math.trunc(now()-es):Math.trunc(now()-es)),this.analyze("End Hand:"),this.analyze("Start Object:"),this.state="detect:object",this.config.async?((null==(ee=this.config.object.modelPath)?void 0:ee.includes("nanodet"))?em=this.config.object.enabled?predict18(ed.tensor,this.config):[]:(null==(ea=this.config.object.modelPath)?void 0:ea.includes("centernet"))&&(em=this.config.object.enabled?predict2(ed.tensor,this.config):[]),this.performance.object&&delete this.performance.object):(es=now(),(null==(en=this.config.object.modelPath)?void 0:en.includes("nanodet"))?em=this.config.object.enabled?await predict18(ed.tensor,this.config):[]:(null==(er=this.config.object.modelPath)?void 0:er.includes("centernet"))&&(em=this.config.object.enabled?await predict2(ed.tensor,this.config):[]),this.performance.object=this.env.perfadd?(this.performance.object||0)+Math.trunc(now()-es):Math.trunc(now()-es)),this.analyze("End Object:"),this.state="detect:await",this.config.async&&([ep,ec,eh,em]=await Promise.all([ep,ec,eh,em])),this.state="detect:gesture";let ex=[];this.config.gesture.enabled&&(es=now(),ex=[...face2(ep),...body2(ec),...hand2(eh),...iris2(ep)],this.config.async?this.performance.gesture&&delete this.performance.gesture:this.performance.gesture=this.env.perfadd?(this.performance.gesture||0)+Math.trunc(now()-es):Math.trunc(now()-es)),this.performance.total=this.env.perfadd?(this.performance.total||0)+Math.trunc(now()-eu):Math.trunc(now()-eu);let eb=(null==(ei=this.process.tensor)?void 0:ei.shape)||[0,0,0,0];this.result={face:ep,body:ec,hand:eh,gesture:ex,object:em,performance:this.performance,canvas:this.process.canvas,timestamp:Date.now(),error:null,width:eb[2],height:eb[1],get persons(){return function(e,t,u,y,w){var T,$,M,O,P,z;let L=0,W=[];for(let B of e){let e={id:L++,face:B,body:null,hands:{left:null,right:null},gestures:[],box:[0,0,0,0]};for(let u of t)B.box[0]>u.box[0]&&B.box[0]<u.box[0]+u.box[2]&&B.box[1]+B.box[3]>u.box[1]&&B.box[1]+B.box[3]<u.box[1]+u.box[3]&&(e.body=u);if(e.body)for(let t of u)t.box[0]+t.box[2]>e.body.box[0]&&t.box[0]+t.box[2]<e.body.box[0]+e.body.box[2]&&t.box[1]+t.box[3]>e.body.box[1]&&t.box[1]+t.box[3]<e.body.box[1]+e.body.box[3]&&e.hands&&(e.hands.left=t),t.box[0]<e.body.box[0]+e.body.box[2]&&t.box[0]>e.body.box[0]&&t.box[1]+t.box[3]>e.body.box[1]&&t.box[1]+t.box[3]<e.body.box[1]+e.body.box[3]&&e.hands&&(e.hands.right=t);for(let t of y)void 0!==t.face&&t.face===B.id?e.gestures.push(t):void 0!==t.iris&&t.iris===B.id?e.gestures.push(t):void 0!==t.body&&t.body===(null==(T=e.body)?void 0:T.id)?e.gestures.push(t):void 0!==t.hand&&t.hand===(null==($=e.hands.left)?void 0:$.id)?e.gestures.push(t):void 0!==t.hand&&t.hand===(null==(M=e.hands.right)?void 0:M.id)&&e.gestures.push(t);let j=[],q=[],extractXY=e=>{e&&4===e.length&&(j.push(e[0],e[0]+e[2]),q.push(e[1],e[1]+e[3]))};extractXY(e.face.box),extractXY(null==(O=e.body)?void 0:O.box),extractXY(null==(P=e.hands.left)?void 0:P.box),extractXY(null==(z=e.hands.right)?void 0:z.box);let Z=Math.min(...j),Y=Math.min(...q);e.box=[Z,Y,Math.max(...j)-Z,Math.max(...q)-Y],(null==w?void 0:w[1])&&(null==w?void 0:w[2])&&(e.boxRaw=[e.box[0]/w[2],e.box[1]/w[1],e.box[2]/w[2],e.box[3]/w[1]]),W.push(e)}return W}(ep,ec,eh,ex,eb)}},Ot(ed.tensor),this.emit("detect"),this.state="idle",u(this.result)})}async sleep(e){return new Promise(t=>{setTimeout(t,e)})}async video(e,t=!0,u=0){t?(__privateGet(this,a8)[e.id]||(this.config.debug&&log("video start",e.id),__privateGet(this,a8)[e.id]=!0),!e.paused&&__privateGet(this,a8)[e.id]&&e.readyState>=2&&await this.detect(e),u>0&&await this.sleep(u),__privateGet(this,a8)[e.id]&&requestAnimationFrame(()=>this.video(e,t,u))):(this.config.debug&&log("video stop",e.id),__privateGet(this,a8)[e.id]=!1)}};a3=new WeakMap,a7=new WeakMap,a4=new WeakMap,a6=new WeakMap,a8=new WeakMap}}]);